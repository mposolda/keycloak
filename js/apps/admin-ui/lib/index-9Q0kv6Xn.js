import { jsx as a, jsxs as C, Fragment as ee } from "react/jsx-runtime";
import * as h from "react";
import re, { useRef as Ct, useEffect as He, forwardRef as rh, useImperativeHandle as ih, useMemo as et, useState as N, Fragment as ka, useReducer as jE, useCallback as bn, createContext as q0, useContext as G0, useId as Vu, Children as Ku, Component as BE, lazy as Be, isValidElement as Ps, memo as sh, cloneElement as Cl, createElement as UE, Suspense as VE } from "react";
import { useTranslation as H, initReactI18next as KE, Trans as ns } from "react-i18next";
import * as oh from "react-dom";
import { generatePath as Bc, useMatch as Po, useParams as Qn, useNavigate as Je, Link as Ae, useLocation as cs, matchPath as qd, useHref as lh, NavLink as HE, useMatches as zE, Outlet as qE, Form as GE } from "react-router-dom";
function WE(e, t) {
  for (var n = 0; n < t.length; n++) {
    const r = t[n];
    if (typeof r != "string" && !Array.isArray(r)) {
      for (const i in r)
        if (i !== "default" && !(i in e)) {
          const s = Object.getOwnPropertyDescriptor(r, i);
          s && Object.defineProperty(e, i, s.get ? s : {
            enumerable: !0,
            get: () => r[i]
          });
        }
    }
  }
  return Object.freeze(Object.defineProperty(e, Symbol.toStringTag, { value: "Module" }));
}
function XE(e) {
  var t = [];
  if (e.length === 0)
    return "";
  if (typeof e[0] != "string")
    throw new TypeError("Url must be a string. Received " + e[0]);
  if (e[0].match(/^[^/:]+:\/*$/) && e.length > 1) {
    var n = e.shift();
    e[0] = n + e[0];
  }
  e[0].match(/^file:\/\/\//) ? e[0] = e[0].replace(/^([^/:]+):\/*/, "$1:///") : e[0] = e[0].replace(/^([^/:]+):\/*/, "$1://");
  for (var r = 0; r < e.length; r++) {
    var i = e[r];
    if (typeof i != "string")
      throw new TypeError("Url must be a string. Received " + i);
    i !== "" && (r > 0 && (i = i.replace(/^[\/]+/, "")), r < e.length - 1 ? i = i.replace(/[\/]+$/, "") : i = i.replace(/[\/]+$/, "/"), t.push(i));
  }
  var s = t.join("/");
  s = s.replace(/\/(\?|&|#[^!])/g, "$1");
  var o = s.split("?");
  return s = o.shift() + (o.length > 0 ? "?" : "") + o.join("&"), s;
}
function YE() {
  var e;
  return typeof arguments[0] == "object" ? e = arguments[0] : e = [].slice.call(arguments), XE(e);
}
function W0(e) {
  return e.split(/(%[0-9A-Fa-f]{2})/g).map(function(t) {
    return /%[0-9A-Fa-f]/.test(t) || (t = encodeURI(t).replace(/%5B/g, "[").replace(/%5D/g, "]")), t;
  }).join("");
}
function go(e) {
  return encodeURIComponent(e).replace(/[!'()*]/g, function(t) {
    return "%" + t.charCodeAt(0).toString(16).toUpperCase();
  });
}
function xl(e, t, n) {
  return t = e === "+" || e === "#" ? W0(t) : go(t), n ? go(n) + "=" + t : t;
}
function io(e) {
  return e != null;
}
function Up(e) {
  return e === ";" || e === "&" || e === "?";
}
function JE(e, t, n, r) {
  var i = e[n], s = [];
  if (io(i) && i !== "")
    if (typeof i == "string" || typeof i == "number" || typeof i == "boolean")
      i = i.toString(), r && r !== "*" && (i = i.substring(0, parseInt(r, 10))), s.push(xl(t, i, Up(t) ? n : null));
    else if (r === "*")
      Array.isArray(i) ? i.filter(io).forEach(function(l) {
        s.push(xl(t, l, Up(t) ? n : null));
      }) : Object.keys(i).forEach(function(l) {
        io(i[l]) && s.push(xl(t, i[l], l));
      });
    else {
      var o = [];
      Array.isArray(i) ? i.filter(io).forEach(function(l) {
        o.push(xl(t, l));
      }) : Object.keys(i).forEach(function(l) {
        io(i[l]) && (o.push(go(l)), o.push(xl(t, i[l].toString())));
      }), Up(t) ? s.push(go(n) + "=" + o.join(",")) : o.length !== 0 && s.push(o.join(","));
    }
  else
    t === ";" ? io(i) && s.push(go(n)) : i === "" && (t === "&" || t === "?") ? s.push(go(n) + "=") : i === "" && s.push("");
  return s;
}
function ZE(e) {
  var t = ["+", "#", ".", "/", ";", "?", "&"];
  return {
    expand: function(n) {
      return e.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g, function(r, i, s) {
        if (i) {
          var o = null, l = [];
          if (t.indexOf(i.charAt(0)) !== -1 && (o = i.charAt(0), i = i.substr(1)), i.split(/,/g).forEach(function(d) {
            var u = /([^:\*]*)(?::(\d+)|(\*))?/.exec(d);
            l.push.apply(l, JE(n, o, u[1], u[2] || u[3]));
          }), o && o !== "+") {
            var c = ",";
            return o === "?" ? c = "&" : o !== "#" && (c = o), (l.length !== 0 ? o : "") + l.join(c);
          } else
            return l.join(",");
        } else
          return W0(s);
      });
    }
  };
}
const QE = ["error", "errorMessage"];
class Go extends Error {
  response;
  responseData;
  constructor(t, n) {
    super(t), this.response = n.response, this.responseData = n.responseData;
  }
}
async function Ii(e, t) {
  const n = await fetch(e, t);
  if (!n.ok) {
    const r = await X0(n), i = eI(r);
    throw new Go(i, {
      response: n,
      responseData: r
    });
  }
  return n;
}
async function X0(e) {
  if (!e.body)
    return "";
  const t = await e.text();
  try {
    return JSON.parse(t);
  } catch {
  }
  return t;
}
function eI(e) {
  if (typeof e != "object" || e === null)
    return "Unable to determine error message.";
  for (const t of QE) {
    const n = e[t];
    if (typeof n == "string")
      return n;
  }
  return "Network response was not OK.";
}
function Y0(e) {
  const t = new URLSearchParams();
  for (const [n, r] of Object.entries(e))
    r != null && (typeof r == "string" && r.length === 0 || Array.isArray(r) && r.length === 0 || (Array.isArray(r) ? r.forEach((i) => t.append(n, i.toString())) : t.append(n, r.toString())));
  return t.toString();
}
const tI = "/", fd = (e, t) => Object.fromEntries(Object.entries(e).filter(([n]) => t.includes(n))), nI = (e, t) => Object.fromEntries(Object.entries(e).filter(([n]) => !t.includes(n)));
class aI {
  #e;
  #n;
  #t;
  #r;
  constructor({ client: t, path: n = "/", getUrlParams: r = () => ({}), getBaseUrl: i = () => t.baseUrl }) {
    this.#e = t, this.#t = r, this.#r = i, this.#n = n;
  }
  request({ method: t, path: n = "", urlParamKeys: r = [], queryParamKeys: i = [], catchNotFound: s = !1, keyTransform: o, payloadKey: l, returnResourceIdInLocationHeader: c, ignoredKeys: d, headers: u }) {
    return async (p = {}, m) => {
      const f = this.#t?.() ?? {}, g = i.length > 0 ? fd(p, i) : void 0, b = [...Object.keys(f), ...r], v = { ...f, ...fd(p, b) };
      if (!(p instanceof FormData)) {
        const y = d ? [...b, ...i].filter((x) => !d.includes(x)) : [...b, ...i];
        p = nI(p, y);
      }
      return o && (this.#a(p, o), this.#a(g, o)), this.#i({
        method: t,
        path: n,
        payload: p,
        urlParams: v,
        queryParams: g,
        // catchNotFound precedence: global > local > default
        catchNotFound: s,
        ...this.#e.getGlobalRequestArgOptions() ?? m ?? {},
        payloadKey: l,
        returnResourceIdInLocationHeader: c,
        headers: u
      });
    };
  }
  updateRequest({ method: t, path: n = "", urlParamKeys: r = [], queryParamKeys: i = [], catchNotFound: s = !1, keyTransform: o, payloadKey: l, returnResourceIdInLocationHeader: c, headers: d }) {
    return async (u = {}, p = {}) => {
      const m = this.#t?.() ?? {}, f = i ? fd(u, i) : void 0, g = [...Object.keys(m), ...r], b = {
        ...m,
        ...fd(u, g)
      };
      return o && this.#a(f, o), this.#i({
        method: t,
        path: n,
        payload: p,
        urlParams: b,
        queryParams: f,
        catchNotFound: s,
        payloadKey: l,
        returnResourceIdInLocationHeader: c,
        headers: d
      });
    };
  }
  async #i({ method: t, path: n, payload: r, urlParams: i, queryParams: s, catchNotFound: o, payloadKey: l, returnResourceIdInLocationHeader: c, headers: d }) {
    const u = YE(this.#n, n), m = ZE(u).expand(i), f = new URL(`${this.#r?.() ?? ""}${m}`), g = { ...this.#e.getRequestOptions() }, b = new Headers([
      ...new Headers(g.headers).entries(),
      ["authorization", `Bearer ${await this.#e.getAccessToken()}`],
      ["accept", "application/json, text/plain, */*"],
      ...new Headers(d).entries()
    ]), v = {};
    t === "GET" ? Object.assign(v, r) : b.get("content-type") === "text/plain" || r instanceof FormData ? g.body = r : g.body = l && typeof r[l] == "string" ? r[l] : JSON.stringify(l ? r[l] : r), !b.has("content-type") && !(r instanceof FormData) && b.set("content-type", "application/json"), s && Object.assign(v, s), f.search = Y0(v);
    try {
      const y = await Ii(f, {
        ...g,
        headers: b,
        method: t
      });
      if (c) {
        const x = y.headers.get("location");
        if (typeof x != "string")
          throw new Error(`location header is not found in request: ${y.url}`);
        const w = x.split(tI).pop();
        if (!w)
          throw new Error(`resourceId is not found in Location header from request: ${y.url}`);
        const { field: R } = c;
        return { [R]: w };
      }
      return Object.entries(d || []).find(([x, w]) => x.toLowerCase() === "accept" && w === "application/octet-stream") ? y.arrayBuffer() : X0(y);
    } catch (y) {
      if (y instanceof Go && y.response.status === 404 && o)
        return null;
      throw y;
    }
  }
  #a(t, n) {
    t && Object.keys(n).some((r) => {
      if (typeof t[r] > "u")
        return !1;
      const i = n[r];
      t[i] = t[r], delete t[r];
    });
  }
}
class sa {
  #e;
  constructor(t, n = {}) {
    this.#e = new aI({
      client: t,
      ...n
    });
  }
  makeRequest = (t) => this.#e.request(t);
  // update request will take three types: query, payload and response
  makeUpdateRequest = (t) => this.#e.updateRequest(t);
}
class rI extends sa {
  findOne = this.makeRequest({
    method: "GET",
    path: "/users/{id}",
    urlParamKeys: ["id"],
    catchNotFound: !0
  });
  del = this.makeRequest({
    method: "DELETE",
    path: "/users/{id}",
    urlParamKeys: ["id"]
  });
  delAll = this.makeRequest({
    method: "DELETE",
    path: "/users"
  });
  constructor(t) {
    super(t, {
      path: "/admin/realms/{realm}/attack-detection/brute-force",
      getUrlParams: () => ({
        realm: t.realmName
      }),
      getBaseUrl: () => t.baseUrl
    });
  }
}
class iI extends sa {
  /**
   * Authentication Management
   * https://www.keycloak.org/docs-api/8.0/rest-api/index.html#_authentication_management_resource
   */
  //   Register a new required action
  registerRequiredAction = this.makeRequest({
    method: "POST",
    path: "/register-required-action"
  });
  // Get required actions. Returns a list of required actions.
  getRequiredActions = this.makeRequest({
    method: "GET",
    path: "/required-actions"
  });
  // Get required action for alias
  getRequiredActionForAlias = this.makeRequest({
    method: "GET",
    path: "/required-actions/{alias}",
    urlParamKeys: ["alias"],
    catchNotFound: !0
  });
  getClientAuthenticatorProviders = this.makeRequest({
    method: "GET",
    path: "/client-authenticator-providers"
  });
  getAuthenticatorProviders = this.makeRequest({
    method: "GET",
    path: "/authenticator-providers"
  });
  getFormActionProviders = this.makeRequest({
    method: "GET",
    path: "/form-action-providers"
  });
  // Update required action
  updateRequiredAction = this.makeUpdateRequest({
    method: "PUT",
    path: "/required-actions/{alias}",
    urlParamKeys: ["alias"]
  });
  // Delete required action
  deleteRequiredAction = this.makeRequest({
    method: "DELETE",
    path: "/required-actions/{alias}",
    urlParamKeys: ["alias"]
  });
  // Lower required action’s priority
  lowerRequiredActionPriority = this.makeRequest({
    method: "POST",
    path: "/required-actions/{alias}/lower-priority",
    urlParamKeys: ["alias"]
  });
  // Raise required action’s priority
  raiseRequiredActionPriority = this.makeRequest({
    method: "POST",
    path: "/required-actions/{alias}/raise-priority",
    urlParamKeys: ["alias"]
  });
  // Get unregistered required actions Returns a list of unregistered required actions.
  getUnregisteredRequiredActions = this.makeRequest({
    method: "GET",
    path: "/unregistered-required-actions"
  });
  getFlows = this.makeRequest({
    method: "GET",
    path: "/flows"
  });
  getFlow = this.makeRequest({
    method: "GET",
    path: "/flows/{flowId}",
    urlParamKeys: ["flowId"]
  });
  getFormProviders = this.makeRequest({
    method: "GET",
    path: "/form-providers"
  });
  createFlow = this.makeRequest({
    method: "POST",
    path: "/flows",
    returnResourceIdInLocationHeader: { field: "id" }
  });
  copyFlow = this.makeRequest({
    method: "POST",
    path: "/flows/{flow}/copy",
    urlParamKeys: ["flow"]
  });
  deleteFlow = this.makeRequest({
    method: "DELETE",
    path: "/flows/{flowId}",
    urlParamKeys: ["flowId"]
  });
  updateFlow = this.makeUpdateRequest({
    method: "PUT",
    path: "/flows/{flowId}",
    urlParamKeys: ["flowId"]
  });
  getExecutions = this.makeRequest({
    method: "GET",
    path: "/flows/{flow}/executions",
    urlParamKeys: ["flow"]
  });
  addExecution = this.makeUpdateRequest({
    method: "POST",
    path: "/flows/{flow}/executions",
    urlParamKeys: ["flow"]
  });
  addExecutionToFlow = this.makeRequest({
    method: "POST",
    path: "/flows/{flow}/executions/execution",
    urlParamKeys: ["flow"],
    returnResourceIdInLocationHeader: { field: "id" }
  });
  addFlowToFlow = this.makeRequest({
    method: "POST",
    path: "/flows/{flow}/executions/flow",
    urlParamKeys: ["flow"],
    returnResourceIdInLocationHeader: { field: "id" }
  });
  updateExecution = this.makeUpdateRequest({
    method: "PUT",
    path: "/flows/{flow}/executions",
    urlParamKeys: ["flow"]
  });
  delExecution = this.makeRequest({
    method: "DELETE",
    path: "/executions/{id}",
    urlParamKeys: ["id"]
  });
  lowerPriorityExecution = this.makeRequest({
    method: "POST",
    path: "/executions/{id}/lower-priority",
    urlParamKeys: ["id"]
  });
  raisePriorityExecution = this.makeRequest({
    method: "POST",
    path: "/executions/{id}/raise-priority",
    urlParamKeys: ["id"]
  });
  // Get required actions provider's configuration description
  getRequiredActionConfigDescription = this.makeRequest({
    method: "GET",
    path: "/required-actions/{alias}/config-description",
    urlParamKeys: ["alias"]
  });
  // Get the configuration of the RequiredAction provider in the current Realm.
  getRequiredActionConfig = this.makeRequest({
    method: "GET",
    path: "/required-actions/{alias}/config",
    urlParamKeys: ["alias"]
  });
  // Remove the configuration from the RequiredAction provider in the current Realm.
  removeRequiredActionConfig = this.makeRequest({
    method: "DELETE",
    path: "/required-actions/{alias}/config",
    urlParamKeys: ["alias"]
  });
  // Update the configuration from the RequiredAction provider in the current Realm.
  updateRequiredActionConfig = this.makeUpdateRequest({
    method: "PUT",
    path: "/required-actions/{alias}/config",
    urlParamKeys: ["alias"]
  });
  getConfigDescription = this.makeRequest({
    method: "GET",
    path: "config-description/{providerId}",
    urlParamKeys: ["providerId"]
  });
  createConfig = this.makeRequest({
    method: "POST",
    path: "/executions/{id}/config",
    urlParamKeys: ["id"],
    returnResourceIdInLocationHeader: { field: "id" }
  });
  updateConfig = this.makeRequest({
    method: "PUT",
    path: "/config/{id}",
    urlParamKeys: ["id"]
  });
  getConfig = this.makeRequest({
    method: "GET",
    path: "/config/{id}",
    urlParamKeys: ["id"]
  });
  delConfig = this.makeRequest({
    method: "DELETE",
    path: "/config/{id}",
    urlParamKeys: ["id"]
  });
  constructor(t) {
    super(t, {
      path: "/admin/realms/{realm}/authentication",
      getUrlParams: () => ({
        realm: t.realmName
      }),
      getBaseUrl: () => t.baseUrl
    });
  }
}
class sI extends sa {
  clearUserCache = this.makeRequest({
    method: "POST",
    path: "/clear-user-cache"
  });
  constructor(t) {
    super(t, {
      path: "/admin/realms/{realm}",
      getUrlParams: () => ({
        realm: t.realmName
      }),
      getBaseUrl: () => t.baseUrl
    });
  }
}
class oI extends sa {
  constructor(t) {
    super(t, {
      path: "/admin/realms/{realm}/client-policies",
      getUrlParams: () => ({
        realm: t.realmName
      }),
      getBaseUrl: () => t.baseUrl
    });
  }
  /* Client Profiles */
  listProfiles = this.makeRequest({
    method: "GET",
    path: "/profiles",
    queryParamKeys: ["include-global-profiles"],
    keyTransform: {
      includeGlobalProfiles: "include-global-profiles"
    }
  });
  createProfiles = this.makeRequest({
    method: "PUT",
    path: "/profiles"
  });
  /* Client Policies */
  listPolicies = this.makeRequest({
    method: "GET",
    path: "/policies",
    queryParamKeys: ["include-global-policies"],
    keyTransform: {
      includeGlobalPolicies: "include-global-policies"
    }
  });
  updatePolicy = this.makeRequest({
    method: "PUT",
    path: "/policies"
  });
}
class lI extends sa {
  find = this.makeRequest({
    method: "GET"
  });
  create = this.makeRequest({
    method: "POST",
    returnResourceIdInLocationHeader: { field: "id" }
  });
  /**
   * Single client
   */
  findOne = this.makeRequest({
    method: "GET",
    path: "/{id}",
    urlParamKeys: ["id"],
    catchNotFound: !0
  });
  update = this.makeUpdateRequest({
    method: "PUT",
    path: "/{id}",
    urlParamKeys: ["id"]
  });
  del = this.makeRequest({
    method: "DELETE",
    path: "/{id}",
    urlParamKeys: ["id"]
  });
  /**
   * Client roles
   */
  createRole = this.makeRequest({
    method: "POST",
    path: "/{id}/roles",
    urlParamKeys: ["id"],
    returnResourceIdInLocationHeader: { field: "roleName" }
  });
  listRoles = this.makeRequest({
    method: "GET",
    path: "/{id}/roles",
    urlParamKeys: ["id"]
  });
  findRole = this.makeRequest({
    method: "GET",
    path: "/{id}/roles/{roleName}",
    urlParamKeys: ["id", "roleName"],
    catchNotFound: !0
  });
  updateRole = this.makeUpdateRequest({
    method: "PUT",
    path: "/{id}/roles/{roleName}",
    urlParamKeys: ["id", "roleName"]
  });
  delRole = this.makeRequest({
    method: "DELETE",
    path: "/{id}/roles/{roleName}",
    urlParamKeys: ["id", "roleName"]
  });
  findUsersWithRole = this.makeRequest({
    method: "GET",
    path: "/{id}/roles/{roleName}/users",
    urlParamKeys: ["id", "roleName"]
  });
  /**
   * Service account user
   */
  getServiceAccountUser = this.makeRequest({
    method: "GET",
    path: "/{id}/service-account-user",
    urlParamKeys: ["id"]
  });
  /**
   * Client secret
   */
  generateNewClientSecret = this.makeRequest({
    method: "POST",
    path: "/{id}/client-secret",
    urlParamKeys: ["id"]
  });
  invalidateSecret = this.makeRequest({
    method: "DELETE",
    path: "/{id}/client-secret/rotated",
    urlParamKeys: ["id"]
  });
  generateRegistrationAccessToken = this.makeRequest({
    method: "POST",
    path: "/{id}/registration-access-token",
    urlParamKeys: ["id"]
  });
  getClientSecret = this.makeRequest({
    method: "GET",
    path: "/{id}/client-secret",
    urlParamKeys: ["id"]
  });
  /**
   * Client Scopes
   */
  listDefaultClientScopes = this.makeRequest({
    method: "GET",
    path: "/{id}/default-client-scopes",
    urlParamKeys: ["id"]
  });
  addDefaultClientScope = this.makeRequest({
    method: "PUT",
    path: "/{id}/default-client-scopes/{clientScopeId}",
    urlParamKeys: ["id", "clientScopeId"]
  });
  delDefaultClientScope = this.makeRequest({
    method: "DELETE",
    path: "/{id}/default-client-scopes/{clientScopeId}",
    urlParamKeys: ["id", "clientScopeId"]
  });
  listOptionalClientScopes = this.makeRequest({
    method: "GET",
    path: "/{id}/optional-client-scopes",
    urlParamKeys: ["id"]
  });
  addOptionalClientScope = this.makeRequest({
    method: "PUT",
    path: "/{id}/optional-client-scopes/{clientScopeId}",
    urlParamKeys: ["id", "clientScopeId"]
  });
  delOptionalClientScope = this.makeRequest({
    method: "DELETE",
    path: "/{id}/optional-client-scopes/{clientScopeId}",
    urlParamKeys: ["id", "clientScopeId"]
  });
  /**
   * Protocol Mappers
   */
  addMultipleProtocolMappers = this.makeUpdateRequest({
    method: "POST",
    path: "/{id}/protocol-mappers/add-models",
    urlParamKeys: ["id"]
  });
  addProtocolMapper = this.makeUpdateRequest({
    method: "POST",
    path: "/{id}/protocol-mappers/models",
    urlParamKeys: ["id"]
  });
  listProtocolMappers = this.makeRequest({
    method: "GET",
    path: "/{id}/protocol-mappers/models",
    urlParamKeys: ["id"]
  });
  findProtocolMapperById = this.makeRequest({
    method: "GET",
    path: "/{id}/protocol-mappers/models/{mapperId}",
    urlParamKeys: ["id", "mapperId"],
    catchNotFound: !0
  });
  findProtocolMappersByProtocol = this.makeRequest({
    method: "GET",
    path: "/{id}/protocol-mappers/protocol/{protocol}",
    urlParamKeys: ["id", "protocol"],
    catchNotFound: !0
  });
  updateProtocolMapper = this.makeUpdateRequest({
    method: "PUT",
    path: "/{id}/protocol-mappers/models/{mapperId}",
    urlParamKeys: ["id", "mapperId"]
  });
  delProtocolMapper = this.makeRequest({
    method: "DELETE",
    path: "/{id}/protocol-mappers/models/{mapperId}",
    urlParamKeys: ["id", "mapperId"]
  });
  /**
   * Scope Mappings
   */
  listScopeMappings = this.makeRequest({
    method: "GET",
    path: "/{id}/scope-mappings",
    urlParamKeys: ["id"]
  });
  addClientScopeMappings = this.makeUpdateRequest({
    method: "POST",
    path: "/{id}/scope-mappings/clients/{client}",
    urlParamKeys: ["id", "client"]
  });
  listClientScopeMappings = this.makeRequest({
    method: "GET",
    path: "/{id}/scope-mappings/clients/{client}",
    urlParamKeys: ["id", "client"]
  });
  listAvailableClientScopeMappings = this.makeRequest({
    method: "GET",
    path: "/{id}/scope-mappings/clients/{client}/available",
    urlParamKeys: ["id", "client"]
  });
  listCompositeClientScopeMappings = this.makeRequest({
    method: "GET",
    path: "/{id}/scope-mappings/clients/{client}/composite",
    urlParamKeys: ["id", "client"]
  });
  delClientScopeMappings = this.makeUpdateRequest({
    method: "DELETE",
    path: "/{id}/scope-mappings/clients/{client}",
    urlParamKeys: ["id", "client"]
  });
  evaluatePermission = this.makeRequest({
    method: "GET",
    path: "/{id}/evaluate-scopes/scope-mappings/{roleContainer}/{type}",
    urlParamKeys: ["id", "roleContainer", "type"],
    queryParamKeys: ["scope"]
  });
  evaluateListProtocolMapper = this.makeRequest({
    method: "GET",
    path: "/{id}/evaluate-scopes/protocol-mappers",
    urlParamKeys: ["id"],
    queryParamKeys: ["scope"]
  });
  evaluateGenerateAccessToken = this.makeRequest({
    method: "GET",
    path: "/{id}/evaluate-scopes/generate-example-access-token",
    urlParamKeys: ["id"],
    queryParamKeys: ["scope", "userId"]
  });
  evaluateGenerateUserInfo = this.makeRequest({
    method: "GET",
    path: "/{id}/evaluate-scopes/generate-example-userinfo",
    urlParamKeys: ["id"],
    queryParamKeys: ["scope", "userId"]
  });
  evaluateGenerateIdToken = this.makeRequest({
    method: "GET",
    path: "/{id}/evaluate-scopes/generate-example-id-token",
    urlParamKeys: ["id"],
    queryParamKeys: ["scope", "userId"]
  });
  addRealmScopeMappings = this.makeUpdateRequest({
    method: "POST",
    path: "/{id}/scope-mappings/realm",
    urlParamKeys: ["id", "client"]
  });
  listRealmScopeMappings = this.makeRequest({
    method: "GET",
    path: "/{id}/scope-mappings/realm",
    urlParamKeys: ["id"]
  });
  listAvailableRealmScopeMappings = this.makeRequest({
    method: "GET",
    path: "/{id}/scope-mappings/realm/available",
    urlParamKeys: ["id"]
  });
  listCompositeRealmScopeMappings = this.makeRequest({
    method: "GET",
    path: "/{id}/scope-mappings/realm/composite",
    urlParamKeys: ["id"]
  });
  delRealmScopeMappings = this.makeUpdateRequest({
    method: "DELETE",
    path: "/{id}/scope-mappings/realm",
    urlParamKeys: ["id"]
  });
  /**
   * Sessions
   */
  listSessions = this.makeRequest({
    method: "GET",
    path: "/{id}/user-sessions",
    urlParamKeys: ["id"]
  });
  listOfflineSessions = this.makeRequest({
    method: "GET",
    path: "/{id}/offline-sessions",
    urlParamKeys: ["id"]
  });
  getSessionCount = this.makeRequest({
    method: "GET",
    path: "/{id}/session-count",
    urlParamKeys: ["id"]
  });
  /**
   * Resource
   */
  getResourceServer = this.makeRequest({
    method: "GET",
    path: "{id}/authz/resource-server",
    urlParamKeys: ["id"]
  });
  updateResourceServer = this.makeUpdateRequest({
    method: "PUT",
    path: "{id}/authz/resource-server",
    urlParamKeys: ["id"]
  });
  listResources = this.makeRequest({
    method: "GET",
    path: "{id}/authz/resource-server/resource",
    urlParamKeys: ["id"]
  });
  createResource = this.makeUpdateRequest({
    method: "POST",
    path: "{id}/authz/resource-server/resource",
    urlParamKeys: ["id"]
  });
  getResource = this.makeRequest({
    method: "GET",
    path: "{id}/authz/resource-server/resource/{resourceId}",
    urlParamKeys: ["id", "resourceId"]
  });
  updateResource = this.makeUpdateRequest({
    method: "PUT",
    path: "/{id}/authz/resource-server/resource/{resourceId}",
    urlParamKeys: ["id", "resourceId"]
  });
  delResource = this.makeRequest({
    method: "DELETE",
    path: "/{id}/authz/resource-server/resource/{resourceId}",
    urlParamKeys: ["id", "resourceId"]
  });
  importResource = this.makeUpdateRequest({
    method: "POST",
    path: "/{id}/authz/resource-server/import",
    urlParamKeys: ["id"]
  });
  exportResource = this.makeRequest({
    method: "GET",
    path: "/{id}/authz/resource-server/settings",
    urlParamKeys: ["id"]
  });
  evaluateResource = this.makeUpdateRequest({
    method: "POST",
    path: "{id}/authz/resource-server/policy/evaluate",
    urlParamKeys: ["id"]
  });
  /**
   * Policy
   */
  listPolicies = this.makeRequest({
    method: "GET",
    path: "{id}/authz/resource-server/policy",
    urlParamKeys: ["id"]
  });
  findPolicyByName = this.makeRequest({
    method: "GET",
    path: "{id}/authz/resource-server/policy/search",
    urlParamKeys: ["id"]
  });
  updatePolicy = this.makeUpdateRequest({
    method: "PUT",
    path: "/{id}/authz/resource-server/policy/{type}/{policyId}",
    urlParamKeys: ["id", "type", "policyId"]
  });
  createPolicy = this.makeUpdateRequest({
    method: "POST",
    path: "/{id}/authz/resource-server/policy/{type}",
    urlParamKeys: ["id", "type"]
  });
  findOnePolicy = this.makeRequest({
    method: "GET",
    path: "/{id}/authz/resource-server/policy/{type}/{policyId}",
    urlParamKeys: ["id", "type", "policyId"],
    catchNotFound: !0
  });
  listDependentPolicies = this.makeRequest({
    method: "GET",
    path: "/{id}/authz/resource-server/policy/{policyId}/dependentPolicies",
    urlParamKeys: ["id", "policyId"]
  });
  delPolicy = this.makeRequest({
    method: "DELETE",
    path: "{id}/authz/resource-server/policy/{policyId}",
    urlParamKeys: ["id", "policyId"]
  });
  listPolicyProviders = this.makeRequest({
    method: "GET",
    path: "/{id}/authz/resource-server/policy/providers",
    urlParamKeys: ["id"]
  });
  async createOrUpdatePolicy(t) {
    const n = await this.findPolicyByName({
      id: t.id,
      name: t.policyName
    });
    return n ? (await this.updatePolicy({
      id: t.id,
      policyId: n.id,
      type: t.policy.type
    }, t.policy), this.findPolicyByName({
      id: t.id,
      name: t.policyName
    })) : this.createPolicy({ id: t.id, type: t.policy.type }, t.policy);
  }
  /**
   * Scopes
   */
  listAllScopes = this.makeRequest({
    method: "GET",
    path: "/{id}/authz/resource-server/scope",
    urlParamKeys: ["id"]
  });
  listAllResourcesByScope = this.makeRequest({
    method: "GET",
    path: "/{id}/authz/resource-server/scope/{scopeId}/resources",
    urlParamKeys: ["id", "scopeId"]
  });
  listAllPermissionsByScope = this.makeRequest({
    method: "GET",
    path: "/{id}/authz/resource-server/scope/{scopeId}/permissions",
    urlParamKeys: ["id", "scopeId"]
  });
  listPermissionsByResource = this.makeRequest({
    method: "GET",
    path: "/{id}/authz/resource-server/resource/{resourceId}/permissions",
    urlParamKeys: ["id", "resourceId"]
  });
  listScopesByResource = this.makeRequest({
    method: "GET",
    path: "/{id}/authz/resource-server/resource/{resourceName}/scopes",
    urlParamKeys: ["id", "resourceName"]
  });
  createAuthorizationScope = this.makeUpdateRequest({
    method: "POST",
    path: "{id}/authz/resource-server/scope",
    urlParamKeys: ["id"]
  });
  updateAuthorizationScope = this.makeUpdateRequest({
    method: "PUT",
    path: "/{id}/authz/resource-server/scope/{scopeId}",
    urlParamKeys: ["id", "scopeId"]
  });
  getAuthorizationScope = this.makeRequest({
    method: "GET",
    path: "/{id}/authz/resource-server/scope/{scopeId}",
    urlParamKeys: ["id", "scopeId"]
  });
  delAuthorizationScope = this.makeRequest({
    method: "DELETE",
    path: "/{id}/authz/resource-server/scope/{scopeId}",
    urlParamKeys: ["id", "scopeId"]
  });
  /**
   * Permissions
   */
  findPermissions = this.makeRequest({
    method: "GET",
    path: "{id}/authz/resource-server/permission",
    urlParamKeys: ["id"]
  });
  createPermission = this.makeUpdateRequest({
    method: "POST",
    path: "/{id}/authz/resource-server/permission/{type}",
    urlParamKeys: ["id", "type"]
  });
  updatePermission = this.makeUpdateRequest({
    method: "PUT",
    path: "/{id}/authz/resource-server/permission/{type}/{permissionId}",
    urlParamKeys: ["id", "type", "permissionId"]
  });
  delPermission = this.makeRequest({
    method: "DELETE",
    path: "/{id}/authz/resource-server/permission/{type}/{permissionId}",
    urlParamKeys: ["id", "type", "permissionId"]
  });
  findOnePermission = this.makeRequest({
    method: "GET",
    path: "/{id}/authz/resource-server/permission/{type}/{permissionId}",
    urlParamKeys: ["id", "type", "permissionId"]
  });
  getAssociatedScopes = this.makeRequest({
    method: "GET",
    path: "/{id}/authz/resource-server/policy/{permissionId}/scopes",
    urlParamKeys: ["id", "permissionId"]
  });
  getAssociatedResources = this.makeRequest({
    method: "GET",
    path: "/{id}/authz/resource-server/policy/{permissionId}/resources",
    urlParamKeys: ["id", "permissionId"]
  });
  getAssociatedPolicies = this.makeRequest({
    method: "GET",
    path: "/{id}/authz/resource-server/policy/{permissionId}/associatedPolicies",
    urlParamKeys: ["id", "permissionId"]
  });
  getOfflineSessionCount = this.makeRequest({
    method: "GET",
    path: "/{id}/offline-session-count",
    urlParamKeys: ["id"]
  });
  getInstallationProviders = this.makeRequest({
    method: "GET",
    path: "/{id}/installation/providers/{providerId}",
    urlParamKeys: ["id", "providerId"]
  });
  pushRevocation = this.makeRequest({
    method: "POST",
    path: "/{id}/push-revocation",
    urlParamKeys: ["id"]
  });
  addClusterNode = this.makeRequest({
    method: "POST",
    path: "/{id}/nodes",
    urlParamKeys: ["id"]
  });
  deleteClusterNode = this.makeRequest({
    method: "DELETE",
    path: "/{id}/nodes/{node}",
    urlParamKeys: ["id", "node"]
  });
  testNodesAvailable = this.makeRequest({
    method: "GET",
    path: "/{id}/test-nodes-available",
    urlParamKeys: ["id"]
  });
  getKeyInfo = this.makeRequest({
    method: "GET",
    path: "/{id}/certificates/{attr}",
    urlParamKeys: ["id", "attr"]
  });
  generateKey = this.makeRequest({
    method: "POST",
    path: "/{id}/certificates/{attr}/generate",
    urlParamKeys: ["id", "attr"]
  });
  downloadKey = this.makeUpdateRequest({
    method: "POST",
    path: "/{id}/certificates/{attr}/download",
    urlParamKeys: ["id", "attr"],
    headers: {
      accept: "application/octet-stream"
    }
  });
  generateAndDownloadKey = this.makeUpdateRequest({
    method: "POST",
    path: "/{id}/certificates/{attr}/generate-and-download",
    urlParamKeys: ["id", "attr"],
    headers: {
      accept: "application/octet-stream"
    }
  });
  uploadKey = this.makeUpdateRequest({
    method: "POST",
    path: "/{id}/certificates/{attr}/upload",
    urlParamKeys: ["id", "attr"]
  });
  uploadCertificate = this.makeUpdateRequest({
    method: "POST",
    path: "/{id}/certificates/{attr}/upload-certificate",
    urlParamKeys: ["id", "attr"]
  });
  updateFineGrainPermission = this.makeUpdateRequest({
    method: "PUT",
    path: "/{id}/management/permissions",
    urlParamKeys: ["id"]
  });
  listFineGrainPermissions = this.makeRequest({
    method: "GET",
    path: "/{id}/management/permissions",
    urlParamKeys: ["id"]
  });
  constructor(t) {
    super(t, {
      path: "/admin/realms/{realm}/clients",
      getUrlParams: () => ({
        realm: t.realmName
      }),
      getBaseUrl: () => t.baseUrl
    });
  }
  /**
   * Find single protocol mapper by name.
   */
  async findProtocolMapperByName(t) {
    return (await this.listProtocolMappers({
      id: t.id,
      ...t.realm ? { realm: t.realm } : {}
    })).find((r) => r.name === t.name);
  }
}
let cI = class extends sa {
  find = this.makeRequest({
    method: "GET",
    path: "/client-scopes"
  });
  create = this.makeRequest({
    method: "POST",
    path: "/client-scopes",
    returnResourceIdInLocationHeader: { field: "id" }
  });
  /**
   * Client-Scopes by id
   */
  findOne = this.makeRequest({
    method: "GET",
    path: "/client-scopes/{id}",
    urlParamKeys: ["id"],
    catchNotFound: !0
  });
  update = this.makeUpdateRequest({
    method: "PUT",
    path: "/client-scopes/{id}",
    urlParamKeys: ["id"]
  });
  del = this.makeRequest({
    method: "DELETE",
    path: "/client-scopes/{id}",
    urlParamKeys: ["id"]
  });
  /**
   * Default Client-Scopes
   */
  listDefaultClientScopes = this.makeRequest({
    method: "GET",
    path: "/default-default-client-scopes"
  });
  addDefaultClientScope = this.makeRequest({
    method: "PUT",
    path: "/default-default-client-scopes/{id}",
    urlParamKeys: ["id"]
  });
  delDefaultClientScope = this.makeRequest({
    method: "DELETE",
    path: "/default-default-client-scopes/{id}",
    urlParamKeys: ["id"]
  });
  /**
   * Default Optional Client-Scopes
   */
  listDefaultOptionalClientScopes = this.makeRequest({
    method: "GET",
    path: "/default-optional-client-scopes"
  });
  addDefaultOptionalClientScope = this.makeRequest({
    method: "PUT",
    path: "/default-optional-client-scopes/{id}",
    urlParamKeys: ["id"]
  });
  delDefaultOptionalClientScope = this.makeRequest({
    method: "DELETE",
    path: "/default-optional-client-scopes/{id}",
    urlParamKeys: ["id"]
  });
  /**
   * Protocol Mappers
   */
  addMultipleProtocolMappers = this.makeUpdateRequest({
    method: "POST",
    path: "/client-scopes/{id}/protocol-mappers/add-models",
    urlParamKeys: ["id"]
  });
  addProtocolMapper = this.makeUpdateRequest({
    method: "POST",
    path: "/client-scopes/{id}/protocol-mappers/models",
    urlParamKeys: ["id"]
  });
  listProtocolMappers = this.makeRequest({
    method: "GET",
    path: "/client-scopes/{id}/protocol-mappers/models",
    urlParamKeys: ["id"]
  });
  findProtocolMapper = this.makeRequest({
    method: "GET",
    path: "/client-scopes/{id}/protocol-mappers/models/{mapperId}",
    urlParamKeys: ["id", "mapperId"],
    catchNotFound: !0
  });
  findProtocolMappersByProtocol = this.makeRequest({
    method: "GET",
    path: "/client-scopes/{id}/protocol-mappers/protocol/{protocol}",
    urlParamKeys: ["id", "protocol"],
    catchNotFound: !0
  });
  updateProtocolMapper = this.makeUpdateRequest({
    method: "PUT",
    path: "/client-scopes/{id}/protocol-mappers/models/{mapperId}",
    urlParamKeys: ["id", "mapperId"]
  });
  delProtocolMapper = this.makeRequest({
    method: "DELETE",
    path: "/client-scopes/{id}/protocol-mappers/models/{mapperId}",
    urlParamKeys: ["id", "mapperId"]
  });
  /**
   * Scope Mappings
   */
  listScopeMappings = this.makeRequest({
    method: "GET",
    path: "/client-scopes/{id}/scope-mappings",
    urlParamKeys: ["id"]
  });
  addClientScopeMappings = this.makeUpdateRequest({
    method: "POST",
    path: "/client-scopes/{id}/scope-mappings/clients/{client}",
    urlParamKeys: ["id", "client"]
  });
  listClientScopeMappings = this.makeRequest({
    method: "GET",
    path: "/client-scopes/{id}/scope-mappings/clients/{client}",
    urlParamKeys: ["id", "client"]
  });
  listAvailableClientScopeMappings = this.makeRequest({
    method: "GET",
    path: "/client-scopes/{id}/scope-mappings/clients/{client}/available",
    urlParamKeys: ["id", "client"]
  });
  listCompositeClientScopeMappings = this.makeRequest({
    method: "GET",
    path: "/client-scopes/{id}/scope-mappings/clients/{client}/composite",
    urlParamKeys: ["id", "client"]
  });
  delClientScopeMappings = this.makeUpdateRequest({
    method: "DELETE",
    path: "/client-scopes/{id}/scope-mappings/clients/{client}",
    urlParamKeys: ["id", "client"]
  });
  addRealmScopeMappings = this.makeUpdateRequest({
    method: "POST",
    path: "/client-scopes/{id}/scope-mappings/realm",
    urlParamKeys: ["id"]
  });
  listRealmScopeMappings = this.makeRequest({
    method: "GET",
    path: "/client-scopes/{id}/scope-mappings/realm",
    urlParamKeys: ["id"]
  });
  listAvailableRealmScopeMappings = this.makeRequest({
    method: "GET",
    path: "/client-scopes/{id}/scope-mappings/realm/available",
    urlParamKeys: ["id"]
  });
  listCompositeRealmScopeMappings = this.makeRequest({
    method: "GET",
    path: "/client-scopes/{id}/scope-mappings/realm/composite",
    urlParamKeys: ["id"]
  });
  delRealmScopeMappings = this.makeUpdateRequest({
    method: "DELETE",
    path: "/client-scopes/{id}/scope-mappings/realm",
    urlParamKeys: ["id"]
  });
  constructor(t) {
    super(t, {
      path: "/admin/realms/{realm}",
      getUrlParams: () => ({
        realm: t.realmName
      }),
      getBaseUrl: () => t.baseUrl
    });
  }
  /**
   * Find client scope by name.
   */
  async findOneByName(t) {
    return (await this.find({
      ...t.realm ? { realm: t.realm } : {}
    })).find((r) => r.name === t.name);
  }
  /**
   * Delete client scope by name.
   */
  async delByName(t) {
    const n = await this.findOneByName(t);
    if (!n)
      throw new Error("Scope not found.");
    await this.del({
      ...t.realm ? { realm: t.realm } : {},
      id: n.id
    });
  }
  /**
   * Find single protocol mapper by name.
   */
  async findProtocolMapperByName(t) {
    return (await this.listProtocolMappers({
      id: t.id,
      ...t.realm ? { realm: t.realm } : {}
    })).find((r) => r.name === t.name);
  }
};
class dI extends sa {
  /**
   * components
   * https://www.keycloak.org/docs-api/11.0/rest-api/#_component_resource
   */
  find = this.makeRequest({
    method: "GET"
  });
  create = this.makeRequest({
    method: "POST",
    returnResourceIdInLocationHeader: { field: "id" }
  });
  findOne = this.makeRequest({
    method: "GET",
    path: "/{id}",
    urlParamKeys: ["id"],
    catchNotFound: !0
  });
  update = this.makeUpdateRequest({
    method: "PUT",
    path: "/{id}",
    urlParamKeys: ["id"]
  });
  del = this.makeRequest({
    method: "DELETE",
    path: "/{id}",
    urlParamKeys: ["id"]
  });
  listSubComponents = this.makeRequest({
    method: "GET",
    path: "/{id}/sub-component-types",
    urlParamKeys: ["id"],
    queryParamKeys: ["type"]
  });
  constructor(t) {
    super(t, {
      path: "/admin/realms/{realm}/components",
      getUrlParams: () => ({
        realm: t.realmName
      }),
      getBaseUrl: () => t.baseUrl
    });
  }
}
class uI extends sa {
  find = this.makeRequest({
    method: "GET",
    queryParamKeys: [
      "search",
      "q",
      "exact",
      "briefRepresentation",
      "first",
      "max"
    ]
  });
  create = this.makeRequest({
    method: "POST",
    returnResourceIdInLocationHeader: { field: "id" }
  });
  updateRoot = this.makeRequest({
    method: "POST"
  });
  /**
   * Single user
   */
  findOne = this.makeRequest({
    method: "GET",
    path: "/{id}",
    urlParamKeys: ["id"],
    catchNotFound: !0
  });
  update = this.makeUpdateRequest({
    method: "PUT",
    path: "/{id}",
    urlParamKeys: ["id"]
  });
  del = this.makeRequest({
    method: "DELETE",
    path: "/{id}",
    urlParamKeys: ["id"]
  });
  count = this.makeRequest({
    method: "GET",
    path: "/count"
  });
  /**
   * Set or create child.
   * This will just set the parent if it exists. Create it and set the parent if the group doesn’t exist.
   * @deprecated Use `createChildGroup` or `updateChildGroup` instead.
   */
  setOrCreateChild = this.makeUpdateRequest({
    method: "POST",
    path: "/{id}/children",
    urlParamKeys: ["id"],
    returnResourceIdInLocationHeader: { field: "id" }
  });
  /**
   * Creates a child group on the specified parent group. If the group already exists, then an error is returned.
   */
  createChildGroup = this.makeUpdateRequest({
    method: "POST",
    path: "/{id}/children",
    urlParamKeys: ["id"],
    returnResourceIdInLocationHeader: { field: "id" }
  });
  /**
   * Updates a child group on the specified parent group. If the group doesn’t exist, then an error is returned.
   * Can be used to move a group from one parent to another.
   */
  updateChildGroup = this.makeUpdateRequest({
    method: "POST",
    path: "/{id}/children",
    urlParamKeys: ["id"]
  });
  /**
   * Finds all subgroups on the specified parent group matching the provided parameters.
   */
  listSubGroups = this.makeRequest({
    method: "GET",
    path: "/{parentId}/children",
    urlParamKeys: ["parentId"],
    queryParamKeys: ["search", "first", "max", "briefRepresentation"],
    catchNotFound: !0
  });
  /**
   * Members
   */
  listMembers = this.makeRequest({
    method: "GET",
    path: "/{id}/members",
    urlParamKeys: ["id"],
    catchNotFound: !0
  });
  /**
   * Role mappings
   * https://www.keycloak.org/docs-api/11.0/rest-api/#_role_mapper_resource
   */
  listRoleMappings = this.makeRequest({
    method: "GET",
    path: "/{id}/role-mappings",
    urlParamKeys: ["id"]
  });
  addRealmRoleMappings = this.makeRequest({
    method: "POST",
    path: "/{id}/role-mappings/realm",
    urlParamKeys: ["id"],
    payloadKey: "roles"
  });
  listRealmRoleMappings = this.makeRequest({
    method: "GET",
    path: "/{id}/role-mappings/realm",
    urlParamKeys: ["id"]
  });
  delRealmRoleMappings = this.makeRequest({
    method: "DELETE",
    path: "/{id}/role-mappings/realm",
    urlParamKeys: ["id"],
    payloadKey: "roles"
  });
  listAvailableRealmRoleMappings = this.makeRequest({
    method: "GET",
    path: "/{id}/role-mappings/realm/available",
    urlParamKeys: ["id"]
  });
  // Get effective realm-level role mappings This will recurse all composite roles to get the result.
  listCompositeRealmRoleMappings = this.makeRequest({
    method: "GET",
    path: "/{id}/role-mappings/realm/composite",
    urlParamKeys: ["id"]
  });
  /**
   * Client role mappings
   * https://www.keycloak.org/docs-api/11.0/rest-api/#_client_role_mappings_resource
   */
  listClientRoleMappings = this.makeRequest({
    method: "GET",
    path: "/{id}/role-mappings/clients/{clientUniqueId}",
    urlParamKeys: ["id", "clientUniqueId"]
  });
  addClientRoleMappings = this.makeRequest({
    method: "POST",
    path: "/{id}/role-mappings/clients/{clientUniqueId}",
    urlParamKeys: ["id", "clientUniqueId"],
    payloadKey: "roles"
  });
  delClientRoleMappings = this.makeRequest({
    method: "DELETE",
    path: "/{id}/role-mappings/clients/{clientUniqueId}",
    urlParamKeys: ["id", "clientUniqueId"],
    payloadKey: "roles"
  });
  listAvailableClientRoleMappings = this.makeRequest({
    method: "GET",
    path: "/{id}/role-mappings/clients/{clientUniqueId}/available",
    urlParamKeys: ["id", "clientUniqueId"]
  });
  listCompositeClientRoleMappings = this.makeRequest({
    method: "GET",
    path: "/{id}/role-mappings/clients/{clientUniqueId}/composite",
    urlParamKeys: ["id", "clientUniqueId"]
  });
  /**
   * Authorization permissions
   */
  updatePermission = this.makeUpdateRequest({
    method: "PUT",
    path: "/{id}/management/permissions",
    urlParamKeys: ["id"]
  });
  listPermissions = this.makeRequest({
    method: "GET",
    path: "/{id}/management/permissions",
    urlParamKeys: ["id"]
  });
  constructor(t) {
    super(t, {
      path: "/admin/realms/{realm}/groups",
      getUrlParams: () => ({
        realm: t.realmName
      }),
      getBaseUrl: () => t.baseUrl
    });
  }
}
let pI = class extends sa {
  /**
   * Identity provider
   * https://www.keycloak.org/docs-api/11.0/rest-api/#_identity_providers_resource
   */
  find = this.makeRequest({
    method: "GET",
    path: "/instances"
  });
  create = this.makeRequest({
    method: "POST",
    path: "/instances",
    returnResourceIdInLocationHeader: { field: "id" }
  });
  findOne = this.makeRequest({
    method: "GET",
    path: "/instances/{alias}",
    urlParamKeys: ["alias"],
    catchNotFound: !0
  });
  update = this.makeUpdateRequest({
    method: "PUT",
    path: "/instances/{alias}",
    urlParamKeys: ["alias"]
  });
  del = this.makeRequest({
    method: "DELETE",
    path: "/instances/{alias}",
    urlParamKeys: ["alias"]
  });
  findFactory = this.makeRequest({
    method: "GET",
    path: "/providers/{providerId}",
    urlParamKeys: ["providerId"]
  });
  findMappers = this.makeRequest({
    method: "GET",
    path: "/instances/{alias}/mappers",
    urlParamKeys: ["alias"]
  });
  findOneMapper = this.makeRequest({
    method: "GET",
    path: "/instances/{alias}/mappers/{id}",
    urlParamKeys: ["alias", "id"],
    catchNotFound: !0
  });
  createMapper = this.makeRequest({
    method: "POST",
    path: "/instances/{alias}/mappers",
    urlParamKeys: ["alias"],
    payloadKey: "identityProviderMapper",
    returnResourceIdInLocationHeader: { field: "id" }
  });
  updateMapper = this.makeUpdateRequest({
    method: "PUT",
    path: "/instances/{alias}/mappers/{id}",
    urlParamKeys: ["alias", "id"]
  });
  delMapper = this.makeRequest({
    method: "DELETE",
    path: "/instances/{alias}/mappers/{id}",
    urlParamKeys: ["alias", "id"]
  });
  findMapperTypes = this.makeRequest({
    method: "GET",
    path: "/instances/{alias}/mapper-types",
    urlParamKeys: ["alias"]
  });
  importFromUrl = this.makeRequest({
    method: "POST",
    path: "/import-config"
  });
  updatePermission = this.makeUpdateRequest({
    method: "PUT",
    path: "/instances/{alias}/management/permissions",
    urlParamKeys: ["alias"]
  });
  listPermissions = this.makeRequest({
    method: "GET",
    path: "/instances/{alias}/management/permissions",
    urlParamKeys: ["alias"]
  });
  reloadKeys = this.makeRequest({
    method: "GET",
    path: "/instances/{alias}/reload-keys",
    urlParamKeys: ["alias"]
  });
  constructor(t) {
    super(t, {
      path: "/admin/realms/{realm}/identity-provider",
      getUrlParams: () => ({
        realm: t.realmName
      }),
      getBaseUrl: () => t.baseUrl
    });
  }
};
class mI extends sa {
  /**
   * Realm
   * https://www.keycloak.org/docs-api/11.0/rest-api/#_realms_admin_resource
   */
  find = this.makeRequest({
    method: "GET"
  });
  create = this.makeRequest({
    method: "POST",
    returnResourceIdInLocationHeader: { field: "realmName" }
  });
  findOne = this.makeRequest({
    method: "GET",
    path: "/{realm}",
    urlParamKeys: ["realm"],
    catchNotFound: !0
  });
  update = this.makeUpdateRequest({
    method: "PUT",
    path: "/{realm}",
    urlParamKeys: ["realm"]
  });
  del = this.makeRequest({
    method: "DELETE",
    path: "/{realm}",
    urlParamKeys: ["realm"]
  });
  partialImport = this.makeRequest({
    method: "POST",
    path: "/{realm}/partialImport",
    urlParamKeys: ["realm"],
    payloadKey: "rep"
  });
  export = this.makeRequest({
    method: "POST",
    path: "/{realm}/partial-export",
    urlParamKeys: ["realm"],
    queryParamKeys: ["exportClients", "exportGroupsAndRoles"]
  });
  getDefaultGroups = this.makeRequest({
    method: "GET",
    path: "/{realm}/default-groups",
    urlParamKeys: ["realm"]
  });
  addDefaultGroup = this.makeRequest({
    method: "PUT",
    path: "/{realm}/default-groups/{id}",
    urlParamKeys: ["realm", "id"]
  });
  removeDefaultGroup = this.makeRequest({
    method: "DELETE",
    path: "/{realm}/default-groups/{id}",
    urlParamKeys: ["realm", "id"]
  });
  getGroupByPath = this.makeRequest({
    method: "GET",
    path: "/{realm}/group-by-path/{path}",
    urlParamKeys: ["realm", "path"]
  });
  /**
   * Get events Returns all events, or filters them based on URL query parameters listed here
   */
  findEvents = this.makeRequest({
    method: "GET",
    path: "/{realm}/events",
    urlParamKeys: ["realm"],
    queryParamKeys: [
      "client",
      "dateFrom",
      "dateTo",
      "first",
      "ipAddress",
      "max",
      "type",
      "user"
    ]
  });
  getConfigEvents = this.makeRequest({
    method: "GET",
    path: "/{realm}/events/config",
    urlParamKeys: ["realm"]
  });
  updateConfigEvents = this.makeUpdateRequest({
    method: "PUT",
    path: "/{realm}/events/config",
    urlParamKeys: ["realm"]
  });
  clearEvents = this.makeRequest({
    method: "DELETE",
    path: "/{realm}/events",
    urlParamKeys: ["realm"]
  });
  clearAdminEvents = this.makeRequest({
    method: "DELETE",
    path: "/{realm}/admin-events",
    urlParamKeys: ["realm"]
  });
  getClientRegistrationPolicyProviders = this.makeRequest({
    method: "GET",
    path: "/{realm}/client-registration-policy/providers",
    urlParamKeys: ["realm"]
  });
  getClientsInitialAccess = this.makeRequest({
    method: "GET",
    path: "/{realm}/clients-initial-access",
    urlParamKeys: ["realm"]
  });
  createClientsInitialAccess = this.makeUpdateRequest({
    method: "POST",
    path: "/{realm}/clients-initial-access",
    urlParamKeys: ["realm"]
  });
  delClientsInitialAccess = this.makeRequest({
    method: "DELETE",
    path: "/{realm}/clients-initial-access/{id}",
    urlParamKeys: ["realm", "id"]
  });
  /**
   * Remove a specific user session.
   */
  removeSession = this.makeRequest({
    method: "DELETE",
    path: "/{realm}/sessions/{sessionId}",
    urlParamKeys: ["realm", "sessionId"],
    catchNotFound: !0
  });
  /**
   * Get admin events Returns all admin events, or filters events based on URL query parameters listed here
   */
  findAdminEvents = this.makeRequest({
    method: "GET",
    path: "/{realm}/admin-events",
    urlParamKeys: ["realm"],
    queryParamKeys: [
      "authClient",
      "authIpAddress",
      "authRealm",
      "authUser",
      "dateFrom",
      "dateTo",
      "max",
      "first",
      "operationTypes",
      "resourcePath",
      "resourceTypes"
    ]
  });
  /**
   * Users management permissions
   */
  getUsersManagementPermissions = this.makeRequest({
    method: "GET",
    path: "/{realm}/users-management-permissions",
    urlParamKeys: ["realm"]
  });
  updateUsersManagementPermissions = this.makeRequest({
    method: "PUT",
    path: "/{realm}/users-management-permissions",
    urlParamKeys: ["realm"]
  });
  /**
   * Sessions
   */
  getClientSessionStats = this.makeRequest({
    method: "GET",
    path: "/{realm}/client-session-stats",
    urlParamKeys: ["realm"]
  });
  logoutAll = this.makeRequest({
    method: "POST",
    path: "/{realm}/logout-all",
    urlParamKeys: ["realm"]
  });
  deleteSession = this.makeRequest({
    method: "DELETE",
    path: "/{realm}/sessions/{session}",
    urlParamKeys: ["realm", "session"],
    queryParamKeys: ["isOffline"]
  });
  pushRevocation = this.makeRequest({
    method: "POST",
    path: "/{realm}/push-revocation",
    urlParamKeys: ["realm"],
    ignoredKeys: ["realm"]
  });
  getKeys = this.makeRequest({
    method: "GET",
    path: "/{realm}/keys",
    urlParamKeys: ["realm"]
  });
  testLDAPConnection = this.makeUpdateRequest({
    method: "POST",
    path: "/{realm}/testLDAPConnection",
    urlParamKeys: ["realm"]
  });
  testSMTPConnection = this.makeUpdateRequest({
    method: "POST",
    path: "/{realm}/testSMTPConnection",
    urlParamKeys: ["realm"]
  });
  ldapServerCapabilities = this.makeUpdateRequest({
    method: "POST",
    path: "/{realm}/ldap-server-capabilities",
    urlParamKeys: ["realm"]
  });
  getRealmSpecificLocales = this.makeRequest({
    method: "GET",
    path: "/{realm}/localization",
    urlParamKeys: ["realm"]
  });
  getRealmLocalizationTexts = this.makeRequest({
    method: "GET",
    path: "/{realm}/localization/{selectedLocale}",
    urlParamKeys: ["realm", "selectedLocale"]
  });
  addLocalization = this.makeUpdateRequest({
    method: "PUT",
    path: "/{realm}/localization/{selectedLocale}/{key}",
    urlParamKeys: ["realm", "selectedLocale", "key"],
    headers: { "content-type": "text/plain" }
  });
  deleteRealmLocalizationTexts = this.makeRequest({
    method: "DELETE",
    path: "/{realm}/localization/{selectedLocale}/{key}",
    urlParamKeys: ["realm", "selectedLocale", "key"]
  });
  constructor(t) {
    super(t, {
      path: "/admin/realms",
      getBaseUrl: () => t.baseUrl
    });
  }
}
class fI extends sa {
  /**
   * Organizations
   */
  constructor(t) {
    super(t, {
      path: "/admin/realms/{realm}/organizations",
      getUrlParams: () => ({
        realm: t.realmName
      }),
      getBaseUrl: () => t.baseUrl
    });
  }
  find = this.makeRequest({
    method: "GET",
    path: "/"
  });
  findOne = this.makeRequest({
    method: "GET",
    path: "/{id}",
    urlParamKeys: ["id"]
  });
  create = this.makeRequest({
    method: "POST",
    path: "/",
    returnResourceIdInLocationHeader: { field: "id" }
  });
  delById = this.makeRequest({
    method: "DELETE",
    path: "/{id}",
    urlParamKeys: ["id"]
  });
  updateById = this.makeUpdateRequest({
    method: "PUT",
    path: "/{id}",
    urlParamKeys: ["id"]
  });
  listMembers = this.makeRequest({
    method: "GET",
    path: "/{orgId}/members",
    urlParamKeys: ["orgId"]
  });
  addMember = this.makeRequest({
    method: "POST",
    path: "/{orgId}/members",
    urlParamKeys: ["orgId"],
    payloadKey: "userId"
  });
  delMember = this.makeRequest({
    method: "DELETE",
    path: "/{orgId}/members/{userId}",
    urlParamKeys: ["orgId", "userId"]
  });
  invite = this.makeUpdateRequest({
    method: "POST",
    path: "/{orgId}/members/invite-user",
    urlParamKeys: ["orgId"]
  });
  listIdentityProviders = this.makeRequest({
    method: "GET",
    path: "/{orgId}/identity-providers",
    urlParamKeys: ["orgId"]
  });
  linkIdp = this.makeRequest({
    method: "POST",
    path: "/{orgId}/identity-providers",
    urlParamKeys: ["orgId"],
    payloadKey: "alias"
  });
  unLinkIdp = this.makeRequest({
    method: "DELETE",
    path: "/{orgId}/identity-providers/{alias}",
    urlParamKeys: ["orgId", "alias"]
  });
}
class hI extends sa {
  /**
   * Realm roles
   */
  find = this.makeRequest({
    method: "GET",
    path: "/roles"
  });
  create = this.makeRequest({
    method: "POST",
    path: "/roles",
    returnResourceIdInLocationHeader: { field: "roleName" }
  });
  /**
   * Roles by name
   */
  findOneByName = this.makeRequest({
    method: "GET",
    path: "/roles/{name}",
    urlParamKeys: ["name"],
    catchNotFound: !0
  });
  updateByName = this.makeUpdateRequest({
    method: "PUT",
    path: "/roles/{name}",
    urlParamKeys: ["name"]
  });
  delByName = this.makeRequest({
    method: "DELETE",
    path: "/roles/{name}",
    urlParamKeys: ["name"]
  });
  findUsersWithRole = this.makeRequest({
    method: "GET",
    path: "/roles/{name}/users",
    urlParamKeys: ["name"],
    catchNotFound: !0
  });
  /**
   * Roles by id
   */
  findOneById = this.makeRequest({
    method: "GET",
    path: "/roles-by-id/{id}",
    urlParamKeys: ["id"],
    catchNotFound: !0
  });
  createComposite = this.makeUpdateRequest({
    method: "POST",
    path: "/roles-by-id/{roleId}/composites",
    urlParamKeys: ["roleId"]
  });
  getCompositeRoles = this.makeRequest({
    method: "GET",
    path: "/roles-by-id/{id}/composites",
    urlParamKeys: ["id"]
  });
  getCompositeRolesForRealm = this.makeRequest({
    method: "GET",
    path: "/roles-by-id/{id}/composites/realm",
    urlParamKeys: ["id"]
  });
  getCompositeRolesForClient = this.makeRequest({
    method: "GET",
    path: "/roles-by-id/{id}/composites/clients/{clientId}",
    urlParamKeys: ["id", "clientId"]
  });
  delCompositeRoles = this.makeUpdateRequest({
    method: "DELETE",
    path: "/roles-by-id/{id}/composites",
    urlParamKeys: ["id"]
  });
  updateById = this.makeUpdateRequest({
    method: "PUT",
    path: "/roles-by-id/{id}",
    urlParamKeys: ["id"]
  });
  delById = this.makeRequest({
    method: "DELETE",
    path: "/roles-by-id/{id}",
    urlParamKeys: ["id"]
  });
  /**
   * Authorization permissions
   */
  updatePermission = this.makeUpdateRequest({
    method: "PUT",
    path: "/roles-by-id/{id}/management/permissions",
    urlParamKeys: ["id"]
  });
  listPermissions = this.makeRequest({
    method: "GET",
    path: "/roles-by-id/{id}/management/permissions",
    urlParamKeys: ["id"]
  });
  constructor(t) {
    super(t, {
      path: "/admin/realms/{realm}",
      getUrlParams: () => ({
        realm: t.realmName
      }),
      getBaseUrl: () => t.baseUrl
    });
  }
}
class gI extends sa {
  constructor(t) {
    super(t, {
      path: "/",
      getBaseUrl: () => t.baseUrl
    });
  }
  find = this.makeRequest({
    method: "GET",
    path: "/admin/serverinfo"
  });
  findEffectiveMessageBundles = this.makeRequest({
    method: "GET",
    path: "/resources/{realm}/{themeType}/{locale}",
    urlParamKeys: ["realm", "themeType", "locale"],
    queryParamKeys: ["theme", "source"]
  });
}
class bI extends sa {
  find = this.makeRequest({
    method: "GET"
  });
  create = this.makeRequest({
    method: "POST",
    returnResourceIdInLocationHeader: { field: "id" }
  });
  /**
   * Single user
   */
  findOne = this.makeRequest({
    method: "GET",
    path: "/{id}",
    urlParamKeys: ["id"],
    catchNotFound: !0
  });
  update = this.makeUpdateRequest({
    method: "PUT",
    path: "/{id}",
    urlParamKeys: ["id"]
  });
  del = this.makeRequest({
    method: "DELETE",
    path: "/{id}",
    urlParamKeys: ["id"]
  });
  count = this.makeRequest({
    method: "GET",
    path: "/count"
  });
  getProfile = this.makeRequest({
    method: "GET",
    path: "/profile"
  });
  updateProfile = this.makeRequest({
    method: "PUT",
    path: "/profile"
  });
  getProfileMetadata = this.makeRequest({
    method: "GET",
    path: "/profile/metadata"
  });
  /**
   * role mappings
   */
  listRoleMappings = this.makeRequest({
    method: "GET",
    path: "/{id}/role-mappings",
    urlParamKeys: ["id"]
  });
  addRealmRoleMappings = this.makeRequest({
    method: "POST",
    path: "/{id}/role-mappings/realm",
    urlParamKeys: ["id"],
    payloadKey: "roles"
  });
  listRealmRoleMappings = this.makeRequest({
    method: "GET",
    path: "/{id}/role-mappings/realm",
    urlParamKeys: ["id"]
  });
  delRealmRoleMappings = this.makeRequest({
    method: "DELETE",
    path: "/{id}/role-mappings/realm",
    urlParamKeys: ["id"],
    payloadKey: "roles"
  });
  listAvailableRealmRoleMappings = this.makeRequest({
    method: "GET",
    path: "/{id}/role-mappings/realm/available",
    urlParamKeys: ["id"]
  });
  // Get effective realm-level role mappings This will recurse all composite roles to get the result.
  listCompositeRealmRoleMappings = this.makeRequest({
    method: "GET",
    path: "/{id}/role-mappings/realm/composite",
    urlParamKeys: ["id"]
  });
  /**
   * Client role mappings
   * https://www.keycloak.org/docs-api/11.0/rest-api/#_client_role_mappings_resource
   */
  listClientRoleMappings = this.makeRequest({
    method: "GET",
    path: "/{id}/role-mappings/clients/{clientUniqueId}",
    urlParamKeys: ["id", "clientUniqueId"]
  });
  addClientRoleMappings = this.makeRequest({
    method: "POST",
    path: "/{id}/role-mappings/clients/{clientUniqueId}",
    urlParamKeys: ["id", "clientUniqueId"],
    payloadKey: "roles"
  });
  delClientRoleMappings = this.makeRequest({
    method: "DELETE",
    path: "/{id}/role-mappings/clients/{clientUniqueId}",
    urlParamKeys: ["id", "clientUniqueId"],
    payloadKey: "roles"
  });
  listAvailableClientRoleMappings = this.makeRequest({
    method: "GET",
    path: "/{id}/role-mappings/clients/{clientUniqueId}/available",
    urlParamKeys: ["id", "clientUniqueId"]
  });
  listCompositeClientRoleMappings = this.makeRequest({
    method: "GET",
    path: "/{id}/role-mappings/clients/{clientUniqueId}/composite",
    urlParamKeys: ["id", "clientUniqueId"]
  });
  /**
   * Send a update account email to the user
   * an email contains a link the user can click to perform a set of required actions.
   */
  executeActionsEmail = this.makeRequest({
    method: "PUT",
    path: "/{id}/execute-actions-email",
    urlParamKeys: ["id"],
    payloadKey: "actions",
    queryParamKeys: ["lifespan", "redirectUri", "clientId"],
    keyTransform: {
      clientId: "client_id",
      redirectUri: "redirect_uri"
    }
  });
  /**
   * Group
   */
  listGroups = this.makeRequest({
    method: "GET",
    path: "/{id}/groups",
    urlParamKeys: ["id"]
  });
  addToGroup = this.makeRequest({
    method: "PUT",
    path: "/{id}/groups/{groupId}",
    urlParamKeys: ["id", "groupId"]
  });
  delFromGroup = this.makeRequest({
    method: "DELETE",
    path: "/{id}/groups/{groupId}",
    urlParamKeys: ["id", "groupId"]
  });
  countGroups = this.makeRequest({
    method: "GET",
    path: "/{id}/groups/count",
    urlParamKeys: ["id"]
  });
  /**
   * Federated Identity
   */
  listFederatedIdentities = this.makeRequest({
    method: "GET",
    path: "/{id}/federated-identity",
    urlParamKeys: ["id"]
  });
  addToFederatedIdentity = this.makeRequest({
    method: "POST",
    path: "/{id}/federated-identity/{federatedIdentityId}",
    urlParamKeys: ["id", "federatedIdentityId"],
    payloadKey: "federatedIdentity"
  });
  delFromFederatedIdentity = this.makeRequest({
    method: "DELETE",
    path: "/{id}/federated-identity/{federatedIdentityId}",
    urlParamKeys: ["id", "federatedIdentityId"]
  });
  /**
   * remove totp
   */
  removeTotp = this.makeRequest({
    method: "PUT",
    path: "/{id}/remove-totp",
    urlParamKeys: ["id"]
  });
  /**
   * reset password
   */
  resetPassword = this.makeRequest({
    method: "PUT",
    path: "/{id}/reset-password",
    urlParamKeys: ["id"],
    payloadKey: "credential"
  });
  getUserStorageCredentialTypes = this.makeRequest({
    method: "GET",
    path: "/{id}/configured-user-storage-credential-types",
    urlParamKeys: ["id"]
  });
  /**
   * get user credentials
   */
  getCredentials = this.makeRequest({
    method: "GET",
    path: "/{id}/credentials",
    urlParamKeys: ["id"]
  });
  /**
   * delete user credentials
   */
  deleteCredential = this.makeRequest({
    method: "DELETE",
    path: "/{id}/credentials/{credentialId}",
    urlParamKeys: ["id", "credentialId"]
  });
  /**
   * update a credential label for a user
   */
  updateCredentialLabel = this.makeUpdateRequest({
    method: "PUT",
    path: "/{id}/credentials/{credentialId}/userLabel",
    urlParamKeys: ["id", "credentialId"],
    headers: { "content-type": "text/plain" }
  });
  // Move a credential to a position behind another credential
  moveCredentialPositionDown = this.makeRequest({
    method: "POST",
    path: "/{id}/credentials/{credentialId}/moveAfter/{newPreviousCredentialId}",
    urlParamKeys: ["id", "credentialId", "newPreviousCredentialId"]
  });
  // Move a credential to a first position in the credentials list of the user
  moveCredentialPositionUp = this.makeRequest({
    method: "POST",
    path: "/{id}/credentials/{credentialId}/moveToFirst",
    urlParamKeys: ["id", "credentialId"]
  });
  /**
   * send verify email
   */
  sendVerifyEmail = this.makeRequest({
    method: "PUT",
    path: "/{id}/send-verify-email",
    urlParamKeys: ["id"],
    queryParamKeys: ["clientId", "redirectUri"],
    keyTransform: {
      clientId: "client_id",
      redirectUri: "redirect_uri"
    }
  });
  /**
   * list user sessions
   */
  listSessions = this.makeRequest({
    method: "GET",
    path: "/{id}/sessions",
    urlParamKeys: ["id"]
  });
  /**
   * list offline sessions associated with the user and client
   */
  listOfflineSessions = this.makeRequest({
    method: "GET",
    path: "/{id}/offline-sessions/{clientId}",
    urlParamKeys: ["id", "clientId"]
  });
  /**
   * logout user from all sessions
   */
  logout = this.makeRequest({
    method: "POST",
    path: "/{id}/logout",
    urlParamKeys: ["id"]
  });
  /**
   * list consents granted by the user
   */
  listConsents = this.makeRequest({
    method: "GET",
    path: "/{id}/consents",
    urlParamKeys: ["id"]
  });
  impersonation = this.makeUpdateRequest({
    method: "POST",
    path: "/{id}/impersonation",
    urlParamKeys: ["id"]
  });
  /**
   * revoke consent and offline tokens for particular client from user
   */
  revokeConsent = this.makeRequest({
    method: "DELETE",
    path: "/{id}/consents/{clientId}",
    urlParamKeys: ["id", "clientId"]
  });
  getUnmanagedAttributes = this.makeRequest({
    method: "GET",
    path: "/{id}/unmanagedAttributes",
    urlParamKeys: ["id"]
  });
  constructor(t) {
    super(t, {
      path: "/admin/realms/{realm}/users",
      getUrlParams: () => ({
        realm: t.realmName
      }),
      getBaseUrl: () => t.baseUrl
    });
  }
}
class vI extends sa {
  name = this.makeRequest({
    method: "GET",
    path: "/{id}/name",
    urlParamKeys: ["id"]
  });
  removeImportedUsers = this.makeRequest({
    method: "POST",
    path: "/{id}/remove-imported-users",
    urlParamKeys: ["id"]
  });
  sync = this.makeRequest({
    method: "POST",
    path: "/{id}/sync",
    urlParamKeys: ["id"],
    queryParamKeys: ["action"]
  });
  unlinkUsers = this.makeRequest({
    method: "POST",
    path: "/{id}/unlink-users",
    urlParamKeys: ["id"]
  });
  mappersSync = this.makeRequest({
    method: "POST",
    path: "/{parentId}/mappers/{id}/sync",
    urlParamKeys: ["id", "parentId"],
    queryParamKeys: ["direction"]
  });
  constructor(t) {
    super(t, {
      path: "/admin/realms/{realm}/user-storage",
      getUrlParams: () => ({
        realm: t.realmName
      }),
      getBaseUrl: () => t.baseUrl
    });
  }
}
let yI = class extends sa {
  constructor(t) {
    super(t, {
      path: "/admin/{realm}/console",
      getUrlParams: () => ({
        realm: t.realmName
      }),
      getBaseUrl: () => t.baseUrl
    });
  }
  find = this.makeRequest({
    method: "GET",
    path: "/whoami",
    queryParamKeys: ["currentRealm"]
  });
};
function J0(e) {
  return e.replace(/[_.-](\w|$)/g, function(t, n) {
    return n.toUpperCase();
  });
}
function Fd(e, t = !1) {
  return !e || typeof e != "object" || e instanceof Date || e instanceof RegExp ? e : Array.isArray(e) ? e.map((n) => t ? typeof n == "object" ? Fd(n, t) : n : Fd(n)) : Object.keys(e).reduce((n, r) => {
    const i = J0(r), s = i.charAt(0).toLowerCase() + i.slice(1);
    return n[s] = t ? e[r] : Fd(e[r]), n;
  }, {});
}
function CI(e, t) {
  return typeof e == "string" ? J0(e) : Fd(e, t);
}
const Z0 = "http://127.0.0.1:8180", Q0 = "master", xI = (e) => btoa(Array.from(e, (t) => String.fromCodePoint(t)).join("")), SI = (e) => xI(new TextEncoder().encode(e)), wI = (e) => encodeURIComponent(e).replace(/[!'()*]/g, (t) => `%${t.charCodeAt(0).toString(16).toUpperCase()}`), Tb = (e) => wI(e).replaceAll("%20", "+"), kI = async (e) => {
  const t = e.baseUrl || Z0, n = e.realmName || Q0, r = `${t}/realms/${n}/protocol/openid-connect/token`, i = e.credentials || {}, s = Y0({
    username: i.username,
    password: i.password,
    grant_type: i.grantType,
    client_id: i.clientId,
    totp: i.totp,
    ...i.offlineToken ? { scope: "offline_access" } : {},
    ...i.scopes ? { scope: i.scopes.join(" ") } : {},
    ...i.refreshToken ? {
      refresh_token: i.refreshToken,
      client_secret: i.clientSecret
    } : {}
  }), o = e.requestOptions ?? {}, l = new Headers(o.headers);
  if (i.clientSecret) {
    const u = Tb(i.clientId), p = Tb(i.clientSecret);
    l.set("authorization", `Basic ${SI(`${u}:${p}`)}`);
  }
  l.set("content-type", "application/x-www-form-urlencoded");
  const d = await (await Ii(r, {
    ...o,
    method: "POST",
    headers: l,
    body: s
  })).json();
  return CI(d);
};
class OI {
  // Resources
  users;
  userStorageProvider;
  groups;
  roles;
  organizations;
  clients;
  realms;
  clientScopes;
  clientPolicies;
  identityProviders;
  components;
  serverInfo;
  whoAmI;
  attackDetection;
  authenticationManagement;
  cache;
  // Members
  baseUrl;
  realmName;
  scope;
  accessToken;
  refreshToken;
  #e;
  #n;
  #t;
  constructor(t) {
    this.baseUrl = t?.baseUrl || Z0, this.realmName = t?.realmName || Q0, this.#e = t?.requestOptions, this.#n = t?.requestArgOptions, this.users = new bI(this), this.userStorageProvider = new vI(this), this.groups = new uI(this), this.roles = new hI(this), this.organizations = new fI(this), this.clients = new lI(this), this.realms = new mI(this), this.clientScopes = new cI(this), this.clientPolicies = new oI(this), this.identityProviders = new pI(this), this.components = new dI(this), this.authenticationManagement = new iI(this), this.serverInfo = new gI(this), this.whoAmI = new yI(this), this.attackDetection = new rI(this), this.cache = new sI(this);
  }
  async auth(t) {
    const { accessToken: n, refreshToken: r } = await kI({
      baseUrl: this.baseUrl,
      realmName: this.realmName,
      scope: this.scope,
      credentials: t,
      requestOptions: this.#e
    });
    this.accessToken = n, this.refreshToken = r;
  }
  registerTokenProvider(t) {
    if (this.#t)
      throw new Error("An existing token provider was already registered.");
    this.#t = t;
  }
  setAccessToken(t) {
    this.accessToken = t;
  }
  async getAccessToken() {
    return this.#t ? this.#t.getAccessToken() : this.accessToken;
  }
  getRequestOptions() {
    return this.#e;
  }
  getGlobalRequestArgOptions() {
    return this.#n;
  }
  setConfig(t) {
    typeof t.baseUrl == "string" && t.baseUrl && (this.baseUrl = t.baseUrl), typeof t.realmName == "string" && t.realmName && (this.realmName = t.realmName), this.#e = t.requestOptions;
  }
}
var Xm;
(function(e) {
  e.VERIFY_EMAIL = "VERIFY_EMAIL", e.UPDATE_PROFILE = "UPDATE_PROFILE", e.CONFIGURE_TOTP = "CONFIGURE_TOTP", e.UPDATE_PASSWORD = "UPDATE_PASSWORD", e.TERMS_AND_CONDITIONS = "TERMS_AND_CONDITIONS";
})(Xm || (Xm = {}));
function oe(e, t) {
  var n = {};
  for (var r in e) Object.prototype.hasOwnProperty.call(e, r) && t.indexOf(r) < 0 && (n[r] = e[r]);
  if (e != null && typeof Object.getOwnPropertySymbols == "function")
    for (var i = 0, r = Object.getOwnPropertySymbols(e); i < r.length; i++)
      t.indexOf(r[i]) < 0 && Object.prototype.propertyIsEnumerable.call(e, r[i]) && (n[r[i]] = e[r[i]]);
  return n;
}
function $(...e) {
  const t = [], n = {}.hasOwnProperty;
  return e.filter(Boolean).forEach((r) => {
    const i = typeof r;
    if (i === "string" || i === "number")
      t.push(r);
    else if (Array.isArray(r) && r.length) {
      const s = $(...r);
      s && t.push(s);
    } else if (i === "object")
      for (const s in r)
        n.call(r, s) && r[s] && t.push(s);
  }), t.join(" ");
}
const Gd = {
  content: "pf-v5-c-content",
  modifiers: {
    visited: "pf-m-visited",
    plain: "pf-m-plain"
  }
}, Eb = {
  modifiers: {
    "4xl": "pf-m-4xl",
    "3xl": "pf-m-3xl",
    "2xl": "pf-m-2xl",
    xl: "pf-m-xl",
    lg: "pf-m-lg",
    md: "pf-m-md"
  },
  title: "pf-v5-c-title"
}, TI = {
  name: "--pf-v5-global--breakpoint--sm",
  value: "576px",
  var: "var(--pf-v5-global--breakpoint--sm)"
}, e1 = {
  name: "--pf-v5-global--breakpoint--md",
  value: "768px",
  var: "var(--pf-v5-global--breakpoint--md)"
}, t1 = {
  name: "--pf-v5-global--breakpoint--lg",
  value: "992px",
  var: "var(--pf-v5-global--breakpoint--lg)"
}, ch = {
  name: "--pf-v5-global--breakpoint--xl",
  value: "1200px",
  var: "var(--pf-v5-global--breakpoint--xl)"
}, n1 = {
  name: "--pf-v5-global--breakpoint--2xl",
  value: "1450px",
  var: "var(--pf-v5-global--breakpoint--2xl)"
}, EI = {
  name: "--pf-v5-global--height-breakpoint--sm",
  value: "0",
  var: "var(--pf-v5-global--height-breakpoint--sm)"
}, II = {
  name: "--pf-v5-global--height-breakpoint--md",
  value: "40rem",
  var: "var(--pf-v5-global--height-breakpoint--md)"
}, PI = {
  name: "--pf-v5-global--height-breakpoint--lg",
  value: "48rem",
  var: "var(--pf-v5-global--height-breakpoint--lg)"
}, _I = {
  name: "--pf-v5-global--height-breakpoint--xl",
  value: "60rem",
  var: "var(--pf-v5-global--height-breakpoint--xl)"
}, RI = {
  name: "--pf-v5-global--height-breakpoint--2xl",
  value: "80rem",
  var: "var(--pf-v5-global--height-breakpoint--2xl)"
};
var Pn;
(function(e) {
  e.success = "success", e.error = "error", e.warning = "warning", e.default = "default";
})(Pn || (Pn = {}));
const dn = {
  Tab: "Tab",
  Space: " ",
  Escape: "Escape",
  Enter: "Enter",
  ArrowUp: "ArrowUp",
  ArrowDown: "ArrowDown",
  ArrowLeft: "ArrowLeft",
  ArrowRight: "ArrowRight"
}, Sl = {
  sm: parseInt(TI.value),
  md: parseInt(e1.value),
  lg: parseInt(t1.value),
  xl: parseInt(ch.value),
  "2xl": parseInt(n1.value)
}, wl = {
  sm: parseInt(EI.value),
  md: parseInt(II.value),
  lg: parseInt(PI.value),
  xl: parseInt(_I.value),
  "2xl": parseInt(RI.value)
};
/*!
* tabbable 6.2.0
* @license MIT, https://github.com/focus-trap/tabbable/blob/master/LICENSE
*/
var a1 = ["input:not([inert])", "select:not([inert])", "textarea:not([inert])", "a[href]:not([inert])", "button:not([inert])", "[tabindex]:not(slot):not([inert])", "audio[controls]:not([inert])", "video[controls]:not([inert])", '[contenteditable]:not([contenteditable="false"]):not([inert])', "details>summary:first-of-type:not([inert])", "details:not([inert])"], Wd = /* @__PURE__ */ a1.join(","), r1 = typeof Element > "u", _s = r1 ? function() {
} : Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector, Xd = !r1 && Element.prototype.getRootNode ? function(e) {
  var t;
  return e == null || (t = e.getRootNode) === null || t === void 0 ? void 0 : t.call(e);
} : function(e) {
  return e?.ownerDocument;
}, Yd = function e(t, n) {
  var r;
  n === void 0 && (n = !0);
  var i = t == null || (r = t.getAttribute) === null || r === void 0 ? void 0 : r.call(t, "inert"), s = i === "" || i === "true", o = s || n && t && e(t.parentNode);
  return o;
}, AI = function(t) {
  var n, r = t == null || (n = t.getAttribute) === null || n === void 0 ? void 0 : n.call(t, "contenteditable");
  return r === "" || r === "true";
}, i1 = function(t, n, r) {
  if (Yd(t))
    return [];
  var i = Array.prototype.slice.apply(t.querySelectorAll(Wd));
  return n && _s.call(t, Wd) && i.unshift(t), i = i.filter(r), i;
}, s1 = function e(t, n, r) {
  for (var i = [], s = Array.from(t); s.length; ) {
    var o = s.shift();
    if (!Yd(o, !1))
      if (o.tagName === "SLOT") {
        var l = o.assignedElements(), c = l.length ? l : o.children, d = e(c, !0, r);
        r.flatten ? i.push.apply(i, d) : i.push({
          scopeParent: o,
          candidates: d
        });
      } else {
        var u = _s.call(o, Wd);
        u && r.filter(o) && (n || !t.includes(o)) && i.push(o);
        var p = o.shadowRoot || // check for an undisclosed shadow
        typeof r.getShadowRoot == "function" && r.getShadowRoot(o), m = !Yd(p, !1) && (!r.shadowRootFilter || r.shadowRootFilter(o));
        if (p && m) {
          var f = e(p === !0 ? o.children : p.children, !0, r);
          r.flatten ? i.push.apply(i, f) : i.push({
            scopeParent: o,
            candidates: f
          });
        } else
          s.unshift.apply(s, o.children);
      }
  }
  return i;
}, o1 = function(t) {
  return !isNaN(parseInt(t.getAttribute("tabindex"), 10));
}, xs = function(t) {
  if (!t)
    throw new Error("No node provided");
  return t.tabIndex < 0 && (/^(AUDIO|VIDEO|DETAILS)$/.test(t.tagName) || AI(t)) && !o1(t) ? 0 : t.tabIndex;
}, LI = function(t, n) {
  var r = xs(t);
  return r < 0 && n && !o1(t) ? 0 : r;
}, NI = function(t, n) {
  return t.tabIndex === n.tabIndex ? t.documentOrder - n.documentOrder : t.tabIndex - n.tabIndex;
}, l1 = function(t) {
  return t.tagName === "INPUT";
}, DI = function(t) {
  return l1(t) && t.type === "hidden";
}, MI = function(t) {
  var n = t.tagName === "DETAILS" && Array.prototype.slice.apply(t.children).some(function(r) {
    return r.tagName === "SUMMARY";
  });
  return n;
}, FI = function(t, n) {
  for (var r = 0; r < t.length; r++)
    if (t[r].checked && t[r].form === n)
      return t[r];
}, $I = function(t) {
  if (!t.name)
    return !0;
  var n = t.form || Xd(t), r = function(l) {
    return n.querySelectorAll('input[type="radio"][name="' + l + '"]');
  }, i;
  if (typeof window < "u" && typeof window.CSS < "u" && typeof window.CSS.escape == "function")
    i = r(window.CSS.escape(t.name));
  else
    try {
      i = r(t.name);
    } catch (o) {
      return console.error("Looks like you have a radio button with a name attribute containing invalid CSS selector characters and need the CSS.escape polyfill: %s", o.message), !1;
    }
  var s = FI(i, t.form);
  return !s || s === t;
}, jI = function(t) {
  return l1(t) && t.type === "radio";
}, BI = function(t) {
  return jI(t) && !$I(t);
}, UI = function(t) {
  var n, r = t && Xd(t), i = (n = r) === null || n === void 0 ? void 0 : n.host, s = !1;
  if (r && r !== t) {
    var o, l, c;
    for (s = !!((o = i) !== null && o !== void 0 && (l = o.ownerDocument) !== null && l !== void 0 && l.contains(i) || t != null && (c = t.ownerDocument) !== null && c !== void 0 && c.contains(t)); !s && i; ) {
      var d, u, p;
      r = Xd(i), i = (d = r) === null || d === void 0 ? void 0 : d.host, s = !!((u = i) !== null && u !== void 0 && (p = u.ownerDocument) !== null && p !== void 0 && p.contains(i));
    }
  }
  return s;
}, Ib = function(t) {
  var n = t.getBoundingClientRect(), r = n.width, i = n.height;
  return r === 0 && i === 0;
}, VI = function(t, n) {
  var r = n.displayCheck, i = n.getShadowRoot;
  if (getComputedStyle(t).visibility === "hidden")
    return !0;
  var s = _s.call(t, "details>summary:first-of-type"), o = s ? t.parentElement : t;
  if (_s.call(o, "details:not([open]) *"))
    return !0;
  if (!r || r === "full" || r === "legacy-full") {
    if (typeof i == "function") {
      for (var l = t; t; ) {
        var c = t.parentElement, d = Xd(t);
        if (c && !c.shadowRoot && i(c) === !0)
          return Ib(t);
        t.assignedSlot ? t = t.assignedSlot : !c && d !== t.ownerDocument ? t = d.host : t = c;
      }
      t = l;
    }
    if (UI(t))
      return !t.getClientRects().length;
    if (r !== "legacy-full")
      return !0;
  } else if (r === "non-zero-area")
    return Ib(t);
  return !1;
}, KI = function(t) {
  if (/^(INPUT|BUTTON|SELECT|TEXTAREA)$/.test(t.tagName))
    for (var n = t.parentElement; n; ) {
      if (n.tagName === "FIELDSET" && n.disabled) {
        for (var r = 0; r < n.children.length; r++) {
          var i = n.children.item(r);
          if (i.tagName === "LEGEND")
            return _s.call(n, "fieldset[disabled] *") ? !0 : !i.contains(t);
        }
        return !0;
      }
      n = n.parentElement;
    }
  return !1;
}, Jd = function(t, n) {
  return !(n.disabled || // we must do an inert look up to filter out any elements inside an inert ancestor
  //  because we're limited in the type of selectors we can use in JSDom (see related
  //  note related to `candidateSelectors`)
  Yd(n) || DI(n) || VI(n, t) || // For a details element with a summary, the summary element gets the focus
  MI(n) || KI(n));
}, Ym = function(t, n) {
  return !(BI(n) || xs(n) < 0 || !Jd(t, n));
}, HI = function(t) {
  var n = parseInt(t.getAttribute("tabindex"), 10);
  return !!(isNaN(n) || n >= 0);
}, zI = function e(t) {
  var n = [], r = [];
  return t.forEach(function(i, s) {
    var o = !!i.scopeParent, l = o ? i.scopeParent : i, c = LI(l, o), d = o ? e(i.candidates) : l;
    c === 0 ? o ? n.push.apply(n, d) : n.push(l) : r.push({
      documentOrder: s,
      tabIndex: c,
      item: i,
      isScope: o,
      content: d
    });
  }), r.sort(NI).reduce(function(i, s) {
    return s.isScope ? i.push.apply(i, s.content) : i.push(s.content), i;
  }, []).concat(n);
}, qI = function(t, n) {
  n = n || {};
  var r;
  return n.getShadowRoot ? r = s1([t], n.includeContainer, {
    filter: Ym.bind(null, n),
    flatten: !1,
    getShadowRoot: n.getShadowRoot,
    shadowRootFilter: HI
  }) : r = i1(t, n.includeContainer, Ym.bind(null, n)), zI(r);
}, GI = function(t, n) {
  n = n || {};
  var r;
  return n.getShadowRoot ? r = s1([t], n.includeContainer, {
    filter: Jd.bind(null, n),
    flatten: !0,
    getShadowRoot: n.getShadowRoot
  }) : r = i1(t, n.includeContainer, Jd.bind(null, n)), r;
}, so = function(t, n) {
  if (n = n || {}, !t)
    throw new Error("No node provided");
  return _s.call(t, Wd) === !1 ? !1 : Ym(n, t);
}, WI = /* @__PURE__ */ a1.concat("iframe").join(","), Vp = function(t, n) {
  if (n = n || {}, !t)
    throw new Error("No node provided");
  return _s.call(t, WI) === !1 ? !1 : Jd(n, t);
};
/*!
* focus-trap 7.5.2
* @license MIT, https://github.com/focus-trap/focus-trap/blob/master/LICENSE
*/
function Pb(e, t) {
  var n = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(e);
    t && (r = r.filter(function(i) {
      return Object.getOwnPropertyDescriptor(e, i).enumerable;
    })), n.push.apply(n, r);
  }
  return n;
}
function _b(e) {
  for (var t = 1; t < arguments.length; t++) {
    var n = arguments[t] != null ? arguments[t] : {};
    t % 2 ? Pb(Object(n), !0).forEach(function(r) {
      XI(e, r, n[r]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Pb(Object(n)).forEach(function(r) {
      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(n, r));
    });
  }
  return e;
}
function XI(e, t, n) {
  return t = JI(t), t in e ? Object.defineProperty(e, t, {
    value: n,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : e[t] = n, e;
}
function YI(e, t) {
  if (typeof e != "object" || e === null) return e;
  var n = e[Symbol.toPrimitive];
  if (n !== void 0) {
    var r = n.call(e, t || "default");
    if (typeof r != "object") return r;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (t === "string" ? String : Number)(e);
}
function JI(e) {
  var t = YI(e, "string");
  return typeof t == "symbol" ? t : String(t);
}
var Rb = {
  activateTrap: function(t, n) {
    if (t.length > 0) {
      var r = t[t.length - 1];
      r !== n && r.pause();
    }
    var i = t.indexOf(n);
    i === -1 || t.splice(i, 1), t.push(n);
  },
  deactivateTrap: function(t, n) {
    var r = t.indexOf(n);
    r !== -1 && t.splice(r, 1), t.length > 0 && t[t.length - 1].unpause();
  }
}, ZI = function(t) {
  return t.tagName && t.tagName.toLowerCase() === "input" && typeof t.select == "function";
}, QI = function(t) {
  return t?.key === "Escape" || t?.key === "Esc" || t?.keyCode === 27;
}, Ul = function(t) {
  return t?.key === "Tab" || t?.keyCode === 9;
}, e2 = function(t) {
  return Ul(t) && !t.shiftKey;
}, t2 = function(t) {
  return Ul(t) && t.shiftKey;
}, Ab = function(t) {
  return setTimeout(t, 0);
}, Lb = function(t, n) {
  var r = -1;
  return t.every(function(i, s) {
    return n(i) ? (r = s, !1) : !0;
  }), r;
}, kl = function(t) {
  for (var n = arguments.length, r = new Array(n > 1 ? n - 1 : 0), i = 1; i < n; i++)
    r[i - 1] = arguments[i];
  return typeof t == "function" ? t.apply(void 0, r) : t;
}, hd = function(t) {
  return t.target.shadowRoot && typeof t.composedPath == "function" ? t.composedPath()[0] : t.target;
}, n2 = [], a2 = function(t, n) {
  var r = n?.document || document, i = n?.trapStack || n2, s = _b({
    returnFocusOnDeactivate: !0,
    escapeDeactivates: !0,
    delayInitialFocus: !0,
    isKeyForward: e2,
    isKeyBackward: t2
  }, n), o = {
    // containers given to createFocusTrap()
    // @type {Array<HTMLElement>}
    containers: [],
    // list of objects identifying tabbable nodes in `containers` in the trap
    // NOTE: it's possible that a group has no tabbable nodes if nodes get removed while the trap
    //  is active, but the trap should never get to a state where there isn't at least one group
    //  with at least one tabbable node in it (that would lead to an error condition that would
    //  result in an error being thrown)
    // @type {Array<{
    //   container: HTMLElement,
    //   tabbableNodes: Array<HTMLElement>, // empty if none
    //   focusableNodes: Array<HTMLElement>, // empty if none
    //   posTabIndexesFound: boolean,
    //   firstTabbableNode: HTMLElement|undefined,
    //   lastTabbableNode: HTMLElement|undefined,
    //   firstDomTabbableNode: HTMLElement|undefined,
    //   lastDomTabbableNode: HTMLElement|undefined,
    //   nextTabbableNode: (node: HTMLElement, forward: boolean) => HTMLElement|undefined
    // }>}
    containerGroups: [],
    // same order/length as `containers` list
    // references to objects in `containerGroups`, but only those that actually have
    //  tabbable nodes in them
    // NOTE: same order as `containers` and `containerGroups`, but __not necessarily__
    //  the same length
    tabbableGroups: [],
    nodeFocusedBeforeActivation: null,
    mostRecentlyFocusedNode: null,
    active: !1,
    paused: !1,
    // timer ID for when delayInitialFocus is true and initial focus in this trap
    //  has been delayed during activation
    delayInitialFocusTimer: void 0,
    // the most recent KeyboardEvent for the configured nav key (typically [SHIFT+]TAB), if any
    recentNavEvent: void 0
  }, l, c = function(k, P, D) {
    return k && k[P] !== void 0 ? k[P] : s[D || P];
  }, d = function(k, P) {
    var D = typeof P?.composedPath == "function" ? P.composedPath() : void 0;
    return o.containerGroups.findIndex(function(F) {
      var A = F.container, M = F.tabbableNodes;
      return A.contains(k) || D?.includes(A) || M.find(function(V) {
        return V === k;
      });
    });
  }, u = function(k) {
    var P = s[k];
    if (typeof P == "function") {
      for (var D = arguments.length, F = new Array(D > 1 ? D - 1 : 0), A = 1; A < D; A++)
        F[A - 1] = arguments[A];
      P = P.apply(void 0, F);
    }
    if (P === !0 && (P = void 0), !P) {
      if (P === void 0 || P === !1)
        return P;
      throw new Error("`".concat(k, "` was specified but was not a node, or did not return a node"));
    }
    var M = P;
    if (typeof P == "string" && (M = r.querySelector(P), !M))
      throw new Error("`".concat(k, "` as selector refers to no known node"));
    return M;
  }, p = function() {
    var k = u("initialFocus");
    if (k === !1)
      return !1;
    if (k === void 0 || !Vp(k, s.tabbableOptions))
      if (d(r.activeElement) >= 0)
        k = r.activeElement;
      else {
        var P = o.tabbableGroups[0], D = P && P.firstTabbableNode;
        k = D || u("fallbackFocus");
      }
    if (!k)
      throw new Error("Your focus-trap needs to have at least one focusable element");
    return k;
  }, m = function() {
    if (o.containerGroups = o.containers.map(function(k) {
      var P = qI(k, s.tabbableOptions), D = GI(k, s.tabbableOptions), F = P.length > 0 ? P[0] : void 0, A = P.length > 0 ? P[P.length - 1] : void 0, M = D.find(function(G) {
        return so(G);
      }), V = D.slice().reverse().find(function(G) {
        return so(G);
      }), U = !!P.find(function(G) {
        return xs(G) > 0;
      });
      return {
        container: k,
        tabbableNodes: P,
        focusableNodes: D,
        /** True if at least one node with positive `tabindex` was found in this container. */
        posTabIndexesFound: U,
        /** First tabbable node in container, __tabindex__ order; `undefined` if none. */
        firstTabbableNode: F,
        /** Last tabbable node in container, __tabindex__ order; `undefined` if none. */
        lastTabbableNode: A,
        // NOTE: DOM order is NOT NECESSARILY "document position" order, but figuring that out
        //  would require more than just https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition
        //  because that API doesn't work with Shadow DOM as well as it should (@see
        //  https://github.com/whatwg/dom/issues/320) and since this first/last is only needed, so far,
        //  to address an edge case related to positive tabindex support, this seems like a much easier,
        //  "close enough most of the time" alternative for positive tabindexes which should generally
        //  be avoided anyway...
        /** First tabbable node in container, __DOM__ order; `undefined` if none. */
        firstDomTabbableNode: M,
        /** Last tabbable node in container, __DOM__ order; `undefined` if none. */
        lastDomTabbableNode: V,
        /**
         * Finds the __tabbable__ node that follows the given node in the specified direction,
         *  in this container, if any.
         * @param {HTMLElement} node
         * @param {boolean} [forward] True if going in forward tab order; false if going
         *  in reverse.
         * @returns {HTMLElement|undefined} The next tabbable node, if any.
         */
        nextTabbableNode: function(q) {
          var L = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0, K = P.indexOf(q);
          return K < 0 ? L ? D.slice(D.indexOf(q) + 1).find(function(B) {
            return so(B);
          }) : D.slice(0, D.indexOf(q)).reverse().find(function(B) {
            return so(B);
          }) : P[K + (L ? 1 : -1)];
        }
      };
    }), o.tabbableGroups = o.containerGroups.filter(function(k) {
      return k.tabbableNodes.length > 0;
    }), o.tabbableGroups.length <= 0 && !u("fallbackFocus"))
      throw new Error("Your focus-trap must have at least one container with at least one tabbable node in it at all times");
    if (o.containerGroups.find(function(k) {
      return k.posTabIndexesFound;
    }) && o.containerGroups.length > 1)
      throw new Error("At least one node with a positive tabindex was found in one of your focus-trap's multiple containers. Positive tabindexes are only supported in single-container focus-traps.");
  }, f = function I(k) {
    if (k !== !1 && k !== r.activeElement) {
      if (!k || !k.focus) {
        I(p());
        return;
      }
      k.focus({
        preventScroll: !!s.preventScroll
      }), o.mostRecentlyFocusedNode = k, ZI(k) && k.select();
    }
  }, g = function(k) {
    var P = u("setReturnFocus", k);
    return P || (P === !1 ? !1 : k);
  }, b = function(k) {
    var P = k.target, D = k.event, F = k.isBackward, A = F === void 0 ? !1 : F;
    P = P || hd(D), m();
    var M = null;
    if (o.tabbableGroups.length > 0) {
      var V = d(P, D), U = V >= 0 ? o.containerGroups[V] : void 0;
      if (V < 0)
        A ? M = o.tabbableGroups[o.tabbableGroups.length - 1].lastTabbableNode : M = o.tabbableGroups[0].firstTabbableNode;
      else if (A) {
        var G = Lb(o.tabbableGroups, function(W) {
          var Q = W.firstTabbableNode;
          return P === Q;
        });
        if (G < 0 && (U.container === P || Vp(P, s.tabbableOptions) && !so(P, s.tabbableOptions) && !U.nextTabbableNode(P, !1)) && (G = V), G >= 0) {
          var q = G === 0 ? o.tabbableGroups.length - 1 : G - 1, L = o.tabbableGroups[q];
          M = xs(P) >= 0 ? L.lastTabbableNode : L.lastDomTabbableNode;
        } else Ul(D) || (M = U.nextTabbableNode(P, !1));
      } else {
        var K = Lb(o.tabbableGroups, function(W) {
          var Q = W.lastTabbableNode;
          return P === Q;
        });
        if (K < 0 && (U.container === P || Vp(P, s.tabbableOptions) && !so(P, s.tabbableOptions) && !U.nextTabbableNode(P)) && (K = V), K >= 0) {
          var B = K === o.tabbableGroups.length - 1 ? 0 : K + 1, j = o.tabbableGroups[B];
          M = xs(P) >= 0 ? j.firstTabbableNode : j.firstDomTabbableNode;
        } else Ul(D) || (M = U.nextTabbableNode(P));
      }
    } else
      M = u("fallbackFocus");
    return M;
  }, v = function(k) {
    var P = hd(k);
    if (!(d(P, k) >= 0)) {
      if (kl(s.clickOutsideDeactivates, k)) {
        l.deactivate({
          // NOTE: by setting `returnFocus: false`, deactivate() will do nothing,
          //  which will result in the outside click setting focus to the node
          //  that was clicked (and if not focusable, to "nothing"); by setting
          //  `returnFocus: true`, we'll attempt to re-focus the node originally-focused
          //  on activation (or the configured `setReturnFocus` node), whether the
          //  outside click was on a focusable node or not
          returnFocus: s.returnFocusOnDeactivate
        });
        return;
      }
      kl(s.allowOutsideClick, k) || k.preventDefault();
    }
  }, y = function(k) {
    var P = hd(k), D = d(P, k) >= 0;
    if (D || P instanceof Document)
      D && (o.mostRecentlyFocusedNode = P);
    else {
      k.stopImmediatePropagation();
      var F, A = !0;
      if (o.mostRecentlyFocusedNode)
        if (xs(o.mostRecentlyFocusedNode) > 0) {
          var M = d(o.mostRecentlyFocusedNode), V = o.containerGroups[M].tabbableNodes;
          if (V.length > 0) {
            var U = V.findIndex(function(G) {
              return G === o.mostRecentlyFocusedNode;
            });
            U >= 0 && (s.isKeyForward(o.recentNavEvent) ? U + 1 < V.length && (F = V[U + 1], A = !1) : U - 1 >= 0 && (F = V[U - 1], A = !1));
          }
        } else
          o.containerGroups.some(function(G) {
            return G.tabbableNodes.some(function(q) {
              return xs(q) > 0;
            });
          }) || (A = !1);
      else
        A = !1;
      A && (F = b({
        // move FROM the MRU node, not event-related node (which will be the node that is
        //  outside the trap causing the focus escape we're trying to fix)
        target: o.mostRecentlyFocusedNode,
        isBackward: s.isKeyBackward(o.recentNavEvent)
      })), f(F || o.mostRecentlyFocusedNode || p());
    }
    o.recentNavEvent = void 0;
  }, x = function(k) {
    var P = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
    o.recentNavEvent = k;
    var D = b({
      event: k,
      isBackward: P
    });
    D && (Ul(k) && k.preventDefault(), f(D));
  }, w = function(k) {
    if (QI(k) && kl(s.escapeDeactivates, k) !== !1) {
      k.preventDefault(), l.deactivate();
      return;
    }
    (s.isKeyForward(k) || s.isKeyBackward(k)) && x(k, s.isKeyBackward(k));
  }, R = function(k) {
    var P = hd(k);
    d(P, k) >= 0 || kl(s.clickOutsideDeactivates, k) || kl(s.allowOutsideClick, k) || (k.preventDefault(), k.stopImmediatePropagation());
  }, S = function() {
    if (o.active)
      return Rb.activateTrap(i, l), o.delayInitialFocusTimer = s.delayInitialFocus ? Ab(function() {
        f(p());
      }) : f(p()), r.addEventListener("focusin", y, !0), r.addEventListener("mousedown", v, {
        capture: !0,
        passive: !1
      }), r.addEventListener("touchstart", v, {
        capture: !0,
        passive: !1
      }), r.addEventListener("click", R, {
        capture: !0,
        passive: !1
      }), r.addEventListener("keydown", w, {
        capture: !0,
        passive: !1
      }), l;
  }, _ = function() {
    if (o.active)
      return r.removeEventListener("focusin", y, !0), r.removeEventListener("mousedown", v, !0), r.removeEventListener("touchstart", v, !0), r.removeEventListener("click", R, !0), r.removeEventListener("keydown", w, !0), l;
  }, O = function(k) {
    var P = k.some(function(D) {
      var F = Array.from(D.removedNodes);
      return F.some(function(A) {
        return A === o.mostRecentlyFocusedNode;
      });
    });
    P && f(p());
  }, E = typeof window < "u" && "MutationObserver" in window ? new MutationObserver(O) : void 0, T = function() {
    E && (E.disconnect(), o.active && !o.paused && o.containers.map(function(k) {
      E.observe(k, {
        subtree: !0,
        childList: !0
      });
    }));
  };
  return l = {
    get active() {
      return o.active;
    },
    get paused() {
      return o.paused;
    },
    activate: function(k) {
      if (o.active)
        return this;
      var P = c(k, "onActivate"), D = c(k, "onPostActivate"), F = c(k, "checkCanFocusTrap");
      F || m(), o.active = !0, o.paused = !1, o.nodeFocusedBeforeActivation = r.activeElement, P?.();
      var A = function() {
        F && m(), S(), T(), D?.();
      };
      return F ? (F(o.containers.concat()).then(A, A), this) : (A(), this);
    },
    deactivate: function(k) {
      if (!o.active)
        return this;
      var P = _b({
        onDeactivate: s.onDeactivate,
        onPostDeactivate: s.onPostDeactivate,
        checkCanReturnFocus: s.checkCanReturnFocus
      }, k);
      clearTimeout(o.delayInitialFocusTimer), o.delayInitialFocusTimer = void 0, _(), o.active = !1, o.paused = !1, T(), Rb.deactivateTrap(i, l);
      var D = c(P, "onDeactivate"), F = c(P, "onPostDeactivate"), A = c(P, "checkCanReturnFocus"), M = c(P, "returnFocus", "returnFocusOnDeactivate");
      D?.();
      var V = function() {
        Ab(function() {
          M && f(g(o.nodeFocusedBeforeActivation)), F?.();
        });
      };
      return M && A ? (A(g(o.nodeFocusedBeforeActivation)).then(V, V), this) : (V(), this);
    },
    pause: function(k) {
      if (o.paused || !o.active)
        return this;
      var P = c(k, "onPause"), D = c(k, "onPostPause");
      return o.paused = !0, P?.(), _(), T(), D?.(), this;
    },
    unpause: function(k) {
      if (!o.paused || !o.active)
        return this;
      var P = c(k, "onUnpause"), D = c(k, "onPostUnpause");
      return o.paused = !1, P?.(), m(), S(), T(), D?.(), this;
    },
    updateContainerElements: function(k) {
      var P = [].concat(k).filter(Boolean);
      return o.containers = P.map(function(D) {
        return typeof D == "string" ? r.querySelector(D) : D;
      }), o.active && m(), T(), this;
    }
  }, l.updateContainerElements(t), l;
};
function r2(e) {
  const t = Ct(e);
  t.current = e, He(() => () => {
    t.current();
  }, []);
}
const Hu = rh(function(t, n) {
  var { active: r = !0, paused: i = !1, focusTrapOptions: s = {}, preventScrollOnDeactivate: o = !1 } = t, l = oe(t, ["active", "paused", "focusTrapOptions", "preventScrollOnDeactivate"]);
  const c = Ct(null);
  ih(n, () => c.current);
  const d = Ct(null);
  He(() => {
    const p = a2(c.current, Object.assign(Object.assign({}, s), { returnFocusOnDeactivate: !1 }));
    return d.current = p, () => {
      p.deactivate();
    };
  }, []), He(() => {
    const p = d.current;
    r ? p?.activate() : p?.deactivate();
  }, [r]), He(() => {
    const p = d.current;
    i ? p?.pause() : p?.unpause();
  }, [i]);
  const u = Ct(typeof document < "u" ? document.activeElement : null);
  return r2(() => {
    s.returnFocusOnDeactivate !== !1 && u.current instanceof HTMLElement && u.current.focus({
      preventScroll: o
    });
  }), re.createElement("div", Object.assign({ ref: c }, l));
});
Hu.displayName = "FocusTrap";
function ic(e) {
  return e[0].toUpperCase() + e.substring(1);
}
function Si(e = "pf") {
  const t = (/* @__PURE__ */ new Date()).getTime() + Math.random().toString(36).slice(2);
  return `${e}-${t}`;
}
function dh(e, t) {
  let n;
  return (...r) => {
    clearTimeout(n), n = setTimeout(() => e.apply(this, r), t);
  };
}
function fi(e, t, n, r = !1) {
  if (!e || !t)
    return !1;
  const i = e.getBoundingClientRect(), s = t.getBoundingClientRect(), o = Math.ceil(i.left), l = Math.floor(i.right), c = Math.ceil(s.left), d = Math.floor(s.right), u = c >= o && d <= l, p = !r && i.width < s.width && (c < o && d > o || d > l && c < l);
  return u || p;
}
function uh(e, t) {
  return e.replace(/\${(.*?)}/g, (n, r) => t[r] || "");
}
function i2(e, t, n) {
  return n || (n = `${t}s`), `${e || 0} ${e === 1 ? t : n}`;
}
const _o = (e, t) => Object.entries(e || {}).reduce((n, [r, i]) => r === "default" ? Object.assign(Object.assign({}, n), { [t]: i }) : Object.assign(Object.assign({}, n), { [`${t}-on-${r}`]: i }), {}), ut = (e, t, n = "", r, i) => {
  if (!e)
    return "";
  if (r && !i) {
    if (r in e)
      return t.modifiers[Vl(`${n}${e[r]}`)];
    const s = ["2xl", "xl", "lg", "md", "sm", "default"], o = s.indexOf(r);
    for (let l = o; l < s.length; l++)
      if (s[l] in e)
        return t.modifiers[Vl(`${n}${e[s[l]]}`)];
    return "";
  }
  return Object.entries(e || {}).map(([s, o]) => `${n}${o}${s !== "default" ? `-on-${s}` : ""}${i && s !== "default" ? "-height" : ""}`).map(Vl).map((s) => s.replace(/-?(\dxl)/gi, (o, l) => `_${l}`)).map((s) => t.modifiers[s]).filter(Boolean).join(" ");
}, c1 = (e) => e === null ? null : e >= wl["2xl"] ? "2xl" : e >= wl.xl ? "xl" : e >= wl.lg ? "lg" : e >= wl.md ? "md" : e >= wl.sm ? "sm" : "default", d1 = (e) => e === null ? null : e >= Sl["2xl"] ? "2xl" : e >= Sl.xl ? "xl" : e >= Sl.lg ? "lg" : e >= Sl.md ? "md" : e >= Sl.sm ? "sm" : "default", s2 = (e) => e.toUpperCase().replace("-", "").replace("_", ""), Vl = (e) => e.replace(/([-_][a-z])/gi, s2), Sn = !!(typeof window < "u" && window.document && window.document.createElement), Nb = (e, t) => {
  const n = getComputedStyle(t), r = () => {
    let o = "";
    const l = {
      "50%": "ultra-condensed",
      "62.5%": "extra-condensed",
      "75%": "condensed",
      "87.5%": "semi-condensed",
      "100%": "normal",
      "112.5%": "semi-expanded",
      "125%": "expanded",
      "150%": "extra-expanded",
      "200%": "ultra-expanded"
    };
    let c;
    return n.fontStretch in l ? c = l[n.fontStretch] : c = "normal", o = n.fontStyle + " " + n.fontVariant + " " + n.fontWeight + " " + c + " " + n.fontSize + "/" + n.lineHeight + " " + n.fontFamily, o;
  }, s = document.createElement("canvas").getContext("2d");
  return s.font = n.font || r(), s.measureText(e).width;
}, o2 = (e) => {
  const t = getComputedStyle(e);
  let n = e.clientWidth, r = e.clientHeight;
  return r -= parseFloat(t.paddingTop) + parseFloat(t.paddingBottom), n -= parseFloat(t.paddingLeft) + parseFloat(t.paddingRight), { height: r, width: n };
}, l2 = (e, t) => {
  const n = o2(e).width;
  let r = t;
  if (Nb(t, e) > n) {
    for (; Nb(`...${r}`, e) > n; )
      r = r.substring(1);
    e.value ? e.value = `...${r}` : e.innerText = `...${r}`;
  } else
    e.value ? e.value = t : e.innerText = t;
}, gd = (e) => {
  e.forEach((t) => {
    t.current && clearTimeout(t.current);
  });
}, Ji = (e, t = "ltr") => {
  if (!e)
    return t;
  const n = getComputedStyle(e).getPropertyValue("direction");
  return ["ltr", "rtl"].includes(n) ? n : t;
};
let c2 = 0;
function d2() {
  return typeof crypto < "u" && crypto.randomUUID ? crypto.randomUUID() : Si();
}
class $a extends h.Component {
  constructor() {
    super(...arguments), this.uniqueElement = this.props.isRandom ? d2() : c2++, this.id = `${this.props.prefix}${this.uniqueElement}`;
  }
  render() {
    return this.props.children(this.id);
  }
}
$a.displayName = "GenerateId";
$a.defaultProps = {
  prefix: "pf-random-id-",
  isRandom: !1
};
const u1 = "*";
let u2 = 0;
const Db = "OUIA-Generated-", Kp = {};
function Yn(e, t, n = !0) {
  return {
    "data-ouia-component-type": `PF5/${e}`,
    "data-ouia-safe": n,
    "data-ouia-component-id": t
  };
}
const Ka = (e, t, n = !0, r) => ({
  "data-ouia-component-type": `PF5/${e}`,
  "data-ouia-safe": n,
  "data-ouia-component-id": p2(e, t, r)
}), p2 = (e, t, n) => {
  const r = et(() => cr(e, n), [e, n]);
  return t ?? r;
};
function cr(e, t) {
  try {
    let n;
    return typeof window < "u" ? n = `${window.location.href}-${e}-${t || ""}` : n = `${e}-${t || ""}`, Kp[n] || (Kp[n] = 0), `${Db}${e}-${t ? `${t}-` : ""}${++Kp[n]}`;
  } catch {
    return `${Db}${e}-${t ? `${t}-` : ""}${++u2}`;
  }
}
function sc(e) {
  const t = e.getBoundingClientRect();
  return {
    width: t.width,
    height: t.height,
    top: t.top,
    right: t.right,
    bottom: t.bottom,
    left: t.left,
    x: t.left,
    y: t.top
  };
}
function Zr(e) {
  if (e.toString() !== "[object Window]") {
    const t = e.ownerDocument;
    return t ? t.defaultView : window;
  }
  return e;
}
function ph(e) {
  const t = Zr(e), n = t.pageXOffset, r = t.pageYOffset;
  return {
    scrollLeft: n,
    scrollTop: r
  };
}
function oc(e) {
  const t = Zr(e).Element;
  return e instanceof t || e instanceof Element;
}
function Gr(e) {
  const t = Zr(e).HTMLElement;
  return e instanceof t || e instanceof HTMLElement;
}
function m2(e) {
  return {
    scrollLeft: e.scrollLeft,
    scrollTop: e.scrollTop
  };
}
function f2(e) {
  return e === Zr(e) || !Gr(e) ? ph(e) : m2(e);
}
function kr(e) {
  return e ? (e.nodeName || "").toLowerCase() : null;
}
function Pi(e) {
  return (oc(e) ? e.ownerDocument : e.document).documentElement;
}
function mh(e) {
  return sc(Pi(e)).left + ph(e).scrollLeft;
}
function vi(e) {
  return Zr(e).getComputedStyle(e);
}
function fh(e) {
  const { overflow: t, overflowX: n, overflowY: r } = vi(e);
  return /auto|scroll|overlay|hidden/.test(t + r + n);
}
function h2(e, t, n = !1) {
  const r = Pi(t), i = sc(e), s = Gr(t);
  let o = { scrollLeft: 0, scrollTop: 0 }, l = { x: 0, y: 0 };
  return (s || !s && !n) && ((kr(t) !== "body" || // https://github.com/popperjs/popper-core/issues/1078
  fh(r)) && (o = f2(t)), Gr(t) ? (l = sc(t), l.x += t.clientLeft, l.y += t.clientTop) : r && (l.x = mh(r))), {
    x: i.left + o.scrollLeft - l.x,
    y: i.top + o.scrollTop - l.y,
    width: i.width,
    height: i.height
  };
}
function hh(e) {
  return {
    x: e.offsetLeft,
    y: e.offsetTop,
    width: e.offsetWidth,
    height: e.offsetHeight
  };
}
function zu(e) {
  return kr(e) === "html" ? e : (
    // $FlowFixMe: this is a quicker (but less type safe) way to save quite some bytes from the bundle
    e.assignedSlot || // step into the shadow DOM of the parent of a slotted node
    e.parentNode || // DOM Element detected
    // $FlowFixMe: need a better way to handle this...
    e.host || // ShadowRoot detected
    // $FlowFixMe: HTMLElement is a Node
    Pi(e)
  );
}
function p1(e) {
  return ["html", "body", "#document"].indexOf(kr(e)) >= 0 ? e.ownerDocument.body : Gr(e) && fh(e) ? e : p1(zu(e));
}
function Kl(e, t = []) {
  const n = p1(e), r = kr(n) === "body", i = Zr(n), s = r ? [i].concat(i.visualViewport || [], fh(n) ? n : []) : n, o = t.concat(s);
  return r ? o : o.concat(Kl(zu(s)));
}
function g2(e) {
  return ["table", "td", "th"].indexOf(kr(e)) >= 0;
}
function Mb(e) {
  if (!Gr(e) || // https://github.com/popperjs/popper-core/issues/837
  vi(e).position === "fixed")
    return null;
  const t = e.offsetParent;
  if (t) {
    const n = Pi(t);
    if (kr(t) === "body" && vi(t).position === "static" && vi(n).position !== "static")
      return n;
  }
  return t;
}
function b2(e) {
  let t = zu(e);
  for (; Gr(t) && ["html", "body"].indexOf(kr(t)) < 0; ) {
    const n = vi(t);
    if (n.transform !== "none" || n.perspective !== "none" || n.willChange && n.willChange !== "auto")
      return t;
    t = t.parentNode;
  }
  return null;
}
function Uc(e) {
  const t = Zr(e);
  let n = Mb(e);
  for (; n && g2(n) && vi(n).position === "static"; )
    n = Mb(n);
  return n && kr(n) === "body" && vi(n).position === "static" ? t : n || b2(e) || t;
}
const er = "top", Cr = "bottom", xr = "right", tr = "left", gh = "auto", Vc = [er, Cr, xr, tr], Ro = "start", bh = "end", v2 = "clippingParents", m1 = "viewport", Ol = "popper", y2 = "reference", Fb = Vc.reduce((e, t) => e.concat([`${t}-${Ro}`, `${t}-${bh}`]), []), f1 = [...Vc, gh].reduce((e, t) => e.concat([t, `${t}-${Ro}`, `${t}-${bh}`]), []), C2 = "beforeRead", x2 = "read", S2 = "afterRead", w2 = "beforeMain", k2 = "main", O2 = "afterMain", T2 = "beforeWrite", E2 = "write", I2 = "afterWrite", P2 = [
  C2,
  x2,
  S2,
  w2,
  k2,
  O2,
  T2,
  E2,
  I2
];
function _2(e) {
  const t = /* @__PURE__ */ new Map(), n = /* @__PURE__ */ new Set(), r = [];
  e.forEach((s) => {
    t.set(s.name, s);
  });
  function i(s) {
    n.add(s.name), [...s.requires || [], ...s.requiresIfExists || []].forEach((l) => {
      if (!n.has(l)) {
        const c = t.get(l);
        c && i(c);
      }
    }), r.push(s);
  }
  return e.forEach((s) => {
    n.has(s.name) || i(s);
  }), r;
}
function R2(e) {
  const t = _2(e);
  return P2.reduce((n, r) => n.concat(t.filter((i) => i.phase === r)), []);
}
function A2(e) {
  let t;
  return () => (t || (t = new Promise((n) => {
    Promise.resolve().then(() => {
      t = void 0, n(e());
    });
  })), t);
}
function Kr(e) {
  return e.split("-")[0];
}
function L2(e) {
  const t = e.reduce((n, r) => {
    const i = n[r.name];
    return n[r.name] = i ? Object.assign(Object.assign(Object.assign({}, i), r), { options: Object.assign(Object.assign({}, i.options), r.options), data: Object.assign(Object.assign({}, i.data), r.data) }) : r, n;
  }, {});
  return Object.keys(t).map((n) => t[n]);
}
function N2(e) {
  const t = Zr(e), n = Pi(e), r = t.visualViewport;
  let i = n.clientWidth, s = n.clientHeight, o = 0, l = 0;
  return r && (i = r.width, s = r.height, /^((?!chrome|android).)*safari/i.test(navigator.userAgent) || (o = r.offsetLeft, l = r.offsetTop)), {
    width: i,
    height: s,
    x: o + mh(e),
    y: l
  };
}
function D2(e) {
  const t = Pi(e), n = ph(e), r = e.ownerDocument.body, i = Math.max(t.scrollWidth, t.clientWidth, r ? r.scrollWidth : 0, r ? r.clientWidth : 0), s = Math.max(t.scrollHeight, t.clientHeight, r ? r.scrollHeight : 0, r ? r.clientHeight : 0);
  let o = -n.scrollLeft + mh(e);
  const l = -n.scrollTop;
  return vi(r || t).direction === "rtl" && (o += Math.max(t.clientWidth, r ? r.clientWidth : 0) - i), { width: i, height: s, x: o, y: l };
}
function h1(e, t) {
  const n = !!(t.getRootNode && t.getRootNode().host);
  if (e.contains(t))
    return !0;
  if (n) {
    let r = t;
    do {
      if (r && e.isSameNode(r))
        return !0;
      r = r.parentNode || r.host;
    } while (r);
  }
  return !1;
}
function Jm(e) {
  return Object.assign(Object.assign({}, e), { left: e.x, top: e.y, right: e.x + e.width, bottom: e.y + e.height });
}
function M2(e) {
  const t = sc(e);
  return t.top = t.top + e.clientTop, t.left = t.left + e.clientLeft, t.bottom = t.top + e.clientHeight, t.right = t.left + e.clientWidth, t.width = e.clientWidth, t.height = e.clientHeight, t.x = t.left, t.y = t.top, t;
}
function $b(e, t) {
  return t === m1 ? Jm(N2(e)) : Gr(t) ? M2(t) : Jm(D2(Pi(e)));
}
function F2(e) {
  const t = Kl(zu(e)), r = ["absolute", "fixed"].indexOf(vi(e).position) >= 0 && Gr(e) ? Uc(e) : e;
  return oc(r) ? t.filter((i) => oc(i) && h1(i, r) && kr(i) !== "body") : [];
}
function $2(e, t, n) {
  const i = [...t === "clippingParents" ? F2(e) : [].concat(t), n], s = i[0], o = i.reduce((l, c) => {
    const d = $b(e, c);
    return l.top = Math.max(d.top, l.top), l.right = Math.min(d.right, l.right), l.bottom = Math.min(d.bottom, l.bottom), l.left = Math.max(d.left, l.left), l;
  }, $b(e, s));
  return o.width = o.right - o.left, o.height = o.bottom - o.top, o.x = o.left, o.y = o.top, o;
}
function lc(e) {
  return e.split("-")[1];
}
function vh(e) {
  return ["top", "bottom"].indexOf(e) >= 0 ? "x" : "y";
}
function g1({ reference: e, element: t, placement: n }) {
  const r = n ? Kr(n) : null, i = n ? lc(n) : null, s = e.x + e.width / 2 - t.width / 2, o = e.y + e.height / 2 - t.height / 2;
  let l;
  switch (r) {
    case er:
      l = {
        x: s,
        y: e.y - t.height
      };
      break;
    case Cr:
      l = {
        x: s,
        y: e.y + e.height
      };
      break;
    case xr:
      l = {
        x: e.x + e.width,
        y: o
      };
      break;
    case tr:
      l = {
        x: e.x - t.width,
        y: o
      };
      break;
    default:
      l = {
        x: e.x,
        y: e.y
      };
  }
  const c = r ? vh(r) : null;
  if (c != null) {
    const d = c === "y" ? "height" : "width";
    switch (i) {
      case Ro:
        l[c] = Math.floor(l[c]) - Math.floor(e[d] / 2 - t[d] / 2);
        break;
      case bh:
        l[c] = Math.floor(l[c]) + Math.ceil(e[d] / 2 - t[d] / 2);
        break;
    }
  }
  return l;
}
function b1() {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0
  };
}
function v1(e) {
  return Object.assign(Object.assign({}, b1()), e);
}
function y1(e, t) {
  return t.reduce((n, r) => (n[r] = e, n), {});
}
function cc(e, t = {}) {
  const { placement: n = e.placement, boundary: r = v2, rootBoundary: i = m1, elementContext: s = Ol, altBoundary: o = !1, padding: l = 0 } = t, c = v1(typeof l != "number" ? l : y1(l, Vc)), d = s === Ol ? y2 : Ol, u = e.elements.reference, p = e.rects.popper, m = e.elements[o ? d : s], f = $2(oc(m) ? m : m.contextElement || Pi(e.elements.popper), r, i), g = sc(u), b = g1({
    reference: g,
    element: p,
    strategy: "absolute",
    placement: n
  }), v = Jm(Object.assign(Object.assign({}, p), b)), y = s === Ol ? v : g, x = {
    top: f.top - y.top + c.top,
    bottom: y.bottom - f.bottom + c.bottom,
    left: f.left - y.left + c.left,
    right: y.right - f.right + c.right
  }, w = e.modifiersData.offset;
  if (s === Ol && w) {
    const R = w[n];
    Object.keys(x).forEach((S) => {
      const _ = [xr, Cr].indexOf(S) >= 0 ? 1 : -1, O = [er, Cr].indexOf(S) >= 0 ? "y" : "x";
      x[S] += R[O] * _;
    });
  }
  return x;
}
const jb = {
  placement: "bottom",
  modifiers: [],
  strategy: "absolute"
};
function Bb(...e) {
  return !e.some((t) => !(t && typeof t.getBoundingClientRect == "function"));
}
function j2(e = {}) {
  const { defaultModifiers: t = [], defaultOptions: n = jb } = e;
  return function(i, s, o = n) {
    let l = {
      placement: "bottom",
      orderedModifiers: [],
      options: Object.assign(Object.assign({}, jb), n),
      modifiersData: {},
      elements: {
        reference: i,
        popper: s
      },
      attributes: {},
      styles: {}
    }, c = [], d = !1;
    const u = {
      state: l,
      setOptions(f) {
        m(), l.options = Object.assign(Object.assign(Object.assign({}, n), l.options), f), l.scrollParents = {
          reference: oc(i) ? Kl(i) : i.contextElement ? Kl(i.contextElement) : [],
          popper: Kl(s)
        };
        const g = R2(L2([...t, ...l.options.modifiers]));
        return l.orderedModifiers = g.filter((b) => b.enabled), p(), u.update();
      },
      // Sync update – it will always be executed, even if not necessary. This
      // is useful for low frequency updates where sync behavior simplifies the
      // logic.
      // For high frequency updates (e.g. `resize` and `scroll` events), always
      // prefer the async Popper#update method
      forceUpdate() {
        if (d)
          return;
        const { reference: f, popper: g } = l.elements;
        if (Bb(f, g)) {
          l.rects = {
            reference: h2(f, Uc(g), l.options.strategy === "fixed"),
            popper: hh(g)
          }, l.reset = !1, l.placement = l.options.placement, l.orderedModifiers.forEach((b) => l.modifiersData[b.name] = Object.assign({}, b.data));
          for (let b = 0; b < l.orderedModifiers.length; b++) {
            if (l.reset === !0) {
              l.reset = !1, b = -1;
              continue;
            }
            const { fn: v, options: y = {}, name: x } = l.orderedModifiers[b];
            typeof v == "function" && (l = v({ state: l, options: y, name: x, instance: u }) || l);
          }
        }
      },
      // Async and optimistically optimized update – it will not be executed if
      // not necessary (debounced to run at most once-per-tick)
      update: A2(() => new Promise((f) => {
        u.forceUpdate(), f(l);
      })),
      destroy() {
        m(), d = !0;
      }
    };
    if (!Bb(i, s))
      return u;
    u.setOptions(o).then((f) => {
      !d && o.onFirstUpdate && o.onFirstUpdate(f);
    });
    function p() {
      l.orderedModifiers.forEach(({ name: f, options: g = {}, effect: b }) => {
        if (typeof b == "function") {
          const v = b({ state: l, name: f, instance: u, options: g }), y = () => {
          };
          c.push(v || y);
        }
      });
    }
    function m() {
      c.forEach((f) => f()), c = [];
    }
    return u;
  };
}
const bd = { passive: !0 };
function B2({ state: e, instance: t, options: n }) {
  const { scroll: r = !0, resize: i = !0 } = n, s = Zr(e.elements.popper), o = [...e.scrollParents.reference, ...e.scrollParents.popper];
  return r && o.forEach((l) => {
    l.addEventListener("scroll", t.update, bd);
  }), i && s.addEventListener("resize", t.update, bd), () => {
    r && o.forEach((l) => {
      l.removeEventListener("scroll", t.update, bd);
    }), i && s.removeEventListener("resize", t.update, bd);
  };
}
const U2 = {
  name: "eventListeners",
  enabled: !0,
  phase: "write",
  fn: () => {
  },
  effect: B2,
  data: {}
};
function V2({ state: e, name: t }) {
  e.modifiersData[t] = g1({
    reference: e.rects.reference,
    element: e.rects.popper,
    strategy: "absolute",
    placement: e.placement
  });
}
const K2 = {
  name: "popperOffsets",
  enabled: !0,
  phase: "read",
  fn: V2,
  data: {}
}, H2 = {
  top: "auto",
  right: "auto",
  bottom: "auto",
  left: "auto"
};
function z2({ x: e, y: t }) {
  const r = window.devicePixelRatio || 1;
  return {
    x: Math.round(e * r) / r || 0,
    y: Math.round(t * r) / r || 0
  };
}
function Ub({ popper: e, popperRect: t, placement: n, offsets: r, position: i, gpuAcceleration: s, adaptive: o }) {
  let { x: l, y: c } = z2(r);
  const d = r.hasOwnProperty("x"), u = r.hasOwnProperty("y");
  let p = tr, m = er;
  const f = window;
  if (o) {
    let b = Uc(e);
    b === Zr(e) && (b = Pi(e)), n === er && (m = Cr, c -= b.clientHeight - t.height, c *= s ? 1 : -1), n === tr && (p = xr, l -= b.clientWidth - t.width, l *= s ? 1 : -1);
  }
  const g = Object.assign({ position: i }, o && H2);
  return s ? Object.assign(Object.assign({}, g), {
    [m]: u ? "0" : "",
    [p]: d ? "0" : "",
    // Layer acceleration can disable subpixel rendering which causes slightly
    // blurry text on low PPI displays, so we want to use 2D transforms
    // instead
    transform: (f.devicePixelRatio || 1) < 2 ? `translate(${l}px, ${c}px)` : `translate3d(${l}px, ${c}px, 0)`
  }) : Object.assign(Object.assign({}, g), { [m]: u ? `${c}px` : "", [p]: d ? `${l}px` : "", transform: "" });
}
function q2({ state: e, options: t }) {
  const { gpuAcceleration: n = !0, adaptive: r = !0 } = t, i = {
    placement: Kr(e.placement),
    popper: e.elements.popper,
    popperRect: e.rects.popper,
    gpuAcceleration: n
  };
  e.modifiersData.popperOffsets != null && (e.styles.popper = Object.assign(Object.assign({}, e.styles.popper), Ub(Object.assign(Object.assign({}, i), { offsets: e.modifiersData.popperOffsets, position: e.options.strategy, adaptive: r })))), e.modifiersData.arrow != null && (e.styles.arrow = Object.assign(Object.assign({}, e.styles.arrow), Ub(Object.assign(Object.assign({}, i), { offsets: e.modifiersData.arrow, position: "absolute", adaptive: !1 })))), e.attributes.popper = Object.assign(Object.assign({}, e.attributes.popper), { "data-popper-placement": e.placement });
}
const G2 = {
  name: "computeStyles",
  enabled: !0,
  phase: "beforeWrite",
  fn: q2,
  data: {}
};
function W2({ state: e }) {
  Object.keys(e.elements).forEach((t) => {
    const n = e.styles[t] || {}, r = e.attributes[t] || {}, i = e.elements[t];
    !Gr(i) || !kr(i) || (Object.assign(i.style, n), Object.keys(r).forEach((s) => {
      const o = r[s];
      o === !1 ? i.removeAttribute(s) : i.setAttribute(s, o === !0 ? "" : o);
    }));
  });
}
function X2({ state: e }) {
  const t = {
    popper: {
      position: e.options.strategy,
      left: "0",
      top: "0",
      margin: "0"
    },
    arrow: {
      position: "absolute"
    },
    reference: {}
  };
  return Object.assign(e.elements.popper.style, t.popper), e.elements.arrow && Object.assign(e.elements.arrow.style, t.arrow), () => {
    Object.keys(e.elements).forEach((n) => {
      const r = e.elements[n], i = e.attributes[n] || {}, o = Object.keys(e.styles.hasOwnProperty(n) ? e.styles[n] : t[n]).reduce((l, c) => (l[c] = "", l), {});
      !Gr(r) || !kr(r) || (Object.assign(r.style, o), Object.keys(i).forEach((l) => {
        r.removeAttribute(l);
      }));
    });
  };
}
const Y2 = {
  name: "applyStyles",
  enabled: !0,
  phase: "write",
  fn: W2,
  effect: X2,
  requires: ["computeStyles"]
};
function J2(e, t, n) {
  const r = Kr(e), i = [tr, er].indexOf(r) >= 0 ? -1 : 1;
  let [s, o] = typeof n == "function" ? n(Object.assign(Object.assign({}, t), { placement: e })) : n;
  return s = s || 0, o = (o || 0) * i, [tr, xr].indexOf(r) >= 0 ? { x: o, y: s } : { x: s, y: o };
}
function Z2({ state: e, options: t, name: n }) {
  const { offset: r = [0, 0] } = t, i = f1.reduce((l, c) => (l[c] = J2(c, e.rects, r), l), {}), { x: s, y: o } = i[e.placement];
  e.modifiersData.popperOffsets != null && (e.modifiersData.popperOffsets.x += s, e.modifiersData.popperOffsets.y += o), e.modifiersData[n] = i;
}
const Q2 = {
  name: "offset",
  enabled: !0,
  phase: "main",
  requires: ["popperOffsets"],
  fn: Z2
}, eP = { left: "right", right: "left", bottom: "top", top: "bottom" };
function $d(e) {
  return e.replace(/left|right|bottom|top/g, (t) => eP[t]);
}
const tP = { start: "end", end: "start" };
function Vb(e) {
  return e.replace(/start|end/g, (t) => tP[t]);
}
function nP(e, t = {}) {
  const { placement: n, boundary: r, rootBoundary: i, padding: s, flipVariations: o, allowedAutoPlacements: l = f1 } = t, c = lc(n), d = c ? o ? Fb : Fb.filter((m) => lc(m) === c) : Vc;
  let u = d.filter((m) => l.indexOf(m) >= 0);
  u.length === 0 && (u = d);
  const p = u.reduce((m, f) => (m[f] = cc(e, {
    placement: f,
    boundary: r,
    rootBoundary: i,
    padding: s
  })[Kr(f)], m), {});
  return Object.keys(p).sort((m, f) => p[m] - p[f]);
}
function aP(e) {
  if (Kr(e) === gh)
    return [];
  const t = $d(e);
  return [
    Vb(e),
    t,
    Vb(t)
  ];
}
function rP({ state: e, options: t, name: n }) {
  if (e.modifiersData[n]._skip)
    return;
  const { mainAxis: r = !0, altAxis: i = !0, fallbackPlacements: s, padding: o, boundary: l, rootBoundary: c, altBoundary: d, flipVariations: u = !0, allowedAutoPlacements: p } = t, m = e.options.placement, g = Kr(m) === m, b = s || (g || !u ? [$d(m)] : aP(m)), v = [m, ...b].reduce((_, O) => _.concat(Kr(O) === gh ? nP(e, {
    placement: O,
    boundary: l,
    rootBoundary: c,
    padding: o,
    flipVariations: u,
    allowedAutoPlacements: p
  }) : O), []), y = e.rects.reference, x = e.rects.popper, w = /* @__PURE__ */ new Map();
  let R = !0, S = v[0];
  for (let _ = 0; _ < v.length; _++) {
    const O = v[_], E = Kr(O), T = lc(O) === Ro, I = [er, Cr].indexOf(E) >= 0, k = I ? "width" : "height", P = cc(e, {
      placement: O,
      boundary: l,
      rootBoundary: c,
      altBoundary: d,
      padding: o
    });
    let D = I ? T ? xr : tr : T ? Cr : er;
    y[k] > x[k] && (D = $d(D));
    const F = $d(D), A = [];
    if (r && A.push(P[E] <= 0), i && A.push(P[D] <= 0, P[F] <= 0), A.every((M) => M)) {
      S = O, R = !1;
      break;
    }
    w.set(O, A);
  }
  if (R) {
    const _ = u ? 3 : 1;
    for (let O = _; O > 0; O--) {
      const E = v.find((T) => {
        const I = w.get(T);
        if (I)
          return I.slice(0, O).every((k) => k);
      });
      if (E) {
        S = E;
        break;
      }
    }
  }
  e.placement !== S && (e.modifiersData[n]._skip = !0, e.placement = S, e.reset = !0);
}
const iP = {
  name: "flip",
  enabled: !0,
  phase: "main",
  fn: rP,
  requiresIfExists: ["offset"],
  data: { _skip: !1 }
};
function sP(e) {
  return e === "x" ? "y" : "x";
}
function jd(e, t, n) {
  return Math.max(e, Math.min(t, n));
}
function oP({ state: e, options: t, name: n }) {
  const { mainAxis: r = !0, altAxis: i = !1, boundary: s, rootBoundary: o, altBoundary: l, padding: c, tether: d = !0, tetherOffset: u = 0 } = t, p = cc(e, {
    boundary: s,
    rootBoundary: o,
    padding: c,
    altBoundary: l
  }), m = Kr(e.placement), f = lc(e.placement), g = !f, b = vh(m), v = sP(b), y = e.modifiersData.popperOffsets, x = e.rects.reference, w = e.rects.popper, R = typeof u == "function" ? u(Object.assign(Object.assign({}, e.rects), { placement: e.placement })) : u, S = { x: 0, y: 0 };
  if (y) {
    if (r) {
      const _ = b === "y" ? er : tr, O = b === "y" ? Cr : xr, E = b === "y" ? "height" : "width", T = y[b], I = y[b] + p[_], k = y[b] - p[O], P = d ? -w[E] / 2 : 0, D = f === Ro ? x[E] : w[E], F = f === Ro ? -w[E] : -x[E], A = e.elements.arrow, M = d && A ? hh(A) : { width: 0, height: 0 }, V = e.modifiersData["arrow#persistent"] ? e.modifiersData["arrow#persistent"].padding : b1(), U = V[_], G = V[O], q = jd(0, x[E], M[E]), L = g ? x[E] / 2 - P - q - U - R : D - q - U - R, K = g ? -x[E] / 2 + P + q + G + R : F + q + G + R, B = e.elements.arrow && Uc(e.elements.arrow), j = B ? b === "y" ? B.clientTop || 0 : B.clientLeft || 0 : 0, W = e.modifiersData.offset ? e.modifiersData.offset[e.placement][b] : 0, Q = y[b] + L - W - j, te = y[b] + K - W, ie = jd(d ? Math.min(I, Q) : I, T, d ? Math.max(k, te) : k);
      y[b] = ie, S[b] = ie - T;
    }
    if (i) {
      const _ = b === "x" ? er : tr, O = b === "x" ? Cr : xr, E = y[v], T = E + p[_], I = E - p[O], k = jd(T, E, I);
      y[v] = k, S[v] = k - E;
    }
    e.modifiersData[n] = S;
  }
}
const lP = {
  name: "preventOverflow",
  enabled: !0,
  phase: "main",
  fn: oP,
  requiresIfExists: ["offset"]
};
function cP({ state: e, name: t }) {
  const n = e.elements.arrow, r = e.modifiersData.popperOffsets, i = Kr(e.placement), s = vh(i), l = [tr, xr].indexOf(i) >= 0 ? "height" : "width";
  if (!n || !r)
    return;
  const c = e.modifiersData[`${t}#persistent`].padding, d = hh(n), u = s === "y" ? er : tr, p = s === "y" ? Cr : xr, m = e.rects.reference[l] + e.rects.reference[s] - r[s] - e.rects.popper[l], f = r[s] - e.rects.reference[s], g = Uc(n), b = g ? s === "y" ? g.clientHeight || 0 : g.clientWidth || 0 : 0, v = m / 2 - f / 2, y = c[u], x = b - d[l] - c[p], w = b / 2 - d[l] / 2 + v, R = jd(y, w, x), S = s;
  e.modifiersData[t] = {
    [S]: R,
    centerOffset: R - w
  };
}
function dP({ state: e, options: t, name: n }) {
  let { element: r = "[data-popper-arrow]", padding: i = 0 } = t;
  r != null && (typeof r == "string" && (r = e.elements.popper.querySelector(r), !r) || h1(e.elements.popper, r) && (e.elements.arrow = r, e.modifiersData[`${n}#persistent`] = {
    padding: v1(typeof i != "number" ? i : y1(i, Vc))
  }));
}
const uP = {
  name: "arrow",
  enabled: !0,
  phase: "main",
  fn: cP,
  effect: dP,
  requires: ["popperOffsets"],
  requiresIfExists: ["preventOverflow"]
};
function Kb(e, t, n = { x: 0, y: 0 }) {
  return {
    top: e.top - t.height - n.y,
    right: e.right - t.width + n.x,
    bottom: e.bottom - t.height + n.y,
    left: e.left - t.width - n.x
  };
}
function Hb(e) {
  return [er, xr, Cr, tr].some((t) => e[t] >= 0);
}
function pP({ state: e, name: t }) {
  const n = e.rects.reference, r = e.rects.popper, i = e.modifiersData.preventOverflow, s = cc(e, {
    elementContext: "reference"
  }), o = cc(e, {
    altBoundary: !0
  }), l = Kb(s, n), c = Kb(o, r, i), d = Hb(l), u = Hb(c);
  e.modifiersData[t] = {
    referenceClippingOffsets: l,
    popperEscapeOffsets: c,
    isReferenceHidden: d,
    hasPopperEscaped: u
  }, e.attributes.popper = Object.assign(Object.assign({}, e.attributes.popper), { "data-popper-reference-hidden": d, "data-popper-escaped": u });
}
const mP = {
  name: "hide",
  enabled: !0,
  phase: "main",
  requiresIfExists: ["preventOverflow"],
  fn: pP
}, fP = [
  U2,
  K2,
  G2,
  Y2,
  Q2,
  iP,
  lP,
  uP,
  mP
], hP = j2({ defaultModifiers: fP }), dc = Sn ? h.useLayoutEffect : h.useEffect, gP = (e, t) => JSON.stringify(e) === JSON.stringify(t), zb = (e) => e.reduce((t, [n, r]) => (t[n] = r, t), {}), bP = [], vP = (e, t, n = {}) => {
  const r = h.useRef(null), i = {
    onFirstUpdate: n.onFirstUpdate,
    placement: n.placement || "bottom",
    strategy: n.strategy || "absolute",
    modifiers: n.modifiers || bP
  }, [s, o] = h.useState({
    styles: {
      popper: {
        position: i.strategy,
        left: "0",
        top: "0"
      }
    },
    attributes: {}
  }), l = h.useMemo(() => ({
    name: "updateState",
    enabled: !0,
    phase: "write",
    // eslint-disable-next-line no-shadow
    fn: ({ state: u }) => {
      const p = Object.keys(u.elements);
      o({
        styles: zb(p.map((m) => [m, u.styles[m] || {}])),
        attributes: zb(p.map((m) => [m, u.attributes[m]]))
      });
    },
    requires: ["computeStyles"]
  }), []), c = h.useMemo(() => {
    const u = {
      onFirstUpdate: i.onFirstUpdate,
      placement: i.placement,
      strategy: i.strategy,
      modifiers: [...i.modifiers, l, { name: "applyStyles", enabled: !1 }]
    };
    return gP(r.current, u) ? r.current || u : (r.current = u, u);
  }, [
    i.onFirstUpdate,
    i.placement,
    i.strategy,
    i.modifiers,
    l
  ]), d = h.useRef();
  return dc(() => {
    d && d.current && d.current.setOptions(c);
  }, [c]), dc(() => {
    if (e == null || t == null)
      return;
    const p = (n.createPopper || hP)(e, t, c);
    return d.current = p, () => {
      p.destroy(), d.current = null;
    };
  }, [e, t, n.createPopper]), {
    state: d.current ? d.current.state : null,
    styles: s.styles,
    attributes: s.attributes,
    update: d.current ? d.current.update : null,
    forceUpdate: d.current ? d.current.forceUpdate : null
  };
}, yP = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom",
  "top-start": "bottom-end",
  "top-end": "bottom-start",
  "bottom-start": "top-end",
  "bottom-end": "top-start",
  "left-start": "right-end",
  "left-end": "right-start",
  "right-start": "left-end",
  "right-end": "left-start"
}, CP = (e) => e.replace(/left|right|bottom|top|top-start|top-end|bottom-start|bottom-end|right-start|right-end|left-start|left-end/g, (t) => yP[t]), xP = (e) => `opacity ${e}ms cubic-bezier(.54, 1.5, .38, 1.11)`, Qr = ({ trigger: e, popper: t, direction: n = "down", position: r = "start", placement: i, width: s, minWidth: o = "trigger", maxWidth: l, appendTo: c = "inline", zIndex: d = 9999, isVisible: u = !0, positionModifiers: p, distance: m = 0, onMouseEnter: f, onMouseLeave: g, onFocus: b, onBlur: v, onDocumentClick: y, onTriggerClick: x, onTriggerEnter: w, onPopperClick: R, onPopperMouseEnter: S, onPopperMouseLeave: _, onDocumentKeyDown: O, enableFlip: E = !0, flipBehavior: T = "flip", triggerRef: I, popperRef: k, animationDuration: P = 0, entryDelay: D = 0, exitDelay: F = 0, onHidden: A = () => {
}, onHide: M = () => {
}, onMount: V = () => {
}, onShow: U = () => {
}, onShown: G = () => {
}, preventOverflow: q = !1 }) => {
  var L;
  const [K, B] = h.useState(null), [j, W] = h.useState(null), [Q, te] = h.useState(null), [ie, ce] = h.useState(null), [Z, me] = h.useState(!1), [ne, Oe] = h.useState(0), [Pe, $e] = h.useState(u), fe = h.useRef(null), we = h.useRef(null), J = h.useRef(null), X = h.useRef(), Y = j || K, ae = u || Pe, de = (L = I?.current || K) === null || L === void 0 ? void 0 : L.parentElement, ye = Ji(de), he = h.useMemo(() => {
    const Et = { left: "left", right: "right", center: "center" };
    return {
      ltr: Object.assign({ start: "left", end: "right" }, Et),
      rtl: Object.assign({ start: "right", end: "left" }, Et)
    }[ye][r];
  }, [r, ye]), Ce = h.useCallback((Et) => y(Et, Y, Q), [ae, K, j, Q, y]);
  h.useEffect(() => {
    me(!0), V();
  }, []), h.useEffect(() => () => {
    gd([fe, J, we]);
  }, []), h.useEffect(() => {
    I && (I.current ? W(I.current) : typeof I == "function" && W(I()));
  }, [I, e]), h.useEffect(() => {
    k && (k.current ? te(k.current) : typeof k == "function" && te(k()));
  }, [ae, k]), h.useEffect(() => {
    const Et = new MutationObserver(() => {
      qn && qn();
    });
    return Q && Et.observe(Q, { attributes: !0, childList: !0, subtree: !0 }), () => {
      Et.disconnect();
    };
  }, [Q]);
  const Ge = (Et, kn, vs, ys = !1) => {
    Et && kn && kn.addEventListener(vs, Et, { capture: ys });
  }, it = (Et, kn, vs, ys = !1) => {
    Et && kn && kn.removeEventListener(vs, Et, { capture: ys });
  };
  h.useEffect(() => (Ge(f, Y, "mouseenter"), Ge(g, Y, "mouseleave"), Ge(b, Y, "focus"), Ge(v, Y, "blur"), Ge(x, Y, "click"), Ge(w, Y, "keydown"), Ge(R, Q, "click"), Ge(S, Q, "mouseenter"), Ge(_, Q, "mouseleave"), y && Ge(Ce, document, "click", !0), Ge(O, document, "keydown", !0), () => {
    it(f, Y, "mouseenter"), it(g, Y, "mouseleave"), it(b, Y, "focus"), it(v, Y, "blur"), it(x, Y, "click"), it(w, Y, "keydown"), it(R, Q, "click"), it(S, Q, "mouseenter"), it(_, Q, "mouseleave"), y && it(Ce, document, "click", !0), it(O, document, "keydown", !0);
  }), [
    K,
    Q,
    f,
    g,
    b,
    v,
    x,
    w,
    R,
    S,
    _,
    y,
    O,
    j
  ]);
  const qe = () => {
    if (i)
      return i;
    let Et = n === "up" ? "top" : "bottom";
    return he !== "center" && (Et = `${Et}-${he === "right" ? "end" : "start"}`), Et;
  }, kt = h.useMemo(qe, [n, he, i]), jt = h.useMemo(() => CP(qe()), [n, he, i]), Xe = h.useMemo(() => ({
    name: "widthMods",
    enabled: s !== void 0 || o !== void 0 || l !== void 0,
    phase: "beforeWrite",
    requires: ["computeStyles"],
    fn: ({ state: Et }) => {
      const kn = Et.rects.reference.width;
      s && (Et.styles.popper.width = s === "trigger" ? `${kn}px` : s), o && (Et.styles.popper.minWidth = o === "trigger" ? `${kn}px` : o), l && (Et.styles.popper.maxWidth = l === "trigger" ? `${kn}px` : l);
    },
    effect: ({ state: Et }) => {
      const kn = Et.elements.reference.offsetWidth;
      return s && (Et.elements.popper.style.width = s === "trigger" ? `${kn}px` : s), o && (Et.elements.popper.style.minWidth = o === "trigger" ? `${kn}px` : o), l && (Et.elements.popper.style.maxWidth = l === "trigger" ? `${kn}px` : l), () => {
      };
    }
  }), [s, o, l]), { styles: It, attributes: en, update: qn, forceUpdate: Ra } = vP(Y, Q, {
    placement: kt,
    modifiers: [
      {
        name: "offset",
        options: {
          offset: [0, m]
        }
      },
      {
        name: "preventOverflow",
        enabled: q
      },
      {
        // adds attribute [data-popper-reference-hidden] to the popper element which can be used to hide it using CSS
        name: "hide",
        enabled: !0
      },
      {
        name: "flip",
        enabled: kt.startsWith("auto") || E,
        options: {
          fallbackPlacements: T === "flip" ? [jt] : T
        }
      },
      Xe
    ]
  });
  h.useEffect(() => {
    var Et, kn, vs, ys, Fp, $p, jp;
    const Bp = ((ys = (vs = (kn = (Et = t?.props) === null || Et === void 0 ? void 0 : Et.children) === null || kn === void 0 ? void 0 : kn[1]) === null || vs === void 0 ? void 0 : vs.props) === null || ys === void 0 ? void 0 : ys.children) || ((jp = ($p = (Fp = t?.props) === null || Fp === void 0 ? void 0 : Fp.children) === null || $p === void 0 ? void 0 : $p.props) === null || jp === void 0 ? void 0 : jp.children);
    ce(Bp), Bp && ie && Bp !== ie && Ra && Ra();
  }, [t]), h.useEffect(() => {
    X.current < F && (gd([fe, J]), J.current = setTimeout(() => {
      fe.current = setTimeout(() => {
        $e(!1);
      }, P);
    }, F)), X.current = F;
  }, [F]);
  const za = () => {
    U(), gd([fe, J]), we.current = setTimeout(() => {
      $e(!0), Oe(1), G();
    }, D);
  }, ri = () => {
    M(), gd([we]), J.current = setTimeout(() => {
      Oe(0), fe.current = setTimeout(() => {
        $e(!1), A();
      }, P);
    }, F);
  };
  h.useEffect(() => {
    u ? za() : ri();
  }, [u]);
  const ii = () => {
    if (en && en.popper && en.popper["data-popper-placement"]) {
      const Et = en.popper["data-popper-placement"];
      return p[Et];
    }
    return p.top;
  }, md = Object.assign({ className: $(t.props && t.props.className, p && ii()), style: Object.assign(Object.assign(Object.assign({}, t.props && t.props.style || {}), It.popper), {
    zIndex: d,
    opacity: ne,
    transition: xP(P)
  }) }, en.popper), Ob = () => {
    const Et = h.cloneElement(t, md);
    return k ? Et : h.createElement("div", { style: { display: "contents" }, ref: (kn) => te(kn?.firstElementChild) }, Et);
  }, $E = () => {
    if (c === "inline")
      return Ob();
    {
      const Et = typeof c == "function" ? c() : c;
      return oh.createPortal(Ob(), Et);
    }
  };
  return h.createElement(
    h.Fragment,
    null,
    !I && e && h.isValidElement(e) && h.createElement("div", { style: { display: "contents" }, ref: (Et) => B(Et?.firstElementChild) }, e),
    I && e && h.isValidElement(e) && e,
    Z && ae && $E()
  );
};
Qr.displayName = "Popper";
const Zd = (e, t, n = (d) => document.activeElement.contains(d), r = (d) => d, i = ["A", "BUTTON", "INPUT"], s = !1, o = !1, l = !0, c = !0) => {
  const d = document.activeElement, u = e.key;
  let p = null;
  if (!s && ["ArrowUp", "ArrowDown"].includes(u)) {
    e.preventDefault(), e.stopImmediatePropagation();
    let m = -1;
    t.forEach((f, g) => {
      if (n(f)) {
        let b = 0;
        for (; !p && b < t.length && b * -1 < t.length; )
          u === "ArrowUp" ? b-- : b++, m = g + b, m >= t.length && (m = 0), m < 0 && (m = t.length - 1), p = r(t[m]);
      }
    });
  }
  if (!o && ["ArrowLeft", "ArrowRight"].includes(u)) {
    e.preventDefault(), e.stopImmediatePropagation();
    let m = -1;
    t.forEach((f, g) => {
      if (n(f)) {
        const b = t[g].querySelectorAll(i.join(","));
        if (!b.length || c) {
          let v = d;
          for (; v; )
            if (v = u === "ArrowLeft" ? v.previousElementSibling : v.nextElementSibling, v && i.includes(v.tagName)) {
              p = v;
              break;
            }
        } else
          b.forEach((v, y) => {
            e.target === v && (m = y + (u === "ArrowLeft" ? -1 : 1), m >= b.length && (m = 0), m < 0 && (m = b.length - 1), p = b[m]);
          });
      }
    });
  }
  p && (l && (d.tabIndex = -1, p.tabIndex = 0), p.focus());
}, SP = (e) => {
  e && e.length > 0 && (e.forEach((t) => {
    t.tabIndex = -1;
  }), e[0].tabIndex = 0);
};
class yh extends h.Component {
  constructor() {
    super(...arguments), this.keyHandler = (t) => {
      const { isEventFromContainer: n } = this.props;
      if (n ? !n(t) : !this._isEventFromContainer(t))
        return;
      const { isActiveElement: r, getFocusableElement: i, noVerticalArrowHandling: s, noHorizontalArrowHandling: o, noEnterHandling: l, noSpaceHandling: c, updateTabIndex: d, validSiblingTags: u, additionalKeyHandler: p, createNavigableElements: m, onlyTraverseSiblings: f } = this.props;
      p && p(t);
      const g = m();
      if (!g) {
        console.warn("No navigable elements have been passed to the KeyboardHandler. Keyboard navigation provided by this component will be ignored.");
        return;
      }
      const b = t.key;
      l || b === "Enter" && (t.preventDefault(), t.stopImmediatePropagation(), document.activeElement.click()), c || b === " " && (t.preventDefault(), t.stopImmediatePropagation(), document.activeElement.click()), Zd(t, g, r, i, u, s, o, d, f);
    }, this._isEventFromContainer = (t) => {
      const { containerRef: n } = this.props;
      return n.current && n.current.contains(t.target);
    };
  }
  componentDidMount() {
    Sn && window.addEventListener("keydown", this.keyHandler);
  }
  componentWillUnmount() {
    Sn && window.removeEventListener("keydown", this.keyHandler);
  }
  render() {
    return null;
  }
}
yh.displayName = "KeyboardHandler";
yh.defaultProps = {
  containerRef: null,
  createNavigableElements: () => null,
  isActiveElement: (e) => document.activeElement === e,
  getFocusableElement: (e) => e,
  validSiblingTags: ["BUTTON", "A"],
  onlyTraverseSiblings: !0,
  updateTabIndex: !0,
  noHorizontalArrowHandling: !1,
  noVerticalArrowHandling: !1,
  noEnterHandling: !1,
  noSpaceHandling: !1
};
const Wo = (e, t, n) => {
  let r;
  if (Sn) {
    const { ResizeObserver: i } = window;
    if (e && i) {
      const s = new i((o) => {
        n ? window.requestAnimationFrame(() => {
          Array.isArray(o) && o.length > 0 && t();
        }) : Array.isArray(o) && o.length > 0 && t();
      });
      s.observe(e), r = () => s.unobserve(e);
    } else
      window.addEventListener("resize", t), r = () => window.removeEventListener("resize", t);
  }
  return () => {
    r && r();
  };
}, La = (e) => !!(e && !isNaN(e));
var qb;
(function(e) {
  e.md = "md", e.lg = "lg", e.xl = "xl", e["2xl"] = "2xl", e["3xl"] = "3xl", e["4xl"] = "4xl";
})(qb || (qb = {}));
var Zm;
(function(e) {
  e.h1 = "2xl", e.h2 = "xl", e.h3 = "lg", e.h4 = "md", e.h5 = "md", e.h6 = "md";
})(Zm || (Zm = {}));
const nr = (e) => {
  var { className: t = "", children: n = "", headingLevel: r, size: i = Zm[r], ouiaId: s, ouiaSafe: o = !0 } = e, l = oe(e, ["className", "children", "headingLevel", "size", "ouiaId", "ouiaSafe"]);
  const c = Ka(nr.displayName, s, o);
  return h.createElement(r, Object.assign({}, c, l, { className: $(Eb.title, i && Eb.modifiers[i], t) }), n);
};
nr.displayName = "Title";
const Tn = {
  badge: "pf-v5-c-badge",
  button: "pf-v5-c-button",
  buttonCount: "pf-v5-c-button__count",
  buttonIcon: "pf-v5-c-button__icon",
  buttonProgress: "pf-v5-c-button__progress",
  modifiers: {
    active: "pf-m-active",
    block: "pf-m-block",
    small: "pf-m-small",
    primary: "pf-m-primary",
    displayLg: "pf-m-display-lg",
    secondary: "pf-m-secondary",
    tertiary: "pf-m-tertiary",
    link: "pf-m-link",
    unread: "pf-m-unread",
    inline: "pf-m-inline",
    danger: "pf-m-danger",
    warning: "pf-m-warning",
    control: "pf-m-control",
    expanded: "pf-m-expanded",
    plain: "pf-m-plain",
    noPadding: "pf-m-no-padding",
    disabled: "pf-m-disabled",
    ariaDisabled: "pf-m-aria-disabled",
    progress: "pf-m-progress",
    inProgress: "pf-m-in-progress",
    start: "pf-m-start",
    end: "pf-m-end"
  },
  spinner: "pf-v5-c-spinner",
  themeDark: "pf-v5-theme-dark"
}, vd = {
  modifiers: {
    inline: "pf-m-inline",
    sm: "pf-m-sm",
    md: "pf-m-md",
    lg: "pf-m-lg",
    xl: "pf-m-xl"
  },
  spinner: "pf-v5-c-spinner",
  spinnerPath: "pf-v5-c-spinner__path"
}, wP = {
  name: "--pf-v5-c-spinner--diameter",
  value: "0.875rem",
  var: "var(--pf-v5-c-spinner--diameter)"
};
var Qd;
(function(e) {
  e.sm = "sm", e.md = "md", e.lg = "lg", e.xl = "xl";
})(Qd || (Qd = {}));
const ei = (e) => {
  var {
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    className: t = "",
    size: n = "xl",
    "aria-valuetext": r = "Loading...",
    diameter: i,
    isInline: s = !1,
    "aria-label": o,
    "aria-labelledBy": l
  } = e, c = oe(e, ["className", "size", "aria-valuetext", "diameter", "isInline", "aria-label", "aria-labelledBy"]);
  return h.createElement(
    "svg",
    Object.assign({ className: $(vd.spinner, s ? vd.modifiers.inline : vd.modifiers[n], t), role: "progressbar", "aria-valuetext": r, viewBox: "0 0 100 100" }, i && { style: { [wP.name]: i } }, o && { "aria-label": o }, l && { "aria-labelledBy": l }, !o && !l && { "aria-label": "Contents" }, c),
    h.createElement("circle", { className: vd.spinnerPath, cx: "50", cy: "50", r: "45", fill: "none" })
  );
};
ei.displayName = "Spinner";
const Hp = {
  badge: "pf-v5-c-badge",
  modifiers: {
    read: "pf-m-read",
    unread: "pf-m-unread"
  },
  themeDark: "pf-v5-theme-dark"
}, Wr = (e) => {
  var { isRead: t = !1, className: n = "", children: r = "", screenReaderText: i } = e, s = oe(e, ["isRead", "className", "children", "screenReaderText"]);
  return h.createElement(
    "span",
    Object.assign({}, s, { className: $(Hp.badge, t ? Hp.modifiers.read : Hp.modifiers.unread, n) }),
    r,
    i && h.createElement("span", { className: "pf-v5-screen-reader" }, i)
  );
};
Wr.displayName = "Badge";
var xe;
(function(e) {
  e.primary = "primary", e.secondary = "secondary", e.tertiary = "tertiary", e.danger = "danger", e.warning = "warning", e.link = "link", e.plain = "plain", e.control = "control";
})(xe || (xe = {}));
var Qm;
(function(e) {
  e.button = "button", e.submit = "submit", e.reset = "reset";
})(Qm || (Qm = {}));
var Hl;
(function(e) {
  e.default = "default", e.sm = "sm", e.lg = "lg";
})(Hl || (Hl = {}));
const kP = (e) => {
  var { children: t = null, className: n = "", component: r = "button", isActive: i = !1, isBlock: s = !1, isDisabled: o = !1, isAriaDisabled: l = !1, isLoading: c = null, isDanger: d = !1, spinnerAriaValueText: u, spinnerAriaLabelledBy: p, spinnerAriaLabel: m, size: f = Hl.default, inoperableEvents: g = ["onClick", "onKeyPress"], isInline: b = !1, type: v = Qm.button, variant: y = xe.primary, iconPosition: x = "start", "aria-label": w = null, icon: R = null, ouiaId: S, ouiaSafe: _ = !0, tabIndex: O = null, innerRef: E, countOptions: T } = e, I = oe(e, ["children", "className", "component", "isActive", "isBlock", "isDisabled", "isAriaDisabled", "isLoading", "isDanger", "spinnerAriaValueText", "spinnerAriaLabelledBy", "spinnerAriaLabel", "size", "inoperableEvents", "isInline", "type", "variant", "iconPosition", "aria-label", "icon", "ouiaId", "ouiaSafe", "tabIndex", "innerRef", "countOptions"]);
  const k = Ka(z.displayName, S, _, y), P = r, D = P === "button", F = b && P === "span", A = g.reduce((V, U) => Object.assign(Object.assign({}, V), { [U]: (G) => {
    G.preventDefault();
  } }), {}), M = () => {
    if (o)
      return D ? null : -1;
    if (l)
      return null;
    if (F)
      return 0;
  };
  return h.createElement(
    P,
    Object.assign({}, I, l ? A : null, { "aria-disabled": o || l, "aria-label": w, className: $(Tn.button, Tn.modifiers[y], s && Tn.modifiers.block, o && Tn.modifiers.disabled, l && Tn.modifiers.ariaDisabled, i && Tn.modifiers.active, b && y === xe.link && Tn.modifiers.inline, d && (y === xe.secondary || y === xe.link) && Tn.modifiers.danger, c !== null && y !== xe.plain && Tn.modifiers.progress, c && Tn.modifiers.inProgress, f === Hl.sm && Tn.modifiers.small, f === Hl.lg && Tn.modifiers.displayLg, n), disabled: D ? o : null, tabIndex: O !== null ? O : M(), type: D || F ? v : null, role: F ? "button" : null, ref: E }, k),
    c && h.createElement(
      "span",
      { className: $(Tn.buttonProgress) },
      h.createElement(ei, { size: Qd.md, isInline: b, "aria-valuetext": u, "aria-label": m, "aria-labelledby": p })
    ),
    y === xe.plain && t === null && R ? R : null,
    y !== xe.plain && R && (x === "start" || x === "left") && h.createElement("span", { className: $(Tn.buttonIcon, Tn.modifiers.start) }, R),
    t,
    y !== xe.plain && R && (x === "end" || x === "right") && h.createElement("span", { className: $(Tn.buttonIcon, Tn.modifiers.end) }, R),
    T && h.createElement(
      "span",
      { className: $(Tn.buttonCount, T.className) },
      h.createElement(Wr, { isRead: T.isRead }, T.count)
    )
  );
}, z = h.forwardRef((e, t) => h.createElement(kP, Object.assign({ innerRef: t }, e)));
z.displayName = "Button";
let OP = 0;
function Qe({ name: e, xOffset: t = 0, yOffset: n = 0, width: r, height: i, svgPath: s }) {
  var o;
  return o = class extends h.Component {
    constructor() {
      super(...arguments), this.id = `icon-title-${OP++}`;
    }
    render() {
      const c = this.props, { title: d, className: u } = c, p = oe(c, ["title", "className"]), m = u ? `pf-v5-svg ${u}` : "pf-v5-svg", f = !!d, g = [t, n, r, i].join(" ");
      return h.createElement(
        "svg",
        Object.assign({ className: m, viewBox: g, fill: "currentColor", "aria-labelledby": f ? this.id : null, "aria-hidden": f ? null : !0, role: "img", width: "1em", height: "1em" }, p),
        f && h.createElement("title", { id: this.id }, d),
        h.createElement("path", { d: s })
      );
    }
  }, o.displayName = e, o;
}
const TP = {
  name: "TimesIcon",
  height: 512,
  width: 352,
  svgPath: "M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z",
  yOffset: 0,
  xOffset: 0
}, Oa = Qe(TP), po = {
  backdrop: "pf-v5-c-backdrop",
  backdropOpen: "pf-v5-c-backdrop__open"
}, Hn = {
  button: "pf-v5-c-button",
  modalBox: "pf-v5-c-modal-box",
  modalBoxBody: "pf-v5-c-modal-box__body",
  modalBoxClose: "pf-v5-c-modal-box__close",
  modalBoxDescription: "pf-v5-c-modal-box__description",
  modalBoxFooter: "pf-v5-c-modal-box__footer",
  modalBoxHeader: "pf-v5-c-modal-box__header",
  modalBoxHeaderMain: "pf-v5-c-modal-box__header-main",
  modalBoxTitle: "pf-v5-c-modal-box__title",
  modalBoxTitleIcon: "pf-v5-c-modal-box__title-icon",
  modalBoxTitleText: "pf-v5-c-modal-box__title-text",
  modifiers: {
    sm: "pf-m-sm",
    md: "pf-m-md",
    lg: "pf-m-lg",
    alignTop: "pf-m-align-top",
    danger: "pf-m-danger",
    warning: "pf-m-warning",
    success: "pf-m-success",
    custom: "pf-m-custom",
    info: "pf-m-info",
    help: "pf-m-help",
    icon: "pf-m-icon"
  },
  themeDark: "pf-v5-theme-dark"
}, C1 = {
  bullseye: "pf-v5-l-bullseye"
}, x1 = (e) => {
  var { children: t = null, className: n = "" } = e, r = oe(e, ["children", "className"]);
  return h.createElement("div", Object.assign({}, r, { className: $(po.backdrop, n) }), t);
};
x1.displayName = "Backdrop";
const S1 = (e) => {
  var { children: t = null, className: n = "" } = e, r = oe(e, ["children", "className"]);
  return h.createElement("div", Object.assign({}, r, { className: $(Hn.modalBoxBody, n) }), t);
};
S1.displayName = "ModalBoxBody";
const Ch = (e) => {
  var { className: t, onClose: n = () => {
  }, "aria-label": r = "Close", ouiaId: i } = e, s = oe(e, ["className", "onClose", "aria-label", "ouiaId"]);
  return h.createElement(
    "div",
    { className: $(Hn.modalBoxClose, t) },
    h.createElement(
      z,
      Object.assign({ variant: "plain", onClick: (o) => n(o), "aria-label": r }, i && { ouiaId: `${i}-${Ch.displayName}` }, s),
      h.createElement(Oa, null)
    )
  );
};
Ch.displayName = "ModalBoxCloseButton";
const EP = {
  name: "--pf-v5-c-modal-box--m-align-top--spacer",
  value: "0.5rem",
  var: "var(--pf-v5-c-modal-box--m-align-top--spacer)"
}, w1 = (e) => {
  var { children: t, className: n = "", variant: r = "default", position: i, positionOffset: s, "aria-labelledby": o, "aria-label": l = "", "aria-describedby": c, style: d } = e, u = oe(e, ["children", "className", "variant", "position", "positionOffset", "aria-labelledby", "aria-label", "aria-describedby", "style"]);
  return s && (d = d || {}, d[EP.name] = s), h.createElement("div", Object.assign({}, u, { role: "dialog", "aria-label": l || null, "aria-labelledby": o || null, "aria-describedby": c, "aria-modal": "true", className: $(Hn.modalBox, n, i === "top" && Hn.modifiers.alignTop, r === "large" && Hn.modifiers.lg, r === "small" && Hn.modifiers.sm, r === "medium" && Hn.modifiers.md), style: d }), t);
};
w1.displayName = "ModalBox";
const ef = (e) => {
  var { children: t = null, className: n = "" } = e, r = oe(e, ["children", "className"]);
  return h.createElement("footer", Object.assign({}, r, { className: $(Hn.modalBoxFooter, n) }), t);
};
ef.displayName = "ModalBoxFooter";
const k1 = (e) => {
  var { children: t = null, className: n = "", id: r = "" } = e, i = oe(e, ["children", "className", "id"]);
  return h.createElement("div", Object.assign({}, i, { id: r, className: $(Hn.modalBoxDescription, n) }), t);
};
k1.displayName = "ModalBoxDescription";
const tf = (e) => {
  var { children: t = null, className: n = "", help: r = null } = e, i = oe(e, ["children", "className", "help"]);
  return h.createElement(
    "header",
    Object.assign({ className: $(Hn.modalBoxHeader, r && Hn.modifiers.help, n) }, i),
    r && h.createElement(
      h.Fragment,
      null,
      h.createElement("div", { className: $(Hn.modalBoxHeaderMain) }, t),
      h.createElement("div", { className: `${Hn.modalBoxHeader}-help` }, r)
    ),
    !r && t
  );
};
tf.displayName = "ModalBoxHeader";
const ea = {
  modifiers: {
    top: "pf-m-top",
    topLeft: "pf-m-top-left",
    topRight: "pf-m-top-right",
    bottom: "pf-m-bottom",
    bottomLeft: "pf-m-bottom-left",
    bottomRight: "pf-m-bottom-right",
    left: "pf-m-left",
    leftTop: "pf-m-left-top",
    leftBottom: "pf-m-left-bottom",
    right: "pf-m-right",
    rightTop: "pf-m-right-top",
    rightBottom: "pf-m-right-bottom",
    textAlignLeft: "pf-m-text-align-left"
  },
  themeDark: "pf-v5-theme-dark",
  tooltip: "pf-v5-c-tooltip",
  tooltipArrow: "pf-v5-c-tooltip__arrow",
  tooltipContent: "pf-v5-c-tooltip__content"
}, O1 = (e) => {
  var { className: t, children: n, isLeftAligned: r } = e, i = oe(e, ["className", "children", "isLeftAligned"]);
  return h.createElement("div", Object.assign({ className: $(ea.tooltipContent, r && ea.modifiers.textAlignLeft, t) }, i), n);
};
O1.displayName = "TooltipContent";
const T1 = (e) => {
  var { className: t } = e, n = oe(e, ["className"]);
  return h.createElement("div", Object.assign({ className: $(ea.tooltipArrow, t) }, n));
};
T1.displayName = "TooltipArrow";
const Gb = {
  name: "--pf-v5-c-tooltip--MaxWidth",
  value: "18.75rem",
  var: "var(--pf-v5-c-tooltip--MaxWidth)"
};
var nf;
(function(e) {
  e.auto = "auto", e.top = "top", e.bottom = "bottom", e.left = "left", e.right = "right", e.topStart = "top-start", e.topEnd = "top-end", e.bottomStart = "bottom-start", e.bottomEnd = "bottom-end", e.leftStart = "left-start", e.leftEnd = "left-end", e.rightStart = "right-start", e.rightEnd = "right-end";
})(nf || (nf = {}));
let IP = 1;
const Yt = (e) => {
  var {
    content: t,
    position: n = "top",
    trigger: r = "mouseenter focus",
    isVisible: i = !1,
    isContentLeftAligned: s = !1,
    enableFlip: o = !0,
    className: l = "",
    entryDelay: c = 300,
    exitDelay: d = 300,
    appendTo: u = () => document.body,
    zIndex: p = 9999,
    minWidth: m,
    maxWidth: f = Gb.value,
    distance: g = 15,
    aria: b = "describedby",
    // For every initial starting position, there are 3 escape positions
    flipBehavior: v = ["top", "right", "bottom", "left", "top", "right", "bottom"],
    id: y = `pf-tooltip-${IP++}`,
    children: x,
    animationDuration: w = 300,
    triggerRef: R,
    "aria-live": S = R ? "polite" : "off",
    onTooltipHidden: _ = () => {
    }
  } = e, O = oe(e, ["content", "position", "trigger", "isVisible", "isContentLeftAligned", "enableFlip", "className", "entryDelay", "exitDelay", "appendTo", "zIndex", "minWidth", "maxWidth", "distance", "aria", "flipBehavior", "id", "children", "animationDuration", "triggerRef", "aria-live", "onTooltipHidden"]);
  const E = r.includes("mouseenter"), T = r.includes("focus"), I = r.includes("click"), k = r === "manual", [P, D] = h.useState(!1), F = h.createRef(), A = (j) => {
    k || j.key === dn.Escape && P && U();
  }, M = (j) => {
    j.key === dn.Enter && (P ? U() : V());
  };
  h.useEffect(() => {
    i ? V() : U();
  }, [i]);
  const V = () => {
    D(!0);
  }, U = () => {
    D(!1);
  }, G = {
    top: ea.modifiers.top,
    bottom: ea.modifiers.bottom,
    left: ea.modifiers.left,
    right: ea.modifiers.right,
    "top-start": ea.modifiers.topLeft,
    "top-end": ea.modifiers.topRight,
    "bottom-start": ea.modifiers.bottomLeft,
    "bottom-end": ea.modifiers.bottomRight,
    "left-start": ea.modifiers.leftTop,
    "left-end": ea.modifiers.leftBottom,
    "right-start": ea.modifiers.rightTop,
    "right-end": ea.modifiers.rightBottom
  }, q = f !== Gb.value, L = h.createElement(
    "div",
    Object.assign({ "aria-live": S, className: $(ea.tooltip, l), role: "tooltip", id: y, style: {
      maxWidth: q ? f : null
    }, ref: F }, O),
    h.createElement(T1, null),
    h.createElement(O1, { isLeftAligned: s }, t)
  ), K = (j, W) => {
    P ? U() : j.target === W && V();
  }, B = () => b === "describedby" && x && x.props && !x.props["aria-describedby"] ? h.cloneElement(x, { "aria-describedby": y }) : b === "labelledby" && x.props && !x.props["aria-labelledby"] ? h.cloneElement(x, { "aria-labelledby": y }) : x;
  return h.createElement(Qr, { trigger: b !== "none" && P ? B() : x, triggerRef: R, popper: L, popperRef: F, minWidth: m !== void 0 ? m : "revert", appendTo: u, isVisible: P, positionModifiers: G, distance: g, placement: n, onMouseEnter: E && V, onMouseLeave: E && U, onPopperMouseEnter: E && V, onPopperMouseLeave: E && U, onFocus: T && V, onBlur: T && U, onDocumentClick: I && K, onDocumentKeyDown: k ? null : A, onTriggerEnter: k ? null : M, enableFlip: o, zIndex: p, flipBehavior: v, animationDuration: w, entryDelay: c, exitDelay: d, onHidden: _ });
};
Yt.displayName = "Tooltip";
const PP = {
  name: "CheckCircleIcon",
  height: 512,
  width: 512,
  svgPath: "M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z",
  yOffset: 0,
  xOffset: 0
}, Ks = Qe(PP), _P = {
  name: "ExclamationCircleIcon",
  height: 512,
  width: 512,
  svgPath: "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z",
  yOffset: 0,
  xOffset: 0
}, ds = Qe(_P), RP = {
  name: "ExclamationTriangleIcon",
  height: 512,
  width: 576,
  svgPath: "M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z",
  yOffset: 0,
  xOffset: 0
}, Kc = Qe(RP), AP = {
  name: "InfoCircleIcon",
  height: 512,
  width: 512,
  svgPath: "M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 110c23.196 0 42 18.804 42 42s-18.804 42-42 42-42-18.804-42-42 18.804-42 42-42zm56 254c0 6.627-5.373 12-12 12h-88c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h12v-64h-12c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h64c6.627 0 12 5.373 12 12v100h12c6.627 0 12 5.373 12 12v24z",
  yOffset: 0,
  xOffset: 0
}, _i = Qe(AP), LP = {
  name: "BellIcon",
  height: 1024,
  width: 896,
  svgPath: "M448,0 C465.333333,0 480.333333,6.33333333 493,19 C505.666667,31.6666667 512,46.6666667 512,64 L512,106 L514.23,106.45 C587.89,121.39 648.48,157.24 696,214 C744,271.333333 768,338.666667 768,416 C768,500 780,568.666667 804,622 C818.666667,652.666667 841.333333,684 872,716 C873.773676,718.829136 875.780658,721.505113 878,724 C890,737.333333 896,752.333333 896,769 C896,785.666667 890,800.333333 878,813 C866,825.666667 850.666667,832 832,832 L63.3,832 C44.9533333,831.84 29.8533333,825.506667 18,813 C6,800.333333 0,785.666667 0,769 C0,752.333333 6,737.333333 18,724 L24,716 L25.06,714.9 C55.1933333,683.28 77.5066667,652.313333 92,622 C116,568.666667 128,500 128,416 C128,338.666667 152,271.333333 200,214 C248,156.666667 309.333333,120.666667 384,106 L384,63.31 C384.166667,46.27 390.5,31.5 403,19 C415.666667,6.33333333 430.666667,0 448,0 Z M576,896 L576,897.08 C575.74,932.6 563.073333,962.573333 538,987 C512.666667,1011.66667 482.666667,1024 448,1024 C413.333333,1024 383.333333,1011.66667 358,987 C332.666667,962.333333 320,932 320,896 L576,896 Z",
  yOffset: 0,
  xOffset: 0
}, xh = Qe(LP), Bd = (e) => ["success", "danger", "warning", "info", "custom"].includes(e), E1 = (e) => {
  var { className: t = "", id: n, title: r, titleIconVariant: i, titleLabel: s = "" } = e, o = oe(e, ["className", "id", "title", "titleIconVariant", "titleLabel"]);
  const [l, c] = h.useState(!1), d = h.useRef(null), u = s || (Bd(i) ? `${ic(i)} alert:` : s), p = {
    success: h.createElement(Ks, null),
    danger: h.createElement(ds, null),
    warning: h.createElement(Kc, null),
    info: h.createElement(_i, null),
    custom: h.createElement(xh, null)
  }, m = !Bd(i) && i;
  dc(() => {
    c(d.current && d.current.offsetWidth < d.current.scrollWidth);
  }, []);
  const f = h.createElement(
    "h1",
    Object.assign({ id: n, ref: d, className: $(Hn.modalBoxTitle, i && Hn.modifiers.icon, t) }, o),
    i && h.createElement("span", { className: $(Hn.modalBoxTitleIcon) }, Bd(i) ? p[i] : h.createElement(m, null)),
    u && h.createElement("span", { className: "pf-v5-screen-reader" }, u),
    h.createElement("span", { className: $(Hn.modalBoxTitleText) }, r)
  );
  return l ? h.createElement(Yt, { content: r }, f) : f;
};
E1.displayName = "ModalBoxTitle";
const Sh = (e) => {
  var { children: t, className: n = "", isOpen: r = !1, header: i = null, help: s = null, description: o = null, title: l = "", titleIconVariant: c = null, titleLabel: d = "", "aria-label": u = "", "aria-describedby": p, "aria-labelledby": m, bodyAriaLabel: f, bodyAriaRole: g, showClose: b = !0, footer: v = null, actions: y = [], onClose: x = () => {
  }, variant: w = "default", position: R, positionOffset: S, width: _, maxWidth: O, boxId: E, labelId: T, descriptorId: I, disableFocusTrap: k = !1, hasNoBodyWrapper: P = !1, ouiaId: D, ouiaSafe: F = !0, elementToFocus: A } = e, M = oe(e, ["children", "className", "isOpen", "header", "help", "description", "title", "titleIconVariant", "titleLabel", "aria-label", "aria-describedby", "aria-labelledby", "bodyAriaLabel", "bodyAriaRole", "showClose", "footer", "actions", "onClose", "variant", "position", "positionOffset", "width", "maxWidth", "boxId", "labelId", "descriptorId", "disableFocusTrap", "hasNoBodyWrapper", "ouiaId", "ouiaSafe", "elementToFocus"]);
  if (!r)
    return null;
  const V = i ? h.createElement(tf, { help: s }, i) : l && h.createElement(
    tf,
    { help: s },
    h.createElement(E1, { title: l, titleIconVariant: c, titleLabel: d, id: T }),
    o && h.createElement(k1, { id: I }, o)
  ), U = v ? h.createElement(ef, null, v) : y.length > 0 && h.createElement(ef, null, y), G = f ? "region" : void 0, L = !o && !p ? I : void 0, K = P ? t : h.createElement(S1, Object.assign({ "aria-label": f, role: g || G }, M, { id: L }), t), B = () => {
    if (m === null)
      return null;
    const W = [];
    return (u && E) !== "" && W.push(u && E), m && W.push(m), l && W.push(T), W.join(" ");
  }, j = h.createElement(
    w1,
    Object.assign({ id: E, className: $(n, Bd(c) && Hn.modifiers[c]), variant: w, position: R, positionOffset: S, "aria-label": u, "aria-labelledby": B(), "aria-describedby": p || (P ? null : I) }, Yn(Sh.displayName, D, F), { style: Object.assign(Object.assign({}, _ && { "--pf-v5-c-modal-box--Width": typeof _ != "number" ? _ : `${_}px` }), O && {
      "--pf-v5-c-modal-box--MaxWidth": typeof O != "number" ? O : `${O}px`
    }) }),
    b && h.createElement(Ch, { onClose: (W) => x(W), ouiaId: D }),
    V,
    K,
    U
  );
  return h.createElement(
    x1,
    null,
    h.createElement(Hu, { active: !k, focusTrapOptions: {
      clickOutsideDeactivates: !0,
      tabbableOptions: { displayCheck: "none" },
      // FocusTrap's initialFocus can accept false as a value to prevent initial focus.
      // We want to prevent this in case false is ever passed in.
      initialFocus: A || void 0
    }, className: $(C1.bullseye) }, j)
  );
};
Sh.displayName = "ModalContent";
var Rt;
(function(e) {
  e.small = "small", e.medium = "medium", e.large = "large", e.default = "default";
})(Rt || (Rt = {}));
class ht extends h.Component {
  constructor(t) {
    super(t), this.boxId = "", this.labelId = "", this.descriptorId = "", this.handleEscKeyClick = (s) => {
      var o, l;
      const { onEscapePress: c } = this.props;
      s.key === dn.Escape && this.props.isOpen && (c ? c(s) : (l = (o = this.props).onClose) === null || l === void 0 || l.call(o, s));
    }, this.getElement = (s) => typeof s == "function" ? s() : s || document.body, this.toggleSiblingsFromScreenReaders = (s) => {
      const { appendTo: o } = this.props, c = this.getElement(o).children;
      for (const d of Array.from(c))
        d !== this.state.container && (s ? d.setAttribute("aria-hidden", "" + s) : d.removeAttribute("aria-hidden"));
    }, this.isEmpty = (s) => s == null || s === "";
    const n = ht.currentId++, r = n + 1, i = n + 2;
    this.boxId = t.id || `pf-modal-part-${n}`, this.labelId = `pf-modal-part-${r}`, this.descriptorId = `pf-modal-part-${i}`, this.state = {
      container: void 0,
      ouiaStateId: cr(ht.displayName, t.variant)
    };
  }
  componentDidMount() {
    const { appendTo: t, title: n, "aria-label": r, "aria-labelledby": i, hasNoBodyWrapper: s, header: o } = this.props, l = this.getElement(t), c = document.createElement("div");
    this.setState({ container: c }), l.appendChild(c), l.addEventListener("keydown", this.handleEscKeyClick, !1), this.props.isOpen ? l.classList.add($(po.backdropOpen)) : l.classList.remove($(po.backdropOpen)), this.isEmpty(n) && this.isEmpty(r) && this.isEmpty(i) && console.error("Modal: Specify at least one of: title, aria-label, aria-labelledby."), this.isEmpty(r) && this.isEmpty(i) && (s || o) && console.error("Modal: When using hasNoBodyWrapper or setting a custom header, ensure you assign an accessible name to the the modal container with aria-label or aria-labelledby.");
  }
  componentDidUpdate() {
    const { appendTo: t } = this.props, n = this.getElement(t);
    this.props.isOpen ? (n.classList.add($(po.backdropOpen)), this.toggleSiblingsFromScreenReaders(!0)) : (n.classList.remove($(po.backdropOpen)), this.toggleSiblingsFromScreenReaders(!1));
  }
  componentWillUnmount() {
    const { appendTo: t } = this.props, n = this.getElement(t);
    this.state.container && n.removeChild(this.state.container), n.removeEventListener("keydown", this.handleEscKeyClick, !1), n.classList.remove($(po.backdropOpen)), this.toggleSiblingsFromScreenReaders(!1);
  }
  render() {
    const t = this.props, {
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      appendTo: n,
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      onEscapePress: r,
      "aria-labelledby": i,
      "aria-label": s,
      "aria-describedby": o,
      bodyAriaLabel: l,
      bodyAriaRole: c,
      title: d,
      titleIconVariant: u,
      titleLabel: p,
      ouiaId: m,
      ouiaSafe: f,
      position: g,
      elementToFocus: b
    } = t, v = oe(t, ["appendTo", "onEscapePress", "aria-labelledby", "aria-label", "aria-describedby", "bodyAriaLabel", "bodyAriaRole", "title", "titleIconVariant", "titleLabel", "ouiaId", "ouiaSafe", "position", "elementToFocus"]), { container: y } = this.state;
    return !Sn || !y ? null : oh.createPortal(h.createElement(Sh, Object.assign({}, v, { boxId: this.boxId, labelId: this.labelId, descriptorId: this.descriptorId, title: d, titleIconVariant: u, titleLabel: p, "aria-label": s, "aria-describedby": o, "aria-labelledby": i, bodyAriaLabel: l, bodyAriaRole: c, ouiaId: m !== void 0 ? m : this.state.ouiaStateId, ouiaSafe: f, position: g, elementToFocus: b })), y);
  }
}
ht.displayName = "Modal";
ht.currentId = 0;
ht.defaultProps = {
  className: "",
  isOpen: !1,
  title: "",
  titleIconVariant: null,
  titleLabel: "",
  "aria-label": "",
  showClose: !0,
  "aria-describedby": "",
  "aria-labelledby": "",
  id: void 0,
  actions: [],
  onClose: () => {
  },
  variant: "default",
  hasNoBodyWrapper: !1,
  appendTo: () => document.body,
  ouiaSafe: !0,
  position: "default"
};
const NP = {
  name: "AngleRightIcon",
  height: 512,
  width: 256,
  svgPath: "M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z",
  yOffset: 0,
  xOffset: 0
}, Nn = Qe(NP), af = {
  actionList: "pf-v5-c-action-list",
  actionListGroup: "pf-v5-c-action-list__group",
  modifiers: {
    icons: "pf-m-icons"
  }
}, qu = (e) => {
  var { children: t, isIconList: n, className: r = "" } = e, i = oe(e, ["children", "isIconList", "className"]);
  return h.createElement("div", Object.assign({ className: $(af.actionList, n && af.modifiers.icons, r) }, i), t);
};
qu.displayName = "ActionList";
const yi = (e) => {
  var { children: t, className: n = "" } = e, r = oe(e, ["children", "className"]);
  return h.createElement("div", Object.assign({ className: $(`${af.actionList}__item`, n) }, r), t);
};
yi.displayName = "ActionListItem";
const fa = {
  alert: "pf-v5-c-alert",
  alertAction: "pf-v5-c-alert__action",
  alertActionGroup: "pf-v5-c-alert__action-group",
  alertDescription: "pf-v5-c-alert__description",
  alertIcon: "pf-v5-c-alert__icon",
  alertTitle: "pf-v5-c-alert__title",
  alertToggle: "pf-v5-c-alert__toggle",
  alertToggleIcon: "pf-v5-c-alert__toggle-icon",
  button: "pf-v5-c-button",
  dirRtl: "pf-v5-m-dir-rtl",
  modifiers: {
    custom: "pf-m-custom",
    success: "pf-m-success",
    danger: "pf-m-danger",
    warning: "pf-m-warning",
    info: "pf-m-info",
    inline: "pf-m-inline",
    plain: "pf-m-plain",
    expandable: "pf-m-expandable",
    expanded: "pf-m-expanded",
    truncate: "pf-m-truncate"
  },
  themeDark: "pf-v5-theme-dark"
}, DP = {
  success: Ks,
  danger: ds,
  warning: Kc,
  info: _i,
  custom: xh
}, MP = (e) => {
  var { variant: t, customIcon: n, className: r = "" } = e, i = oe(e, ["variant", "customIcon", "className"]);
  const s = DP[t];
  return s ? h.createElement("div", Object.assign({}, i, { className: $(fa.alertIcon, r) }), n || h.createElement(s, null)) : null;
}, eu = h.createContext(null), FP = {
  name: "--pf-v5-c-alert__title--max-lines",
  value: "1",
  var: "var(--pf-v5-c-alert__title--max-lines)"
}, I1 = (e) => {
  var { "aria-label": t = "", variantLabel: n, onToggleExpand: r, isExpanded: i = !1 } = e, s = oe(e, ["aria-label", "variantLabel", "onToggleExpand", "isExpanded"]);
  const { title: o, variantLabel: l } = h.useContext(eu);
  return h.createElement(
    z,
    Object.assign({ variant: xe.plain, onClick: r, "aria-expanded": i, "aria-label": t === "" ? `Toggle ${n || l} alert: ${o}` : t }, s),
    h.createElement(
      "span",
      { className: $(fa.alertToggleIcon) },
      h.createElement(Nn, { "aria-hidden": "true" })
    )
  );
};
I1.displayName = "AlertToggleExpandButton";
var ue;
(function(e) {
  e.success = "success", e.danger = "danger", e.warning = "warning", e.info = "info", e.custom = "custom";
})(ue || (ue = {}));
const _n = (e) => {
  var { variant: t = ue.custom, isInline: n = !1, isPlain: r = !1, isLiveRegion: i = !1, variantLabel: s = `${ic(t)} alert:`, actionClose: o, actionLinks: l, title: c, component: d = "h4", children: u = "", className: p = "", ouiaId: m, ouiaSafe: f = !0, timeout: g = !1, timeoutAnimation: b = 3e3, onTimeout: v = () => {
  }, truncateTitle: y = 0, tooltipPosition: x, customIcon: w, isExpandable: R = !1, toggleAriaLabel: S = `${ic(t)} alert details`, onMouseEnter: _ = () => {
  }, onMouseLeave: O = () => {
  }, id: E } = e, T = oe(e, ["variant", "isInline", "isPlain", "isLiveRegion", "variantLabel", "actionClose", "actionLinks", "title", "component", "children", "className", "ouiaId", "ouiaSafe", "timeout", "timeoutAnimation", "onTimeout", "truncateTitle", "tooltipPosition", "customIcon", "isExpandable", "toggleAriaLabel", "onMouseEnter", "onMouseLeave", "id"]);
  const I = Ka(_n.displayName, m, f, t), k = h.createElement(
    h.Fragment,
    null,
    h.createElement("span", { className: "pf-v5-screen-reader" }, s),
    c
  ), P = h.useRef(null), D = d, F = h.useRef(), [A, M] = N(!1);
  h.useEffect(() => {
    if (!P.current || !y)
      return;
    P.current.style.setProperty(FP.name, y.toString());
    const ne = P.current && P.current.offsetHeight < P.current.scrollHeight;
    A !== ne && M(ne);
  }, [P, y, A]);
  const [V, U] = N(!1), [G, q] = N(!0), [L, K] = N(), [B, j] = N(), W = V && G && !L && !B;
  h.useEffect(() => {
    const ne = g === !0 ? 8e3 : Number(g);
    if (ne > 0) {
      const Oe = setTimeout(() => U(!0), ne);
      return () => clearTimeout(Oe);
    }
  }, [g]), h.useEffect(() => {
    const ne = () => {
      F.current && (F.current.contains(document.activeElement) ? (j(!0), q(!1)) : B && j(!1));
    };
    return document.addEventListener("focus", ne, !0), () => document.removeEventListener("focus", ne, !0);
  }, [B]), h.useEffect(() => {
    if (B === !1 || L === !1) {
      const ne = setTimeout(() => q(!0), b);
      return () => clearTimeout(ne);
    }
  }, [B, L, b]), h.useEffect(() => {
    W && v();
  }, [W, v]);
  const [Q, te] = N(!1), ie = () => {
    te(!Q);
  }, ce = (ne) => {
    K(!0), q(!1), _(ne);
  }, Z = (ne) => {
    K(!1), O(ne);
  };
  if (W)
    return null;
  const me = h.createElement(D, Object.assign({}, A && { tabIndex: 0 }, { ref: P, className: $(fa.alertTitle, y && fa.modifiers.truncate) }), k);
  return h.createElement(
    "div",
    Object.assign({ ref: F, className: $(fa.alert, n && fa.modifiers.inline, r && fa.modifiers.plain, R && fa.modifiers.expandable, Q && fa.modifiers.expanded, fa.modifiers[t], p) }, I, i && {
      "aria-live": "polite",
      "aria-atomic": "false"
    }, { onMouseEnter: ce, onMouseLeave: Z, id: E }, T),
    R && h.createElement(
      eu.Provider,
      { value: { title: c, variantLabel: s } },
      h.createElement(
        "div",
        { className: $(fa.alertToggle) },
        h.createElement(I1, { isExpanded: Q, onToggleExpand: ie, "aria-label": S })
      )
    ),
    h.createElement(MP, { variant: t, customIcon: w }),
    A ? h.createElement(Yt, { content: k, position: x }, me) : me,
    o && h.createElement(
      eu.Provider,
      { value: { title: c, variantLabel: s } },
      h.createElement("div", { className: $(fa.alertAction) }, o)
    ),
    u && (!R || R && Q) && h.createElement("div", { className: $(fa.alertDescription) }, u),
    l && h.createElement("div", { className: $(fa.alertActionGroup) }, l)
  );
};
_n.displayName = "Alert";
const wh = (e) => {
  var { className: t, onClose: n = () => {
  }, "aria-label": r = "", variantLabel: i } = e, s = oe(e, ["className", "onClose", "aria-label", "variantLabel"]);
  return h.createElement(eu.Consumer, null, ({ title: o, variantLabel: l }) => h.createElement(
    z,
    Object.assign({ variant: xe.plain, onClick: n, "aria-label": r === "" ? `Close ${i || l} alert: ${o}` : r, className: t }, s),
    h.createElement(Oa, null)
  ));
};
wh.displayName = "AlertActionCloseButton";
const kh = (e) => {
  var { className: t = "", children: n } = e, r = oe(e, ["className", "children"]);
  return h.createElement(z, Object.assign({ variant: xe.link, isInline: !0, className: t }, r), n);
};
kh.displayName = "AlertActionLink";
const zp = {
  alertGroup: "pf-v5-c-alert-group",
  alertGroupOverflowButton: "pf-v5-c-alert-group__overflow-button",
  modifiers: {
    toast: "pf-m-toast"
  }
}, P1 = (e) => {
  var { className: t, children: n, isToast: r, isLiveRegion: i, onOverflowClick: s, overflowMessage: o } = e, l = oe(e, ["className", "children", "isToast", "isLiveRegion", "onOverflowClick", "overflowMessage"]);
  return h.createElement(
    "ul",
    Object.assign({ role: "list", "aria-live": i ? "polite" : null, "aria-atomic": i ? !1 : null, className: $(zp.alertGroup, t, r ? zp.modifiers.toast : "") }, l),
    h.Children.toArray(n).map((c, d) => {
      var u;
      return h.createElement("li", { key: ((u = c.props) === null || u === void 0 ? void 0 : u.id) || d }, c);
    }),
    o && h.createElement(
      "li",
      null,
      h.createElement("button", { onClick: s, className: $(zp.alertGroupOverflowButton) }, o)
    )
  );
};
P1.displayName = "AlertGroupInline";
class _1 extends h.Component {
  constructor() {
    super(...arguments), this.state = {
      container: void 0
    };
  }
  componentDidMount() {
    const t = document.createElement("div"), n = this.getTargetElement();
    this.setState({ container: t }), n.appendChild(t);
  }
  componentWillUnmount() {
    const t = this.getTargetElement();
    this.state.container && t.removeChild(this.state.container);
  }
  getTargetElement() {
    const t = this.props.appendTo;
    return typeof t == "function" ? t() : t || document.body;
  }
  render() {
    const t = this.props, {
      className: n,
      children: r,
      isToast: i,
      isLiveRegion: s,
      onOverflowClick: o,
      overflowMessage: l,
      "aria-label": c,
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      appendTo: d
    } = t, u = oe(t, ["className", "children", "isToast", "isLiveRegion", "onOverflowClick", "overflowMessage", "aria-label", "appendTo"]), p = h.createElement(P1, Object.assign({ onOverflowClick: o, className: n, isToast: i, isLiveRegion: s, overflowMessage: l, "aria-label": c }, u), r);
    if (!this.props.isToast)
      return p;
    const m = this.state.container;
    return !Sn || !m ? null : oh.createPortal(p, m);
  }
}
_1.displayName = "AlertGroup";
const yd = {
  avatar: "pf-v5-c-avatar",
  modifiers: {
    light: "pf-m-light",
    dark: "pf-m-dark",
    sm: "pf-m-sm",
    md: "pf-m-md",
    lg: "pf-m-lg",
    xl: "pf-m-xl"
  }
}, R1 = (e) => {
  var { className: t = "", src: n = "", alt: r, border: i, size: s } = e, o = oe(e, ["className", "src", "alt", "border", "size"]);
  return h.createElement("img", Object.assign({ src: n, alt: r, className: $(yd.avatar, yd.modifiers[s], i === "light" && yd.modifiers.light, i === "dark" && yd.modifiers.dark, t) }, o));
};
R1.displayName = "Avatar";
const $P = {
  name: "AngleUpIcon",
  height: 512,
  width: 320,
  svgPath: "M177 159.7l136 136c9.4 9.4 9.4 24.6 0 33.9l-22.6 22.6c-9.4 9.4-24.6 9.4-33.9 0L160 255.9l-96.4 96.4c-9.4 9.4-24.6 9.4-33.9 0L7 329.7c-9.4-9.4-9.4-24.6 0-33.9l136-136c9.4-9.5 24.6-9.5 34-.1z",
  yOffset: 0,
  xOffset: 0
}, jP = Qe($P), qp = {
  brand: "pf-v5-c-brand",
  modifiers: {
    picture: "pf-m-picture"
  }
}, BP = {
  name: "--pf-v5-c-brand--Height",
  value: "auto",
  var: "var(--pf-v5-c-brand--Height)"
}, UP = {
  name: "--pf-v5-c-brand--Width",
  value: "auto",
  var: "var(--pf-v5-c-brand--Width)"
}, A1 = (e) => {
  var { className: t = "", src: n = "", alt: r, children: i, widths: s, heights: o, style: l } = e, c = oe(e, ["className", "src", "alt", "children", "widths", "heights", "style"]);
  let d;
  return s !== void 0 && (d = Object.assign({}, _o(s, UP.name))), o !== void 0 && (d = Object.assign(Object.assign({}, d), _o(o, BP.name))), /** the brand component currently contains no styling the 'pf-v5-c-brand' string will be used for the className */
  i !== void 0 ? h.createElement(
    "picture",
    Object.assign({ className: $(qp.brand, qp.modifiers.picture, t), style: Object.assign(Object.assign({}, l), d) }, c),
    i,
    h.createElement("img", { src: n, alt: r })
  ) : h.createElement("img", Object.assign({}, c, { className: $(qp.brand, t), style: Object.assign(Object.assign({}, l), d), src: n, alt: r }));
};
A1.displayName = "Brand";
const Fr = {
  breadcrumb: "pf-v5-c-breadcrumb",
  breadcrumbDropdown: "pf-v5-c-breadcrumb__dropdown",
  breadcrumbHeading: "pf-v5-c-breadcrumb__heading",
  breadcrumbItem: "pf-v5-c-breadcrumb__item",
  breadcrumbItemDivider: "pf-v5-c-breadcrumb__item-divider",
  breadcrumbLink: "pf-v5-c-breadcrumb__link",
  breadcrumbList: "pf-v5-c-breadcrumb__list",
  dirRtl: "pf-v5-m-dir-rtl",
  dropdownToggle: "pf-v5-c-dropdown__toggle",
  modifiers: {
    current: "pf-m-current"
  }
}, Hc = (e) => {
  var { children: t = null, className: n = "", "aria-label": r = "Breadcrumb", ouiaId: i, ouiaSafe: s = !0 } = e, o = oe(e, ["children", "className", "aria-label", "ouiaId", "ouiaSafe"]);
  const l = Ka(Hc.displayName, i, s);
  return h.createElement(
    "nav",
    Object.assign({}, o, { "aria-label": r, className: $(Fr.breadcrumb, n) }, l),
    h.createElement("ol", { className: Fr.breadcrumbList, role: "list" }, h.Children.map(t, (c, d) => {
      const u = d > 0;
      return h.isValidElement(c) ? h.cloneElement(c, { showDivider: u }) : c;
    }))
  );
};
Hc.displayName = "Breadcrumb";
const Ao = (e) => {
  var { children: t = null, className: n = "", to: r = void 0, isActive: i = !1, isDropdown: s = !1, showDivider: o, target: l = void 0, component: c = "a", render: d = void 0 } = e, u = oe(e, ["children", "className", "to", "isActive", "isDropdown", "showDivider", "target", "component", "render"]);
  const p = c, m = i ? "page" : void 0, f = $(Fr.breadcrumbLink, i && Fr.modifiers.current);
  return h.createElement(
    "li",
    Object.assign({}, u, { className: $(Fr.breadcrumbItem, n) }),
    o && h.createElement(
      "span",
      { className: Fr.breadcrumbItemDivider },
      h.createElement(Nn, null)
    ),
    c === "button" && h.createElement("button", { className: f, "aria-current": m, type: "button" }, t),
    s && h.createElement("span", { className: $(Fr.breadcrumbDropdown) }, t),
    d && d({ className: f, ariaCurrent: m }),
    r && !d && h.createElement(p, { href: r, target: l, className: f, "aria-current": m }, t),
    !r && c !== "button" && !s && t
  );
};
Ao.displayName = "BreadcrumbItem";
const Gn = {
  formControl: "pf-v5-c-form-control",
  formControlIcon: "pf-v5-c-form-control__icon",
  formControlToggleIcon: "pf-v5-c-form-control__toggle-icon",
  formControlUtilities: "pf-v5-c-form-control__utilities",
  modifiers: {
    readonly: "pf-m-readonly",
    success: "pf-m-success",
    warning: "pf-m-warning",
    error: "pf-m-error",
    plain: "pf-m-plain",
    expanded: "pf-m-expanded",
    disabled: "pf-m-disabled",
    icon: "pf-m-icon",
    placeholder: "pf-m-placeholder",
    resizeVertical: "pf-m-resize-vertical",
    resizeHorizontal: "pf-m-resize-horizontal",
    resizeBoth: "pf-m-resize-both",
    status: "pf-m-status"
  },
  themeDark: "pf-v5-theme-dark"
}, VP = {
  success: Ks,
  error: ds,
  warning: Kc
}, rf = (e) => {
  var { status: t, customIcon: n, className: r } = e, i = oe(e, ["status", "customIcon", "className"]);
  const s = t && VP[t];
  return h.createElement("span", Object.assign({ className: $(Gn.formControlIcon, t && Gn.modifiers.status, r) }, i), n || h.createElement(s, null));
};
var sf;
(function(e) {
  e.text = "text", e.date = "date", e.datetimeLocal = "datetime-local", e.email = "email", e.month = "month", e.number = "number", e.password = "password", e.search = "search", e.tel = "tel", e.time = "time", e.url = "url";
})(sf || (sf = {}));
var Wb;
(function(e) {
  e.default = "default", e.plain = "plain";
})(Wb || (Wb = {}));
class zc extends h.Component {
  constructor(t) {
    super(t), this.inputRef = h.createRef(), this.observer = () => {
    }, this.handleChange = (n) => {
      this.props.onChange && this.props.onChange(n, n.currentTarget.value);
    }, this.handleResize = () => {
      const n = this.props.innerRef || this.inputRef;
      n && n.current && l2(n.current, String(this.props.value));
    }, this.restoreText = () => {
      const n = this.props.innerRef || this.inputRef;
      n.current.value = String(this.props.value), n.current.scrollLeft = n.current.scrollWidth;
    }, this.onFocus = (n) => {
      const { isLeftTruncated: r, isStartTruncated: i, onFocus: s } = this.props;
      (r || i) && this.restoreText(), s && s(n);
    }, this.onBlur = (n) => {
      const { isLeftTruncated: r, isStartTruncated: i, onBlur: s } = this.props;
      (r || i) && this.handleResize(), s && s(n);
    }, this.sanitizeInputValue = (n) => typeof n == "string" ? n.replace(/\n/g, " ") : n, !t.id && !t["aria-label"] && !t["aria-labelledby"] && console.error("Text input:", "Text input requires either an id or aria-label to be specified"), this.state = {
      ouiaStateId: cr(zc.displayName)
    };
  }
  componentDidMount() {
    if (this.props.isLeftTruncated || this.props.isStartTruncated) {
      const t = this.props.innerRef || this.inputRef;
      this.observer = Wo(t.current, this.handleResize, !0), this.handleResize();
    }
  }
  componentWillUnmount() {
    (this.props.isLeftTruncated || this.props.isStartTruncated) && this.observer();
  }
  render() {
    const t = this.props, {
      innerRef: n,
      className: r,
      type: i,
      value: s,
      placeholder: o,
      validated: l,
      /* eslint-disable @typescript-eslint/no-unused-vars */
      onChange: c,
      onFocus: d,
      onBlur: u,
      isLeftTruncated: p,
      isStartTruncated: m,
      isExpanded: f,
      expandedProps: g,
      readOnly: b,
      readOnlyVariant: v,
      isRequired: y,
      isDisabled: x,
      customIcon: w,
      ouiaId: R,
      ouiaSafe: S
    } = t, _ = oe(t, ["innerRef", "className", "type", "value", "placeholder", "validated", "onChange", "onFocus", "onBlur", "isLeftTruncated", "isStartTruncated", "isExpanded", "expandedProps", "readOnly", "readOnlyVariant", "isRequired", "isDisabled", "customIcon", "ouiaId", "ouiaSafe"]), O = ["success", "error", "warning"].includes(l), E = g ? { "aria-expanded": g?.isExpanded, "aria-controls": g?.ariaControls, role: "combobox" } : {};
    return h.createElement(
      "span",
      { className: $(Gn.formControl, v && Gn.modifiers.readonly, v === "plain" && Gn.modifiers.plain, x && Gn.modifiers.disabled, (f || g?.isExpanded) && Gn.modifiers.expanded, w && Gn.modifiers.icon, O && Gn.modifiers[l], r) },
      h.createElement("input", Object.assign({}, _, { onFocus: this.onFocus, onBlur: this.onBlur, onChange: this.handleChange, type: i, value: this.sanitizeInputValue(s), "aria-invalid": _["aria-invalid"] ? _["aria-invalid"] : l === Pn.error }, E, { required: y, disabled: x, readOnly: !!v || b, ref: n || this.inputRef, placeholder: o }, Yn(mt.displayName, R !== void 0 ? R : this.state.ouiaStateId, S))),
      (w || O) && h.createElement(
        "span",
        { className: $(Gn.formControlUtilities) },
        w && h.createElement(rf, { customIcon: w }),
        O && h.createElement(rf, { status: l })
      )
    );
  }
}
zc.displayName = "TextInputBase";
zc.defaultProps = {
  "aria-label": null,
  isRequired: !1,
  validated: "default",
  isDisabled: !1,
  isExpanded: !1,
  type: sf.text,
  isLeftTruncated: !1,
  isStartTruncated: !1,
  onChange: () => {
  },
  ouiaSafe: !0
};
const mt = h.forwardRef((e, t) => h.createElement(zc, Object.assign({}, e, { innerRef: t })));
mt.displayName = "TextInput";
const lt = {
  breadcrumb: "pf-v5-c-breadcrumb",
  check: "pf-v5-c-check",
  dirRtl: "pf-v5-m-dir-rtl",
  divider: "pf-v5-c-divider",
  menu: "pf-v5-c-menu",
  menuBreadcrumb: "pf-v5-c-menu__breadcrumb",
  menuContent: "pf-v5-c-menu__content",
  menuFooter: "pf-v5-c-menu__footer",
  menuGroup: "pf-v5-c-menu__group",
  menuGroupTitle: "pf-v5-c-menu__group-title",
  menuHeader: "pf-v5-c-menu__header",
  menuItem: "pf-v5-c-menu__item",
  menuItemAction: "pf-v5-c-menu__item-action",
  menuItemActionIcon: "pf-v5-c-menu__item-action-icon",
  menuItemCheck: "pf-v5-c-menu__item-check",
  menuItemDescription: "pf-v5-c-menu__item-description",
  menuItemExternalIcon: "pf-v5-c-menu__item-external-icon",
  menuItemIcon: "pf-v5-c-menu__item-icon",
  menuItemMain: "pf-v5-c-menu__item-main",
  menuItemSelectIcon: "pf-v5-c-menu__item-select-icon",
  menuItemText: "pf-v5-c-menu__item-text",
  menuItemToggleIcon: "pf-v5-c-menu__item-toggle-icon",
  menuList: "pf-v5-c-menu__list",
  menuListItem: "pf-v5-c-menu__list-item",
  menuSearch: "pf-v5-c-menu__search",
  modifiers: {
    hidden: "pf-m-hidden",
    hiddenOnSm: "pf-m-hidden-on-sm",
    visibleOnSm: "pf-m-visible-on-sm",
    hiddenOnMd: "pf-m-hidden-on-md",
    visibleOnMd: "pf-m-visible-on-md",
    hiddenOnLg: "pf-m-hidden-on-lg",
    visibleOnLg: "pf-m-visible-on-lg",
    hiddenOnXl: "pf-m-hidden-on-xl",
    visibleOnXl: "pf-m-visible-on-xl",
    hiddenOn_2xl: "pf-m-hidden-on-2xl",
    visibleOn_2xl: "pf-m-visible-on-2xl",
    flyout: "pf-m-flyout",
    top: "pf-m-top",
    left: "pf-m-left",
    drilldown: "pf-m-drilldown",
    drilledIn: "pf-m-drilled-in",
    currentPath: "pf-m-current-path",
    static: "pf-m-static",
    plain: "pf-m-plain",
    scrollable: "pf-m-scrollable",
    nav: "pf-m-nav",
    focus: "pf-m-focus",
    disabled: "pf-m-disabled",
    ariaDisabled: "pf-m-aria-disabled",
    load: "pf-m-load",
    loading: "pf-m-loading",
    danger: "pf-m-danger",
    selected: "pf-m-selected",
    favorite: "pf-m-favorite",
    favorited: "pf-m-favorited"
  },
  themeDark: "pf-v5-theme-dark"
}, Xb = {
  badge: "pf-v5-c-badge",
  check: "pf-v5-c-check",
  divider: "pf-v5-c-divider",
  dropdown: "pf-v5-c-dropdown",
  dropdownGroup: "pf-v5-c-dropdown__group",
  dropdownGroupTitle: "pf-v5-c-dropdown__group-title",
  dropdownMenu: "pf-v5-c-dropdown__menu",
  dropdownMenuItem: "pf-v5-c-dropdown__menu-item",
  dropdownMenuItemDescription: "pf-v5-c-dropdown__menu-item-description",
  dropdownMenuItemIcon: "pf-v5-c-dropdown__menu-item-icon",
  dropdownMenuItemMain: "pf-v5-c-dropdown__menu-item-main",
  dropdownToggle: "pf-v5-c-dropdown__toggle",
  dropdownToggleButton: "pf-v5-c-dropdown__toggle-button",
  dropdownToggleCheck: "pf-v5-c-dropdown__toggle-check",
  dropdownToggleIcon: "pf-v5-c-dropdown__toggle-icon",
  dropdownToggleImage: "pf-v5-c-dropdown__toggle-image",
  dropdownToggleProgress: "pf-v5-c-dropdown__toggle-progress",
  dropdownToggleText: "pf-v5-c-dropdown__toggle-text",
  menu: "pf-v5-c-menu",
  modifiers: {
    fullHeight: "pf-m-full-height",
    expanded: "pf-m-expanded",
    action: "pf-m-action",
    disabled: "pf-m-disabled",
    plain: "pf-m-plain",
    text: "pf-m-text",
    splitButton: "pf-m-split-button",
    primary: "pf-m-primary",
    inProgress: "pf-m-in-progress",
    active: "pf-m-active",
    secondary: "pf-m-secondary",
    top: "pf-m-top",
    static: "pf-m-static",
    alignRight: "pf-m-align-right",
    alignLeft: "pf-m-align-left",
    alignRightOnSm: "pf-m-align-right-on-sm",
    alignLeftOnSm: "pf-m-align-left-on-sm",
    alignRightOnMd: "pf-m-align-right-on-md",
    alignLeftOnMd: "pf-m-align-left-on-md",
    alignRightOnLg: "pf-m-align-right-on-lg",
    alignLeftOnLg: "pf-m-align-left-on-lg",
    alignRightOnXl: "pf-m-align-right-on-xl",
    alignLeftOnXl: "pf-m-align-left-on-xl",
    alignRightOn_2xl: "pf-m-align-right-on-2xl",
    alignLeftOn_2xl: "pf-m-align-left-on-2xl",
    ariaDisabled: "pf-m-aria-disabled",
    icon: "pf-m-icon",
    description: "pf-m-description"
  },
  spinner: "pf-v5-c-spinner",
  themeDark: "pf-v5-theme-dark"
}, Rs = h.createContext({
  menuId: null,
  parentMenu: null,
  onActionClick: () => null,
  onSelect: () => null,
  activeItemId: null,
  selected: null,
  drilledInMenus: [],
  drilldownItemPath: [],
  onDrillIn: null,
  onDrillOut: null,
  onGetMenuHeight: () => null,
  flyoutRef: null,
  setFlyoutRef: () => null,
  disableHover: !1,
  role: "menu"
}), L1 = h.createContext({
  itemId: null,
  isDisabled: !1
});
class Gu extends h.Component {
  constructor(t) {
    super(t), this.menuRef = h.createRef(), this.activeMenu = null, this.state = {
      ouiaStateId: cr(as.displayName),
      transitionMoveTarget: null,
      flyoutRef: null,
      disableHover: !1,
      currentDrilldownMenuId: this.props.id
    }, this.handleDrilldownTransition = (n) => {
      const r = this.menuRef.current;
      if (!(!r || r !== n.target.closest(`.${lt.menu}`) && !Array.from(r.getElementsByClassName(lt.menu)).includes(n.target.closest(`.${lt.menu}`))))
        if (this.state.transitionMoveTarget)
          this.state.transitionMoveTarget.focus(), this.setState({ transitionMoveTarget: null });
        else {
          const i = r.querySelector("#" + this.props.activeMenu) || r || null, s = i.getElementsByTagName("UL");
          if (s.length === 0)
            return;
          const o = Array.from(s[0].children);
          if (!this.state.currentDrilldownMenuId || i.id !== this.state.currentDrilldownMenuId)
            this.setState({ currentDrilldownMenuId: i.id });
          else
            return;
          const l = o.filter((c) => !(c.classList.contains("pf-m-disabled") || c.classList.contains(lt.divider)))[0].firstChild;
          l.focus(), l.tabIndex = 0;
        }
    }, this.handleExtraKeys = (n) => {
      const r = this.props.containsDrilldown, i = document.activeElement;
      if (n.target.closest(`.${lt.menu}`) !== this.activeMenu && !n.target.classList.contains(Fr.breadcrumbLink) && (this.activeMenu = n.target.closest(`.${lt.menu}`), this.setState({ disableHover: !0 })), n.target.tagName === "INPUT")
        return;
      const s = this.activeMenu, o = n.key, l = i.classList.contains(Fr.breadcrumbLink) || i.classList.contains(Xb.dropdownToggle);
      if (o === " " || o === "Enter") {
        if (n.preventDefault(), r && !l) {
          if (i.closest("li").classList.contains("pf-m-current-path") && s.parentElement.tagName === "LI")
            i.tabIndex = -1, s.parentElement.firstChild.tabIndex = 0, this.setState({ transitionMoveTarget: s.parentElement.firstChild });
          else if (i.nextElementSibling && i.nextElementSibling.classList.contains(lt.menu)) {
            const d = Array.from(i.nextElementSibling.getElementsByTagName("UL")[0].children).filter((u) => !(u.classList.contains("pf-m-disabled") || u.classList.contains(lt.divider)));
            i.tabIndex = -1, d[0].firstChild.tabIndex = 0, this.setState({ transitionMoveTarget: d[0].firstChild });
          }
        }
        document.activeElement.click();
      }
    }, this.createNavigableElements = () => this.props.containsDrilldown ? this.activeMenu ? Array.from(this.activeMenu.getElementsByTagName("UL")[0].children).filter((r) => !(r.classList.contains("pf-m-disabled") || r.classList.contains(lt.divider))) : [] : this.menuRef.current ? Array.from(this.menuRef.current.getElementsByTagName("LI")).filter((r) => !(r.classList.contains("pf-m-disabled") || r.classList.contains(lt.divider))) : [], t.innerRef && (this.menuRef = t.innerRef);
  }
  allowTabFirstItem() {
    const t = this.menuRef.current;
    if (t) {
      const n = t.querySelector("ul button:not(:disabled), ul a:not(:disabled)");
      n && (n.tabIndex = 0);
    }
  }
  componentDidMount() {
    this.context && this.setState({ disableHover: this.context.disableHover }), Sn && window.addEventListener("transitionend", this.props.isRootMenu ? this.handleDrilldownTransition : null), this.allowTabFirstItem();
  }
  componentWillUnmount() {
    Sn && window.removeEventListener("transitionend", this.handleDrilldownTransition);
  }
  componentDidUpdate(t) {
    t.children !== this.props.children && this.allowTabFirstItem();
  }
  render() {
    const t = this.props, {
      id: n,
      children: r,
      className: i,
      onSelect: s,
      selected: o = null,
      onActionClick: l,
      ouiaId: c,
      ouiaSafe: d,
      containsFlyout: u,
      isNavFlyout: p,
      containsDrilldown: m,
      isMenuDrilledIn: f,
      isPlain: g,
      isScrollable: b,
      drilldownItemPath: v,
      drilledInMenus: y,
      onDrillIn: x,
      onDrillOut: w,
      onGetMenuHeight: R,
      parentMenu: S = null,
      activeItemId: _ = null,
      /* eslint-disable @typescript-eslint/no-unused-vars */
      innerRef: O,
      isRootMenu: E,
      activeMenu: T,
      role: I
    } = t, k = oe(t, ["id", "children", "className", "onSelect", "selected", "onActionClick", "ouiaId", "ouiaSafe", "containsFlyout", "isNavFlyout", "containsDrilldown", "isMenuDrilledIn", "isPlain", "isScrollable", "drilldownItemPath", "drilledInMenus", "onDrillIn", "onDrillOut", "onGetMenuHeight", "parentMenu", "activeItemId", "innerRef", "isRootMenu", "activeMenu", "role"]), P = f || y && y.includes(n) || !1;
    return h.createElement(
      Rs.Provider,
      { value: {
        menuId: n,
        parentMenu: S || n,
        onSelect: s,
        onActionClick: l,
        activeItemId: _,
        selected: o,
        drilledInMenus: y,
        drilldownItemPath: v,
        onDrillIn: x,
        onDrillOut: w,
        onGetMenuHeight: R,
        flyoutRef: this.state.flyoutRef,
        setFlyoutRef: (D) => this.setState({ flyoutRef: D }),
        disableHover: this.state.disableHover,
        role: I
      } },
      E && h.createElement(yh, { containerRef: this.menuRef || null, additionalKeyHandler: this.handleExtraKeys, createNavigableElements: this.createNavigableElements, isActiveElement: (D) => document.activeElement.closest("li") === D || // if element is a basic MenuItem
      document.activeElement.parentElement === D || document.activeElement.closest(`.${lt.menuSearch}`) === D || // if element is a MenuSearch
      document.activeElement.closest("ol") && document.activeElement.closest("ol").firstChild === D, getFocusableElement: (D) => {
        var F, A;
        return D?.tagName === "DIV" && D.querySelector("input") || // for MenuSearchInput
        ((F = D.firstChild) === null || F === void 0 ? void 0 : F.tagName) === "LABEL" && D.querySelector("input") || // for MenuItem checkboxes
        ((A = D.firstChild) === null || A === void 0 ? void 0 : A.tagName) === "DIV" && D.querySelector("a, button, input") || // For aria-disabled element that is rendered inside a div with "display: contents" styling
        D.firstChild;
      }, noHorizontalArrowHandling: document.activeElement && (document.activeElement.classList.contains(Fr.breadcrumbLink) || document.activeElement.classList.contains(Xb.dropdownToggle) || document.activeElement.tagName === "INPUT"), noEnterHandling: !0, noSpaceHandling: !0 }),
      h.createElement("div", Object.assign({ id: n, className: $(lt.menu, g && lt.modifiers.plain, b && lt.modifiers.scrollable, u && lt.modifiers.flyout, p && lt.modifiers.nav, m && lt.modifiers.drilldown, P && lt.modifiers.drilledIn, i), ref: this.menuRef }, Yn(as.displayName, c !== void 0 ? c : this.state.ouiaStateId, d), k), r)
    );
  }
}
Gu.displayName = "Menu";
Gu.contextType = Rs;
Gu.defaultProps = {
  ouiaSafe: !0,
  isRootMenu: !0,
  isPlain: !1,
  isScrollable: !1,
  role: "menu"
};
const as = h.forwardRef((e, t) => h.createElement(Gu, Object.assign({}, e, { innerRef: t })));
as.displayName = "Menu";
const KP = {
  name: "--pf-v5-c-menu__content--Height",
  value: "auto",
  var: "var(--pf-v5-c-menu__content--Height)"
}, HP = {
  name: "--pf-v5-c-menu__content--MaxHeight",
  value: "18.75rem",
  var: "var(--pf-v5-c-menu__content--MaxHeight)"
}, Xo = h.forwardRef((e, t) => {
  const { getHeight: n, children: r, menuHeight: i, maxMenuHeight: s } = e, o = oe(e, ["getHeight", "children", "menuHeight", "maxMenuHeight"]), l = h.createRef(), c = (d, u, p) => {
    if (d) {
      let m = d.clientHeight, f = null, g = d.closest(`.${lt.menuList}`);
      for (; g !== null && g.nodeType === 1; )
        g.classList.contains(lt.menuList) && (f = g), g = g.parentElement;
      if (f) {
        const b = getComputedStyle(f), v = parseFloat(b.getPropertyValue("padding-top").replace(/px/g, "")) + parseFloat(b.getPropertyValue("padding-bottom").replace(/px/g, "")) + parseFloat(getComputedStyle(f.parentElement).getPropertyValue("border-bottom-width").replace(/px/g, ""));
        m = m + v;
      }
      p && p(u, m), n && n(m.toString());
    }
    return t || l;
  };
  return h.createElement(Rs.Consumer, null, ({ menuId: d, onGetMenuHeight: u }) => h.createElement("div", Object.assign({}, o, { className: $(lt.menuContent, e.className), ref: (p) => c(p, d, u), style: Object.assign(Object.assign({}, i && { [KP.name]: i }), s && { [HP.name]: s }) }), r));
});
Xo.displayName = "MenuContent";
const N1 = (e) => {
  var { children: t, className: n = "" } = e, r = oe(e, ["children", "className"]);
  return h.createElement("div", Object.assign({}, r, { className: $(lt.menuFooter, n) }), t);
};
N1.displayName = "MenuFooter";
const zP = (e) => {
  var { children: t, className: n = "", label: r = "", titleId: i, innerRef: s, labelHeadingLevel: o = "h1" } = e, l = oe(e, ["children", "className", "label", "titleId", "innerRef", "labelHeadingLevel"]);
  const c = typeof r == "function" ? r : o;
  return h.createElement(
    "section",
    Object.assign({}, l, { className: $(lt.menuGroup, n), ref: s }),
    h.createElement(
      h.Fragment,
      null,
      ["function", "string"].includes(typeof r) ? h.createElement(c, { className: $(lt.menuGroupTitle), id: i }, r) : r,
      t
    )
  );
}, Oh = h.forwardRef((e, t) => h.createElement(zP, Object.assign({}, e, { innerRef: t })));
Oh.displayName = "MenuGroup";
const qP = {
  name: "--pf-v5-c-menu--m-flyout__menu--top-offset",
  value: "0px",
  var: "var(--pf-v5-c-menu--m-flyout__menu--top-offset)"
}, GP = {
  name: "--pf-v5-c-menu--m-flyout__menu--m-left--right-offset",
  value: "0px",
  var: "var(--pf-v5-c-menu--m-flyout__menu--m-left--right-offset)"
}, WP = {
  name: "--pf-v5-c-menu--m-flyout__menu--left-offset",
  value: "0px",
  var: "var(--pf-v5-c-menu--m-flyout__menu--left-offset)"
}, XP = {
  name: "ExternalLinkAltIcon",
  height: 512,
  width: 512,
  svgPath: "M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z",
  yOffset: 0,
  xOffset: 0
}, Th = Qe(XP), YP = {
  name: "AngleLeftIcon",
  height: 512,
  width: 256,
  svgPath: "M31.7 239l136-136c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9L127.9 256l96.4 96.4c9.4 9.4 9.4 24.6 0 33.9L201.7 409c-9.4 9.4-24.6 9.4-33.9 0l-136-136c-9.5-9.4-9.5-24.6-.1-34z",
  yOffset: 0,
  xOffset: 0
}, Hs = Qe(YP), JP = {
  name: "CheckIcon",
  height: 512,
  width: 512,
  svgPath: "M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z",
  yOffset: 0,
  xOffset: 0
}, As = Qe(JP), di = {
  check: "pf-v5-c-check",
  checkBody: "pf-v5-c-check__body",
  checkDescription: "pf-v5-c-check__description",
  checkInput: "pf-v5-c-check__input",
  checkLabel: "pf-v5-c-check__label",
  checkLabelRequired: "pf-v5-c-check__label-required",
  modifiers: {
    standalone: "pf-m-standalone",
    disabled: "pf-m-disabled"
  }
}, D1 = () => {
};
class rn extends h.Component {
  constructor(t) {
    super(t), this.handleChange = (n) => {
      this.props.onChange(n, n.currentTarget.checked);
    }, this.state = {
      ouiaStateId: cr(rn.displayName)
    };
  }
  render() {
    const t = this.props, { "aria-label": n, className: r, inputClassName: i, onChange: s, isLabelWrapped: o, isLabelBeforeButton: l, isValid: c, isDisabled: d, isRequired: u, isChecked: p, label: m, checked: f, defaultChecked: g, description: b, body: v, ouiaId: y, ouiaSafe: x, component: w } = t, R = oe(t, ["aria-label", "className", "inputClassName", "onChange", "isLabelWrapped", "isLabelBeforeButton", "isValid", "isDisabled", "isRequired", "isChecked", "label", "checked", "defaultChecked", "description", "body", "ouiaId", "ouiaSafe", "component"]);
    R.id || console.error("Checkbox:", "id is required to make input accessible");
    const S = {};
    ([!0, !1].includes(f) || p === !0) && (S.checked = f || p), s !== D1 && (S.checked = p), [!1, !0].includes(g) && (S.defaultChecked = g);
    const _ = h.createElement("input", Object.assign({}, R, { className: $(di.checkInput, i), type: "checkbox", onChange: this.handleChange, "aria-invalid": !c, "aria-label": n, disabled: d, required: u, ref: (k) => k && (k.indeterminate = p === null) }, S, Yn(rn.displayName, y !== void 0 ? y : this.state.ouiaStateId, x))), O = o && !w || w === "label", E = O ? "span" : "label", T = m ? h.createElement(
      E,
      { className: $(di.checkLabel, d && di.modifiers.disabled), htmlFor: O ? void 0 : R.id },
      m,
      u && h.createElement("span", { className: $(di.checkLabelRequired), "aria-hidden": "true" }, u1)
    ) : null, I = w ?? (O ? "label" : "div");
    return S.checked = S.checked === null ? !1 : S.checked, h.createElement(
      I,
      { className: $(di.check, !m && di.modifiers.standalone, r), htmlFor: O ? R.id : void 0 },
      l ? h.createElement(
        h.Fragment,
        null,
        T,
        _
      ) : h.createElement(
        h.Fragment,
        null,
        _,
        T
      ),
      b && h.createElement("span", { className: $(di.checkDescription) }, b),
      v && h.createElement("span", { className: $(di.checkBody) }, v)
    );
  }
}
rn.displayName = "Checkbox";
rn.defaultProps = {
  className: "",
  isLabelWrapped: !1,
  isValid: !0,
  isDisabled: !1,
  isRequired: !1,
  isChecked: !1,
  onChange: D1,
  ouiaSafe: !0
};
const ZP = {
  name: "StarIcon",
  height: 512,
  width: 576,
  svgPath: "M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z",
  yOffset: 0,
  xOffset: 0
}, Eh = Qe(ZP), QP = (e) => {
  var { className: t = "", icon: n, onClick: r, "aria-label": i, isFavorited: s = null, isDisabled: o, actionId: l, innerRef: c } = e, d = oe(e, ["className", "icon", "onClick", "aria-label", "isFavorited", "isDisabled", "actionId", "innerRef"]);
  return h.createElement(Rs.Consumer, null, ({ onActionClick: u }) => h.createElement(L1.Consumer, null, ({ itemId: p, isDisabled: m }) => {
    const f = (g) => {
      r && r(g), u && u(g, p, l);
    };
    return h.createElement(
      "button",
      Object.assign({ className: $(lt.menuItemAction, s !== null && lt.modifiers.favorite, s && lt.modifiers.favorited, t), "aria-label": i, onClick: f }, (o === !0 || m === !0) && { disabled: !0 }, { ref: c, tabIndex: -1 }, d),
      h.createElement("span", { className: $(lt.menuItemActionIcon) }, n === "favorites" || s !== null ? h.createElement(Eh, { "aria-hidden": !0 }) : n)
    );
  }));
}, M1 = h.forwardRef((e, t) => h.createElement(QP, Object.assign({}, e, { innerRef: t })));
M1.displayName = "MenuItemAction";
const Yb = h.createContext({
  direction: "right"
}), e_ = (e) => {
  var { children: t, className: n, itemId: r = null, to: i, hasCheckbox: s = !1, isActive: o = null, isFavorited: l = null, isLoadButton: c = !1, isLoading: d = !1, flyoutMenu: u, direction: p, description: m = null, onClick: f = () => {
  }, component: g = "button", isDisabled: b = !1, isAriaDisabled: v = !1, isExternalLink: y = !1, isSelected: x = null, isFocused: w, isDanger: R = !1, icon: S, actions: _, onShowFlyout: O, drilldownMenu: E, isOnPath: T, innerRef: I, id: k, "aria-label": P, tooltipProps: D, rel: F, target: A, download: M } = e, V = oe(e, ["children", "className", "itemId", "to", "hasCheckbox", "isActive", "isFavorited", "isLoadButton", "isLoading", "flyoutMenu", "direction", "description", "onClick", "component", "isDisabled", "isAriaDisabled", "isExternalLink", "isSelected", "isFocused", "isDanger", "icon", "actions", "onShowFlyout", "drilldownMenu", "isOnPath", "innerRef", "id", "aria-label", "tooltipProps", "rel", "target", "download"]);
  const { menuId: U, parentMenu: G, onSelect: q, onActionClick: L, activeItemId: K, selected: B, drilldownItemPath: j, onDrillIn: W, onDrillOut: Q, flyoutRef: te, setFlyoutRef: ie, disableHover: ce, role: Z } = h.useContext(Rs);
  let me = i ? "a" : g;
  s && !i && (me = "label");
  const [ne, Oe] = h.useState(null), Pe = h.useContext(Yb), [$e, fe] = h.useState(Pe.direction), we = h.useRef(), J = we === te, X = u !== void 0, Y = (Xe) => {
    !J && Xe ? ie(we) : J && !Xe && ie(null), O && Xe && O();
  };
  dc(() => {
    if (X && we.current && Sn) {
      const Xe = we.current.lastElementChild;
      if (Xe && Xe.classList.contains(lt.menu)) {
        const It = we.current.getClientRects()[0], en = Xe.getClientRects()[0];
        if (It && en) {
          const qn = It.x - en.width, Ra = window.innerWidth - It.x - It.width - en.width;
          let za = $e;
          Ra < 0 && za !== "left" ? (fe("left"), za = "left") : qn < 0 && za !== "right" && (fe("right"), za = "right");
          let ri = 0;
          qn < 0 && Ra < 0 && (ri = za === "right" ? -Ra : -qn), za === "left" ? (Xe.classList.add(lt.modifiers.left), Xe.style.setProperty(GP.name, `-${ri}px`)) : Xe.style.setProperty(WP.name, `-${ri}px`);
          const ii = window.innerHeight - It.y - en.height;
          window.innerHeight - en.height < 0 && ii < 0 || ii < 0 && Xe.style.setProperty(qP.name, `${ii}px`);
        }
      }
    }
  }, [J, u]), h.useEffect(() => {
    fe(Pe.direction);
  }, [Pe]), h.useEffect(() => {
    if (ne)
      if (J) {
        const Xe = ne.nextElementSibling;
        Array.from(Xe.getElementsByTagName("UL")[0].children).filter((en) => !(en.classList.contains("pf-m-disabled") || en.classList.contains(lt.divider)))[0].firstChild.focus();
      } else
        ne.focus();
  }, [J, ne]);
  const ae = (Xe) => {
    const It = Xe.key, en = Xe.target, qn = Xe.type;
    (It === " " || It === "Enter" || It === "ArrowRight" || qn === "click") && (Xe.stopPropagation(), Xe.preventDefault(), J || (Y(!0), Oe(en))), (It === "Escape" || It === "ArrowLeft") && J && (Xe.stopPropagation(), Y(!1));
  }, de = (Xe, It) => {
    v || (It && It(Xe, r), f && f(Xe));
  }, ye = T && T || j && j.includes(r) || !1;
  let he;
  p && (p === "down" ? he = (Xe) => W && W(Xe, U, typeof E == "function" ? E().props.id : E.props.id, r) : he = (Xe) => Q && Q(Xe, G, r));
  let Ce = {};
  me === "a" ? Ce = {
    href: i,
    "aria-disabled": b || v ? !0 : null,
    // prevent invalid 'disabled' attribute on <a> tags
    disabled: null,
    target: y ? "_blank" : A,
    rel: F,
    download: M
  } : me === "button" && (Ce = {
    type: "button",
    "aria-disabled": v ? !0 : null
  }), T ? Ce["aria-expanded"] = !0 : X && (Ce["aria-haspopup"] = "menu", Ce["aria-expanded"] = J);
  const Ge = () => o !== null ? o ? "page" : null : r !== null && K !== null ? r === K : null, it = () => x !== null ? x : B !== null && r !== null ? Array.isArray(B) && B.includes(r) || r === B : !1, qe = () => {
    ce || (X ? Y(!0) : ie(null));
  };
  h.useEffect(() => {
    if (w && we.current) {
      const Xe = we.current, It = Xe.parentElement;
      if (It) {
        const en = Xe.offsetTop - It.offsetTop < It.scrollTop, qn = Xe.offsetTop - It.offsetTop + Xe.clientHeight;
        (en || qn) && Xe.scrollIntoView({ behavior: "auto", block: "nearest" });
      }
    }
  }, [w]);
  const kt = Z === "listbox", jt = h.createElement(
    h.Fragment,
    null,
    h.createElement($a, null, (Xe) => h.createElement(
      me,
      Object.assign({ id: k, tabIndex: -1, className: $(lt.menuItem, it() && !s && lt.modifiers.selected, n), "aria-current": Ge() }, !s && { disabled: b, "aria-label": P }, !s && !u && { role: kt ? "option" : "menuitem" }, !s && !u && kt && { "aria-selected": it() }, { ref: I }, !s && {
        onClick: (It) => {
          v ? It.preventDefault() : (de(It, q), he && he(It), u && ae(It));
        }
      }, s && { htmlFor: Xe }, Ce),
      h.createElement(
        "span",
        { className: $(lt.menuItemMain) },
        p === "up" && h.createElement(
          "span",
          { className: $(lt.menuItemToggleIcon) },
          h.createElement(Hs, { "aria-hidden": !0 })
        ),
        S && h.createElement("span", { className: $(lt.menuItemIcon) }, S),
        s && h.createElement(
          "span",
          { className: $(lt.menuItemCheck) },
          h.createElement(rn, { id: Xe, component: "span", isChecked: x || !1, onChange: (It) => de(It, q), isDisabled: b, "aria-disabled": v })
        ),
        h.createElement("span", { className: $(lt.menuItemText) }, t),
        y && h.createElement(
          "span",
          { className: $(lt.menuItemExternalIcon) },
          h.createElement(Th, { "aria-hidden": !0 })
        ),
        (u || p === "down") && h.createElement(
          "span",
          { className: $(lt.menuItemToggleIcon) },
          h.createElement(Nn, { "aria-hidden": !0 })
        ),
        it() && h.createElement(
          "span",
          { className: $(lt.menuItemSelectIcon) },
          h.createElement(As, { "aria-hidden": !0 })
        )
      ),
      m && p !== "up" && h.createElement(
        "span",
        { className: $(lt.menuItemDescription) },
        h.createElement("span", null, m)
      )
    )),
    J && h.createElement(
      Rs.Provider,
      { value: { disableHover: ce } },
      h.createElement(Yb.Provider, { value: { direction: $e } }, u)
    ),
    typeof E == "function" ? E() : E,
    h.createElement(
      L1.Provider,
      { value: { itemId: r, isDisabled: b } },
      _,
      l !== null && h.createElement(M1, { icon: "favorites", isFavorited: l, "aria-label": l ? "starred" : "not starred", onClick: (Xe) => L(Xe, r), tabIndex: -1, actionId: "fav" })
    )
  );
  return h.createElement("li", Object.assign({ className: $(lt.menuListItem, b && lt.modifiers.disabled, v && lt.modifiers.ariaDisabled, ye && lt.modifiers.currentPath, c && lt.modifiers.load, d && lt.modifiers.loading, w && lt.modifiers.focus, R && lt.modifiers.danger, n), onMouseOver: () => {
    v || qe();
  } }, u && !v && { onKeyDown: ae }, { ref: we, role: s ? "menuitem" : "none" }, s && { "aria-label": P }, V), D ? h.createElement(Yt, Object.assign({}, D), jt) : jt);
}, Yo = h.forwardRef((e, t) => h.createElement(e_, Object.assign({}, e, { innerRef: t })));
Yo.displayName = "MenuItem";
const Jo = (e) => {
  var { children: t = null, className: n, isAriaMultiselectable: r = !1, "aria-label": i } = e, s = oe(e, ["children", "className", "isAriaMultiselectable", "aria-label"]);
  const { role: o } = h.useContext(Rs);
  return h.createElement("ul", Object.assign({ role: o }, o === "listbox" && { "aria-multiselectable": r }, { className: $(lt.menuList, n), "aria-label": i }, s), t);
};
Jo.displayName = "MenuList";
const t_ = (e) => {
  var { children: t, className: n, onSelect: r, isOpen: i, selected: s, toggle: o, shouldFocusToggleOnSelect: l = !1, shouldFocusFirstItemOnOpen: c = !0, onOpenChange: d, onOpenChangeKeys: u = ["Escape", "Tab"], isPlain: p, innerRef: m, zIndex: f = 9999, role: g = "listbox", popperProps: b, menuHeight: v, maxMenuHeight: y, isScrollable: x } = e, w = oe(e, ["children", "className", "onSelect", "isOpen", "selected", "toggle", "shouldFocusToggleOnSelect", "shouldFocusFirstItemOnOpen", "onOpenChange", "onOpenChangeKeys", "isPlain", "innerRef", "zIndex", "role", "popperProps", "menuHeight", "maxMenuHeight", "isScrollable"]);
  const R = re.useRef(), S = re.useRef(), _ = m || R, O = typeof o == "function" || typeof o != "function" && !o.toggleRef ? S : o?.toggleRef;
  re.useEffect(() => {
    const T = (k) => {
      var P, D, F;
      i && d && (!((P = _.current) === null || P === void 0) && P.contains(k.target) || !((D = O.current) === null || D === void 0) && D.contains(k.target)) && u.includes(k.key) && (k.preventDefault(), d(!1), (F = O.current) === null || F === void 0 || F.focus());
    }, I = (k) => {
      var P, D, F;
      i && c && (!((P = O.current) === null || P === void 0) && P.contains(k.target)) && setTimeout(() => {
        var A;
        const M = (A = _?.current) === null || A === void 0 ? void 0 : A.querySelector("li button:not(:disabled),li input:not(:disabled)");
        M && M.focus();
      }, 0), i && d && !(!((D = O?.current) === null || D === void 0) && D.contains(k.target)) && i && !(!((F = _.current) === null || F === void 0) && F.contains(k.target)) && d(!1);
    };
    return window.addEventListener("keydown", T), window.addEventListener("click", I), () => {
      window.removeEventListener("keydown", T), window.removeEventListener("click", I);
    };
  }, [i, _, O, d, u]);
  const E = re.createElement(
    as,
    Object.assign({ role: g, className: $(n), ref: _, onSelect: (T, I) => {
      r && r(T, I), l && O.current.focus();
    }, isPlain: p, selected: s, isScrollable: x }, Yn(Bn.displayName, w.ouiaId !== void 0 ? w.ouiaId : cr(Bn.displayName), w.ouiaSafe !== void 0 ? w.ouiaSafe : !0), w),
    re.createElement(Xo, { menuHeight: v, maxMenuHeight: y }, t)
  );
  return re.createElement(Qr, Object.assign({ trigger: typeof o == "function" ? o(O) : o.toggleNode, triggerRef: O, popper: E, popperRef: _, isVisible: i, zIndex: f }, b));
}, Bn = re.forwardRef((e, t) => re.createElement(t_, Object.assign({ innerRef: t }, e)));
Bn.displayName = "Select";
const of = (e) => {
  var { children: t, className: n, label: r } = e, i = oe(e, ["children", "className", "label"]);
  return re.createElement(Oh, Object.assign({ className: $(n), label: r }, i), t);
};
of.displayName = "SelectGroup";
const ia = (e) => {
  var { children: t, className: n, isAriaMultiselectable: r = !1 } = e, i = oe(e, ["children", "className", "isAriaMultiselectable"]);
  return re.createElement(Jo, Object.assign({ isAriaMultiselectable: r, className: $(n) }, i), t);
};
ia.displayName = "SelectList";
const n_ = (e) => {
  var { children: t, className: n, innerRef: r, value: i } = e, s = oe(e, ["children", "className", "innerRef", "value"]);
  return re.createElement(Yo, Object.assign({ itemId: i, ref: r, className: $(n) }, s), t);
}, _e = re.forwardRef((e, t) => re.createElement(n_, Object.assign({}, e, { innerRef: t })));
_e.displayName = "SelectOption";
const On = {
  check: "pf-v5-c-check",
  checkInput: "pf-v5-c-check__input",
  menuToggle: "pf-v5-c-menu-toggle",
  menuToggleButton: "pf-v5-c-menu-toggle__button",
  menuToggleControls: "pf-v5-c-menu-toggle__controls",
  menuToggleCount: "pf-v5-c-menu-toggle__count",
  menuToggleIcon: "pf-v5-c-menu-toggle__icon",
  menuToggleStatusIcon: "pf-v5-c-menu-toggle__status-icon",
  menuToggleText: "pf-v5-c-menu-toggle__text",
  menuToggleToggleIcon: "pf-v5-c-menu-toggle__toggle-icon",
  modifiers: {
    primary: "pf-m-primary",
    secondary: "pf-m-secondary",
    expanded: "pf-m-expanded",
    plain: "pf-m-plain",
    text: "pf-m-text",
    fullHeight: "pf-m-full-height",
    disabled: "pf-m-disabled",
    typeahead: "pf-m-typeahead",
    splitButton: "pf-m-split-button",
    action: "pf-m-action",
    active: "pf-m-active",
    fullWidth: "pf-m-full-width",
    success: "pf-m-success",
    warning: "pf-m-warning",
    danger: "pf-m-danger"
  },
  textInputGroup: "pf-v5-c-text-input-group",
  themeDark: "pf-v5-theme-dark"
}, a_ = {
  name: "CaretDownIcon",
  height: 512,
  width: 320,
  svgPath: "M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z",
  yOffset: 0,
  xOffset: 0
}, Lo = Qe(a_);
var Zi;
(function(e) {
  e.success = "success", e.danger = "danger", e.warning = "warning";
})(Zi || (Zi = {}));
class F1 extends h.Component {
  constructor() {
    super(...arguments), this.displayName = "MenuToggleBase";
  }
  render() {
    const t = this.props, { children: n, className: r, icon: i, badge: s, isExpanded: o, isDisabled: l, isFullHeight: c, isFullWidth: d, splitButtonOptions: u, variant: p, status: m, statusIcon: f, innerRef: g, onClick: b, "aria-label": v } = t, y = oe(t, ["children", "className", "icon", "badge", "isExpanded", "isDisabled", "isFullHeight", "isFullWidth", "splitButtonOptions", "variant", "status", "statusIcon", "innerRef", "onClick", "aria-label"]), x = p === "plain", w = p === "plainText", R = p === "typeahead";
    let S = f;
    if (!f)
      switch (m) {
        case Zi.success:
          S = h.createElement(Ks, { "aria-hidden": "true" });
          break;
        case Zi.warning:
          S = h.createElement(Kc, { "aria-hidden": "true" });
          break;
        case Zi.danger:
          S = h.createElement(ds, { "aria-hidden": "true" });
          break;
      }
    const _ = h.createElement(
      "span",
      { className: $(On.menuToggleControls) },
      m !== void 0 && h.createElement("span", { className: $(On.menuToggleStatusIcon) }, S),
      h.createElement(
        "span",
        { className: $(On.menuToggleToggleIcon) },
        h.createElement(Lo, { "aria-hidden": !0 })
      )
    ), O = h.createElement(
      h.Fragment,
      null,
      i && h.createElement("span", { className: $(On.menuToggleIcon) }, i),
      R ? n : h.createElement("span", { className: $(On.menuToggleText) }, n),
      h.isValidElement(s) && h.createElement("span", { className: $(On.menuToggleCount) }, s),
      R ? h.createElement("button", { type: "button", className: $(On.menuToggleButton), "aria-expanded": o, onClick: b, "aria-label": v || "Menu toggle", tabIndex: -1 }, _) : _
    ), E = $(On.menuToggle, o && On.modifiers.expanded, p === "primary" && On.modifiers.primary, p === "secondary" && On.modifiers.secondary, m && On.modifiers[m], (x || w) && On.modifiers.plain, w && On.modifiers.text, c && On.modifiers.fullHeight, d && On.modifiers.fullWidth, l && On.modifiers.disabled, r), T = Object.assign(Object.assign({ children: x ? n : O }, l && { disabled: !0 }), y);
    return R ? h.createElement("div", Object.assign({ ref: g, className: $(E, On.modifiers.typeahead) }, T)) : u ? h.createElement(
      "div",
      { ref: g, className: $(E, On.modifiers.splitButton, u?.variant === "action" && On.modifiers.action) },
      u?.items,
      h.createElement(
        "button",
        Object.assign({ className: $(On.menuToggleButton), type: "button", "aria-expanded": o, "aria-label": v, disabled: l, onClick: b }, n && { style: { display: "flex", paddingLeft: "var(--pf-v5-global--spacer--sm)" } }, y),
        n && h.createElement("span", { className: $(On.menuToggleText) }, n),
        _
      )
    ) : h.createElement("button", Object.assign({ className: $(E), type: "button", "aria-label": v, "aria-expanded": o, ref: g, disabled: l, onClick: b }, T));
  }
}
F1.defaultProps = {
  className: "",
  isExpanded: !1,
  isDisabled: !1,
  isFullWidth: !1,
  isFullHeight: !1
};
const yt = h.forwardRef((e, t) => h.createElement(F1, Object.assign({ innerRef: t }, e)));
yt.displayName = "MenuToggle";
const mo = {
  inputGroup: "pf-v5-c-input-group",
  inputGroupItem: "pf-v5-c-input-group__item",
  inputGroupText: "pf-v5-c-input-group__text",
  modifiers: {
    box: "pf-m-box",
    plain: "pf-m-plain",
    disabled: "pf-m-disabled",
    fill: "pf-m-fill"
  },
  themeDark: "pf-v5-theme-dark"
}, $1 = (e) => {
  var { className: t, children: n, innerRef: r } = e, i = oe(e, ["className", "children", "innerRef"]);
  const s = h.useRef(null), o = r || s;
  return h.createElement("div", Object.assign({ ref: o, className: $(mo.inputGroup, t) }, i), n);
};
$1.displayName = "InputGroupBase";
const Qt = h.forwardRef((e, t) => h.createElement($1, Object.assign({ innerRef: t }, e)));
Qt.displayName = "InputGroup";
const dt = (e) => {
  var { className: t, children: n, isFill: r = !1, isBox: i = !1, isPlain: s, isDisabled: o } = e, l = oe(e, ["className", "children", "isFill", "isBox", "isPlain", "isDisabled"]);
  return h.createElement("div", Object.assign({ className: $(mo.inputGroupItem, r && mo.modifiers.fill, i && mo.modifiers.box, s && mo.modifiers.plain, o && mo.modifiers.disabled, t) }, l), n);
};
dt.displayName = "InputGroupItem";
const nn = {
  calendarMonth: "pf-v5-c-calendar-month",
  calendarMonthCalendar: "pf-v5-c-calendar-month__calendar",
  calendarMonthDate: "pf-v5-c-calendar-month__date",
  calendarMonthDatesCell: "pf-v5-c-calendar-month__dates-cell",
  calendarMonthDatesRow: "pf-v5-c-calendar-month__dates-row",
  calendarMonthDay: "pf-v5-c-calendar-month__day",
  calendarMonthDays: "pf-v5-c-calendar-month__days",
  calendarMonthHeader: "pf-v5-c-calendar-month__header",
  calendarMonthHeaderMonth: "pf-v5-c-calendar-month__header-month",
  calendarMonthHeaderNavControl: "pf-v5-c-calendar-month__header-nav-control",
  calendarMonthHeaderYear: "pf-v5-c-calendar-month__header-year",
  dirRtl: "pf-v5-m-dir-rtl",
  modifiers: {
    prevMonth: "pf-m-prev-month",
    nextMonth: "pf-m-next-month",
    current: "pf-m-current",
    inRange: "pf-m-in-range",
    startRange: "pf-m-start-range",
    endRange: "pf-m-end-range",
    adjacentMonth: "pf-m-adjacent-month",
    selected: "pf-m-selected",
    disabled: "pf-m-disabled",
    hover: "pf-m-hover",
    focus: "pf-m-focus"
  },
  themeDark: "pf-v5-theme-dark"
};
var Jb;
(function(e) {
  e[e.Sunday = 0] = "Sunday", e[e.Monday = 1] = "Monday", e[e.Tuesday = 2] = "Tuesday", e[e.Wednesday = 3] = "Wednesday", e[e.Thursday = 4] = "Thursday", e[e.Friday = 5] = "Friday", e[e.Saturday = 6] = "Saturday";
})(Jb || (Jb = {}));
const r_ = (e, t, n, r) => {
  const i = new Date(e, t), s = new Date(i);
  s.setDate(s.getDate() - s.getDay() + n);
  const o = [];
  s.getMonth() === i.getMonth() && s.getDate() !== 1 && s.setDate(s.getDate() - 7);
  for (let l = 0; l < 6; l++) {
    const c = [];
    for (let d = 0; d < 7; d++) {
      const u = new Date(s);
      c.push({
        date: u,
        isValid: r.every((p) => p(u))
      }), s.setDate(s.getDate() + 1);
    }
    if (o.push(c), s.getMonth() !== i.getMonth())
      break;
  }
  return o;
}, $i = (e, t) => e.getFullYear() === t.getFullYear() && e.getMonth() === t.getMonth() && e.getDate() === t.getDate(), Gp = /* @__PURE__ */ new Date(), j1 = (e) => {
  var {
    date: t,
    locale: n = void 0,
    monthFormat: r = (Y) => Y.toLocaleDateString(n, { month: "long" }),
    weekdayFormat: i = (Y) => Y.toLocaleDateString(n, { weekday: "narrow" }),
    longWeekdayFormat: s = (Y) => Y.toLocaleDateString(n, { weekday: "long" }),
    dayFormat: o = (Y) => Y.getDate(),
    weekStart: l = 0,
    // Use the American Sunday as a default
    onChange: c = () => {
    },
    validators: d = [() => !0],
    className: u,
    onSelectToggle: p = () => {
    },
    onMonthChange: m = () => {
    },
    rangeStart: f,
    prevMonthAriaLabel: g = "Previous month",
    nextMonthAriaLabel: b = "Next month",
    yearInputAriaLabel: v = "Select year",
    cellAriaLabel: y,
    isDateFocused: x = !1,
    inlineProps: w
  } = e, R = oe(e, ["date", "locale", "monthFormat", "weekdayFormat", "longWeekdayFormat", "dayFormat", "weekStart", "onChange", "validators", "className", "onSelectToggle", "onMonthChange", "rangeStart", "prevMonthAriaLabel", "nextMonthAriaLabel", "yearInputAriaLabel", "cellAriaLabel", "isDateFocused", "inlineProps"]);
  const S = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].map((Y) => new Date(1990, Y)).map(r), [_, O] = re.useState(!1), T = La(t) ? t : La(f) ? f : Gp, [I, k] = re.useState(T), P = (Y) => Y.getFullYear(), D = P(I), [F, A] = re.useState(D.toString()), [M, V] = re.useState(new Date(I)), U = re.useRef(), [G] = re.useState(Si("hidden-month-span")), [q, L] = re.useState(!1), K = (Y) => d.every((ae) => ae(Y)), B = K(I);
  He(() => {
    La(t) && !$i(I, t) ? k(t) : t || k(Gp);
  }, [t]), He(() => {
    (q || x) && B && U.current && U.current.focus();
  }, [I, x, B, U]);
  const j = (Y, ae) => {
    k(ae), V(ae), L(!1), m(Y, ae), A(P(ae).toString());
  }, W = (Y) => {
    const ae = new Date(I);
    Y.key === "ArrowUp" ? ae.setDate(ae.getDate() - 7) : Y.key === "ArrowRight" ? ae.setDate(ae.getDate() + 1) : Y.key === "ArrowDown" ? ae.setDate(ae.getDate() + 7) : Y.key === "ArrowLeft" && ae.setDate(ae.getDate() - 1), ae.getTime() !== I.getTime() && K(ae) && (Y.preventDefault(), k(ae), V(ae), L(!0));
  }, Q = (Y) => te(I.getMonth(), Y), te = (Y, ae) => new Date(ae ?? I.getFullYear(), Y, 1), ie = 1900, ce = 2100, Z = (Y, ae) => {
    if (/^\d{0,4}$/.test(ae) && (A(ae), ae.length === 4)) {
      const de = Number(ae);
      if (de >= ie && de <= ce) {
        const ye = Q(de);
        k(ye), V(ye), L(!1), Y.target.focus(), m(Y, ye);
      } else
        A(D.toString());
    }
  }, me = (Y) => {
    let ae = I.getMonth() + Y, de = I.getFullYear();
    return ae === -1 ? (ae = 11, de--) : ae === 12 && (ae = 0, de++), te(ae, de);
  }, ne = me(-1), Oe = me(1), Pe = I.getFullYear(), $e = I.getMonth(), fe = re.useMemo(() => r_(Pe, $e, l, d), [Pe, $e, l, d]);
  if (!B) {
    const Y = fe.reduce((ae, de) => [...ae, ...de], []).filter(({ date: ae, isValid: de }) => de && ae.getMonth() === $e).map(({ date: ae }) => ({ date: ae, days: Math.abs(I.getTime() - ae.getTime()) })).sort((ae, de) => ae.days - de.days).map(({ date: ae }) => ae)[0];
    Y && (k(Y), V(Y));
  }
  const we = K(M), J = r(I), X = re.createElement(
    "div",
    Object.assign({ className: $(nn.calendarMonth, u) }, R),
    re.createElement(
      "div",
      { className: nn.calendarMonthHeader },
      re.createElement(
        "div",
        { className: $(nn.calendarMonthHeaderNavControl, nn.modifiers.prevMonth) },
        re.createElement(
          z,
          { variant: "plain", "aria-label": g, onClick: (Y) => j(Y, ne) },
          re.createElement(Hs, { "aria-hidden": !0 })
        )
      ),
      re.createElement(
        Qt,
        null,
        re.createElement(
          dt,
          { isFill: !0 },
          re.createElement(
            "div",
            { className: nn.calendarMonthHeaderMonth },
            re.createElement("span", { id: G, hidden: !0 }, "Month"),
            re.createElement(
              Bn,
              { toggle: (Y) => re.createElement(yt, { ref: Y, onClick: () => O(!_), isExpanded: _, style: { width: "140px" } }, J), "aria-labelledby": G, isOpen: _, onOpenChange: (Y) => {
                O(Y), p(Y);
              }, onSelect: (Y, ae) => {
                setTimeout(() => {
                  O(!1), p(!1);
                  const de = te(Number(ae));
                  k(de), V(de), L(!1), m(Y, de);
                }, 0);
              }, selected: J },
              re.createElement(ia, null, S.map((Y, ae) => re.createElement(_e, { key: ae, value: ae, isSelected: Y === J }, Y)))
            )
          )
        ),
        re.createElement(
          dt,
          null,
          re.createElement(
            "div",
            { className: nn.calendarMonthHeaderYear },
            re.createElement(mt, { "aria-label": v, type: "number", value: F, onChange: Z })
          )
        )
      ),
      re.createElement(
        "div",
        { className: $(nn.calendarMonthHeaderNavControl, nn.modifiers.nextMonth) },
        re.createElement(
          z,
          { variant: "plain", "aria-label": b, onClick: (Y) => j(Y, Oe) },
          re.createElement(Nn, { "aria-hidden": !0 })
        )
      )
    ),
    re.createElement(
      "table",
      { className: nn.calendarMonthCalendar },
      re.createElement(
        "thead",
        { className: nn.calendarMonthDays },
        re.createElement("tr", null, fe[0].map(({ date: Y }, ae) => re.createElement(
          "th",
          { key: ae, className: nn.calendarMonthDay, scope: "col" },
          re.createElement("span", { className: "pf-v5-screen-reader" }, s(Y)),
          re.createElement("span", { "aria-hidden": !0 }, i(Y))
        )))
      ),
      re.createElement("tbody", { onKeyDown: W }, fe.map((Y, ae) => re.createElement("tr", { key: ae, className: nn.calendarMonthDatesRow }, Y.map(({ date: de, isValid: ye }, he) => {
        const Ce = o(de), Ge = $i(de, Gp), it = La(t) && $i(de, t), qe = $i(de, I), kt = de.getMonth() !== I.getMonth(), jt = La(f) && $i(de, f);
        let Xe = !1, It = !1;
        return La(f) && La(t) ? (Xe = de > f && de < t, It = $i(de, t)) : La(f) && we && (M > f || $i(M, f)) && (Xe = de > f && de < M, It = $i(de, M)), re.createElement(
          "td",
          { key: he, className: $(nn.calendarMonthDatesCell, kt && nn.modifiers.adjacentMonth, Ge && nn.modifiers.current, (it || jt) && nn.modifiers.selected, !ye && nn.modifiers.disabled, (Xe || jt || It) && nn.modifiers.inRange, jt && nn.modifiers.startRange, It && nn.modifiers.endRange) },
          re.createElement("button", Object.assign({ className: $(nn.calendarMonthDate, It && nn.modifiers.hover, !ye && nn.modifiers.disabled), type: "button", onClick: (en) => c(en, de), onMouseOver: () => V(de), tabIndex: qe ? 0 : -1, disabled: !ye, "aria-label": y ? y(de) : `${o(de)} ${r(de)} ${P(de)}` }, qe && { ref: U }), Ce)
        );
      }))))
    )
  );
  if (w !== void 0) {
    const Y = w.component ? w.component : "article";
    return re.createElement(
      Y,
      Object.assign({}, w.ariaLabelledby && { "aria-labelledby": w.ariaLabelledby }),
      w.title,
      X
    );
  }
  return X;
};
j1.displayName = "CalendarMonth";
const $t = {
  card: "pf-v5-c-card",
  cardActions: "pf-v5-c-card__actions",
  cardBody: "pf-v5-c-card__body",
  cardExpandableContent: "pf-v5-c-card__expandable-content",
  cardFooter: "pf-v5-c-card__footer",
  cardHeader: "pf-v5-c-card__header",
  cardHeaderMain: "pf-v5-c-card__header-main",
  cardHeaderToggle: "pf-v5-c-card__header-toggle",
  cardHeaderToggleIcon: "pf-v5-c-card__header-toggle-icon",
  cardSelectableActions: "pf-v5-c-card__selectable-actions",
  cardSrInput: "pf-v5-c-card__sr-input",
  cardTitle: "pf-v5-c-card__title",
  cardTitleText: "pf-v5-c-card__title-text",
  check: "pf-v5-c-check",
  checkInput: "pf-v5-c-check__input",
  checkLabel: "pf-v5-c-check__label",
  dirRtl: "pf-v5-m-dir-rtl",
  divider: "pf-v5-c-divider",
  modifiers: {
    selectable: "pf-m-selectable",
    clickable: "pf-m-clickable",
    selected: "pf-m-selected",
    current: "pf-m-current",
    disabled: "pf-m-disabled",
    hoverableRaised: "pf-m-hoverable-raised",
    selectableRaised: "pf-m-selectable-raised",
    nonSelectableRaised: "pf-m-non-selectable-raised",
    selectedRaised: "pf-m-selected-raised",
    compact: "pf-m-compact",
    displayLg: "pf-m-display-lg",
    flat: "pf-m-flat",
    plain: "pf-m-plain",
    rounded: "pf-m-rounded",
    expanded: "pf-m-expanded",
    fullHeight: "pf-m-full-height",
    toggleRight: "pf-m-toggle-right",
    noOffset: "pf-m-no-offset",
    noFill: "pf-m-no-fill"
  },
  radio: "pf-v5-c-radio",
  radioInput: "pf-v5-c-radio__input",
  radioLabel: "pf-v5-c-radio__label",
  themeDark: "pf-v5-theme-dark"
}, Ih = h.createContext({
  cardId: "",
  registerTitleId: () => {
  },
  isExpanded: !1,
  isClickable: !1,
  isSelectable: !1,
  isSelected: !1,
  isClicked: !1,
  isDisabled: !1
}), xa = (e) => {
  var { children: t, id: n = "", className: r, component: i = "div", isCompact: s = !1, isSelectable: o = !1, isClickable: l = !1, isDisabled: c = !1, isSelectableRaised: d = !1, isSelected: u = !1, isClicked: p = !1, isDisabledRaised: m = !1, isFlat: f = !1, isExpanded: g = !1, isRounded: b = !1, isLarge: v = !1, isFullHeight: y = !1, isPlain: x = !1, ouiaId: w, ouiaSafe: R = !0, hasSelectableInput: S = !1, selectableInputAriaLabel: _, onSelectableInputChange: O = () => {
  } } = e, E = oe(e, ["children", "id", "className", "component", "isCompact", "isSelectable", "isClickable", "isDisabled", "isSelectableRaised", "isSelected", "isClicked", "isDisabledRaised", "isFlat", "isExpanded", "isRounded", "isLarge", "isFullHeight", "isPlain", "ouiaId", "ouiaSafe", "hasSelectableInput", "selectableInputAriaLabel", "onSelectableInputChange"]);
  const T = i, I = Ka(xa.displayName, w, R), [k, P] = h.useState(""), [D, F] = h.useState();
  s && v && (console.warn("Card: Cannot use isCompact with isLarge. Defaulting to isCompact"), v = !1);
  const A = () => m ? $($t.modifiers.nonSelectableRaised) : d ? $($t.modifiers.selectableRaised, u && $t.modifiers.selectedRaised) : o && l ? $($t.modifiers.selectable, $t.modifiers.clickable, (u || p) && $t.modifiers.current) : o ? $($t.modifiers.selectable, u && $t.modifiers.selected) : l ? $($t.modifiers.clickable, p && $t.modifiers.current) : "", M = h.useRef(!1), V = (U) => {
    P(U), M.current = !!U;
  };
  return h.useEffect(() => {
    _ ? F({ "aria-label": _ }) : k ? F({ "aria-labelledby": k }) : S && !M.current && (F({}), console.warn("If no CardTitle component is passed as a child of Card the selectableInputAriaLabel prop must be passed"));
  }, [S, _, k]), h.createElement(
    Ih.Provider,
    { value: {
      cardId: n,
      registerTitleId: V,
      isExpanded: g,
      isClickable: l,
      isSelectable: o,
      isSelected: u,
      isClicked: p,
      isDisabled: c,
      // TODO: Remove hasSelectableInput when deprecated prop is removed
      hasSelectableInput: S
    } },
    S && h.createElement("input", Object.assign({ className: "pf-v5-screen-reader", id: `${n}-input` }, D, { type: "checkbox", checked: u, onChange: (U) => O(U, n), disabled: m, tabIndex: -1 })),
    h.createElement(T, Object.assign({ id: n, className: $($t.card, s && $t.modifiers.compact, g && $t.modifiers.expanded, f && $t.modifiers.flat, b && $t.modifiers.rounded, v && $t.modifiers.displayLg, y && $t.modifiers.fullHeight, x && $t.modifiers.plain, A(), c && $t.modifiers.disabled, r), tabIndex: d ? "0" : void 0 }, E, I), t)
  );
};
xa.displayName = "Card";
const da = (e) => {
  var { children: t, className: n, component: r = "div", isFilled: i = !0 } = e, s = oe(e, ["children", "className", "component", "isFilled"]);
  const o = r;
  return h.createElement(o, Object.assign({ className: $($t.cardBody, !i && $t.modifiers.noFill, n) }, s), t);
};
da.displayName = "CardBody";
const B1 = (e) => {
  var { children: t, className: n, component: r = "div" } = e, i = oe(e, ["children", "className", "component"]);
  const s = r;
  return h.createElement(s, Object.assign({ className: $($t.cardFooter, n) }, i), t);
};
B1.displayName = "CardFooter";
const br = (e) => {
  var { children: t, className: n, component: r = "div" } = e, i = oe(e, ["children", "className", "component"]);
  const { cardId: s, registerTitleId: o } = h.useContext(Ih), l = r, c = s ? `${s}-title` : "";
  return h.useEffect(() => (o(c), () => o("")), [o, c]), h.createElement(
    "div",
    { className: $($t.cardTitle) },
    h.createElement(l, Object.assign({ className: $($t.cardTitleText, n), id: c || void 0 }, i), t)
  );
};
br.displayName = "CardTitle";
const U1 = (e) => {
  var { children: t, className: n } = e, r = oe(e, ["children", "className"]);
  return h.createElement("div", Object.assign({ className: $($t.cardHeaderMain, n) }, r), t);
};
U1.displayName = "CardHeaderMain";
const V1 = (e) => {
  var { children: t, className: n, hasNoOffset: r = !1 } = e, i = oe(e, ["children", "className", "hasNoOffset"]);
  return h.createElement("div", Object.assign({ className: $($t.cardActions, r && $t.modifiers.noOffset, n) }, i), t);
};
V1.displayName = "CardActions";
const K1 = (e) => {
  var { children: t, className: n } = e, r = oe(e, ["children", "className"]);
  return h.createElement("div", Object.assign({ className: $($t.cardSelectableActions, n) }, r), t);
};
K1.displayName = "CardSelectableActions";
const Cs = {
  modifiers: {
    standalone: "pf-m-standalone",
    disabled: "pf-m-disabled"
  },
  radio: "pf-v5-c-radio",
  radioBody: "pf-v5-c-radio__body",
  radioDescription: "pf-v5-c-radio__description",
  radioInput: "pf-v5-c-radio__input",
  radioLabel: "pf-v5-c-radio__label"
};
class sn extends h.Component {
  constructor(t) {
    super(t), this.handleChange = (n) => {
      this.props.onChange(n, n.currentTarget.checked);
    }, !t.label && !t["aria-label"] && console.error("Radio:", "Radio requires an aria-label to be specified"), this.state = {
      ouiaStateId: cr(sn.displayName)
    };
  }
  render() {
    const t = this.props, {
      "aria-label": n,
      checked: r,
      className: i,
      inputClassName: s,
      defaultChecked: o,
      isLabelWrapped: l,
      isLabelBeforeButton: c,
      isChecked: d,
      isDisabled: u,
      isValid: p,
      label: m,
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      onChange: f,
      description: g,
      body: b,
      ouiaId: v,
      ouiaSafe: y = !0,
      component: x
    } = t, w = oe(t, ["aria-label", "checked", "className", "inputClassName", "defaultChecked", "isLabelWrapped", "isLabelBeforeButton", "isChecked", "isDisabled", "isValid", "label", "onChange", "description", "body", "ouiaId", "ouiaSafe", "component"]);
    w.id || console.error("Radio:", "id is required to make input accessible");
    const R = h.createElement("input", Object.assign({}, w, { className: $(Cs.radioInput, s), type: "radio", onChange: this.handleChange, "aria-invalid": !p, disabled: u, checked: r || d }, r === void 0 && { defaultChecked: o }, !m && { "aria-label": n }, Yn(sn.displayName, v !== void 0 ? v : this.state.ouiaStateId, y))), S = l && !x || x === "label", _ = S ? "span" : "label", O = m ? h.createElement(_, { className: $(Cs.radioLabel, u && Cs.modifiers.disabled), htmlFor: S ? void 0 : w.id }, m) : null, E = x ?? (S ? "label" : "div");
    return h.createElement(
      E,
      { className: $(Cs.radio, !m && Cs.modifiers.standalone, i), htmlFor: S ? w.id : void 0 },
      c ? h.createElement(
        h.Fragment,
        null,
        O,
        R
      ) : h.createElement(
        h.Fragment,
        null,
        R,
        O
      ),
      g && h.createElement("span", { className: $(Cs.radioDescription) }, g),
      b && h.createElement("span", { className: $(Cs.radioBody) }, b)
    );
  }
}
sn.displayName = "Radio";
sn.defaultProps = {
  className: "",
  isDisabled: !1,
  isValid: !0,
  onChange: () => {
  }
};
const qc = (e) => {
  var { children: t, className: n, actions: r, selectableActions: i, id: s, onExpand: o, toggleButtonProps: l, isToggleRightAligned: c } = e, d = oe(e, ["children", "className", "actions", "selectableActions", "id", "onExpand", "toggleButtonProps", "isToggleRightAligned"]);
  return h.createElement(Ih.Consumer, null, ({ cardId: u, isClickable: p, isSelectable: m, isSelected: f, isClicked: g, isDisabled: b, hasSelectableInput: v }) => {
    const y = h.createElement(
      "div",
      { className: $($t.cardHeaderToggle) },
      h.createElement(
        z,
        Object.assign({ variant: "plain", type: "button", onClick: (_) => {
          o(_, u);
        } }, l),
        h.createElement(
          "span",
          { className: $($t.cardHeaderToggleIcon) },
          h.createElement(Nn, { "aria-hidden": "true" })
        )
      )
    ), x = p && !m || m && !p, w = v;
    r?.actions && x && !w && console.warn(`${p ? "Clickable" : "Selectable"} only cards should not contain any other actions. If you wish to include additional actions, use a clickable and selectable card.`);
    const R = (_) => {
      i?.onClickAction ? i.onClickAction(_) : i?.to && window.open(i.to, i.isExternalLink ? "_blank" : "_self");
    }, S = () => {
      var _;
      const O = {
        className: "pf-m-standalone",
        inputClassName: p && !m && "pf-v5-screen-reader",
        label: h.createElement(h.Fragment, null),
        "aria-label": i.selectableActionAriaLabel,
        "aria-labelledby": i.selectableActionAriaLabelledby,
        id: i.selectableActionId,
        name: i.name,
        isDisabled: b
      }, E = (_ = i.isChecked) !== null && _ !== void 0 ? _ : f;
      return p && !m ? Object.assign(Object.assign({}, O), { onClick: R, isChecked: g }) : m ? Object.assign(Object.assign({}, O), { onChange: i.onChange, isChecked: E }) : O;
    };
    return h.createElement(
      "div",
      Object.assign({ className: $($t.cardHeader, c && $t.modifiers.toggleRight, n), id: s }, d),
      o && !c && y,
      (r || i && (p || m)) && h.createElement(
        V1,
        { className: r?.className, hasNoOffset: r?.hasNoOffset || i?.hasNoOffset },
        r?.actions,
        i && (p || m) && h.createElement(K1, { className: i?.className }, i?.variant === "single" || p && !m ? h.createElement(sn, Object.assign({}, S())) : h.createElement(rn, Object.assign({}, S())))
      ),
      t && h.createElement(U1, null, t),
      o && c && y
    );
  });
};
qc.displayName = "CardHeader";
const ji = {
  badge: "pf-v5-c-badge",
  button: "pf-v5-c-button",
  chip: "pf-v5-c-chip",
  chipActions: "pf-v5-c-chip__actions",
  chipContent: "pf-v5-c-chip__content",
  chipIcon: "pf-v5-c-chip__icon",
  chipText: "pf-v5-c-chip__text",
  modifiers: {
    overflow: "pf-m-overflow",
    draggable: "pf-m-draggable"
  },
  themeDark: "pf-v5-theme-dark"
}, i_ = {
  name: "--pf-v5-c-chip__text--MaxWidth",
  value: "16ch",
  var: "var(--pf-v5-c-chip__text--MaxWidth)"
};
class Ut extends h.Component {
  constructor(t) {
    super(t), this.span = h.createRef(), this.setChipStyle = () => ({
      [i_.name]: this.props.textMaxWidth
    }), this.renderOverflowChip = () => {
      const n = this.props, {
        badge: r,
        children: i,
        className: s,
        onClick: o,
        ouiaId: l,
        textMaxWidth: c,
        style: d,
        component: u,
        // eslint-disable-next-line @typescript-eslint/no-unused-vars
        tooltipPosition: p,
        // eslint-disable-next-line @typescript-eslint/no-unused-vars
        isOverflowChip: m,
        // eslint-disable-next-line @typescript-eslint/no-unused-vars
        closeBtnAriaLabel: f,
        // eslint-disable-next-line @typescript-eslint/no-unused-vars
        isReadOnly: g
      } = n, b = oe(n, ["badge", "children", "className", "onClick", "ouiaId", "textMaxWidth", "style", "component", "tooltipPosition", "isOverflowChip", "closeBtnAriaLabel", "isReadOnly"]), v = u;
      return h.createElement(
        v,
        Object.assign({ onClick: o }, c && Object.assign({ style: this.setChipStyle() }, d), { className: $(ji.chip, ji.modifiers.overflow, s) }, u === "button" ? { type: "button" } : {}, Yn("OverflowChip", l !== void 0 ? l : this.state.ouiaStateId), b),
        h.createElement(
          "span",
          { className: $(ji.chipContent) },
          h.createElement("span", { className: $(ji.chipText) }, i),
          r && r
        )
      );
    }, this.renderChip = (n) => {
      const { children: r, tooltipPosition: i } = this.props;
      return this.state.isTooltipVisible ? h.createElement(Yt, { position: i, content: r }, this.renderInnerChip(n)) : this.renderInnerChip(n);
    }, this.state = {
      isTooltipVisible: !1,
      ouiaStateId: cr(Ut.displayName)
    };
  }
  componentDidMount() {
    this.setState({
      isTooltipVisible: !!(this.span.current && this.span.current.offsetWidth < this.span.current.scrollWidth)
    });
  }
  componentDidUpdate(t, n) {
    const r = !!(this.span.current && this.span.current.offsetWidth < this.span.current.scrollWidth);
    n.isTooltipVisible !== r && this.setState({
      isTooltipVisible: r
    });
  }
  renderInnerChip(t) {
    const n = this.props, {
      badge: r,
      children: i,
      className: s,
      onClick: o,
      closeBtnAriaLabel: l,
      isReadOnly: c,
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      isOverflowChip: d,
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      tooltipPosition: u,
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      id: p,
      component: m,
      ouiaId: f,
      textMaxWidth: g
    } = n, b = oe(n, ["badge", "children", "className", "onClick", "closeBtnAriaLabel", "isReadOnly", "isOverflowChip", "tooltipPosition", "id", "component", "ouiaId", "textMaxWidth"]), v = m;
    return h.createElement(
      v,
      Object.assign({}, g && {
        style: this.setChipStyle()
      }, { className: $(ji.chip, s) }, this.state.isTooltipVisible && { tabIndex: 0 }, Yn(Ut.displayName, f !== void 0 ? f : this.state.ouiaStateId), b),
      h.createElement(
        "span",
        { className: $(ji.chipContent) },
        h.createElement("span", { ref: this.span, className: $(ji.chipText), id: t }, i),
        r && r
      ),
      !c && h.createElement(
        "span",
        { className: $(ji.chipActions) },
        h.createElement(
          z,
          { onClick: o, variant: "plain", "aria-label": l, id: `remove_${t}`, "aria-labelledby": `remove_${t} ${t}`, ouiaId: f || l },
          h.createElement(Oa, { "aria-hidden": "true" })
        )
      )
    );
  }
  render() {
    const { isOverflowChip: t } = this.props;
    return h.createElement($a, null, (n) => t ? this.renderOverflowChip() : this.renderChip(this.props.id || n));
  }
}
Ut.displayName = "Chip";
Ut.defaultProps = {
  closeBtnAriaLabel: "close",
  className: "",
  isOverflowChip: !1,
  isReadOnly: !1,
  tooltipPosition: "top",
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  onClick: (e) => {
  },
  component: "div"
};
const si = {
  chipGroup: "pf-v5-c-chip-group",
  chipGroupClose: "pf-v5-c-chip-group__close",
  chipGroupLabel: "pf-v5-c-chip-group__label",
  chipGroupList: "pf-v5-c-chip-group__list",
  chipGroupListItem: "pf-v5-c-chip-group__list-item",
  chipGroupMain: "pf-v5-c-chip-group__main",
  modifiers: {
    category: "pf-m-category"
  }
}, s_ = {
  name: "TimesCircleIcon",
  height: 512,
  width: 512,
  svgPath: "M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z",
  yOffset: 0,
  xOffset: 0
}, o_ = Qe(s_);
class vn extends h.Component {
  constructor(t) {
    super(t), this.headingRef = h.createRef(), this.toggleCollapse = () => {
      this.setState((n) => ({
        isOpen: !n.isOpen,
        isTooltipVisible: !!(this.headingRef.current && this.headingRef.current.offsetWidth < this.headingRef.current.scrollWidth)
      }));
    }, this.state = {
      isOpen: this.props.defaultIsOpen,
      isTooltipVisible: !1
    };
  }
  componentDidMount() {
    this.setState({
      isTooltipVisible: !!(this.headingRef.current && this.headingRef.current.offsetWidth < this.headingRef.current.scrollWidth)
    });
  }
  renderLabel(t) {
    const { categoryName: n, tooltipPosition: r } = this.props, { isTooltipVisible: i } = this.state;
    return i ? h.createElement(
      Yt,
      { position: r, content: n },
      h.createElement(
        "span",
        { tabIndex: 0, ref: this.headingRef, className: $(si.chipGroupLabel) },
        h.createElement("span", { id: t }, n)
      )
    ) : h.createElement("span", { ref: this.headingRef, className: $(si.chipGroupLabel), id: t }, n);
  }
  render() {
    const t = this.props, {
      categoryName: n,
      children: r,
      className: i,
      isClosable: s,
      closeBtnAriaLabel: o,
      "aria-label": l,
      onClick: c,
      onOverflowChipClick: d,
      numChips: u,
      expandedText: p,
      collapsedText: m,
      ouiaId: f,
      /* eslint-disable @typescript-eslint/no-unused-vars */
      defaultIsOpen: g,
      tooltipPosition: b
    } = t, v = oe(t, ["categoryName", "children", "className", "isClosable", "closeBtnAriaLabel", "aria-label", "onClick", "onOverflowChipClick", "numChips", "expandedText", "collapsedText", "ouiaId", "defaultIsOpen", "tooltipPosition"]), { isOpen: y } = this.state, x = h.Children.count(r), w = uh(m, {
      remaining: h.Children.count(r) - u
    }), R = (S) => {
      const _ = y ? h.Children.toArray(r) : h.Children.toArray(r).slice(0, u);
      return h.createElement(
        "div",
        Object.assign({ className: $(si.chipGroup, i, n && si.modifiers.category), role: "group" }, n && { "aria-labelledby": S }, !n && { "aria-label": l }, Yn(vn.displayName, f)),
        h.createElement(
          "div",
          { className: $(si.chipGroupMain) },
          n && this.renderLabel(S),
          h.createElement(
            "ul",
            Object.assign({ className: $(si.chipGroupList) }, n && { "aria-labelledby": S }, !n && { "aria-label": l }, { role: "list" }, v),
            _.map((O, E) => h.createElement("li", { className: $(si.chipGroupListItem), key: E }, O)),
            x > u && h.createElement(
              "li",
              { className: $(si.chipGroupListItem) },
              h.createElement(Ut, { isOverflowChip: !0, onClick: (O) => {
                this.toggleCollapse(), d(O);
              }, component: "button" }, y ? p : w)
            )
          )
        ),
        s && h.createElement(
          "div",
          { className: $(si.chipGroupClose) },
          h.createElement(
            z,
            { variant: "plain", "aria-label": o, onClick: c, id: `remove_group_${S}`, "aria-labelledby": `remove_group_${S} ${S}`, ouiaId: f || o },
            h.createElement(o_, { "aria-hidden": "true" })
          )
        )
      );
    };
    return x === 0 ? null : h.createElement($a, null, (S) => R(this.props.id || S));
  }
}
vn.displayName = "ChipGroup";
vn.defaultProps = {
  expandedText: "Show Less",
  collapsedText: "${remaining} more",
  categoryName: "",
  defaultIsOpen: !1,
  numChips: 3,
  isClosable: !1,
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  onClick: (e) => {
  },
  onOverflowChipClick: (e) => {
  },
  closeBtnAriaLabel: "Close chip group",
  tooltipPosition: "top",
  "aria-label": "Chip group category"
};
const Xa = {
  button: "pf-v5-c-button",
  clipboardCopy: "pf-v5-c-clipboard-copy",
  clipboardCopyActions: "pf-v5-c-clipboard-copy__actions",
  clipboardCopyActionsItem: "pf-v5-c-clipboard-copy__actions-item",
  clipboardCopyExpandableContent: "pf-v5-c-clipboard-copy__expandable-content",
  clipboardCopyGroup: "pf-v5-c-clipboard-copy__group",
  clipboardCopyText: "pf-v5-c-clipboard-copy__text",
  clipboardCopyToggleIcon: "pf-v5-c-clipboard-copy__toggle-icon",
  dirRtl: "pf-v5-m-dir-rtl",
  modifiers: {
    expanded: "pf-m-expanded",
    inline: "pf-m-inline",
    block: "pf-m-block",
    code: "pf-m-code"
  },
  themeDark: "pf-v5-theme-dark"
}, l_ = {
  name: "CopyIcon",
  height: 512,
  width: 448,
  svgPath: "M320 448v40c0 13.255-10.745 24-24 24H24c-13.255 0-24-10.745-24-24V120c0-13.255 10.745-24 24-24h72v296c0 30.879 25.121 56 56 56h168zm0-344V0H152c-13.255 0-24 10.745-24 24v368c0 13.255 10.745 24 24 24h272c13.255 0 24-10.745 24-24V128H344c-13.2 0-24-10.8-24-24zm120.971-31.029L375.029 7.029A24 24 0 0 0 358.059 0H352v96h96v-6.059a24 24 0 0 0-7.029-16.97z",
  yOffset: 0,
  xOffset: 0
}, H1 = Qe(l_), tu = (e) => {
  var { onClick: t, exitDelay: n = 0, entryDelay: r = 300, maxWidth: i = "100px", position: s = "top", "aria-label": o = "Copyable input", id: l, textId: c, children: d, variant: u = "control", onTooltipHidden: p = () => {
  }, className: m } = e, f = oe(e, ["onClick", "exitDelay", "entryDelay", "maxWidth", "position", "aria-label", "id", "textId", "children", "variant", "onTooltipHidden", "className"]);
  const g = h.createRef();
  return h.createElement(
    Yt,
    { trigger: "mouseenter focus click", triggerRef: g, exitDelay: n, entryDelay: r, maxWidth: i, position: s, "aria-live": "polite", aria: "none", content: h.createElement("div", null, d), onTooltipHidden: p },
    h.createElement(
      z,
      Object.assign({ type: "button", variant: u, onClick: t, "aria-label": o, className: m, id: l, "aria-labelledby": `${l} ${c}` }, f, { ref: g }),
      h.createElement(H1, null)
    )
  );
};
tu.displayName = "ClipboardCopyButton";
const z1 = (e) => {
  var { onClick: t, id: n, textId: r, contentId: i, isExpanded: s = !1 } = e, o = oe(e, ["onClick", "id", "textId", "contentId", "isExpanded"]);
  return h.createElement(
    z,
    Object.assign({ type: "button", variant: "control", onClick: t, id: n, "aria-labelledby": `${n} ${r}`, "aria-controls": i, "aria-expanded": s }, o),
    h.createElement(
      "div",
      { className: $(Xa.clipboardCopyToggleIcon) },
      h.createElement(Nn, { "aria-hidden": "true" })
    )
  );
};
z1.displayName = "ClipboardCopyToggle";
class Ph extends h.Component {
  constructor(t) {
    super(t);
  }
  render() {
    const t = this.props, { className: n, children: r, onChange: i, isReadOnly: s, isCode: o } = t, l = oe(t, ["className", "children", "onChange", "isReadOnly", "isCode"]);
    return h.createElement("div", Object.assign({ suppressContentEditableWarning: !0, className: $(Xa.clipboardCopyExpandableContent, n), onInput: (c) => i(c, c.target.innerText), contentEditable: !s }, l), o ? h.createElement("pre", { dir: "ltr" }, r) : r);
  }
}
Ph.displayName = "ClipboardCopyExpanded";
Ph.defaultProps = {
  onChange: () => {
  },
  className: "",
  isReadOnly: !1,
  isCode: !1
};
const c_ = (e, t) => {
  try {
    navigator.clipboard.writeText(t.toString());
  } catch (n) {
    console.warn("Clipboard API not found, this copy function will not work. This is likely because you're using an", `unsupported browser or you're not using HTTPS. 

If you're a developer building an application which needs`, "to support copying to the clipboard without the clipboard API, you'll have to create your own copy", "function and pass it to the ClipboardCopy component as the onCopy prop. For more information see", "https://developer.mozilla.org/en-US/docs/Web/API/Navigator/clipboard"), console.error(n);
  }
};
var Zb;
(function(e) {
  e.inline = "inline", e.expansion = "expansion", e.inlineCompact = "inline-compact";
})(Zb || (Zb = {}));
class ti extends h.Component {
  constructor(t) {
    super(t), this.timer = null, this.componentDidUpdate = (r, i) => {
      if (r.children !== this.props.children) {
        const s = this.props.children;
        this.setState({ text: s, textWhenExpanded: s });
      }
    }, this.componentWillUnmount = () => {
      this.timer && window.clearTimeout(this.timer);
    }, this.expandContent = (r) => {
      this.setState((i) => ({
        expanded: !i.expanded
      }));
    }, this.updateText = (r, i) => {
      this.setState({ text: i }), this.props.onChange(r, i);
    }, this.updateTextWhenExpanded = (r, i) => {
      this.setState({ textWhenExpanded: i }), this.props.onChange(r, i);
    }, this.render = () => {
      const r = this.props, {
        /* eslint-disable @typescript-eslint/no-unused-vars */
        isExpanded: i,
        onChange: s,
        // Don't pass to <div>
        /* eslint-enable @typescript-eslint/no-unused-vars */
        isReadOnly: o,
        isCode: l,
        isBlock: c,
        exitDelay: d,
        maxWidth: u,
        entryDelay: p,
        onCopy: m,
        hoverTip: f,
        clickTip: g,
        textAriaLabel: b,
        toggleAriaLabel: v,
        variant: y,
        position: x,
        className: w,
        additionalActions: R,
        ouiaId: S,
        ouiaSafe: _
      } = r, O = oe(r, ["isExpanded", "onChange", "isReadOnly", "isCode", "isBlock", "exitDelay", "maxWidth", "entryDelay", "onCopy", "hoverTip", "clickTip", "textAriaLabel", "toggleAriaLabel", "variant", "position", "className", "additionalActions", "ouiaId", "ouiaSafe"]), E = "text-input-", T = "toggle-", I = "content-";
      return h.createElement(
        "div",
        Object.assign({ className: $(Xa.clipboardCopy, y === "inline-compact" && Xa.modifiers.inline, c && Xa.modifiers.block, this.state.expanded && Xa.modifiers.expanded, w) }, O, Yn(ti.displayName, S, _)),
        y === "inline-compact" && h.createElement($a, { prefix: "" }, (k) => h.createElement(
          h.Fragment,
          null,
          !l && h.createElement("span", { className: $(Xa.clipboardCopyText), id: `${E}${k}` }, this.state.text),
          l && h.createElement("code", { className: $(Xa.clipboardCopyText, Xa.modifiers.code), id: `${E}${k}` }, this.state.text),
          h.createElement(
            "span",
            { className: $(Xa.clipboardCopyActions) },
            h.createElement(
              "span",
              { className: $(Xa.clipboardCopyActionsItem) },
              h.createElement(tu, { variant: "plain", exitDelay: d, entryDelay: p, maxWidth: u, position: x, id: `copy-button-${k}`, textId: `text-input-${k}`, "aria-label": f, onClick: (P) => {
                m(P, this.state.text), this.setState({ copied: !0 });
              }, onTooltipHidden: () => this.setState({ copied: !1 }) }, this.state.copied ? g : f)
            ),
            R && R
          )
        )),
        y !== "inline-compact" && h.createElement($a, { prefix: "" }, (k) => h.createElement(
          h.Fragment,
          null,
          h.createElement(
            "div",
            { className: $(Xa.clipboardCopyGroup) },
            y === "expansion" && h.createElement(z1, { isExpanded: this.state.expanded, onClick: (P) => {
              this.expandContent(P), this.state.expanded ? this.setState({ text: this.state.textWhenExpanded }) : this.setState({ textWhenExpanded: this.state.text });
            }, id: `${T}${k}`, textId: `${E}${k}`, contentId: `${I}${k}`, "aria-label": v }),
            h.createElement(mt, Object.assign({ readOnlyVariant: o || this.state.expanded ? "default" : void 0, onChange: this.updateText, value: this.state.expanded ? this.state.textWhenExpanded : this.state.text, id: `text-input-${k}`, "aria-label": b }, l && { dir: "ltr" })),
            h.createElement(tu, { exitDelay: d, entryDelay: p, maxWidth: u, position: x, id: `copy-button-${k}`, textId: `text-input-${k}`, "aria-label": f, onClick: (P) => {
              m(P, this.state.expanded ? this.state.textWhenExpanded : this.state.text), this.setState({ copied: !0 });
            }, onTooltipHidden: () => this.setState({ copied: !1 }) }, this.state.copied ? g : f)
          ),
          this.state.expanded && h.createElement(Ph, { isReadOnly: o, isCode: l, id: `content-${k}`, onChange: this.updateTextWhenExpanded }, this.state.text)
        ))
      );
    };
    const n = Array.isArray(this.props.children) ? this.props.children.join("") : this.props.children;
    this.state = {
      text: n,
      expanded: this.props.isExpanded,
      copied: !1,
      textWhenExpanded: n
    };
  }
}
ti.displayName = "ClipboardCopy";
ti.defaultProps = {
  hoverTip: "Copy to clipboard",
  clickTip: "Successfully copied to clipboard!",
  isReadOnly: !1,
  isExpanded: !1,
  isCode: !1,
  variant: "inline",
  position: nf.top,
  maxWidth: "150px",
  exitDelay: 1500,
  entryDelay: 300,
  onCopy: c_,
  onChange: () => {
  },
  textAriaLabel: "Copyable input",
  toggleAriaLabel: "Show content",
  additionalActions: null,
  ouiaSafe: !0
};
const Nl = {
  codeBlock: "pf-v5-c-code-block",
  codeBlockActions: "pf-v5-c-code-block__actions",
  codeBlockCode: "pf-v5-c-code-block__code",
  codeBlockContent: "pf-v5-c-code-block__content",
  codeBlockHeader: "pf-v5-c-code-block__header",
  codeBlockPre: "pf-v5-c-code-block__pre"
}, q1 = (e) => {
  var { children: t = null, className: n, actions: r = null } = e, i = oe(e, ["children", "className", "actions"]);
  return h.createElement(
    "div",
    Object.assign({ className: $(Nl.codeBlock, n) }, i),
    r && h.createElement(
      "div",
      { className: $(Nl.codeBlockHeader) },
      h.createElement("div", { className: $(Nl.codeBlockActions) }, r)
    ),
    h.createElement("div", { className: $(Nl.codeBlockContent) }, t)
  );
};
q1.displayName = "CodeBlock";
const G1 = (e) => {
  var { children: t = null, className: n } = e, r = oe(e, ["children", "className"]);
  return h.createElement("div", Object.assign({ className: $(`${Nl.codeBlockActions}-item`, n) }, r), t);
};
G1.displayName = "CodeBlockAction";
const Lt = {
  dataList: "pf-v5-c-data-list",
  dataListAction: "pf-v5-c-data-list__action",
  dataListCell: "pf-v5-c-data-list__cell",
  dataListCheck: "pf-v5-c-data-list__check",
  dataListExpandableContent: "pf-v5-c-data-list__expandable-content",
  dataListExpandableContentBody: "pf-v5-c-data-list__expandable-content-body",
  dataListItem: "pf-v5-c-data-list__item",
  dataListItemAction: "pf-v5-c-data-list__item-action",
  dataListItemContent: "pf-v5-c-data-list__item-content",
  dataListItemControl: "pf-v5-c-data-list__item-control",
  dataListItemDraggableButton: "pf-v5-c-data-list__item-draggable-button",
  dataListItemDraggableIcon: "pf-v5-c-data-list__item-draggable-icon",
  dataListItemRow: "pf-v5-c-data-list__item-row",
  dataListText: "pf-v5-c-data-list__text",
  dataListToggle: "pf-v5-c-data-list__toggle",
  dataListToggleIcon: "pf-v5-c-data-list__toggle-icon",
  dirRtl: "pf-v5-m-dir-rtl",
  modifiers: {
    hidden: "pf-m-hidden",
    hiddenOnSm: "pf-m-hidden-on-sm",
    visibleOnSm: "pf-m-visible-on-sm",
    hiddenOnMd: "pf-m-hidden-on-md",
    visibleOnMd: "pf-m-visible-on-md",
    hiddenOnLg: "pf-m-hidden-on-lg",
    visibleOnLg: "pf-m-visible-on-lg",
    hiddenOnXl: "pf-m-hidden-on-xl",
    visibleOnXl: "pf-m-visible-on-xl",
    hiddenOn_2xl: "pf-m-hidden-on-2xl",
    visibleOn_2xl: "pf-m-visible-on-2xl",
    icon: "pf-m-icon",
    alignRight: "pf-m-align-right",
    noFill: "pf-m-no-fill",
    flex_2: "pf-m-flex-2",
    flex_3: "pf-m-flex-3",
    flex_4: "pf-m-flex-4",
    flex_5: "pf-m-flex-5",
    gridNone: "pf-m-grid-none",
    gridSm: "pf-m-grid-sm",
    gridMd: "pf-m-grid-md",
    gridLg: "pf-m-grid-lg",
    gridXl: "pf-m-grid-xl",
    grid_2xl: "pf-m-grid-2xl",
    compact: "pf-m-compact",
    dragOver: "pf-m-drag-over",
    truncate: "pf-m-truncate",
    breakWord: "pf-m-break-word",
    nowrap: "pf-m-nowrap",
    clickable: "pf-m-clickable",
    selected: "pf-m-selected",
    ghostRow: "pf-m-ghost-row",
    expanded: "pf-m-expanded",
    disabled: "pf-m-disabled",
    noPadding: "pf-m-no-padding"
  },
  themeDark: "pf-v5-theme-dark"
}, d_ = {
  none: Lt.modifiers.gridNone,
  always: "pf-m-grid",
  sm: Lt.modifiers.gridSm,
  md: Lt.modifiers.gridMd,
  lg: Lt.modifiers.gridLg,
  xl: Lt.modifiers.gridXl,
  "2xl": Lt.modifiers.grid_2xl
};
var Qb;
(function(e) {
  e.nowrap = "nowrap", e.truncate = "truncate", e.breakWord = "breakWord";
})(Qb || (Qb = {}));
const W1 = h.createContext({
  isSelectable: !1
});
class ar extends h.Component {
  constructor(t) {
    super(t), this.ref = h.createRef(), this.getIndex = (n) => Array.from(this.ref.current.children).findIndex((r) => r.id === n);
  }
  render() {
    const t = this.props, { className: n, children: r, "aria-label": i, onSelectDataListItem: s, selectedDataListItemId: o, isCompact: l, wrapModifier: c, gridBreakpoint: d, onSelectableRowChange: u } = t, p = oe(t, ["className", "children", "aria-label", "onSelectDataListItem", "selectedDataListItemId", "isCompact", "wrapModifier", "gridBreakpoint", "onSelectableRowChange"]), m = s !== void 0, f = (g, b) => {
      s(g, b);
    };
    return h.createElement(
      W1.Provider,
      { value: {
        isSelectable: m,
        selectedDataListItemId: o,
        updateSelectedDataListItem: f,
        onSelectableRowChange: u
      } },
      h.createElement("ul", Object.assign({ className: $(Lt.dataList, l && Lt.modifiers.compact, d_[d], c && Lt.modifiers[c], n), style: p.style, role: "list", "aria-label": i }, p, { ref: this.ref }), r)
    );
  }
}
ar.displayName = "DataList";
ar.defaultProps = {
  children: null,
  className: "",
  selectedDataListItemId: "",
  isCompact: !1,
  gridBreakpoint: "md",
  wrapModifier: null
};
const X1 = (e) => {
  var {
    children: t,
    className: n,
    visibility: r,
    /* eslint-disable @typescript-eslint/no-unused-vars */
    id: i,
    "aria-label": s,
    "aria-labelledby": o,
    /* eslint-disable @typescript-eslint/no-unused-vars */
    isPlainButtonAction: l
  } = e, c = oe(e, ["children", "className", "visibility", "id", "aria-label", "aria-labelledby", "isPlainButtonAction"]);
  return h.createElement("div", Object.assign({ className: $(Lt.dataListItemAction, ut(r, Lt), n) }, c), l ? h.createElement("div", { className: $(Lt.dataListAction) }, t) : t);
};
X1.displayName = "DataListAction";
const aa = (e) => {
  var { children: t = null, className: n = "", width: r = 1, isFilled: i = !0, alignRight: s = !1, isIcon: o = !1, wrapModifier: l = null } = e, c = oe(e, ["children", "className", "width", "isFilled", "alignRight", "isIcon", "wrapModifier"]);
  return h.createElement("div", Object.assign({ className: $(Lt.dataListCell, r > 1 && Lt.modifiers[`flex_${r}`], !i && Lt.modifiers.noFill, s && Lt.modifiers.alignRight, o && Lt.modifiers.icon, n, l && Lt.modifiers[l]) }, c), t);
};
aa.displayName = "DataListCell";
const Y1 = (e) => {
  var {
    className: t = "",
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    onChange: n = (p, m) => {
    },
    isValid: r = !0,
    isDisabled: i = !1,
    isChecked: s = !1,
    checked: o = !1,
    defaultChecked: l,
    otherControls: c = !1
  } = e, d = oe(e, ["className", "onChange", "isValid", "isDisabled", "isChecked", "checked", "defaultChecked", "otherControls"]);
  const u = h.createElement(
    "div",
    { className: $(Lt.dataListCheck) },
    h.createElement("input", Object.assign({}, d, { type: "checkbox", onChange: (p) => n(p, p.currentTarget.checked), "aria-invalid": !r, disabled: i }, [!0, !1].includes(l) && { defaultChecked: l }, ![!0, !1].includes(l) && { checked: s || o }))
  );
  return h.createElement(
    h.Fragment,
    null,
    !c && h.createElement("div", { className: $(Lt.dataListItemControl, t) }, u),
    c && u
  );
};
Y1.displayName = "DataListCheck";
const _h = (e) => {
  var { children: t, className: n = "" } = e, r = oe(e, ["children", "className"]);
  return h.createElement("div", Object.assign({ className: $(Lt.dataListItemControl, n) }, r), t);
};
_h.displayName = "DataListControl";
const u_ = {
  name: "GripVerticalIcon",
  height: 512,
  width: 320,
  svgPath: "M96 32H32C14.33 32 0 46.33 0 64v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zM288 32h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32z",
  yOffset: 0,
  xOffset: 0
}, J1 = Qe(u_), Rh = (e) => {
  var { className: t = "", isDisabled: n = !1 } = e, r = oe(e, ["className", "isDisabled"]);
  return h.createElement(
    "button",
    Object.assign({ className: $(Lt.dataListItemDraggableButton, n && Lt.modifiers.disabled, t), type: "button", disabled: n }, r),
    h.createElement(
      "span",
      { className: $(Lt.dataListItemDraggableIcon) },
      h.createElement(J1, null)
    )
  );
};
Rh.displayName = "DataListDragButton";
class Ta extends h.Component {
  render() {
    const t = this.props, { children: n, isExpanded: r, className: i, id: s, "aria-labelledby": o, selectableInputAriaLabel: l } = t, c = oe(t, ["children", "isExpanded", "className", "id", "aria-labelledby", "selectableInputAriaLabel"]);
    return h.createElement(W1.Consumer, null, ({ isSelectable: d, selectedDataListItemId: u, updateSelectedDataListItem: p, onSelectableRowChange: m }) => {
      const f = (y) => {
        let x = y.target;
        for (; y.currentTarget !== x; ) {
          if ("onclick" in x && x.onclick || x.parentNode.classList.contains(Lt.dataListItemAction) || x.parentNode.classList.contains(Lt.dataListItemControl))
            return;
          x = x.parentNode;
        }
        p(y, s);
      }, g = (y) => {
        [dn.Enter, dn.Space].includes(y.key) && (y.preventDefault(), p(y, s));
      }, b = u === s, v = l ? { "aria-label": l } : { "aria-labelledby": o };
      return h.createElement(
        "li",
        Object.assign({ id: s, className: $(Lt.dataListItem, r && Lt.modifiers.expanded, d && Lt.modifiers.clickable, u && b && Lt.modifiers.selected, i), "aria-labelledby": o }, d && { tabIndex: 0, onClick: f, onKeyDown: g }, d && b && { "aria-selected": !0 }, c),
        m && h.createElement("input", Object.assign({ className: "pf-v5-screen-reader", type: "radio", checked: b, onChange: (y) => m(y, s), tabIndex: -1 }, v)),
        h.Children.map(n, (y) => h.isValidElement(y) && h.cloneElement(y, {
          rowid: o
        }))
      );
    });
  }
}
Ta.displayName = "DataListItem";
Ta.defaultProps = {
  isExpanded: !1,
  className: "",
  id: "",
  children: null,
  "aria-labelledby": ""
};
const ja = (e) => {
  var {
    className: t = "",
    dataListCells: n,
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    rowid: r = ""
  } = e, i = oe(e, ["className", "dataListCells", "rowid"]);
  return h.createElement("div", Object.assign({ className: $(Lt.dataListItemContent, t) }, i), n);
};
ja.displayName = "DataListItemCells";
const Ba = (e) => {
  var { children: t, className: n = "", rowid: r = "", wrapModifier: i = null } = e, s = oe(e, ["children", "className", "rowid", "wrapModifier"]);
  return h.createElement("div", Object.assign({ className: $(Lt.dataListItemRow, n, i && Lt.modifiers[i]) }, s), h.Children.map(t, (o) => h.isValidElement(o) && h.cloneElement(o, {
    rowid: r
  })));
};
Ba.displayName = "DataListItemRow";
const Co = {
  datePicker: "pf-v5-c-date-picker",
  datePickerCalendar: "pf-v5-c-date-picker__calendar",
  datePickerHelperText: "pf-v5-c-date-picker__helper-text",
  datePickerInput: "pf-v5-c-date-picker__input",
  formControl: "pf-v5-c-form-control",
  modifiers: {
    alignRight: "pf-m-align-right",
    top: "pf-m-top",
    static: "pf-m-static"
  },
  themeDark: "pf-v5-theme-dark"
}, Gt = {
  modifiers: {
    noPadding: "pf-m-no-padding",
    widthAuto: "pf-m-width-auto",
    top: "pf-m-top",
    topLeft: "pf-m-top-left",
    topRight: "pf-m-top-right",
    bottom: "pf-m-bottom",
    bottomLeft: "pf-m-bottom-left",
    bottomRight: "pf-m-bottom-right",
    left: "pf-m-left",
    leftTop: "pf-m-left-top",
    leftBottom: "pf-m-left-bottom",
    right: "pf-m-right",
    rightTop: "pf-m-right-top",
    rightBottom: "pf-m-right-bottom",
    danger: "pf-m-danger",
    warning: "pf-m-warning",
    success: "pf-m-success",
    custom: "pf-m-custom",
    info: "pf-m-info"
  },
  popover: "pf-v5-c-popover",
  popoverArrow: "pf-v5-c-popover__arrow",
  popoverBody: "pf-v5-c-popover__body",
  popoverClose: "pf-v5-c-popover__close",
  popoverContent: "pf-v5-c-popover__content",
  popoverFooter: "pf-v5-c-popover__footer",
  popoverHeader: "pf-v5-c-popover__header",
  popoverTitle: "pf-v5-c-popover__title",
  popoverTitleIcon: "pf-v5-c-popover__title-icon",
  popoverTitleText: "pf-v5-c-popover__title-text",
  themeDark: "pf-v5-theme-dark"
}, p_ = h.createContext({}), Z1 = (e) => {
  var { className: t = null, children: n } = e, r = oe(e, ["className", "children"]);
  return h.createElement("div", Object.assign({ className: $(Gt.popoverContent, t) }, r), n);
};
Z1.displayName = "PopoverContent";
const Q1 = (e) => {
  var { children: t, id: n, className: r } = e, i = oe(e, ["children", "id", "className"]);
  return h.createElement("div", Object.assign({ className: $(Gt.popoverBody, r), id: n }, i), t);
};
Q1.displayName = "PopoverBody";
const ex = (e) => {
  var { children: t, className: n } = e, r = oe(e, ["children", "className"]);
  return h.createElement("span", Object.assign({ className: $(Gt.popoverTitleIcon, n) }, r), t);
};
ex.displayName = "PopoverHeaderIcon";
const tx = (e) => {
  var { children: t, className: n, headingLevel: r } = e, i = oe(e, ["children", "className", "headingLevel"]);
  const s = r;
  return h.createElement(s, Object.assign({ className: $(Gt.popoverTitleText, n) }, i), t);
};
tx.displayName = "PopoverHeaderText";
const nx = (e) => {
  var { children: t, icon: n, className: r, titleHeadingLevel: i = "h6", alertSeverityVariant: s, id: o, alertSeverityScreenReaderText: l } = e, c = oe(e, ["children", "icon", "className", "titleHeadingLevel", "alertSeverityVariant", "id", "alertSeverityScreenReaderText"]);
  return h.createElement(
    "header",
    Object.assign({ className: $(Gt.popoverHeader, r) }, c),
    h.createElement(
      "div",
      { className: $(Gt.popoverTitle), id: o },
      n && h.createElement(ex, null, n),
      h.createElement(
        tx,
        { headingLevel: i },
        s && l && h.createElement("span", { className: "pf-v5-screen-reader" }, l),
        t
      )
    )
  );
};
nx.displayName = "PopoverHeader";
const ax = (e) => {
  var { children: t, className: n = "" } = e, r = oe(e, ["children", "className"]);
  return h.createElement("footer", Object.assign({ className: $(Gt.popoverFooter, n) }, r), t);
};
ax.displayName = "PopoverFooter";
const rx = (e) => {
  var { onClose: t = () => {
  } } = e, n = oe(e, ["onClose"]);
  return h.createElement(
    "div",
    { className: $(Gt.popoverClose) },
    h.createElement(
      z,
      Object.assign({ onClick: t, variant: "plain", "aria-label": !0 }, n, { style: { pointerEvents: "auto" } }),
      h.createElement(Oa, null)
    )
  );
};
rx.displayName = "PopoverCloseButton";
const ix = (e) => {
  var { className: t = "" } = e, n = oe(e, ["className"]);
  return h.createElement("div", Object.assign({ className: $(Gt.popoverArrow, t) }, n));
};
ix.displayName = "PopoverArrow";
const Wp = {
  name: "--pf-v5-c-popover--MaxWidth",
  value: "none",
  var: "var(--pf-v5-c-popover--MaxWidth)"
}, Xp = {
  name: "--pf-v5-c-popover--MinWidth",
  value: "auto",
  var: "var(--pf-v5-c-popover--MinWidth)"
};
var ev;
(function(e) {
  e.auto = "auto", e.top = "top", e.bottom = "bottom", e.left = "left", e.right = "right", e.topStart = "top-start", e.topEnd = "top-end", e.bottomStart = "bottom-start", e.bottomEnd = "bottom-end", e.leftStart = "left-start", e.leftEnd = "left-end", e.rightStart = "right-start", e.rightEnd = "right-end";
})(ev || (ev = {}));
const m_ = {
  custom: Gt.modifiers.custom,
  info: Gt.modifiers.info,
  success: Gt.modifiers.success,
  warning: Gt.modifiers.warning,
  danger: Gt.modifiers.danger
}, Or = (e) => {
  var { children: t, position: n = "top", enableFlip: r = !0, className: i = "", isVisible: s = null, shouldClose: o = () => null, shouldOpen: l = () => null, "aria-label": c = "", bodyContent: d, headerContent: u = null, headerComponent: p = "h6", headerIcon: m = null, alertSeverityVariant: f, alertSeverityScreenReaderText: g, footerContent: b = null, appendTo: v = () => document.body, hideOnOutsideClick: y = !0, onHide: x = () => null, onHidden: w = () => null, onShow: R = () => null, onShown: S = () => null, onMount: _ = () => null, zIndex: O = 9999, triggerAction: E = "click", minWidth: T = Xp && Xp.value, maxWidth: I = Wp && Wp.value, closeBtnAriaLabel: k = "Close", showClose: P = !0, distance: D = 25, flipBehavior: F = [
    "top",
    "bottom",
    "left",
    "right",
    "top-start",
    "top-end",
    "bottom-start",
    "bottom-end",
    "left-start",
    "left-end",
    "right-start",
    "right-end"
  ], animationDuration: A = 300, id: M, withFocusTrap: V, triggerRef: U, hasNoPadding: G = !1, hasAutoWidth: q = !1, elementToFocus: L } = e, K = oe(e, ["children", "position", "enableFlip", "className", "isVisible", "shouldClose", "shouldOpen", "aria-label", "bodyContent", "headerContent", "headerComponent", "headerIcon", "alertSeverityVariant", "alertSeverityScreenReaderText", "footerContent", "appendTo", "hideOnOutsideClick", "onHide", "onHidden", "onShow", "onShown", "onMount", "zIndex", "triggerAction", "minWidth", "maxWidth", "closeBtnAriaLabel", "showClose", "distance", "flipBehavior", "animationDuration", "id", "withFocusTrap", "triggerRef", "hasNoPadding", "hasAutoWidth", "elementToFocus"]);
  const B = M || Si(), j = s !== null, [W, Q] = h.useState(!1), [te, ie] = h.useState(!!V), ce = h.useRef(null);
  h.useEffect(() => {
    _();
  }, []), h.useEffect(() => {
    j && (s ? Z(void 0, !0) : me());
  }, [s, j]);
  const Z = (Ce, Ge) => {
    Ce && R(Ce), Q(!0), V !== !1 && Ge && ie(!0);
  }, me = (Ce) => {
    Ce && x(Ce), Q(!1);
  }, ne = {
    top: Gt.modifiers.top,
    bottom: Gt.modifiers.bottom,
    left: Gt.modifiers.left,
    right: Gt.modifiers.right,
    "top-start": Gt.modifiers.topLeft,
    "top-end": Gt.modifiers.topRight,
    "bottom-start": Gt.modifiers.bottomLeft,
    "bottom-end": Gt.modifiers.bottomRight,
    "left-start": Gt.modifiers.leftTop,
    "left-end": Gt.modifiers.leftBottom,
    "right-start": Gt.modifiers.rightTop,
    "right-end": Gt.modifiers.rightBottom
  }, Oe = T !== Xp.value, Pe = I !== Wp.value, $e = (Ce) => {
    Ce.key === dn.Escape && W && (j ? o(Ce, me) : me(Ce));
  }, fe = (Ce, Ge, it) => {
    if (y && W) {
      const qe = it && it.contains(Ce.target), kt = Ge && Ge.contains(Ce.target);
      if (qe || kt)
        return;
      j ? o(Ce, me) : me(Ce);
    }
  }, we = (Ce) => {
    j ? W ? o(Ce, me) : l(Ce, Z) : W ? me(Ce) : Z(Ce, !0);
  }, J = () => {
    te && ie(!1);
  }, X = (Ce) => {
    j ? l(Ce, Z) : Z(Ce, !1);
  }, Y = (Ce) => {
    j ? o(Ce, me) : me(Ce);
  }, ae = (Ce) => {
    j ? l(Ce, Z) : Z(Ce, !1);
  }, de = (Ce) => {
    j ? o(Ce, me) : me(Ce);
  }, ye = (Ce) => {
    Ce.stopPropagation(), j ? o(Ce, me) : me(Ce);
  }, he = h.createElement(
    Hu,
    Object.assign({ ref: ce, active: te, focusTrapOptions: {
      returnFocusOnDeactivate: V !== !1,
      clickOutsideDeactivates: !0,
      // FocusTrap's initialFocus can accept false as a value to prevent initial focus.
      // We want to prevent this in case false is ever passed in.
      initialFocus: L || void 0,
      checkCanFocusTrap: (Ce) => new Promise((Ge) => {
        const it = setInterval(() => {
          Ce.every((qe) => getComputedStyle(qe).visibility !== "hidden") && (Ge(), clearInterval(it));
        }, 10);
      }),
      tabbableOptions: { displayCheck: "none" },
      fallbackFocus: () => {
        let Ce = null;
        return document && document.activeElement && (Ce = document.activeElement), Ce;
      }
    }, preventScrollOnDeactivate: !0, className: $(Gt.popover, f && m_[f], G && Gt.modifiers.noPadding, q && Gt.modifiers.widthAuto, i), role: "dialog", "aria-modal": "true", "aria-label": u ? void 0 : c, "aria-labelledby": u ? `popover-${B}-header` : void 0, "aria-describedby": `popover-${B}-body`, onMouseDown: J, style: {
      minWidth: Oe ? T : null,
      maxWidth: Pe ? I : null
    } }, K),
    h.createElement(ix, null),
    h.createElement(
      Z1,
      null,
      P && E === "click" && h.createElement(rx, { onClose: ye, "aria-label": k }),
      u && h.createElement(nx, { id: `popover-${B}-header`, icon: m, alertSeverityVariant: f, alertSeverityScreenReaderText: g || `${f} alert:`, titleHeadingLevel: p }, typeof u == "function" ? u(me) : u),
      h.createElement(Q1, { id: `popover-${B}-body` }, typeof d == "function" ? d(me) : d),
      b && h.createElement(ax, { id: `popover-${B}-footer` }, typeof b == "function" ? b(me) : b)
    )
  );
  return h.createElement(
    p_.Provider,
    { value: { headerComponent: p } },
    h.createElement(Qr, { trigger: t, triggerRef: U, popper: he, popperRef: ce, minWidth: T, appendTo: v, isVisible: W, onMouseEnter: E === "hover" && X, onMouseLeave: E === "hover" && Y, onPopperMouseEnter: E === "hover" && X, onPopperMouseLeave: E === "hover" && Y, onFocus: E === "hover" && ae, onBlur: E === "hover" && de, positionModifiers: ne, distance: D, placement: n, onTriggerClick: E === "click" && we, onDocumentClick: fe, onDocumentKeyDown: $e, enableFlip: r, zIndex: O, flipBehavior: F, animationDuration: A, onHidden: w, onShown: S, onHide: () => ie(!1) })
  );
};
Or.displayName = "Popover";
const f_ = {
  name: "OutlinedCalendarAltIcon",
  height: 512,
  width: 448,
  svgPath: "M148 288h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm108-12v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm96 0v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm-96 96v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm-96 0v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm96-260v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V112c0-26.5 21.5-48 48-48h48V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h128V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h48c26.5 0 48 21.5 48 48zm-48 346V160H48v298c0 3.3 2.7 6 6 6h340c3.3 0 6-2.7 6-6z",
  yOffset: 0,
  xOffset: 0
}, h_ = Qe(f_), $r = {
  helperText: "pf-v5-c-helper-text",
  helperTextItem: "pf-v5-c-helper-text__item",
  helperTextItemIcon: "pf-v5-c-helper-text__item-icon",
  helperTextItemText: "pf-v5-c-helper-text__item-text",
  modifiers: {
    hidden: "pf-m-hidden",
    indeterminate: "pf-m-indeterminate",
    warning: "pf-m-warning",
    success: "pf-m-success",
    error: "pf-m-error",
    dynamic: "pf-m-dynamic"
  },
  themeDark: "pf-v5-theme-dark"
}, Xr = (e) => {
  var { children: t, className: n, component: r = "div", id: i, isLiveRegion: s = !1, "aria-label": o } = e, l = oe(e, ["children", "className", "component", "id", "isLiveRegion", "aria-label"]);
  const c = r;
  return h.createElement(c, Object.assign({ id: i, className: $($r.helperText, n) }, s && { "aria-live": "polite" }, r === "ul" && { role: "list", "aria-label": o }, l), t);
};
Xr.displayName = "HelperText";
const g_ = {
  name: "MinusIcon",
  height: 512,
  width: 448,
  svgPath: "M416 208H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h384c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z",
  yOffset: 0,
  xOffset: 0
}, sx = Qe(g_), b_ = {
  default: "",
  indeterminate: $r.modifiers.indeterminate,
  warning: $r.modifiers.warning,
  success: $r.modifiers.success,
  error: $r.modifiers.error
}, Yr = (e) => {
  var { children: t, className: n, component: r = "div", variant: i = "default", icon: s, isDynamic: o = !1, hasIcon: l = o, id: c, screenReaderText: d = `${i} status` } = e, u = oe(e, ["children", "className", "component", "variant", "icon", "isDynamic", "hasIcon", "id", "screenReaderText"]);
  const p = r;
  return h.createElement(
    p,
    Object.assign({ className: $($r.helperTextItem, b_[i], o && $r.modifiers.dynamic, n), id: c }, u),
    s && h.createElement("span", { className: $($r.helperTextItemIcon), "aria-hidden": !0 }, s),
    l && !s && h.createElement(
      "span",
      { className: $($r.helperTextItemIcon), "aria-hidden": !0 },
      (i === "default" || i === "indeterminate") && h.createElement(sx, null),
      i === "warning" && h.createElement(Kc, null),
      i === "success" && h.createElement(Ks, null),
      i === "error" && h.createElement(ds, null)
    ),
    h.createElement(
      "span",
      { className: $($r.helperTextItemText) },
      t,
      o && h.createElement(
        "span",
        { className: "pf-v5-screen-reader" },
        ": ",
        d,
        ";"
      )
    )
  );
};
Yr.displayName = "HelperTextItem";
const v_ = {
  name: "--pf-v5-c-date-picker__input--c-form-control--width-chars",
  value: "10",
  var: "var(--pf-v5-c-date-picker__input--c-form-control--width-chars)"
}, y_ = (e) => `${e.getFullYear()}-${(e.getMonth() + 1).toString().padStart(2, "0")}-${e.getDate().toString().padStart(2, "0")}`, C_ = (e, t) => {
  var { className: n, locale: r = void 0, dateFormat: i = y_, dateParse: s = (ae) => ae.split("-").length === 3 ? /* @__PURE__ */ new Date(`${ae}T00:00:00`) : /* @__PURE__ */ new Date(void 0), isDisabled: o = !1, placeholder: l = "YYYY-MM-DD", value: c = "", "aria-label": d = "Date picker", buttonAriaLabel: u = "Toggle date picker", onChange: p = () => {
  }, onBlur: m = () => {
  }, invalidFormatText: f = "Invalid date", requiredDateOptions: g, helperText: b, appendTo: v = "inline", popoverProps: y, monthFormat: x, weekdayFormat: w, longWeekdayFormat: R, dayFormat: S, weekStart: _, validators: O = [], rangeStart: E, style: T = {}, inputProps: I = {} } = e, k = oe(e, ["className", "locale", "dateFormat", "dateParse", "isDisabled", "placeholder", "value", "aria-label", "buttonAriaLabel", "onChange", "onBlur", "invalidFormatText", "requiredDateOptions", "helperText", "appendTo", "popoverProps", "monthFormat", "weekdayFormat", "longWeekdayFormat", "dayFormat", "weekStart", "validators", "rangeStart", "style", "inputProps"]);
  const [P, D] = h.useState(c), [F, A] = h.useState(s(P)), [M, V] = h.useState(""), [U, G] = h.useState(!1), [q, L] = h.useState(!1), [K, B] = h.useState(!0), [j, W] = h.useState(!1), Q = h.useMemo(() => Math.max(i(/* @__PURE__ */ new Date()).length, l.length), [i]), te = Object.assign({ [v_.name]: Q }, T), ie = h.useRef(), ce = h.useRef(), Z = h.useRef(), me = g?.isRequired || !1, ne = g?.emptyDateText || "Date cannot be blank";
  h.useEffect(() => {
    D(c), A(s(c));
  }, [c]), h.useEffect(() => {
    B(!P);
    const ae = s(P);
    M && La(ae) && Oe(ae), P === "" && !K && !j && V(me ? ne : "");
  }, [P]);
  const Oe = (ae) => {
    V(O.map((de) => de(ae)).join(`
`) || "");
  }, Pe = (ae, de) => {
    D(de), V("");
    const ye = s(de);
    A(ye), La(ye) ? p(ae, de, new Date(ye)) : p(ae, de);
  }, $e = (ae) => {
    W(!1);
    const de = s(P), ye = La(de), he = ye ? new Date(de) : void 0;
    m(ae, P, he), ye && Oe(de), !ye && !K && V(f), !ye && K && g?.isRequired && V(ne);
  }, fe = (ae, de) => {
    const ye = i(de);
    D(ye), A(de), Oe(de), G(!1), p(null, ye, new Date(de));
  }, we = (ae) => {
    ae.key === "Enter" && P && (La(F) ? Oe(F) : V(f));
  };
  ih(t, () => ({
    setCalendarOpen: (ae) => G(ae),
    toggleCalendar: (ae) => {
      G((de) => ae !== void 0 ? ae : !de);
    },
    isCalendarOpen: U
  }), [G, U, q]);
  const J = (ae) => `.${nn.calendarMonthDatesCell}.${ae} .${nn.calendarMonthDate}`, X = J(nn.modifiers.selected), Y = J(nn.modifiers.current);
  return h.createElement(
    "div",
    Object.assign({ className: $(Co.datePicker, n), ref: ce, style: te }, k),
    h.createElement(
      Or,
      Object.assign({ elementToFocus: La(F) ? X : Y, position: "bottom", bodyContent: h.createElement(j1, {
        date: F,
        onChange: fe,
        locale: r,
        // Use truthy values of strings
        validators: O.map((ae) => (de) => !ae(de)),
        onSelectToggle: (ae) => L(ae),
        monthFormat: x,
        weekdayFormat: w,
        longWeekdayFormat: R,
        dayFormat: S,
        weekStart: _,
        rangeStart: E
      }), showClose: !1, isVisible: U, shouldClose: (ae, de) => (ae = ae, ae.key === dn.Escape && q ? (ae.stopPropagation(), L(!1), !1) : ie.current && ie.current.contains(ae.target) ? !1 : (U && (ae.stopPropagation(), G(!1), de(), g?.isRequired && !P && V(ne)), ae.key === dn.Escape && U && ae.stopPropagation(), !0)), withFocusTrap: !0, hasNoPadding: !0, hasAutoWidth: !0, appendTo: v, triggerRef: Z }, y),
      h.createElement(
        "div",
        { className: Co.datePickerInput, ref: Z },
        h.createElement(
          Qt,
          null,
          h.createElement(
            dt,
            null,
            h.createElement(mt, Object.assign({ isDisabled: o, isRequired: g?.isRequired, "aria-label": d, placeholder: l, validated: M.trim() ? "error" : "default", value: P, onChange: Pe, onBlur: $e, onFocus: () => W(!0), onKeyPress: we }, I))
          ),
          h.createElement(
            dt,
            null,
            h.createElement(
              "button",
              {
                ref: ie,
                // TODO: Removed style follow up work with issue #8457
                className: $(Tn.button, Tn.modifiers.control),
                "aria-label": u,
                type: "button",
                onClick: () => G(!U),
                disabled: o
              },
              h.createElement(h_, null)
            )
          )
        )
      )
    ),
    (M || b) && h.createElement("div", { className: Co.datePickerHelperText }, M ? h.createElement(
      Xr,
      null,
      h.createElement(Yr, { variant: "error" }, M)
    ) : b)
  );
}, No = h.forwardRef(C_);
No.displayName = "DatePicker";
const Kn = {
  card: "pf-v5-c-card",
  descriptionList: "pf-v5-c-description-list",
  descriptionListDescription: "pf-v5-c-description-list__description",
  descriptionListGroup: "pf-v5-c-description-list__group",
  descriptionListTerm: "pf-v5-c-description-list__term",
  descriptionListTermIcon: "pf-v5-c-description-list__term-icon",
  descriptionListText: "pf-v5-c-description-list__text",
  modifiers: {
    inlineGrid: "pf-m-inline-grid",
    autoColumnWidths: "pf-m-auto-column-widths",
    autoFit: "pf-m-auto-fit",
    compact: "pf-m-compact",
    fluid: "pf-m-fluid",
    fillColumns: "pf-m-fill-columns",
    displayLg: "pf-m-display-lg",
    display_2xl: "pf-m-display-2xl",
    helpText: "pf-m-help-text",
    "1Col": "pf-m-1-col",
    "2Col": "pf-m-2-col",
    "3Col": "pf-m-3-col",
    horizontal: "pf-m-horizontal",
    vertical: "pf-m-vertical",
    "1ColOnSm": "pf-m-1-col-on-sm",
    "2ColOnSm": "pf-m-2-col-on-sm",
    "3ColOnSm": "pf-m-3-col-on-sm",
    horizontalOnSm: "pf-m-horizontal-on-sm",
    verticalOnSm: "pf-m-vertical-on-sm",
    "1ColOnMd": "pf-m-1-col-on-md",
    "2ColOnMd": "pf-m-2-col-on-md",
    "3ColOnMd": "pf-m-3-col-on-md",
    horizontalOnMd: "pf-m-horizontal-on-md",
    verticalOnMd: "pf-m-vertical-on-md",
    "1ColOnLg": "pf-m-1-col-on-lg",
    "2ColOnLg": "pf-m-2-col-on-lg",
    "3ColOnLg": "pf-m-3-col-on-lg",
    horizontalOnLg: "pf-m-horizontal-on-lg",
    verticalOnLg: "pf-m-vertical-on-lg",
    "1ColOnXl": "pf-m-1-col-on-xl",
    "2ColOnXl": "pf-m-2-col-on-xl",
    "3ColOnXl": "pf-m-3-col-on-xl",
    horizontalOnXl: "pf-m-horizontal-on-xl",
    verticalOnXl: "pf-m-vertical-on-xl",
    "1ColOn_2xl": "pf-m-1-col-on-2xl",
    "2ColOn_2xl": "pf-m-2-col-on-2xl",
    "3ColOn_2xl": "pf-m-3-col-on-2xl",
    horizontalOn_2xl: "pf-m-horizontal-on-2xl",
    verticalOn_2xl: "pf-m-vertical-on-2xl"
  }
}, x_ = {
  name: "--pf-v5-c-description-list--GridTemplateColumns--min",
  value: "0",
  var: "var(--pf-v5-c-description-list--GridTemplateColumns--min)"
}, S_ = {
  name: "--pf-v5-c-description-list__term--width",
  value: "12ch",
  var: "var(--pf-v5-c-description-list__term--width)"
}, w_ = {
  name: "--pf-v5-c-description-list--m-horizontal__term--width",
  value: "fit-content(20ch)",
  var: "var(--pf-v5-c-description-list--m-horizontal__term--width)"
}, tv = (e, t) => {
  const n = t;
  return Object.keys(n || {}).reduce((r, i) => i === "default" ? Object.assign(Object.assign({}, r), { [e]: n[i] }) : Object.assign(Object.assign({}, r), { [`${e}-on-${i}`]: n[i] }), {});
}, vr = (e) => {
  var { className: t = "", children: n = null, isHorizontal: r = !1, isAutoColumnWidths: i, isAutoFit: s, isInlineGrid: o, isCompact: l, isFluid: c, isFillColumns: d, displaySize: u = "default", columnModifier: p, autoFitMinModifier: m, termWidth: f, horizontalTermWidthModifier: g, orientation: b, style: v } = e, y = oe(e, ["className", "children", "isHorizontal", "isAutoColumnWidths", "isAutoFit", "isInlineGrid", "isCompact", "isFluid", "isFillColumns", "displaySize", "columnModifier", "autoFitMinModifier", "termWidth", "horizontalTermWidthModifier", "orientation", "style"]);
  return s && m && (v = Object.assign(Object.assign({}, v), tv(x_.name, m))), f && (v = Object.assign(Object.assign({}, v), { [S_.name]: f })), r && g && (v = Object.assign(Object.assign({}, v), tv(w_.name, g))), h.createElement("dl", Object.assign({ className: $(Kn.descriptionList, (r || c) && Kn.modifiers.horizontal, i && Kn.modifiers.autoColumnWidths, s && Kn.modifiers.autoFit, ut(p, Kn), ut(b, Kn), o && Kn.modifiers.inlineGrid, l && Kn.modifiers.compact, c && Kn.modifiers.fluid, d && Kn.modifiers.fillColumns, u === "lg" && Kn.modifiers.displayLg, u === "2xl" && Kn.modifiers.display_2xl, t), style: v }, y), n);
};
vr.displayName = "DescriptionList";
const Dr = (e) => {
  var { children: t = null, className: n } = e, r = oe(e, ["children", "className"]);
  return h.createElement(
    "dd",
    Object.assign({ className: $(Kn.descriptionListDescription, n) }, r),
    h.createElement("div", { className: $(Kn.descriptionListText) }, t)
  );
};
Dr.displayName = "DescriptionListDescription";
const qi = (e) => {
  var { className: t, children: n } = e, r = oe(e, ["className", "children"]);
  return h.createElement("div", Object.assign({ className: $(Kn.descriptionListGroup, t) }, r), n);
};
qi.displayName = "DescriptionListGroup";
const Mr = (e) => {
  var { children: t, className: n, icon: r } = e, i = oe(e, ["children", "className", "icon"]);
  return h.createElement(
    "dt",
    Object.assign({ className: $(Kn.descriptionListTerm, n) }, i),
    r ? h.createElement("span", { className: $(Kn.descriptionListTermIcon) }, r) : null,
    h.createElement("span", { className: $(Kn.descriptionListText) }, t)
  );
};
Mr.displayName = "DescriptionListTerm";
const Yp = {
  divider: "pf-v5-c-divider",
  modifiers: {
    hidden: "pf-m-hidden",
    hiddenOnSm: "pf-m-hidden-on-sm",
    visibleOnSm: "pf-m-visible-on-sm",
    hiddenOnMd: "pf-m-hidden-on-md",
    visibleOnMd: "pf-m-visible-on-md",
    hiddenOnLg: "pf-m-hidden-on-lg",
    visibleOnLg: "pf-m-visible-on-lg",
    hiddenOnXl: "pf-m-hidden-on-xl",
    visibleOnXl: "pf-m-visible-on-xl",
    hiddenOn_2xl: "pf-m-hidden-on-2xl",
    visibleOn_2xl: "pf-m-visible-on-2xl",
    vertical: "pf-m-vertical",
    insetNone: "pf-m-inset-none",
    insetXs: "pf-m-inset-xs",
    insetSm: "pf-m-inset-sm",
    insetMd: "pf-m-inset-md",
    insetLg: "pf-m-inset-lg",
    insetXl: "pf-m-inset-xl",
    inset_2xl: "pf-m-inset-2xl",
    inset_3xl: "pf-m-inset-3xl",
    horizontalOnSm: "pf-m-horizontal-on-sm",
    verticalOnSm: "pf-m-vertical-on-sm",
    insetNoneOnSm: "pf-m-inset-none-on-sm",
    insetXsOnSm: "pf-m-inset-xs-on-sm",
    insetSmOnSm: "pf-m-inset-sm-on-sm",
    insetMdOnSm: "pf-m-inset-md-on-sm",
    insetLgOnSm: "pf-m-inset-lg-on-sm",
    insetXlOnSm: "pf-m-inset-xl-on-sm",
    inset_2xlOnSm: "pf-m-inset-2xl-on-sm",
    inset_3xlOnSm: "pf-m-inset-3xl-on-sm",
    horizontalOnMd: "pf-m-horizontal-on-md",
    verticalOnMd: "pf-m-vertical-on-md",
    insetNoneOnMd: "pf-m-inset-none-on-md",
    insetXsOnMd: "pf-m-inset-xs-on-md",
    insetSmOnMd: "pf-m-inset-sm-on-md",
    insetMdOnMd: "pf-m-inset-md-on-md",
    insetLgOnMd: "pf-m-inset-lg-on-md",
    insetXlOnMd: "pf-m-inset-xl-on-md",
    inset_2xlOnMd: "pf-m-inset-2xl-on-md",
    inset_3xlOnMd: "pf-m-inset-3xl-on-md",
    horizontalOnLg: "pf-m-horizontal-on-lg",
    verticalOnLg: "pf-m-vertical-on-lg",
    insetNoneOnLg: "pf-m-inset-none-on-lg",
    insetXsOnLg: "pf-m-inset-xs-on-lg",
    insetSmOnLg: "pf-m-inset-sm-on-lg",
    insetMdOnLg: "pf-m-inset-md-on-lg",
    insetLgOnLg: "pf-m-inset-lg-on-lg",
    insetXlOnLg: "pf-m-inset-xl-on-lg",
    inset_2xlOnLg: "pf-m-inset-2xl-on-lg",
    inset_3xlOnLg: "pf-m-inset-3xl-on-lg",
    horizontalOnXl: "pf-m-horizontal-on-xl",
    verticalOnXl: "pf-m-vertical-on-xl",
    insetNoneOnXl: "pf-m-inset-none-on-xl",
    insetXsOnXl: "pf-m-inset-xs-on-xl",
    insetSmOnXl: "pf-m-inset-sm-on-xl",
    insetMdOnXl: "pf-m-inset-md-on-xl",
    insetLgOnXl: "pf-m-inset-lg-on-xl",
    insetXlOnXl: "pf-m-inset-xl-on-xl",
    inset_2xlOnXl: "pf-m-inset-2xl-on-xl",
    inset_3xlOnXl: "pf-m-inset-3xl-on-xl",
    horizontalOn_2xl: "pf-m-horizontal-on-2xl",
    verticalOn_2xl: "pf-m-vertical-on-2xl",
    insetNoneOn_2xl: "pf-m-inset-none-on-2xl",
    insetXsOn_2xl: "pf-m-inset-xs-on-2xl",
    insetSmOn_2xl: "pf-m-inset-sm-on-2xl",
    insetMdOn_2xl: "pf-m-inset-md-on-2xl",
    insetLgOn_2xl: "pf-m-inset-lg-on-2xl",
    insetXlOn_2xl: "pf-m-inset-xl-on-2xl",
    inset_2xlOn_2xl: "pf-m-inset-2xl-on-2xl",
    inset_3xlOn_2xl: "pf-m-inset-3xl-on-2xl"
  }
};
var lf;
(function(e) {
  e.hr = "hr", e.li = "li", e.div = "div";
})(lf || (lf = {}));
const _t = (e) => {
  var { className: t, component: n = lf.hr, inset: r, orientation: i } = e, s = oe(e, ["className", "component", "inset", "orientation"]);
  const o = n;
  return h.createElement(o, Object.assign({ className: $(Yp.divider, ut(r, Yp), ut(i, Yp), t) }, n !== "hr" && { role: "separator" }, s));
};
_t.displayName = "Divider";
const ox = h.createContext({
  onDrag: (e) => !0,
  onDragMove: (e, t) => {
  },
  onDrop: (e, t) => !1
}), Ah = ({ children: e, onDrag: t = () => !0, onDragMove: n = () => {
}, onDrop: r = () => !1 }) => h.createElement(ox.Provider, { value: { onDrag: t, onDragMove: n, onDrop: r } }, e);
Ah.displayName = "DragDrop";
const mr = {
  draggable: "pf-v5-c-draggable",
  droppable: "pf-v5-c-droppable",
  modifiers: {
    dragging: "pf-m-dragging",
    dragOutside: "pf-m-drag-outside"
  },
  themeDark: "pf-v5-theme-dark"
}, lx = h.createContext({
  zone: "defaultDroppableZone",
  droppableId: "defaultDroppableId"
}), k_ = {
  name: "--pf-v5-c-draggable--m-dragging--BackgroundColor",
  value: "#fff",
  var: "var(--pf-v5-c-draggable--m-dragging--BackgroundColor)"
};
function O_() {
  const e = document.createElement("div");
  document.head.appendChild(e);
  const t = window.getComputedStyle(e).backgroundColor;
  return document.head.removeChild(e), t;
}
function cx(e) {
  const t = O_(), n = window.getComputedStyle(e).backgroundColor;
  return n !== t ? n : e.parentElement ? cx(e.parentElement) : t;
}
function T_(e) {
  if (e.getAttribute("blankDiv") === "true")
    for (let t = 0; t < e.children.length; t++) {
      const n = e.children[t];
      if (n.getAttribute("blankDiv") === "true") {
        e.removeChild(n), e.setAttribute("blankDiv", "false");
        break;
      }
    }
}
function Jp(e) {
  T_(e.node), e.node.classList.remove(mr.modifiers.dragging), e.node.classList.remove(mr.modifiers.dragOutside), e.draggableNodes.forEach((t, n) => {
    t.style.transform = "", t.style.transition = "", e.draggableNodesRects[n] = t.getBoundingClientRect();
  });
}
function E_(e, t) {
  return e.clientX > t.x && e.clientX < t.x + t.width && e.clientY > t.y && e.clientY < t.y + t.height;
}
const Lh = (e) => {
  var { className: t, children: n, style: r = {}, hasNoWrapper: i = !1 } = e, s = oe(e, ["className", "children", "style", "hasNoWrapper"]);
  let [o, l] = h.useState(r);
  const [c, d] = h.useState(!1), [u, p] = h.useState(!0), { zone: m, droppableId: f } = h.useContext(lx), { onDrag: g, onDragMove: b, onDrop: v } = h.useContext(ox);
  let y = 0, x = 0, w = null, R, S = null, _, O, E = 0;
  const T = (A) => {
    c && (d(!1), l(r));
  };
  function I() {
    const A = R ? R.getAttribute("data-pf-droppableid") : null;
    return { source: {
      droppableId: f,
      index: w
    }, dest: A !== null && S !== null ? {
      droppableId: A,
      index: S
    } : void 0, hoveringDroppableId: A };
  }
  const k = (A) => {
    A.forEach(Jp), document.removeEventListener("mousemove", _), document.removeEventListener("mouseup", O), document.removeEventListener("contextmenu", O);
    const { source: M, dest: V, hoveringDroppableId: U } = I(), G = v(M, V);
    G && f === U ? (d(!1), l(r)) : G || l(Object.assign(Object.assign({}, o), { transition: "transform 0.5s cubic-bezier(0.2, 1, 0.1, 1) 0s", transform: "", background: r.background, boxShadow: r.boxShadow }));
  }, P = (A, M, V) => {
    if (R = null, M.forEach((q) => {
      const { node: L, rect: K, isDraggingHost: B, draggableNodes: j, draggableNodesRects: W } = q;
      if (E_(A, K)) {
        if (L.classList.remove(mr.modifiers.dragOutside), R = L, L.getAttribute("blankDiv") !== "true" && !B) {
          const Q = document.createElement("div");
          Q.setAttribute("blankDiv", "true");
          let te = -1;
          for (let ie = 0; ie < j.length; ie++) {
            const ce = W[ie], Z = ie === j.length - 1, me = ce.y >= x - E;
            (me || Z) && te === -1 && (Z && !me ? j[ie].after(Q) : j[ie].before(Q), Q.style.height = `${V.height}px`, Q.style.width = `${V.width}px`, L.setAttribute("blankDiv", "true"), te = ie), te !== -1 && (ce.y += V.height);
          }
          j.splice(te, 0, Q), W.splice(te, 0, V), K.height += V.height;
        }
      } else
        Jp(q), L.classList.add(mr.modifiers.dragging), L.classList.add(mr.modifiers.dragOutside);
    }), l(Object.assign(Object.assign({}, o), { transform: `translate(${A.pageX - y}px, ${A.pageY - x}px)` })), p(!!R), S = null, R) {
      const { draggableNodes: q, draggableNodesRects: L } = M.find((B) => B.node === R);
      let K = 0;
      q.forEach((B, j) => {
        B.style.transition = "transform 0.5s cubic-bezier(0.2, 1, 0.1, 1) 0s";
        const W = L[j], Q = W.y + W.height / 2;
        let te = 0;
        x < Q && A.pageY + (V.height - E) > Q ? te -= V.height : x >= Q && A.pageY - E <= Q && (te += V.height), (te <= K && te < 0 || te > K && te > 0) && (S = j), B.style.transform = `translate(0, ${te}px`, K = te;
      });
    }
    const { source: U, dest: G } = I();
    b(U, G);
  }, D = (A) => {
    if (A.preventDefault(), c)
      return;
    const M = A.target, V = M.getBoundingClientRect(), G = Array.from(document.querySelectorAll(`[data-pf-droppable="${m}"]`)).reduce((q, L) => {
      L.classList.add(mr.modifiers.dragging);
      const K = Array.from(L.querySelectorAll(`[data-pf-draggable-zone="${m}"]`)), B = L.contains(M);
      B && (w = K.indexOf(M));
      const j = {
        node: L,
        rect: L.getBoundingClientRect(),
        isDraggingHost: B,
        // We don't want styles to apply to the left behind div in onMouseMoveWhileDragging
        draggableNodes: K.map((W) => W === M ? W.cloneNode(!1) : W),
        draggableNodesRects: K.map((W) => W.getBoundingClientRect())
      };
      return q.push(j), q;
    }, []);
    if (!g({ droppableId: f, index: w })) {
      G.forEach((q) => Jp(q));
      return;
    }
    o = Object.assign(Object.assign({}, o), { top: V.y, left: V.x, width: V.width, height: V.height, [k_.name]: cx(M), position: "fixed", zIndex: 5e3 }), l(o), y = A.pageX, x = A.pageY, E = x - V.y, d(!0), _ = (q) => P(q, G, V), O = () => k(G), document.addEventListener("mousemove", _), document.addEventListener("mouseup", O);
  }, F = Object.assign({
    "data-pf-draggable-zone": c ? null : m,
    draggable: !0,
    className: $(mr.draggable, c && mr.modifiers.dragging, !u && mr.modifiers.dragOutside, t),
    onDragStart: D,
    onTransitionEnd: T,
    style: o
  }, s);
  return h.createElement(
    h.Fragment,
    null,
    c && h.createElement("div", Object.assign({ draggable: !0 }, s, { style: Object.assign(Object.assign({}, r), { visibility: "hidden" }) }), n),
    i ? h.cloneElement(n, F) : h.createElement("div", Object.assign({}, F), n)
  );
};
Lh.displayName = "Draggable";
const Nh = (e) => {
  var { className: t, children: n, zone: r = "defaultZone", droppableId: i = "defaultId", hasNoWrapper: s = !1 } = e, o = oe(e, ["className", "children", "zone", "droppableId", "hasNoWrapper"]);
  const l = Object.assign({
    "data-pf-droppable": r,
    "data-pf-droppableid": i,
    // if has no wrapper is set, don't overwrite children className with the className prop
    className: s && h.Children.count(n) === 1 ? $(mr.droppable, t, n.props.className) : $(mr.droppable, t)
  }, o);
  return h.createElement(lx.Provider, { value: { zone: r, droppableId: i } }, s ? h.cloneElement(n, l) : h.createElement("div", Object.assign({}, l), n));
};
Nh.displayName = "Droppable";
const an = {
  dirRtl: "pf-v5-m-dir-rtl",
  drawer: "pf-v5-c-drawer",
  drawerActions: "pf-v5-c-drawer__actions",
  drawerBody: "pf-v5-c-drawer__body",
  drawerClose: "pf-v5-c-drawer__close",
  drawerContent: "pf-v5-c-drawer__content",
  drawerHead: "pf-v5-c-drawer__head",
  drawerMain: "pf-v5-c-drawer__main",
  drawerPanel: "pf-v5-c-drawer__panel",
  drawerPanelMain: "pf-v5-c-drawer__panel-main",
  drawerSection: "pf-v5-c-drawer__section",
  drawerSplitter: "pf-v5-c-drawer__splitter",
  drawerSplitterHandle: "pf-v5-c-drawer__splitter-handle",
  modifiers: {
    panelBottom: "pf-m-panel-bottom",
    inline: "pf-m-inline",
    noBorder: "pf-m-no-border",
    resizable: "pf-m-resizable",
    static: "pf-m-static",
    panelLeft: "pf-m-panel-left",
    expanded: "pf-m-expanded",
    resizing: "pf-m-resizing",
    noBackground: "pf-m-no-background",
    light_200: "pf-m-light-200",
    noPadding: "pf-m-no-padding",
    padding: "pf-m-padding",
    vertical: "pf-m-vertical",
    width_25: "pf-m-width-25",
    width_33: "pf-m-width-33",
    width_50: "pf-m-width-50",
    width_66: "pf-m-width-66",
    width_75: "pf-m-width-75",
    width_100: "pf-m-width-100",
    width_25OnLg: "pf-m-width-25-on-lg",
    width_33OnLg: "pf-m-width-33-on-lg",
    width_50OnLg: "pf-m-width-50-on-lg",
    width_66OnLg: "pf-m-width-66-on-lg",
    width_75OnLg: "pf-m-width-75-on-lg",
    width_100OnLg: "pf-m-width-100-on-lg",
    width_25OnXl: "pf-m-width-25-on-xl",
    width_33OnXl: "pf-m-width-33-on-xl",
    width_50OnXl: "pf-m-width-50-on-xl",
    width_66OnXl: "pf-m-width-66-on-xl",
    width_75OnXl: "pf-m-width-75-on-xl",
    width_100OnXl: "pf-m-width-100-on-xl",
    width_25On_2xl: "pf-m-width-25-on-2xl",
    width_33On_2xl: "pf-m-width-33-on-2xl",
    width_50On_2xl: "pf-m-width-50-on-2xl",
    width_66On_2xl: "pf-m-width-66-on-2xl",
    width_75On_2xl: "pf-m-width-75-on-2xl",
    width_100On_2xl: "pf-m-width-100-on-2xl",
    inlineOnLg: "pf-m-inline-on-lg",
    staticOnLg: "pf-m-static-on-lg",
    inlineOnXl: "pf-m-inline-on-xl",
    staticOnXl: "pf-m-static-on-xl",
    inlineOn_2xl: "pf-m-inline-on-2xl",
    staticOn_2xl: "pf-m-static-on-2xl"
  },
  pageMain: "pf-v5-c-page__main",
  themeDark: "pf-v5-theme-dark"
};
var Qi;
(function(e) {
  e.default = "default", e.light200 = "light-200", e.noBackground = "no-background";
})(Qi || (Qi = {}));
const Dh = h.createContext({
  isExpanded: !1,
  isStatic: !1,
  onExpand: () => {
  },
  position: "end",
  drawerRef: null,
  drawerContentRef: null,
  isInline: !1
}), Mh = (e) => {
  var { className: t = "", children: n, isExpanded: r = !1, isInline: i = !1, isStatic: s = !1, position: o = "end", onExpand: l = () => {
  } } = e, c = oe(e, ["className", "children", "isExpanded", "isInline", "isStatic", "position", "onExpand"]);
  const d = h.useRef(), u = h.useRef();
  return h.createElement(
    Dh.Provider,
    { value: { isExpanded: r, isStatic: s, onExpand: l, position: o, drawerRef: d, drawerContentRef: u, isInline: i } },
    h.createElement("div", Object.assign({ className: $(an.drawer, r && an.modifiers.expanded, i && an.modifiers.inline, s && an.modifiers.static, (o === "left" || o === "start") && an.modifiers.panelLeft, o === "bottom" && an.modifiers.panelBottom, t), ref: d }, c), n)
  );
};
Mh.displayName = "Drawer";
const dx = (e) => {
  var {
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    className: t = "",
    children: n
  } = e, r = oe(e, ["className", "children"]);
  return h.createElement("div", Object.assign({ className: $(an.drawerMain, t) }, r), n);
};
dx.displayName = "DrawerMain";
const Fh = (e) => {
  var {
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    className: t = "",
    children: n,
    panelContent: r,
    colorVariant: i = Qi.default
  } = e, s = oe(e, ["className", "children", "panelContent", "colorVariant"]);
  const { drawerContentRef: o } = h.useContext(Dh);
  return h.createElement(
    dx,
    null,
    h.createElement("div", Object.assign({ className: $(an.drawerContent, i === Qi.light200 && an.modifiers.light_200, i === Qi.noBackground && an.modifiers.noBackground, t), ref: o }, s), n),
    r
  );
};
Fh.displayName = "DrawerContent";
const $h = (e) => {
  var {
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    className: t = "",
    children: n,
    hasPadding: r = !1
  } = e, i = oe(e, ["className", "children", "hasPadding"]);
  return h.createElement("div", Object.assign({ className: $(an.drawerBody, r && an.modifiers.padding, t) }, i), n);
};
$h.displayName = "DrawerContentBody";
const ux = (e) => {
  var {
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    className: t = "",
    children: n,
    hasNoPadding: r = !1
  } = e, i = oe(e, ["className", "children", "hasNoPadding"]);
  return h.createElement("div", Object.assign({ className: $(an.drawerBody, r && an.modifiers.noPadding, t) }, i), n);
};
ux.displayName = "DrawerPanelBody";
const px = (e) => {
  var {
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    className: t = "",
    children: n,
    hasNoPadding: r = !1
  } = e, i = oe(e, ["className", "children", "hasNoPadding"]);
  return h.createElement(
    ux,
    { hasNoPadding: r },
    h.createElement("div", Object.assign({ className: $(an.drawerHead, t) }, i), n)
  );
};
px.displayName = "DrawerHead";
const Zp = {
  name: "--pf-v5-c-drawer__panel--md--FlexBasis",
  value: "50%",
  var: "var(--pf-v5-c-drawer__panel--md--FlexBasis)"
}, I_ = {
  name: "--pf-v5-c-drawer__panel--md--FlexBasis--min",
  value: "1.5rem",
  var: "var(--pf-v5-c-drawer__panel--md--FlexBasis--min)"
}, P_ = {
  name: "--pf-v5-c-drawer__panel--md--FlexBasis--max",
  value: "100%",
  var: "var(--pf-v5-c-drawer__panel--md--FlexBasis--max)"
};
let Bi = null, Tl = 0;
const jh = (e) => {
  var { className: t = "", id: n, children: r, hasNoBorder: i = !1, isResizable: s = !1, onResize: o, minSize: l, defaultSize: c, maxSize: d, increment: u = 5, resizeAriaLabel: p = "Resize", widths: m, colorVariant: f = Qi.default, focusTrap: g } = e, b = oe(e, ["className", "id", "children", "hasNoBorder", "isResizable", "onResize", "minSize", "defaultSize", "maxSize", "increment", "resizeAriaLabel", "widths", "colorVariant", "focusTrap"]);
  const v = h.useRef(), y = h.useRef(), [x, w] = h.useState(0), { position: R, isExpanded: S, isStatic: _, onExpand: O, drawerRef: E, drawerContentRef: T, isInline: I } = h.useContext(Dh), k = _ ? !1 : !S, [P, D] = h.useState(!k), [F, A] = h.useState(!1), M = h.useRef(null);
  let V = 0, U, G, q, L, K = !0;
  _ && g?.enabled && console.warn("DrawerPanelContent: The focusTrap.enabled prop cannot be true if the Drawer's isStatic prop is true. This will cause a permanent focus trap."), h.useEffect(() => {
    !_ && S && D(S);
  }, [_, S]);
  const B = () => {
    let X, Y;
    const ae = Ji(v.current) === "rtl";
    I && (R === "end" || R === "right") ? ae ? (X = v.current.getBoundingClientRect().left - y.current.getBoundingClientRect().right, Y = E.current.getBoundingClientRect().left - E.current.getBoundingClientRect().right) : (X = v.current.getBoundingClientRect().right - y.current.getBoundingClientRect().left, Y = E.current.getBoundingClientRect().right - E.current.getBoundingClientRect().left) : I && (R === "start" || R === "left") ? ae ? (X = y.current.getBoundingClientRect().left - v.current.getBoundingClientRect().right, Y = E.current.getBoundingClientRect().left - E.current.getBoundingClientRect().right) : (X = y.current.getBoundingClientRect().right - v.current.getBoundingClientRect().left, Y = E.current.getBoundingClientRect().right - E.current.getBoundingClientRect().left) : R === "end" || R === "right" ? ae ? (X = T.current.getBoundingClientRect().left - y.current.getBoundingClientRect().right, Y = T.current.getBoundingClientRect().left - T.current.getBoundingClientRect().right) : (X = T.current.getBoundingClientRect().right - y.current.getBoundingClientRect().left, Y = T.current.getBoundingClientRect().right - T.current.getBoundingClientRect().left) : R === "start" || R === "left" ? ae ? (X = y.current.getBoundingClientRect().left - T.current.getBoundingClientRect().right, Y = T.current.getBoundingClientRect().left - T.current.getBoundingClientRect().right) : (X = y.current.getBoundingClientRect().right - T.current.getBoundingClientRect().left, Y = T.current.getBoundingClientRect().right - T.current.getBoundingClientRect().left) : R === "bottom" && (X = T.current.getBoundingClientRect().bottom - y.current.getBoundingClientRect().top, Y = T.current.getBoundingClientRect().bottom - T.current.getBoundingClientRect().top);
    const de = X / Y * 100;
    return Math.round((de + Number.EPSILON) * 100) / 100;
  }, j = (X) => {
    X.stopPropagation(), document.addEventListener("touchmove", Oe, { passive: !1 }), document.addEventListener("touchend", ne), Bi = !0;
  }, W = (X) => {
    X.stopPropagation(), X.preventDefault(), document.addEventListener("mousemove", me), document.addEventListener("mouseup", Pe), E.current.classList.add($(an.modifiers.resizing)), Bi = !0, K = !0;
  }, Q = (X) => {
    const Y = R === "bottom" ? X.clientY : X.clientX;
    ie(X, Y);
  }, te = (X) => {
    X.preventDefault(), X.stopImmediatePropagation();
    const Y = R === "bottom" ? X.touches[0].clientY : X.touches[0].clientX;
    ie(X, Y);
  }, ie = (X, Y) => {
    const ae = Ji(v.current) === "rtl";
    if (X.stopPropagation(), !Bi)
      return;
    K && (U = v.current.getBoundingClientRect(), ae ? (q = U.right, G = U.left) : (G = U.right, q = U.left), L = U.bottom, K = !1);
    const de = Y;
    let ye = 0;
    R === "end" || R === "right" ? ye = ae ? de - G : G - de : R === "start" || R === "left" ? ye = ae ? q - de : de - q : ye = L - de, R === "bottom" && (v.current.style.overflowAnchor = "none"), v.current.style.setProperty(Zp.name, ye + "px"), V = ye, w(B());
  }, ce = (X) => {
    Bi && (E.current.classList.remove($(an.modifiers.resizing)), Bi = !1, o && o(X, V, n), K = !0, document.removeEventListener("mousemove", me), document.removeEventListener("mouseup", Pe));
  }, Z = (X) => {
    X.stopPropagation(), Bi && (Bi = !1, o && o(X, V, n), document.removeEventListener("touchmove", Oe), document.removeEventListener("touchend", ne));
  }, me = h.useCallback(Q, []), ne = h.useCallback(Z, []), Oe = h.useCallback(te, []), Pe = h.useCallback(ce, []), $e = (X) => {
    const Y = Ji(v.current) === "rtl", ae = X.key;
    if (ae !== "Escape" && ae !== "Enter" && ae !== "ArrowUp" && ae !== "ArrowDown" && ae !== "ArrowLeft" && ae !== "ArrowRight") {
      Bi && X.preventDefault();
      return;
    }
    X.preventDefault(), (ae === "Escape" || ae === "Enter") && o && o(X, V, n);
    const de = v.current.getBoundingClientRect();
    Tl = R === "bottom" ? de.height : de.width;
    let ye = 0;
    ae === "ArrowRight" ? Y ? ye = R === "left" || R === "start" ? -u : u : ye = R === "left" || R === "start" ? u : -u : ae === "ArrowLeft" ? Y ? ye = R === "left" || R === "start" ? u : -u : ye = R === "left" || R === "start" ? -u : u : ae === "ArrowUp" ? ye = u : ae === "ArrowDown" && (ye = -u), Tl = Tl + ye, R === "bottom" && (v.current.style.overflowAnchor = "none"), v.current.style.setProperty(Zp.name, Tl + "px"), V = Tl, w(B());
  }, fe = {};
  c && (fe[Zp.name] = c), l && (fe[I_.name] = l), d && (fe[P_.name] = d);
  const we = g?.enabled && !_, J = we ? Hu : "div";
  return h.createElement($a, { prefix: "pf-drawer-panel-" }, (X) => {
    const Y = {
      tabIndex: -1,
      "aria-modal": !0,
      role: "dialog",
      active: F,
      "aria-labelledby": g?.["aria-labelledby"] || n || X,
      focusTrapOptions: {
        fallbackFocus: () => v.current,
        onActivate: () => {
          M.current !== document.activeElement && (M.current = document.activeElement);
        },
        onDeactivate: () => {
          M.current && M.current.focus && M.current.focus();
        },
        clickOutsideDeactivates: !0,
        returnFocusOnDeactivate: !1,
        // FocusTrap's initialFocus can accept false as a value to prevent initial focus.
        // We want to prevent this in case false is ever passed in.
        initialFocus: g?.elementToFocusOnExpand || void 0,
        escapeDeactivates: !1
      }
    };
    return h.createElement(J, Object.assign({}, we && Y, { id: n || X, className: $(an.drawerPanel, s && an.modifiers.resizable, i && an.modifiers.noBorder, ut(m, an), f === Qi.light200 && an.modifiers.light_200, f === Qi.noBackground && an.modifiers.noBackground, t), onTransitionEnd: (ae) => {
      ae.target === v.current && (!k && ae.nativeEvent.propertyName === "transform" && O(ae), D(!k), we && ae.nativeEvent.propertyName === "transform" && A((de) => !de));
    }, hidden: k }, (c || l || d) && {
      style: fe
    }, b, { ref: v }), P && h.createElement(
      h.Fragment,
      null,
      s && h.createElement(
        h.Fragment,
        null,
        h.createElement(
          "div",
          { className: $(an.drawerSplitter, R !== "bottom" && an.modifiers.vertical), role: "separator", tabIndex: 0, "aria-orientation": R === "bottom" ? "horizontal" : "vertical", "aria-label": p, "aria-valuenow": x, "aria-valuemin": 0, "aria-valuemax": 100, "aria-controls": n || X, onMouseDown: W, onKeyDown: $e, onTouchStart: j, ref: y },
          h.createElement("div", { className: $(an.drawerSplitterHandle), "aria-hidden": !0 })
        ),
        h.createElement("div", { className: $(an.drawerPanelMain) }, r)
      ),
      !s && r
    ));
  });
};
jh.displayName = "DrawerPanelContent";
const __ = (e) => {
  var { children: t, className: n, onSelect: r, isOpen: i, toggle: s, shouldFocusToggleOnSelect: o = !1, onOpenChange: l, isPlain: c, isScrollable: d, innerRef: u, ouiaId: p, ouiaSafe: m = !0, zIndex: f = 9999, popperProps: g, onOpenChangeKeys: b = ["Escape", "Tab"], menuHeight: v, maxMenuHeight: y } = e, x = oe(e, ["children", "className", "onSelect", "isOpen", "toggle", "shouldFocusToggleOnSelect", "onOpenChange", "isPlain", "isScrollable", "innerRef", "ouiaId", "ouiaSafe", "zIndex", "popperProps", "onOpenChangeKeys", "menuHeight", "maxMenuHeight"]);
  const w = re.useRef(), R = re.useRef(), S = Ka(qt.displayName, p, m), _ = u || w, O = typeof s == "function" || typeof s != "function" && !s.toggleRef ? R : s?.toggleRef;
  re.useEffect(() => {
    const I = (P) => {
      var D, F, A;
      i && l && (!((D = _.current) === null || D === void 0) && D.contains(P.target) || !((F = O.current) === null || F === void 0) && F.contains(P.target)) && b.includes(P.key) && (l(!1), (A = O.current) === null || A === void 0 || A.focus());
    }, k = (P) => {
      var D, F, A;
      i && (!((D = O.current) === null || D === void 0) && D.contains(P.target)) && setTimeout(() => {
        var M;
        const V = (M = _?.current) === null || M === void 0 ? void 0 : M.querySelector('li button:not(:disabled),li input:not(:disabled),li a:not([aria-disabled="true"])');
        V && V.focus();
      }, 0), i && l && !(!((F = O?.current) === null || F === void 0) && F.contains(P.target)) && i && !(!((A = _.current) === null || A === void 0) && A.contains(P.target)) && l(!1);
    };
    return window.addEventListener("keydown", I), window.addEventListener("click", k), () => {
      window.removeEventListener("keydown", I), window.removeEventListener("click", k);
    };
  }, [i, _, O, l, b]);
  const E = y !== void 0 || v !== void 0 || d, T = re.createElement(
    as,
    Object.assign({ className: $(n), ref: _, onSelect: (I, k) => {
      r && r(I, k), o && O.current.focus();
    }, isPlain: c, isScrollable: E }, x, S),
    re.createElement(Xo, { menuHeight: v, maxMenuHeight: y }, t)
  );
  return re.createElement(Qr, Object.assign({ trigger: typeof s == "function" ? s(O) : s.toggleNode, triggerRef: O, popper: T, popperRef: _, isVisible: i, zIndex: f }, g));
}, qt = re.forwardRef((e, t) => re.createElement(__, Object.assign({ innerRef: t }, e)));
qt.displayName = "Dropdown";
const Bh = (e) => {
  var { children: t, className: n, label: r, labelHeadingLevel: i = "h1" } = e, s = oe(e, ["children", "className", "label", "labelHeadingLevel"]);
  return re.createElement(Oh, Object.assign({ className: $(n), label: r, labelHeadingLevel: i }, s), t);
};
Bh.displayName = "DropdownGroup";
const R_ = (e) => {
  var { children: t, className: n, description: r, isDisabled: i, isAriaDisabled: s, value: o, onClick: l, ouiaId: c, ouiaSafe: d, innerRef: u, tooltipProps: p } = e, m = oe(e, ["children", "className", "description", "isDisabled", "isAriaDisabled", "value", "onClick", "ouiaId", "ouiaSafe", "innerRef", "tooltipProps"]);
  const f = Ka(Ke.displayName, c, d);
  return re.createElement(Yo, Object.assign({ className: $(n), description: r, isDisabled: i, isAriaDisabled: s, itemId: o, onClick: l, tooltipProps: p, ref: u }, f, m), t);
}, Ke = re.forwardRef((e, t) => re.createElement(R_, Object.assign({}, e, { innerRef: t })));
Ke.displayName = "DropdownItem";
const Xt = (e) => {
  var { children: t, className: n } = e, r = oe(e, ["children", "className"]);
  return re.createElement(Jo, Object.assign({ className: $(n) }, r), t);
};
Xt.displayName = "DropdownList";
const A_ = {
  name: "AngleDoubleLeftIcon",
  height: 512,
  width: 448,
  svgPath: "M223.7 239l136-136c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9L319.9 256l96.4 96.4c9.4 9.4 9.4 24.6 0 33.9L393.7 409c-9.4 9.4-24.6 9.4-33.9 0l-136-136c-9.5-9.4-9.5-24.6-.1-34zm-192 34l136 136c9.4 9.4 24.6 9.4 33.9 0l22.6-22.6c9.4-9.4 9.4-24.6 0-33.9L127.9 256l96.4-96.4c9.4-9.4 9.4-24.6 0-33.9L201.7 103c-9.4-9.4-24.6-9.4-33.9 0l-136 136c-9.5 9.4-9.5 24.6-.1 34z",
  yOffset: 0,
  xOffset: 0
}, L_ = Qe(A_), N_ = {
  name: "AngleDoubleRightIcon",
  height: 512,
  width: 448,
  svgPath: "M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34zm192-34l-136-136c-9.4-9.4-24.6-9.4-33.9 0l-22.6 22.6c-9.4 9.4-9.4 24.6 0 33.9l96.4 96.4-96.4 96.4c-9.4 9.4-9.4 24.6 0 33.9l22.6 22.6c9.4 9.4 24.6 9.4 33.9 0l136-136c9.4-9.2 9.4-24.4 0-33.8z",
  yOffset: 0,
  xOffset: 0
}, D_ = Qe(N_), oi = {
  icon: "pf-v5-c-icon",
  iconContent: "pf-v5-c-icon__content",
  iconProgress: "pf-v5-c-icon__progress",
  modifiers: {
    inline: "pf-m-inline",
    sm: "pf-m-sm",
    md: "pf-m-md",
    lg: "pf-m-lg",
    xl: "pf-m-xl",
    inProgress: "pf-m-in-progress",
    danger: "pf-m-danger",
    warning: "pf-m-warning",
    success: "pf-m-success",
    info: "pf-m-info",
    custom: "pf-m-custom"
  },
  spinner: "pf-v5-c-spinner"
}, wi = (e) => {
  var { children: t, className: n, progressIcon: r, size: i, iconSize: s, progressIconSize: o, status: l, isInline: c = !1, isInProgress: d = !1, defaultProgressArialabel: u = "Loading...", shouldMirrorRTL: p = !1 } = e, m = oe(e, ["children", "className", "progressIcon", "size", "iconSize", "progressIconSize", "status", "isInline", "isInProgress", "defaultProgressArialabel", "shouldMirrorRTL"]);
  const f = r ?? h.createElement(ei, { diameter: "1em", "aria-label": u });
  return h.createElement(
    "span",
    Object.assign({ className: $(oi.icon, c && oi.modifiers.inline, d && oi.modifiers.inProgress, oi.modifiers[i], n) }, m),
    h.createElement("span", { className: $(oi.iconContent, oi.modifiers[s], oi.modifiers[l], p && "pf-v5-m-mirror-inline-rtl") }, t),
    d && h.createElement("span", { className: $(oi.iconProgress, oi.modifiers[o], n) }, f)
  );
};
wi.displayName = "Icon";
const M_ = {
  name: "AngleDownIcon",
  height: 512,
  width: 320,
  svgPath: "M143 352.3L7 216.3c-9.4-9.4-9.4-24.6 0-33.9l22.6-22.6c9.4-9.4 24.6-9.4 33.9 0l96.4 96.4 96.4-96.4c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9l-136 136c-9.2 9.4-24.4 9.4-33.8 0z",
  yOffset: 0,
  xOffset: 0
}, Uh = Qe(M_), F_ = {
  name: "SearchIcon",
  height: 512,
  width: 512,
  svgPath: "M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z",
  yOffset: 0,
  xOffset: 0
}, Ls = Qe(F_), $_ = {
  name: "ArrowRightIcon",
  height: 512,
  width: 448,
  svgPath: "M190.5 66.9l22.2-22.2c9.4-9.4 24.6-9.4 33.9 0L441 239c9.4 9.4 9.4 24.6 0 33.9L246.6 467.3c-9.4 9.4-24.6 9.4-33.9 0l-22.2-22.2c-9.5-9.5-9.3-25 .4-34.3L311.4 296H24c-13.3 0-24-10.7-24-24v-32c0-13.3 10.7-24 24-24h287.4L190.9 101.2c-9.8-9.3-10-24.8-.4-34.3z",
  yOffset: 0,
  xOffset: 0
}, mx = Qe($_), An = {
  dirRtl: "pf-v5-m-dir-rtl",
  form: "pf-v5-c-form",
  formActions: "pf-v5-c-form__actions",
  formFieldGroup: "pf-v5-c-form__field-group",
  formFieldGroupBody: "pf-v5-c-form__field-group-body",
  formFieldGroupHeader: "pf-v5-c-form__field-group-header",
  formFieldGroupHeaderActions: "pf-v5-c-form__field-group-header-actions",
  formFieldGroupHeaderDescription: "pf-v5-c-form__field-group-header-description",
  formFieldGroupHeaderMain: "pf-v5-c-form__field-group-header-main",
  formFieldGroupHeaderTitle: "pf-v5-c-form__field-group-header-title",
  formFieldGroupHeaderTitleText: "pf-v5-c-form__field-group-header-title-text",
  formFieldGroupToggle: "pf-v5-c-form__field-group-toggle",
  formFieldGroupToggleButton: "pf-v5-c-form__field-group-toggle-button",
  formFieldGroupToggleIcon: "pf-v5-c-form__field-group-toggle-icon",
  formFieldset: "pf-v5-c-form__fieldset",
  formGroup: "pf-v5-c-form__group",
  formGroupControl: "pf-v5-c-form__group-control",
  formGroupLabel: "pf-v5-c-form__group-label",
  formGroupLabelHelp: "pf-v5-c-form__group-label-help",
  formGroupLabelInfo: "pf-v5-c-form__group-label-info",
  formGroupLabelMain: "pf-v5-c-form__group-label-main",
  formHelperText: "pf-v5-c-form__helper-text",
  formHelperTextIcon: "pf-v5-c-form__helper-text-icon",
  formLabel: "pf-v5-c-form__label",
  formLabelRequired: "pf-v5-c-form__label-required",
  formLabelText: "pf-v5-c-form__label-text",
  formSection: "pf-v5-c-form__section",
  formSectionTitle: "pf-v5-c-form__section-title",
  modifiers: {
    horizontal: "pf-m-horizontal",
    alignRight: "pf-m-align-right",
    noPaddingTop: "pf-m-no-padding-top",
    horizontalOnXs: "pf-m-horizontal-on-xs",
    horizontalOnSm: "pf-m-horizontal-on-sm",
    horizontalOnMd: "pf-m-horizontal-on-md",
    horizontalOnLg: "pf-m-horizontal-on-lg",
    horizontalOnXl: "pf-m-horizontal-on-xl",
    horizontalOn_2xl: "pf-m-horizontal-on-2xl",
    limitWidth: "pf-m-limit-width",
    action: "pf-m-action",
    info: "pf-m-info",
    disabled: "pf-m-disabled",
    inline: "pf-m-inline",
    stack: "pf-m-stack",
    error: "pf-m-error",
    success: "pf-m-success",
    warning: "pf-m-warning",
    inactive: "pf-m-inactive",
    hidden: "pf-m-hidden",
    expanded: "pf-m-expanded"
  },
  themeDark: "pf-v5-theme-dark"
}, st = (e) => {
  var { children: t = null, className: n = "" } = e, r = oe(e, ["children", "className"]);
  const i = $(An.formGroup, An.modifiers.action, n), s = h.createElement("div", { className: $(An.formActions) }, t);
  return h.createElement(
    "div",
    Object.assign({}, r, { className: i }),
    h.createElement("div", { className: $(An.formGroupControl) }, s)
  );
};
st.displayName = "ActionGroup";
const j_ = {
  name: "--pf-v5-c-form--m-limit-width--MaxWidth",
  value: "55rem",
  var: "var(--pf-v5-c-form--m-limit-width--MaxWidth)"
}, B_ = (e) => {
  var { children: t = null, className: n = "", isHorizontal: r = !1, isWidthLimited: i = !1, maxWidth: s = "", innerRef: o } = e, l = oe(e, ["children", "className", "isHorizontal", "isWidthLimited", "maxWidth", "innerRef"]);
  return h.createElement("form", Object.assign({ noValidate: !0 }, s && {
    style: Object.assign({ [j_.name]: s }, l.style)
  }, l, { className: $(An.form, r && An.modifiers.horizontal, (i || s) && An.modifiers.limitWidth, n), ref: o }), t);
}, xt = h.forwardRef((e, t) => h.createElement(B_, Object.assign({ innerRef: t }, e)));
xt.displayName = "Form";
const se = (e) => {
  var { children: t = null, className: n = "", label: r, labelInfo: i, labelIcon: s, isRequired: o = !1, isInline: l = !1, hasNoPaddingTop: c = !1, isStack: d = !1, fieldId: u, role: p } = e, m = oe(e, ["children", "className", "label", "labelInfo", "labelIcon", "isRequired", "isInline", "hasNoPaddingTop", "isStack", "fieldId", "role"]);
  const f = p === "group" || p === "radiogroup", g = f ? "span" : "label", b = h.createElement(
    h.Fragment,
    null,
    h.createElement(
      g,
      Object.assign({ className: $(An.formLabel) }, !f && { htmlFor: u }),
      h.createElement("span", { className: $(An.formLabelText) }, r),
      o && h.createElement(
        "span",
        { className: $(An.formLabelRequired), "aria-hidden": "true" },
        " ",
        u1
      )
    ),
    " ",
    h.isValidElement(s) && s
  );
  return h.createElement($a, null, (v) => h.createElement(
    "div",
    Object.assign({ className: $(An.formGroup, n) }, p && { role: p }, f && { "aria-labelledby": `${u || v}-legend` }, m),
    r && h.createElement(
      "div",
      Object.assign({ className: $(An.formGroupLabel, i && An.modifiers.info, c && An.modifiers.noPaddingTop) }, f && { id: `${u || v}-legend` }),
      i && h.createElement(
        h.Fragment,
        null,
        h.createElement("div", { className: $(An.formGroupLabelMain) }, b),
        h.createElement("div", { className: $(An.formGroupLabelInfo) }, i)
      ),
      !i && b
    ),
    h.createElement("div", { className: $(An.formGroupControl, l && An.modifiers.inline, d && An.modifiers.stack) }, t)
  ));
};
se.displayName = "FormGroup";
const Zo = (e) => {
  var { children: t = null, className: n = "" } = e, r = oe(e, ["children", "className"]);
  return h.createElement("div", Object.assign({ className: $(An.formHelperText, n) }, r), t);
};
Zo.displayName = "FormHelperText";
const ks = {
  modifiers: {
    bordered: "pf-m-bordered",
    raised: "pf-m-raised",
    scrollable: "pf-m-scrollable"
  },
  panel: "pf-v5-c-panel",
  panelFooter: "pf-v5-c-panel__footer",
  panelHeader: "pf-v5-c-panel__header",
  panelMain: "pf-v5-c-panel__main",
  panelMainBody: "pf-v5-c-panel__main-body",
  themeDark: "pf-v5-theme-dark"
}, U_ = (e) => {
  var { className: t, children: n, variant: r, isScrollable: i, innerRef: s } = e, o = oe(e, ["className", "children", "variant", "isScrollable", "innerRef"]);
  return h.createElement("div", Object.assign({ className: $(ks.panel, r === "raised" && ks.modifiers.raised, r === "bordered" && ks.modifiers.bordered, i && ks.modifiers.scrollable, t), ref: s }, o), n);
}, nu = h.forwardRef((e, t) => h.createElement(U_, Object.assign({ innerRef: t }, e)));
nu.displayName = "Panel";
const V_ = {
  name: "--pf-v5-c-panel__main--MaxHeight",
  value: "18.75rem",
  var: "var(--pf-v5-c-panel__main--MaxHeight)"
}, fx = (e) => {
  var { className: t, children: n, maxHeight: r } = e, i = oe(e, ["className", "children", "maxHeight"]);
  return h.createElement("div", Object.assign({ className: $(ks.panelMain, t), style: { [V_.name]: r } }, i), n);
};
fx.displayName = "PanelMain";
const au = (e) => {
  var { className: t, children: n } = e, r = oe(e, ["className", "children"]);
  return h.createElement("div", Object.assign({ className: $(ks.panelMainBody, t) }, r), n);
};
au.displayName = "PanelMainBody";
const cf = (e) => {
  var { className: t, children: n } = e, r = oe(e, ["className", "children"]);
  return h.createElement("div", Object.assign({ className: $(ks.panelHeader, t) }, r), n);
};
cf.displayName = "PanelHeader";
const hx = ({ className: e, parentRef: t, parentInputRef: n, value: r = "", attributes: i = [], formAdditionalItems: s, hasWordsAttrLabel: o = "Has words", advancedSearchDelimiter: l, getAttrValueMap: c, onChange: d, onSearch: u, onClear: p, resetButtonLabel: m = "Reset", submitSearchButtonLabel: f = "Search", isSearchMenuOpen: g, onToggleAdvancedMenu: b }) => {
  const v = h.useRef(null), [y, x] = h.useState(!1);
  h.useEffect(() => {
    i.length > 0 && !l && console.error("AdvancedSearchMenu: An advancedSearchDelimiter prop is required when advanced search attributes are provided using the attributes prop");
  }), h.useEffect(() => {
    g && v && v.current ? (v.current.focus(), x(!0)) : !g && y && n && n.current && n.current.focus();
  }, [g]), h.useEffect(() => (document.addEventListener("mousedown", w), document.addEventListener("touchstart", w), document.addEventListener("keydown", R), function() {
    document.removeEventListener("mousedown", w), document.removeEventListener("touchstart", w), document.removeEventListener("keydown", R);
  }));
  const w = (T) => {
    const I = t && t.current.contains(T.target);
    g && !I && b(T);
  }, R = (T) => {
    g && T.key === dn.Escape && t && t.current.contains(T.target) && (b(T), n && n.current.focus());
  }, S = (T) => {
    T.preventDefault(), u && u(T, r, c()), g && b(T);
  }, _ = (T, I, k) => {
    const P = c();
    P[T] = I;
    let D = "";
    Object.entries(P).forEach(([F, A]) => {
      if (A.trim() !== "") {
        const M = A.includes(" ") ? `'${A.replace(/(^'|'$)/g, "")}'` : A;
        F !== "haswords" ? D = `${D} ${F}${l}${M}` : D = `${D} ${M}`;
      }
    }), d && d(k, D.replace(/^\s+/g, ""));
  }, O = (T) => {
    const I = c();
    return I.hasOwnProperty(T) ? I[T] : "";
  }, E = () => {
    const T = [];
    return i.forEach((I, k) => {
      const P = typeof I == "string" ? I : I.display, D = typeof I == "string" ? I : I.attr;
      k === 0 ? T.push(h.createElement(
        se,
        { label: P, fieldId: `${D}_${k}`, key: `${I}_${k}` },
        h.createElement(mt, { ref: v, type: "text", id: `${D}_${k}`, value: O(D), onChange: (F, A) => _(D, A, F) })
      )) : T.push(h.createElement(
        se,
        { label: P, fieldId: `${D}_${k}`, key: `${I}_${k}` },
        h.createElement(mt, { type: "text", id: `${D}_${k}`, value: O(D), onChange: (F, A) => _(D, A, F) })
      ));
    }), T.push(h.createElement($a, { key: "hasWords" }, (I) => h.createElement(
      se,
      { label: o, fieldId: I },
      h.createElement(mt, { type: "text", id: I, value: O("haswords"), onChange: (k, P) => _("haswords", P, k) })
    ))), T;
  };
  return g ? h.createElement(
    nu,
    { variant: "raised", className: $(e) },
    h.createElement(
      fx,
      null,
      h.createElement(
        au,
        null,
        h.createElement(
          xt,
          null,
          E(),
          s || null,
          h.createElement(
            st,
            null,
            h.createElement(z, { variant: "primary", type: "submit", onClick: S, isDisabled: !r }, f),
            !!p && h.createElement(z, { variant: "link", type: "reset", onClick: p }, m)
          )
        )
      )
    )
  ) : null;
};
hx.displayName = "SearchInput";
const Ja = {
  button: "pf-v5-c-button",
  chipGroupMain: "pf-v5-c-chip-group__main",
  modifiers: {
    disabled: "pf-m-disabled",
    plain: "pf-m-plain",
    icon: "pf-m-icon",
    hint: "pf-m-hint"
  },
  textInputGroup: "pf-v5-c-text-input-group",
  textInputGroupGroup: "pf-v5-c-text-input-group__group",
  textInputGroupIcon: "pf-v5-c-text-input-group__icon",
  textInputGroupMain: "pf-v5-c-text-input-group__main",
  textInputGroupText: "pf-v5-c-text-input-group__text",
  textInputGroupTextInput: "pf-v5-c-text-input-group__text-input",
  textInputGroupUtilities: "pf-v5-c-text-input-group__utilities",
  themeDark: "pf-v5-theme-dark"
}, gx = h.createContext({
  isDisabled: !1
}), Qo = (e) => {
  var { children: t, className: n, isDisabled: r, isPlain: i, innerRef: s } = e, o = oe(e, ["children", "className", "isDisabled", "isPlain", "innerRef"]);
  const l = h.useRef(null), c = s || l;
  return h.createElement(
    gx.Provider,
    { value: { isDisabled: r } },
    h.createElement("div", Object.assign({ ref: c, className: $(Ja.textInputGroup, r && Ja.modifiers.disabled, i && Ja.modifiers.plain, n) }, o), t)
  );
};
Qo.displayName = "TextInputGroup";
const K_ = (e) => {
  var { children: t, className: n, icon: r, type: i = "text", hint: s, onChange: o = () => {
  }, onFocus: l, onBlur: c, "aria-label": d = "Type to filter", value: u, placeholder: p, innerRef: m, name: f, "aria-activedescendant": g, role: b, isExpanded: v, "aria-controls": y, inputId: x } = e, w = oe(e, ["children", "className", "icon", "type", "hint", "onChange", "onFocus", "onBlur", "aria-label", "value", "placeholder", "innerRef", "name", "aria-activedescendant", "role", "isExpanded", "aria-controls", "inputId"]);
  const { isDisabled: R } = h.useContext(gx), S = h.useRef(null), _ = m || S, O = (E) => {
    o(E, E.currentTarget.value);
  };
  return h.createElement(
    "div",
    Object.assign({ className: $(Ja.textInputGroupMain, r && Ja.modifiers.icon, n) }, w),
    t,
    h.createElement(
      "span",
      { className: $(Ja.textInputGroupText) },
      s && h.createElement("input", { className: $(Ja.textInputGroupTextInput, Ja.modifiers.hint), type: "text", disabled: !0, "aria-hidden": "true", value: s, id: x }),
      r && h.createElement("span", { className: $(Ja.textInputGroupIcon) }, r),
      h.createElement("input", Object.assign({ ref: _, type: i, className: $(Ja.textInputGroupTextInput), "aria-label": d, disabled: R, onChange: O, onFocus: l, onBlur: c, value: u || "", placeholder: p, name: f, "aria-activedescendant": g, id: x }, b && { role: b }, v !== void 0 && { "aria-expanded": v }, y && { "aria-controls": y }))
    )
  );
}, el = h.forwardRef((e, t) => h.createElement(K_, Object.assign({ innerRef: t }, e)));
el.displayName = "TextInputGroupMain";
const tl = (e) => {
  var { children: t, className: n } = e, r = oe(e, ["children", "className"]);
  return h.createElement("div", Object.assign({ className: $(Ja.textInputGroupUtilities, n) }, r), t);
};
tl.displayName = "TextInputGroupUtilities";
const bx = (e) => {
  var { className: t, searchInputId: n, value: r = "", attributes: i = [], formAdditionalItems: s, hasWordsAttrLabel: o = "Has words", advancedSearchDelimiter: l, placeholder: c, hint: d, onChange: u, onSearch: p, onClear: m, onToggleAdvancedSearch: f, isAdvancedSearchOpen: g, resultsCount: b, onNextClick: v, onPreviousClick: y, innerRef: x, expandableInput: w, "aria-label": R = "Search input", resetButtonLabel: S = "Reset", openMenuButtonAriaLabel: _ = "Open advanced search", previousNavigationButtonAriaLabel: O = "Previous", isPreviousNavigationButtonDisabled: E = !1, isNextNavigationButtonDisabled: T = !1, nextNavigationButtonAriaLabel: I = "Next", submitSearchButtonLabel: k = "Search", isDisabled: P = !1, appendTo: D, zIndex: F = 9999, name: A, areUtilitiesDisplayed: M } = e, V = oe(e, ["className", "searchInputId", "value", "attributes", "formAdditionalItems", "hasWordsAttrLabel", "advancedSearchDelimiter", "placeholder", "hint", "onChange", "onSearch", "onClear", "onToggleAdvancedSearch", "isAdvancedSearchOpen", "resultsCount", "onNextClick", "onPreviousClick", "innerRef", "expandableInput", "aria-label", "resetButtonLabel", "openMenuButtonAriaLabel", "previousNavigationButtonAriaLabel", "isPreviousNavigationButtonDisabled", "isNextNavigationButtonDisabled", "nextNavigationButtonAriaLabel", "submitSearchButtonLabel", "isDisabled", "appendTo", "zIndex", "name", "areUtilitiesDisplayed"]);
  const [U, G] = h.useState(!1), [q, L] = h.useState(r), K = h.useRef(null), B = h.useRef(null), j = x || B, W = h.useRef(null), Q = h.useRef(null), te = h.useRef(null), [ie, ce] = h.useState(!1), { isExpanded: Z, onToggleExpand: me, toggleAriaLabel: ne } = w || {};
  h.useEffect(() => {
    var qe, kt;
    if (ie)
      Z ? (qe = j?.current) === null || qe === void 0 || qe.focus() : (kt = W?.current) === null || kt === void 0 || kt.focus();
    else return;
    ce(!1);
  }, [ie, Z, j, W]), h.useEffect(() => {
    L(r);
  }, [r]), h.useEffect(() => {
    i.length > 0 && !l && console.error("An advancedSearchDelimiter prop is required when advanced search attributes are provided using the attributes prop");
  }), h.useEffect(() => {
    G(g);
  }, [g]);
  const Oe = (qe, kt) => {
    u && u(qe, kt), L(kt);
  }, Pe = (qe) => {
    const kt = !U;
    G(kt), f && f(qe, kt);
  }, $e = (qe) => {
    qe.preventDefault(), p && p(qe, r, we()), G(!1);
  }, fe = (qe) => {
    let kt;
    return qe.match(/\\?.|^$/g).reduce((jt, Xe) => (Xe === "'" || Xe === '"' ? (kt || (kt = Xe), Xe === kt && (jt.quote = !jt.quote)) : !jt.quote && Xe === " " ? jt.a.push("") : jt.a[jt.a.length - 1] += Xe.replace(/\\(.)/, "$1"), jt), { a: [""] }).a;
  }, we = () => {
    const qe = {};
    return fe(q).map((jt) => {
      const Xe = jt.split(l);
      Xe.length === 2 ? qe[Xe[0]] = Xe[1].replace(/(^'|'$)/g, "") : Xe.length === 1 && (qe.haswords = qe.hasOwnProperty("haswords") ? `${qe.haswords} ${Xe[0]}` : Xe[0]);
    }), qe;
  }, J = (qe) => {
    qe.key === "Enter" && $e(qe);
  }, X = (qe) => {
    m && m(qe), j && j.current && j.current.focus();
  }, Y = (qe) => {
    L(""), me(qe, Z), ce(!0);
  }, ae = r && (b || !!v && !!y || !!m && !w), de = (qe = {}) => {
    var kt = oe(qe, []);
    return h.createElement(
      Qo,
      Object.assign({ isDisabled: P }, kt),
      h.createElement(el, { hint: d, icon: h.createElement(Ls, null), innerRef: j, value: q, placeholder: c, "aria-label": R, onKeyDown: J, onChange: Oe, name: A, inputId: n }),
      (ae || M) && h.createElement(
        tl,
        null,
        b && h.createElement(Wr, { isRead: !0 }, b),
        !!v && !!y && h.createElement(
          "div",
          { className: Ja.textInputGroupGroup },
          h.createElement(
            z,
            { variant: xe.plain, "aria-label": O, isDisabled: P || E, onClick: y },
            h.createElement(jP, null)
          ),
          h.createElement(
            z,
            { variant: xe.plain, "aria-label": I, isDisabled: P || T, onClick: v },
            h.createElement(Uh, null)
          )
        ),
        !!m && !w && h.createElement(
          z,
          { variant: xe.plain, isDisabled: P, "aria-label": S, onClick: X },
          h.createElement(Oa, null)
        )
      )
    );
  }, ye = h.createElement(z, { variant: xe.plain, "aria-label": ne, "aria-expanded": Z, icon: Z ? h.createElement(Oa, null) : h.createElement(Ls, null), onClick: Y, ref: W }), he = (qe = {}) => {
    var kt = oe(qe, []);
    return h.createElement(
      Qt,
      Object.assign({}, kt),
      h.createElement(
        dt,
        { isFill: !0 },
        de(),
        " "
      ),
      h.createElement(dt, { isPlain: !0 }, ye)
    );
  }, Ce = (qe = {}) => {
    var kt = oe(qe, []);
    return w ? he(Object.assign({}, kt)) : de(Object.assign({}, kt));
  }, Ge = (qe = {}) => {
    var kt = oe(qe, []);
    return h.createElement(
      Qt,
      Object.assign({ ref: Q }, kt),
      h.createElement(dt, { isFill: !0 }, de()),
      (i.length > 0 || f) && h.createElement(
        dt,
        { isPlain: !0 },
        h.createElement(
          z,
          { className: U && "pf-m-expanded", variant: xe.control, "aria-label": _, onClick: Pe, isDisabled: P, "aria-expanded": U },
          h.createElement(Lo, null)
        )
      ),
      !!p && h.createElement(
        dt,
        null,
        h.createElement(
          z,
          { type: "submit", variant: xe.control, "aria-label": k, onClick: $e, isDisabled: P },
          h.createElement(
            wi,
            { shouldMirrorRTL: !0 },
            h.createElement(mx, null)
          )
        )
      ),
      w && h.createElement(dt, null, ye)
    );
  }, it = Object.assign(Object.assign({}, V), { className: t && $(t), innerRef: K });
  if (w && !Z)
    return h.createElement(
      Qt,
      Object.assign({}, it),
      h.createElement(dt, null, ye)
    );
  if (p || i.length > 0 || f) {
    if (i.length > 0) {
      const qe = h.createElement(
        "div",
        { ref: te },
        h.createElement(hx, { value: r, parentRef: K, parentInputRef: j, onSearch: p, onClear: m, onChange: u, onToggleAdvancedMenu: Pe, resetButtonLabel: S, submitSearchButtonLabel: k, attributes: i, formAdditionalItems: s, hasWordsAttrLabel: o, advancedSearchDelimiter: l, getAttrValueMap: we, isSearchMenuOpen: U })
      ), kt = h.createElement(
        "div",
        Object.assign({ className: $(t), ref: K }, V),
        h.createElement(Qr, { trigger: Ge(), triggerRef: Q, popper: qe, popperRef: te, isVisible: U, enableFlip: !0, appendTo: () => D || K.current, zIndex: F })
      ), jt = h.createElement(
        "div",
        Object.assign({ className: $(t), ref: K }, V),
        Ge(),
        qe
      );
      return D !== "inline" ? kt : jt;
    }
    return Ge(Object.assign({}, it));
  }
  return Ce(it);
};
bx.displayName = "SearchInputBase";
const Gc = h.forwardRef((e, t) => h.createElement(bx, Object.assign({}, e, { innerRef: t })));
Gc.displayName = "SearchInput";
const ba = {
  emptyState: "pf-v5-c-empty-state",
  emptyStateActions: "pf-v5-c-empty-state__actions",
  emptyStateBody: "pf-v5-c-empty-state__body",
  emptyStateContent: "pf-v5-c-empty-state__content",
  emptyStateFooter: "pf-v5-c-empty-state__footer",
  emptyStateIcon: "pf-v5-c-empty-state__icon",
  emptyStateTitleText: "pf-v5-c-empty-state__title-text",
  modifiers: {
    xs: "pf-m-xs",
    sm: "pf-m-sm",
    lg: "pf-m-lg",
    xl: "pf-m-xl",
    fullHeight: "pf-m-full-height"
  }
};
var uc;
(function(e) {
  e.xs = "xs", e.sm = "sm", e.lg = "lg", e.xl = "xl", e.full = "full";
})(uc || (uc = {}));
const Sr = (e) => {
  var { children: t, className: n, variant: r = uc.full, isFullHeight: i } = e, s = oe(e, ["children", "className", "variant", "isFullHeight"]);
  return h.createElement(
    "div",
    Object.assign({ className: $(ba.emptyState, r === "xs" && ba.modifiers.xs, r === "sm" && ba.modifiers.sm, r === "lg" && ba.modifiers.lg, r === "xl" && ba.modifiers.xl, i && ba.modifiers.fullHeight, n) }, s),
    h.createElement("div", { className: $(ba.emptyStateContent) }, t)
  );
};
Sr.displayName = "EmptyState";
const ki = (e) => {
  var { children: t, className: n, titleClassName: r, titleText: i, headingLevel: s = "h1", icon: o } = e, l = oe(e, ["children", "className", "titleClassName", "titleText", "headingLevel", "icon"]);
  return h.createElement(
    "div",
    Object.assign({ className: $(`${ba.emptyState}__header`, n) }, l),
    o,
    (i || t) && h.createElement(
      "div",
      { className: $(`${ba.emptyState}__title`) },
      i && h.createElement(s, { className: $(ba.emptyStateTitleText, r) }, i),
      t
    )
  );
};
ki.displayName = "EmptyStateHeader";
const H_ = {
  name: "--pf-v5-c-empty-state__icon--Color",
  value: "#6a6e73",
  var: "var(--pf-v5-c-empty-state__icon--Color)"
}, z_ = (e) => e.type === ei, Ns = (e) => {
  var { className: t, icon: n, color: r } = e, i = oe(e, ["className", "icon", "color"]);
  const s = z_(h.createElement(n, null));
  return h.createElement(
    "div",
    Object.assign({ className: $(ba.emptyStateIcon) }, r && !s && { style: { [H_.name]: r } }),
    h.createElement(n, Object.assign({ className: t, "aria-hidden": !s }, i))
  );
};
Ns.displayName = "EmptyStateIcon";
const Ri = (e) => {
  var { children: t, className: n } = e, r = oe(e, ["children", "className"]);
  return h.createElement("div", Object.assign({ className: $(ba.emptyStateBody, n) }, r), t);
};
Ri.displayName = "EmptyStateBody";
const rs = (e) => {
  var { children: t, className: n } = e, r = oe(e, ["children", "className"]);
  return h.createElement("div", Object.assign({ className: $(ba.emptyStateFooter, n) }, r), t);
};
rs.displayName = "EmptyStateFooter";
const xo = (e) => {
  var { children: t, className: n } = e, r = oe(e, ["children", "className"]);
  return h.createElement("div", Object.assign({ className: $(ba.emptyStateActions, n) }, r), t);
};
xo.displayName = "EmptyStateActions";
const qa = {
  dirRtl: "pf-v5-m-dir-rtl",
  expandableSection: "pf-v5-c-expandable-section",
  expandableSectionContent: "pf-v5-c-expandable-section__content",
  expandableSectionToggle: "pf-v5-c-expandable-section__toggle",
  expandableSectionToggleIcon: "pf-v5-c-expandable-section__toggle-icon",
  expandableSectionToggleText: "pf-v5-c-expandable-section__toggle-text",
  modifiers: {
    expanded: "pf-m-expanded",
    detached: "pf-m-detached",
    truncate: "pf-m-truncate",
    limitWidth: "pf-m-limit-width",
    displayLg: "pf-m-display-lg",
    indented: "pf-m-indented",
    active: "pf-m-active",
    expandTop: "pf-m-expand-top"
  }
}, vx = {
  name: "--pf-v5-c-expandable-section--m-truncate__content--LineClamp",
  value: "3",
  var: "var(--pf-v5-c-expandable-section--m-truncate__content--LineClamp)"
};
var Nr;
(function(e) {
  e.default = "default", e.truncate = "truncate";
})(Nr || (Nr = {}));
const nv = (e, t) => {
  !t || e < 1 || t.style.setProperty(vx.name, e.toString());
};
class us extends h.Component {
  constructor(t) {
    super(t), this.expandableContentRef = h.createRef(), this.observer = () => {
    }, this.checkToggleVisibility = () => {
      var n;
      if (!((n = this.expandableContentRef) === null || n === void 0) && n.current) {
        const r = this.props.truncateMaxLines || parseInt(vx.value), i = this.expandableContentRef.current.scrollHeight / parseInt(getComputedStyle(this.expandableContentRef.current).lineHeight);
        this.setState({
          hasToggle: i > r
        });
      }
    }, this.resize = () => {
      const { offsetWidth: n } = this.expandableContentRef.current;
      this.state.previousWidth !== n && (this.setState({ previousWidth: n }), this.checkToggleVisibility());
    }, this.handleResize = dh(this.resize, 250), this.state = {
      isExpanded: t.isExpanded,
      hasToggle: !0,
      previousWidth: void 0
    };
  }
  calculateToggleText(t, n, r, i) {
    return i && n !== "" ? n : !i && r !== "" ? r : t;
  }
  componentDidMount() {
    if (this.props.variant === Nr.truncate) {
      const t = this.expandableContentRef.current;
      this.setState({ previousWidth: t.offsetWidth }), this.observer = Wo(t, this.handleResize, !1), this.props.truncateMaxLines && nv(this.props.truncateMaxLines, t), this.checkToggleVisibility();
    }
  }
  componentDidUpdate(t) {
    if (this.props.variant === Nr.truncate && (t.truncateMaxLines !== this.props.truncateMaxLines || t.children !== this.props.children)) {
      const n = this.expandableContentRef.current;
      nv(this.props.truncateMaxLines, n), this.checkToggleVisibility();
    }
  }
  componentWillUnmount() {
    this.props.variant === Nr.truncate && this.observer();
  }
  render() {
    const t = this.props, {
      onToggle: n,
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      isActive: r,
      className: i,
      toggleText: s,
      toggleTextExpanded: o,
      toggleTextCollapsed: l,
      toggleContent: c,
      children: d,
      isExpanded: u,
      isDetached: p,
      displaySize: m,
      isWidthLimited: f,
      isIndented: g,
      contentId: b,
      toggleId: v,
      variant: y,
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      truncateMaxLines: x
    } = t, w = oe(t, ["onToggle", "isActive", "className", "toggleText", "toggleTextExpanded", "toggleTextCollapsed", "toggleContent", "children", "isExpanded", "isDetached", "displaySize", "isWidthLimited", "isIndented", "contentId", "toggleId", "variant", "truncateMaxLines"]);
    p && !v && console.warn("ExpandableSection: The toggleId value must be passed in and must match the toggleId of the ExpandableSectionToggle.");
    let R = n, S = u;
    const _ = b || Si("expandable-section-content"), O = v || Si("expandable-section-toggle");
    u === void 0 && (S = this.state.isExpanded, R = (I, k) => {
      this.setState({ isExpanded: k }, () => n(I, this.state.isExpanded));
    });
    const E = this.calculateToggleText(s, o, l, S), T = !p && h.createElement(
      "button",
      { className: $(qa.expandableSectionToggle), type: "button", "aria-expanded": S, "aria-controls": _, id: O, onClick: (I) => R(I, !S) },
      y !== Nr.truncate && h.createElement(
        "span",
        { className: $(qa.expandableSectionToggleIcon) },
        h.createElement(Nn, { "aria-hidden": !0 })
      ),
      h.createElement("span", { className: $(qa.expandableSectionToggleText) }, c || E)
    );
    return h.createElement(
      "div",
      Object.assign({ className: $(qa.expandableSection, S && qa.modifiers.expanded, r && qa.modifiers.active, p && qa.modifiers.detached, m === "lg" && qa.modifiers.displayLg, f && qa.modifiers.limitWidth, g && qa.modifiers.indented, y === Nr.truncate && qa.modifiers.truncate, i) }, w),
      y === Nr.default && T,
      h.createElement("div", { ref: this.expandableContentRef, className: $(qa.expandableSectionContent), hidden: y !== Nr.truncate && !S, id: _, "aria-labelledby": O, role: "region" }, d),
      y === Nr.truncate && this.state.hasToggle && T
    );
  }
}
us.displayName = "ExpandableSection";
us.defaultProps = {
  className: "",
  toggleText: "",
  toggleTextExpanded: "",
  toggleTextCollapsed: "",
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  onToggle: (e, t) => {
  },
  isActive: !1,
  isDetached: !1,
  displaySize: "default",
  isWidthLimited: !1,
  isIndented: !1,
  variant: "default"
};
const pi = {
  button: "pf-v5-c-button",
  fileUpload: "pf-v5-c-file-upload",
  fileUploadFileDetails: "pf-v5-c-file-upload__file-details",
  fileUploadFileDetailsSpinner: "pf-v5-c-file-upload__file-details-spinner",
  fileUploadFileSelect: "pf-v5-c-file-upload__file-select",
  formControl: "pf-v5-c-form-control",
  modifiers: {
    dragHover: "pf-m-drag-hover",
    loading: "pf-m-loading",
    control: "pf-m-control"
  }
};
var df;
(function(e) {
  e.horizontal = "horizontal", e.vertical = "vertical", e.both = "both";
})(df || (df = {}));
var av;
(function(e) {
  e.default = "default", e.plain = "plain";
})(av || (av = {}));
class Vh extends h.Component {
  constructor(t) {
    super(t), this.inputRef = h.createRef(), this.setAutoHeight = (n) => {
      const r = n.parentElement;
      r.style.setProperty("height", "inherit");
      const i = window.getComputedStyle(n), s = parseInt(i.getPropertyValue("border-top-width")) + parseInt(i.getPropertyValue("padding-top")) + n.scrollHeight + parseInt(i.getPropertyValue("padding-bottom")) + parseInt(i.getPropertyValue("border-bottom-width"));
      r.style.setProperty("height", `${s}px`);
    }, this.handleChange = (n) => {
      const r = n.currentTarget;
      this.props.autoResize && Sn && this.setAutoHeight(r), this.props.onChange && this.props.onChange(n, r.value);
    }, !t.id && !t["aria-label"] && console.error("TextArea: TextArea requires either an id or aria-label to be specified");
  }
  componentDidMount() {
    const t = this.props.innerRef || this.inputRef;
    if (this.props.autoResize && Sn) {
      const n = t.current;
      this.setAutoHeight(n);
    }
  }
  render() {
    const t = this.props, {
      className: n,
      value: r,
      validated: i,
      isRequired: s,
      isDisabled: o,
      readOnlyVariant: l,
      resizeOrientation: c,
      innerRef: d,
      disabled: u,
      /* eslint-disable @typescript-eslint/no-unused-vars */
      autoResize: p,
      onChange: m,
      /* eslint-enable @typescript-eslint/no-unused-vars */
      onBlur: f,
      onFocus: g
    } = t, b = oe(t, ["className", "value", "validated", "isRequired", "isDisabled", "readOnlyVariant", "resizeOrientation", "innerRef", "disabled", "autoResize", "onChange", "onBlur", "onFocus"]), v = `resize${ic(c)}`, y = ["success", "error", "warning"].includes(i);
    return h.createElement(
      "span",
      { className: $(Gn.formControl, l && Gn.modifiers.readonly, l === "plain" && Gn.modifiers.plain, c && Gn.modifiers[v], o && Gn.modifiers.disabled, y && Gn.modifiers[i], n) },
      h.createElement("textarea", Object.assign({ onChange: this.handleChange, onFocus: g, onBlur: f }, typeof this.props.defaultValue != "string" && { value: r }, { "aria-invalid": i === Pn.error, required: s, disabled: o || u, readOnly: !!l, ref: d || this.inputRef }, b)),
      y && h.createElement(
        "span",
        { className: $(Gn.formControlUtilities) },
        h.createElement(rf, { status: i })
      )
    );
  }
}
Vh.displayName = "TextArea";
Vh.defaultProps = {
  innerRef: h.createRef(),
  className: "",
  isRequired: !1,
  isDisabled: !1,
  validated: "default",
  resizeOrientation: "both",
  "aria-label": null
};
const Ai = h.forwardRef((e, t) => h.createElement(Vh, Object.assign({}, e, { innerRef: t })));
Ai.displayName = "TextArea";
var ya = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function Kh(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
var uf = { exports: {} }, Cd = { exports: {} }, Kt = {};
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var rv;
function q_() {
  if (rv) return Kt;
  rv = 1;
  var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, n = e ? Symbol.for("react.portal") : 60106, r = e ? Symbol.for("react.fragment") : 60107, i = e ? Symbol.for("react.strict_mode") : 60108, s = e ? Symbol.for("react.profiler") : 60114, o = e ? Symbol.for("react.provider") : 60109, l = e ? Symbol.for("react.context") : 60110, c = e ? Symbol.for("react.async_mode") : 60111, d = e ? Symbol.for("react.concurrent_mode") : 60111, u = e ? Symbol.for("react.forward_ref") : 60112, p = e ? Symbol.for("react.suspense") : 60113, m = e ? Symbol.for("react.suspense_list") : 60120, f = e ? Symbol.for("react.memo") : 60115, g = e ? Symbol.for("react.lazy") : 60116, b = e ? Symbol.for("react.block") : 60121, v = e ? Symbol.for("react.fundamental") : 60117, y = e ? Symbol.for("react.responder") : 60118, x = e ? Symbol.for("react.scope") : 60119;
  function w(S) {
    if (typeof S == "object" && S !== null) {
      var _ = S.$$typeof;
      switch (_) {
        case t:
          switch (S = S.type, S) {
            case c:
            case d:
            case r:
            case s:
            case i:
            case p:
              return S;
            default:
              switch (S = S && S.$$typeof, S) {
                case l:
                case u:
                case g:
                case f:
                case o:
                  return S;
                default:
                  return _;
              }
          }
        case n:
          return _;
      }
    }
  }
  function R(S) {
    return w(S) === d;
  }
  return Kt.AsyncMode = c, Kt.ConcurrentMode = d, Kt.ContextConsumer = l, Kt.ContextProvider = o, Kt.Element = t, Kt.ForwardRef = u, Kt.Fragment = r, Kt.Lazy = g, Kt.Memo = f, Kt.Portal = n, Kt.Profiler = s, Kt.StrictMode = i, Kt.Suspense = p, Kt.isAsyncMode = function(S) {
    return R(S) || w(S) === c;
  }, Kt.isConcurrentMode = R, Kt.isContextConsumer = function(S) {
    return w(S) === l;
  }, Kt.isContextProvider = function(S) {
    return w(S) === o;
  }, Kt.isElement = function(S) {
    return typeof S == "object" && S !== null && S.$$typeof === t;
  }, Kt.isForwardRef = function(S) {
    return w(S) === u;
  }, Kt.isFragment = function(S) {
    return w(S) === r;
  }, Kt.isLazy = function(S) {
    return w(S) === g;
  }, Kt.isMemo = function(S) {
    return w(S) === f;
  }, Kt.isPortal = function(S) {
    return w(S) === n;
  }, Kt.isProfiler = function(S) {
    return w(S) === s;
  }, Kt.isStrictMode = function(S) {
    return w(S) === i;
  }, Kt.isSuspense = function(S) {
    return w(S) === p;
  }, Kt.isValidElementType = function(S) {
    return typeof S == "string" || typeof S == "function" || S === r || S === d || S === s || S === i || S === p || S === m || typeof S == "object" && S !== null && (S.$$typeof === g || S.$$typeof === f || S.$$typeof === o || S.$$typeof === l || S.$$typeof === u || S.$$typeof === v || S.$$typeof === y || S.$$typeof === x || S.$$typeof === b);
  }, Kt.typeOf = w, Kt;
}
var Ht = {};
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var iv;
function G_() {
  return iv || (iv = 1, process.env.NODE_ENV !== "production" && function() {
    var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, n = e ? Symbol.for("react.portal") : 60106, r = e ? Symbol.for("react.fragment") : 60107, i = e ? Symbol.for("react.strict_mode") : 60108, s = e ? Symbol.for("react.profiler") : 60114, o = e ? Symbol.for("react.provider") : 60109, l = e ? Symbol.for("react.context") : 60110, c = e ? Symbol.for("react.async_mode") : 60111, d = e ? Symbol.for("react.concurrent_mode") : 60111, u = e ? Symbol.for("react.forward_ref") : 60112, p = e ? Symbol.for("react.suspense") : 60113, m = e ? Symbol.for("react.suspense_list") : 60120, f = e ? Symbol.for("react.memo") : 60115, g = e ? Symbol.for("react.lazy") : 60116, b = e ? Symbol.for("react.block") : 60121, v = e ? Symbol.for("react.fundamental") : 60117, y = e ? Symbol.for("react.responder") : 60118, x = e ? Symbol.for("react.scope") : 60119;
    function w(ne) {
      return typeof ne == "string" || typeof ne == "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
      ne === r || ne === d || ne === s || ne === i || ne === p || ne === m || typeof ne == "object" && ne !== null && (ne.$$typeof === g || ne.$$typeof === f || ne.$$typeof === o || ne.$$typeof === l || ne.$$typeof === u || ne.$$typeof === v || ne.$$typeof === y || ne.$$typeof === x || ne.$$typeof === b);
    }
    function R(ne) {
      if (typeof ne == "object" && ne !== null) {
        var Oe = ne.$$typeof;
        switch (Oe) {
          case t:
            var Pe = ne.type;
            switch (Pe) {
              case c:
              case d:
              case r:
              case s:
              case i:
              case p:
                return Pe;
              default:
                var $e = Pe && Pe.$$typeof;
                switch ($e) {
                  case l:
                  case u:
                  case g:
                  case f:
                  case o:
                    return $e;
                  default:
                    return Oe;
                }
            }
          case n:
            return Oe;
        }
      }
    }
    var S = c, _ = d, O = l, E = o, T = t, I = u, k = r, P = g, D = f, F = n, A = s, M = i, V = p, U = !1;
    function G(ne) {
      return U || (U = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.")), q(ne) || R(ne) === c;
    }
    function q(ne) {
      return R(ne) === d;
    }
    function L(ne) {
      return R(ne) === l;
    }
    function K(ne) {
      return R(ne) === o;
    }
    function B(ne) {
      return typeof ne == "object" && ne !== null && ne.$$typeof === t;
    }
    function j(ne) {
      return R(ne) === u;
    }
    function W(ne) {
      return R(ne) === r;
    }
    function Q(ne) {
      return R(ne) === g;
    }
    function te(ne) {
      return R(ne) === f;
    }
    function ie(ne) {
      return R(ne) === n;
    }
    function ce(ne) {
      return R(ne) === s;
    }
    function Z(ne) {
      return R(ne) === i;
    }
    function me(ne) {
      return R(ne) === p;
    }
    Ht.AsyncMode = S, Ht.ConcurrentMode = _, Ht.ContextConsumer = O, Ht.ContextProvider = E, Ht.Element = T, Ht.ForwardRef = I, Ht.Fragment = k, Ht.Lazy = P, Ht.Memo = D, Ht.Portal = F, Ht.Profiler = A, Ht.StrictMode = M, Ht.Suspense = V, Ht.isAsyncMode = G, Ht.isConcurrentMode = q, Ht.isContextConsumer = L, Ht.isContextProvider = K, Ht.isElement = B, Ht.isForwardRef = j, Ht.isFragment = W, Ht.isLazy = Q, Ht.isMemo = te, Ht.isPortal = ie, Ht.isProfiler = ce, Ht.isStrictMode = Z, Ht.isSuspense = me, Ht.isValidElementType = w, Ht.typeOf = R;
  }()), Ht;
}
var sv;
function yx() {
  return sv || (sv = 1, process.env.NODE_ENV === "production" ? Cd.exports = q_() : Cd.exports = G_()), Cd.exports;
}
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
var Qp, ov;
function W_() {
  if (ov) return Qp;
  ov = 1;
  var e = Object.getOwnPropertySymbols, t = Object.prototype.hasOwnProperty, n = Object.prototype.propertyIsEnumerable;
  function r(s) {
    if (s == null)
      throw new TypeError("Object.assign cannot be called with null or undefined");
    return Object(s);
  }
  function i() {
    try {
      if (!Object.assign)
        return !1;
      var s = new String("abc");
      if (s[5] = "de", Object.getOwnPropertyNames(s)[0] === "5")
        return !1;
      for (var o = {}, l = 0; l < 10; l++)
        o["_" + String.fromCharCode(l)] = l;
      var c = Object.getOwnPropertyNames(o).map(function(u) {
        return o[u];
      });
      if (c.join("") !== "0123456789")
        return !1;
      var d = {};
      return "abcdefghijklmnopqrst".split("").forEach(function(u) {
        d[u] = u;
      }), Object.keys(Object.assign({}, d)).join("") === "abcdefghijklmnopqrst";
    } catch {
      return !1;
    }
  }
  return Qp = i() ? Object.assign : function(s, o) {
    for (var l, c = r(s), d, u = 1; u < arguments.length; u++) {
      l = Object(arguments[u]);
      for (var p in l)
        t.call(l, p) && (c[p] = l[p]);
      if (e) {
        d = e(l);
        for (var m = 0; m < d.length; m++)
          n.call(l, d[m]) && (c[d[m]] = l[d[m]]);
      }
    }
    return c;
  }, Qp;
}
var em, lv;
function Hh() {
  if (lv) return em;
  lv = 1;
  var e = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
  return em = e, em;
}
var tm, cv;
function Cx() {
  return cv || (cv = 1, tm = Function.call.bind(Object.prototype.hasOwnProperty)), tm;
}
var nm, dv;
function X_() {
  if (dv) return nm;
  dv = 1;
  var e = function() {
  };
  if (process.env.NODE_ENV !== "production") {
    var t = Hh(), n = {}, r = Cx();
    e = function(s) {
      var o = "Warning: " + s;
      typeof console < "u" && console.error(o);
      try {
        throw new Error(o);
      } catch {
      }
    };
  }
  function i(s, o, l, c, d) {
    if (process.env.NODE_ENV !== "production") {
      for (var u in s)
        if (r(s, u)) {
          var p;
          try {
            if (typeof s[u] != "function") {
              var m = Error(
                (c || "React class") + ": " + l + " type `" + u + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof s[u] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`."
              );
              throw m.name = "Invariant Violation", m;
            }
            p = s[u](o, u, c, l, null, t);
          } catch (g) {
            p = g;
          }
          if (p && !(p instanceof Error) && e(
            (c || "React class") + ": type specification of " + l + " `" + u + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof p + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."
          ), p instanceof Error && !(p.message in n)) {
            n[p.message] = !0;
            var f = d ? d() : "";
            e(
              "Failed " + l + " type: " + p.message + (f ?? "")
            );
          }
        }
    }
  }
  return i.resetWarningCache = function() {
    process.env.NODE_ENV !== "production" && (n = {});
  }, nm = i, nm;
}
var am, uv;
function Y_() {
  if (uv) return am;
  uv = 1;
  var e = yx(), t = W_(), n = Hh(), r = Cx(), i = X_(), s = function() {
  };
  process.env.NODE_ENV !== "production" && (s = function(l) {
    var c = "Warning: " + l;
    typeof console < "u" && console.error(c);
    try {
      throw new Error(c);
    } catch {
    }
  });
  function o() {
    return null;
  }
  return am = function(l, c) {
    var d = typeof Symbol == "function" && Symbol.iterator, u = "@@iterator";
    function p(q) {
      var L = q && (d && q[d] || q[u]);
      if (typeof L == "function")
        return L;
    }
    var m = "<<anonymous>>", f = {
      array: y("array"),
      bigint: y("bigint"),
      bool: y("boolean"),
      func: y("function"),
      number: y("number"),
      object: y("object"),
      string: y("string"),
      symbol: y("symbol"),
      any: x(),
      arrayOf: w,
      element: R(),
      elementType: S(),
      instanceOf: _,
      node: I(),
      objectOf: E,
      oneOf: O,
      oneOfType: T,
      shape: P,
      exact: D
    };
    function g(q, L) {
      return q === L ? q !== 0 || 1 / q === 1 / L : q !== q && L !== L;
    }
    function b(q, L) {
      this.message = q, this.data = L && typeof L == "object" ? L : {}, this.stack = "";
    }
    b.prototype = Error.prototype;
    function v(q) {
      if (process.env.NODE_ENV !== "production")
        var L = {}, K = 0;
      function B(W, Q, te, ie, ce, Z, me) {
        if (ie = ie || m, Z = Z || te, me !== n) {
          if (c) {
            var ne = new Error(
              "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
            );
            throw ne.name = "Invariant Violation", ne;
          } else if (process.env.NODE_ENV !== "production" && typeof console < "u") {
            var Oe = ie + ":" + te;
            !L[Oe] && // Avoid spamming the console because they are often not actionable except for lib authors
            K < 3 && (s(
              "You are manually calling a React.PropTypes validation function for the `" + Z + "` prop on `" + ie + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."
            ), L[Oe] = !0, K++);
          }
        }
        return Q[te] == null ? W ? Q[te] === null ? new b("The " + ce + " `" + Z + "` is marked as required " + ("in `" + ie + "`, but its value is `null`.")) : new b("The " + ce + " `" + Z + "` is marked as required in " + ("`" + ie + "`, but its value is `undefined`.")) : null : q(Q, te, ie, ce, Z);
      }
      var j = B.bind(null, !1);
      return j.isRequired = B.bind(null, !0), j;
    }
    function y(q) {
      function L(K, B, j, W, Q, te) {
        var ie = K[B], ce = M(ie);
        if (ce !== q) {
          var Z = V(ie);
          return new b(
            "Invalid " + W + " `" + Q + "` of type " + ("`" + Z + "` supplied to `" + j + "`, expected ") + ("`" + q + "`."),
            { expectedType: q }
          );
        }
        return null;
      }
      return v(L);
    }
    function x() {
      return v(o);
    }
    function w(q) {
      function L(K, B, j, W, Q) {
        if (typeof q != "function")
          return new b("Property `" + Q + "` of component `" + j + "` has invalid PropType notation inside arrayOf.");
        var te = K[B];
        if (!Array.isArray(te)) {
          var ie = M(te);
          return new b("Invalid " + W + " `" + Q + "` of type " + ("`" + ie + "` supplied to `" + j + "`, expected an array."));
        }
        for (var ce = 0; ce < te.length; ce++) {
          var Z = q(te, ce, j, W, Q + "[" + ce + "]", n);
          if (Z instanceof Error)
            return Z;
        }
        return null;
      }
      return v(L);
    }
    function R() {
      function q(L, K, B, j, W) {
        var Q = L[K];
        if (!l(Q)) {
          var te = M(Q);
          return new b("Invalid " + j + " `" + W + "` of type " + ("`" + te + "` supplied to `" + B + "`, expected a single ReactElement."));
        }
        return null;
      }
      return v(q);
    }
    function S() {
      function q(L, K, B, j, W) {
        var Q = L[K];
        if (!e.isValidElementType(Q)) {
          var te = M(Q);
          return new b("Invalid " + j + " `" + W + "` of type " + ("`" + te + "` supplied to `" + B + "`, expected a single ReactElement type."));
        }
        return null;
      }
      return v(q);
    }
    function _(q) {
      function L(K, B, j, W, Q) {
        if (!(K[B] instanceof q)) {
          var te = q.name || m, ie = G(K[B]);
          return new b("Invalid " + W + " `" + Q + "` of type " + ("`" + ie + "` supplied to `" + j + "`, expected ") + ("instance of `" + te + "`."));
        }
        return null;
      }
      return v(L);
    }
    function O(q) {
      if (!Array.isArray(q))
        return process.env.NODE_ENV !== "production" && (arguments.length > 1 ? s(
          "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])."
        ) : s("Invalid argument supplied to oneOf, expected an array.")), o;
      function L(K, B, j, W, Q) {
        for (var te = K[B], ie = 0; ie < q.length; ie++)
          if (g(te, q[ie]))
            return null;
        var ce = JSON.stringify(q, function(me, ne) {
          var Oe = V(ne);
          return Oe === "symbol" ? String(ne) : ne;
        });
        return new b("Invalid " + W + " `" + Q + "` of value `" + String(te) + "` " + ("supplied to `" + j + "`, expected one of " + ce + "."));
      }
      return v(L);
    }
    function E(q) {
      function L(K, B, j, W, Q) {
        if (typeof q != "function")
          return new b("Property `" + Q + "` of component `" + j + "` has invalid PropType notation inside objectOf.");
        var te = K[B], ie = M(te);
        if (ie !== "object")
          return new b("Invalid " + W + " `" + Q + "` of type " + ("`" + ie + "` supplied to `" + j + "`, expected an object."));
        for (var ce in te)
          if (r(te, ce)) {
            var Z = q(te, ce, j, W, Q + "." + ce, n);
            if (Z instanceof Error)
              return Z;
          }
        return null;
      }
      return v(L);
    }
    function T(q) {
      if (!Array.isArray(q))
        return process.env.NODE_ENV !== "production" && s("Invalid argument supplied to oneOfType, expected an instance of array."), o;
      for (var L = 0; L < q.length; L++) {
        var K = q[L];
        if (typeof K != "function")
          return s(
            "Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + U(K) + " at index " + L + "."
          ), o;
      }
      function B(j, W, Q, te, ie) {
        for (var ce = [], Z = 0; Z < q.length; Z++) {
          var me = q[Z], ne = me(j, W, Q, te, ie, n);
          if (ne == null)
            return null;
          ne.data && r(ne.data, "expectedType") && ce.push(ne.data.expectedType);
        }
        var Oe = ce.length > 0 ? ", expected one of type [" + ce.join(", ") + "]" : "";
        return new b("Invalid " + te + " `" + ie + "` supplied to " + ("`" + Q + "`" + Oe + "."));
      }
      return v(B);
    }
    function I() {
      function q(L, K, B, j, W) {
        return F(L[K]) ? null : new b("Invalid " + j + " `" + W + "` supplied to " + ("`" + B + "`, expected a ReactNode."));
      }
      return v(q);
    }
    function k(q, L, K, B, j) {
      return new b(
        (q || "React class") + ": " + L + " type `" + K + "." + B + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + j + "`."
      );
    }
    function P(q) {
      function L(K, B, j, W, Q) {
        var te = K[B], ie = M(te);
        if (ie !== "object")
          return new b("Invalid " + W + " `" + Q + "` of type `" + ie + "` " + ("supplied to `" + j + "`, expected `object`."));
        for (var ce in q) {
          var Z = q[ce];
          if (typeof Z != "function")
            return k(j, W, Q, ce, V(Z));
          var me = Z(te, ce, j, W, Q + "." + ce, n);
          if (me)
            return me;
        }
        return null;
      }
      return v(L);
    }
    function D(q) {
      function L(K, B, j, W, Q) {
        var te = K[B], ie = M(te);
        if (ie !== "object")
          return new b("Invalid " + W + " `" + Q + "` of type `" + ie + "` " + ("supplied to `" + j + "`, expected `object`."));
        var ce = t({}, K[B], q);
        for (var Z in ce) {
          var me = q[Z];
          if (r(q, Z) && typeof me != "function")
            return k(j, W, Q, Z, V(me));
          if (!me)
            return new b(
              "Invalid " + W + " `" + Q + "` key `" + Z + "` supplied to `" + j + "`.\nBad object: " + JSON.stringify(K[B], null, "  ") + `
Valid keys: ` + JSON.stringify(Object.keys(q), null, "  ")
            );
          var ne = me(te, Z, j, W, Q + "." + Z, n);
          if (ne)
            return ne;
        }
        return null;
      }
      return v(L);
    }
    function F(q) {
      switch (typeof q) {
        case "number":
        case "string":
        case "undefined":
          return !0;
        case "boolean":
          return !q;
        case "object":
          if (Array.isArray(q))
            return q.every(F);
          if (q === null || l(q))
            return !0;
          var L = p(q);
          if (L) {
            var K = L.call(q), B;
            if (L !== q.entries) {
              for (; !(B = K.next()).done; )
                if (!F(B.value))
                  return !1;
            } else
              for (; !(B = K.next()).done; ) {
                var j = B.value;
                if (j && !F(j[1]))
                  return !1;
              }
          } else
            return !1;
          return !0;
        default:
          return !1;
      }
    }
    function A(q, L) {
      return q === "symbol" ? !0 : L ? L["@@toStringTag"] === "Symbol" || typeof Symbol == "function" && L instanceof Symbol : !1;
    }
    function M(q) {
      var L = typeof q;
      return Array.isArray(q) ? "array" : q instanceof RegExp ? "object" : A(L, q) ? "symbol" : L;
    }
    function V(q) {
      if (typeof q > "u" || q === null)
        return "" + q;
      var L = M(q);
      if (L === "object") {
        if (q instanceof Date)
          return "date";
        if (q instanceof RegExp)
          return "regexp";
      }
      return L;
    }
    function U(q) {
      var L = V(q);
      switch (L) {
        case "array":
        case "object":
          return "an " + L;
        case "boolean":
        case "date":
        case "regexp":
          return "a " + L;
        default:
          return L;
      }
    }
    function G(q) {
      return !q.constructor || !q.constructor.name ? m : q.constructor.name;
    }
    return f.checkPropTypes = i, f.resetWarningCache = i.resetWarningCache, f.PropTypes = f, f;
  }, am;
}
var rm, pv;
function J_() {
  if (pv) return rm;
  pv = 1;
  var e = Hh();
  function t() {
  }
  function n() {
  }
  return n.resetWarningCache = t, rm = function() {
    function r(o, l, c, d, u, p) {
      if (p !== e) {
        var m = new Error(
          "Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types"
        );
        throw m.name = "Invariant Violation", m;
      }
    }
    r.isRequired = r;
    function i() {
      return r;
    }
    var s = {
      array: r,
      bigint: r,
      bool: r,
      func: r,
      number: r,
      object: r,
      string: r,
      symbol: r,
      any: r,
      arrayOf: i,
      element: r,
      elementType: r,
      instanceOf: i,
      node: r,
      objectOf: i,
      oneOf: i,
      oneOfType: i,
      shape: i,
      exact: i,
      checkPropTypes: n,
      resetWarningCache: t
    };
    return s.PropTypes = s, s;
  }, rm;
}
if (process.env.NODE_ENV !== "production") {
  var Z_ = yx(), Q_ = !0;
  uf.exports = Y_()(Z_.isElement, Q_);
} else
  uf.exports = J_()();
var eR = uf.exports;
const tn = /* @__PURE__ */ Kh(eR);
function nl(e, t, n, r) {
  function i(s) {
    return s instanceof n ? s : new n(function(o) {
      o(s);
    });
  }
  return new (n || (n = Promise))(function(s, o) {
    function l(u) {
      try {
        d(r.next(u));
      } catch (p) {
        o(p);
      }
    }
    function c(u) {
      try {
        d(r.throw(u));
      } catch (p) {
        o(p);
      }
    }
    function d(u) {
      u.done ? s(u.value) : i(u.value).then(l, c);
    }
    d((r = r.apply(e, t || [])).next());
  });
}
function al(e, t) {
  var n = { label: 0, sent: function() {
    if (s[0] & 1) throw s[1];
    return s[1];
  }, trys: [], ops: [] }, r, i, s, o;
  return o = { next: l(0), throw: l(1), return: l(2) }, typeof Symbol == "function" && (o[Symbol.iterator] = function() {
    return this;
  }), o;
  function l(d) {
    return function(u) {
      return c([d, u]);
    };
  }
  function c(d) {
    if (r) throw new TypeError("Generator is already executing.");
    for (; o && (o = 0, d[0] && (n = 0)), n; ) try {
      if (r = 1, i && (s = d[0] & 2 ? i.return : d[0] ? i.throw || ((s = i.return) && s.call(i), 0) : i.next) && !(s = s.call(i, d[1])).done) return s;
      switch (i = 0, s && (d = [d[0] & 2, s.value]), d[0]) {
        case 0:
        case 1:
          s = d;
          break;
        case 4:
          return n.label++, { value: d[1], done: !1 };
        case 5:
          n.label++, i = d[1], d = [0];
          continue;
        case 7:
          d = n.ops.pop(), n.trys.pop();
          continue;
        default:
          if (s = n.trys, !(s = s.length > 0 && s[s.length - 1]) && (d[0] === 6 || d[0] === 2)) {
            n = 0;
            continue;
          }
          if (d[0] === 3 && (!s || d[1] > s[0] && d[1] < s[3])) {
            n.label = d[1];
            break;
          }
          if (d[0] === 6 && n.label < s[1]) {
            n.label = s[1], s = d;
            break;
          }
          if (s && n.label < s[2]) {
            n.label = s[2], n.ops.push(d);
            break;
          }
          s[2] && n.ops.pop(), n.trys.pop();
          continue;
      }
      d = t.call(e, n);
    } catch (u) {
      d = [6, u], i = 0;
    } finally {
      r = s = 0;
    }
    if (d[0] & 5) throw d[1];
    return { value: d[0] ? d[1] : void 0, done: !0 };
  }
}
function mv(e, t) {
  var n = typeof Symbol == "function" && e[Symbol.iterator];
  if (!n) return e;
  var r = n.call(e), i, s = [], o;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = r.next()).done; ) s.push(i.value);
  } catch (l) {
    o = { error: l };
  } finally {
    try {
      i && !i.done && (n = r.return) && n.call(r);
    } finally {
      if (o) throw o.error;
    }
  }
  return s;
}
function fv(e, t, n) {
  if (n || arguments.length === 2) for (var r = 0, i = t.length, s; r < i; r++)
    (s || !(r in t)) && (s || (s = Array.prototype.slice.call(t, 0, r)), s[r] = t[r]);
  return e.concat(s || Array.prototype.slice.call(t));
}
var tR = /* @__PURE__ */ new Map([
  // https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types
  ["aac", "audio/aac"],
  ["abw", "application/x-abiword"],
  ["arc", "application/x-freearc"],
  ["avif", "image/avif"],
  ["avi", "video/x-msvideo"],
  ["azw", "application/vnd.amazon.ebook"],
  ["bin", "application/octet-stream"],
  ["bmp", "image/bmp"],
  ["bz", "application/x-bzip"],
  ["bz2", "application/x-bzip2"],
  ["cda", "application/x-cdf"],
  ["csh", "application/x-csh"],
  ["css", "text/css"],
  ["csv", "text/csv"],
  ["doc", "application/msword"],
  ["docx", "application/vnd.openxmlformats-officedocument.wordprocessingml.document"],
  ["eot", "application/vnd.ms-fontobject"],
  ["epub", "application/epub+zip"],
  ["gz", "application/gzip"],
  ["gif", "image/gif"],
  ["heic", "image/heic"],
  ["heif", "image/heif"],
  ["htm", "text/html"],
  ["html", "text/html"],
  ["ico", "image/vnd.microsoft.icon"],
  ["ics", "text/calendar"],
  ["jar", "application/java-archive"],
  ["jpeg", "image/jpeg"],
  ["jpg", "image/jpeg"],
  ["js", "text/javascript"],
  ["json", "application/json"],
  ["jsonld", "application/ld+json"],
  ["mid", "audio/midi"],
  ["midi", "audio/midi"],
  ["mjs", "text/javascript"],
  ["mp3", "audio/mpeg"],
  ["mp4", "video/mp4"],
  ["mpeg", "video/mpeg"],
  ["mpkg", "application/vnd.apple.installer+xml"],
  ["odp", "application/vnd.oasis.opendocument.presentation"],
  ["ods", "application/vnd.oasis.opendocument.spreadsheet"],
  ["odt", "application/vnd.oasis.opendocument.text"],
  ["oga", "audio/ogg"],
  ["ogv", "video/ogg"],
  ["ogx", "application/ogg"],
  ["opus", "audio/opus"],
  ["otf", "font/otf"],
  ["png", "image/png"],
  ["pdf", "application/pdf"],
  ["php", "application/x-httpd-php"],
  ["ppt", "application/vnd.ms-powerpoint"],
  ["pptx", "application/vnd.openxmlformats-officedocument.presentationml.presentation"],
  ["rar", "application/vnd.rar"],
  ["rtf", "application/rtf"],
  ["sh", "application/x-sh"],
  ["svg", "image/svg+xml"],
  ["swf", "application/x-shockwave-flash"],
  ["tar", "application/x-tar"],
  ["tif", "image/tiff"],
  ["tiff", "image/tiff"],
  ["ts", "video/mp2t"],
  ["ttf", "font/ttf"],
  ["txt", "text/plain"],
  ["vsd", "application/vnd.visio"],
  ["wav", "audio/wav"],
  ["weba", "audio/webm"],
  ["webm", "video/webm"],
  ["webp", "image/webp"],
  ["woff", "font/woff"],
  ["woff2", "font/woff2"],
  ["xhtml", "application/xhtml+xml"],
  ["xls", "application/vnd.ms-excel"],
  ["xlsx", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"],
  ["xml", "application/xml"],
  ["xul", "application/vnd.mozilla.xul+xml"],
  ["zip", "application/zip"],
  ["7z", "application/x-7z-compressed"],
  // Others
  ["mkv", "video/x-matroska"],
  ["mov", "video/quicktime"],
  ["msg", "application/vnd.ms-outlook"]
]);
function Wc(e, t) {
  var n = nR(e);
  if (typeof n.path != "string") {
    var r = e.webkitRelativePath;
    Object.defineProperty(n, "path", {
      value: typeof t == "string" ? t : typeof r == "string" && r.length > 0 ? r : e.name,
      writable: !1,
      configurable: !1,
      enumerable: !0
    });
  }
  return n;
}
function nR(e) {
  var t = e.name, n = t && t.lastIndexOf(".") !== -1;
  if (n && !e.type) {
    var r = t.split(".").pop().toLowerCase(), i = tR.get(r);
    i && Object.defineProperty(e, "type", {
      value: i,
      writable: !1,
      configurable: !1,
      enumerable: !0
    });
  }
  return e;
}
var aR = [
  // Thumbnail cache files for macOS and Windows
  ".DS_Store",
  "Thumbs.db"
  // Windows
];
function xx(e) {
  return nl(this, void 0, void 0, function() {
    return al(this, function(t) {
      return ru(e) && rR(e.dataTransfer) ? [2, lR(e.dataTransfer, e.type)] : iR(e) ? [2, sR(e)] : Array.isArray(e) && e.every(function(n) {
        return "getFile" in n && typeof n.getFile == "function";
      }) ? [2, oR(e)] : [2, []];
    });
  });
}
function rR(e) {
  return ru(e);
}
function iR(e) {
  return ru(e) && ru(e.target);
}
function ru(e) {
  return typeof e == "object" && e !== null;
}
function sR(e) {
  return pf(e.target.files).map(function(t) {
    return Wc(t);
  });
}
function oR(e) {
  return nl(this, void 0, void 0, function() {
    var t;
    return al(this, function(n) {
      switch (n.label) {
        case 0:
          return [4, Promise.all(e.map(function(r) {
            return r.getFile();
          }))];
        case 1:
          return t = n.sent(), [2, t.map(function(r) {
            return Wc(r);
          })];
      }
    });
  });
}
function lR(e, t) {
  return nl(this, void 0, void 0, function() {
    var n, r;
    return al(this, function(i) {
      switch (i.label) {
        case 0:
          return e.items ? (n = pf(e.items).filter(function(s) {
            return s.kind === "file";
          }), t !== "drop" ? [2, n] : [4, Promise.all(n.map(cR))]) : [3, 2];
        case 1:
          return r = i.sent(), [2, hv(Sx(r))];
        case 2:
          return [2, hv(pf(e.files).map(function(s) {
            return Wc(s);
          }))];
      }
    });
  });
}
function hv(e) {
  return e.filter(function(t) {
    return aR.indexOf(t.name) === -1;
  });
}
function pf(e) {
  if (e === null)
    return [];
  for (var t = [], n = 0; n < e.length; n++) {
    var r = e[n];
    t.push(r);
  }
  return t;
}
function cR(e) {
  if (typeof e.webkitGetAsEntry != "function")
    return gv(e);
  var t = e.webkitGetAsEntry();
  return t && t.isDirectory ? wx(t) : gv(e);
}
function Sx(e) {
  return e.reduce(function(t, n) {
    return fv(fv([], mv(t), !1), mv(Array.isArray(n) ? Sx(n) : [n]), !1);
  }, []);
}
function gv(e) {
  var t = e.getAsFile();
  if (!t)
    return Promise.reject("".concat(e, " is not a File"));
  var n = Wc(t);
  return Promise.resolve(n);
}
function dR(e) {
  return nl(this, void 0, void 0, function() {
    return al(this, function(t) {
      return [2, e.isDirectory ? wx(e) : uR(e)];
    });
  });
}
function wx(e) {
  var t = e.createReader();
  return new Promise(function(n, r) {
    var i = [];
    function s() {
      var o = this;
      t.readEntries(function(l) {
        return nl(o, void 0, void 0, function() {
          var c, d, u;
          return al(this, function(p) {
            switch (p.label) {
              case 0:
                if (l.length) return [3, 5];
                p.label = 1;
              case 1:
                return p.trys.push([1, 3, , 4]), [4, Promise.all(i)];
              case 2:
                return c = p.sent(), n(c), [3, 4];
              case 3:
                return d = p.sent(), r(d), [3, 4];
              case 4:
                return [3, 6];
              case 5:
                u = Promise.all(l.map(dR)), i.push(u), s(), p.label = 6;
              case 6:
                return [
                  2
                  /*return*/
                ];
            }
          });
        });
      }, function(l) {
        r(l);
      });
    }
    s();
  });
}
function uR(e) {
  return nl(this, void 0, void 0, function() {
    return al(this, function(t) {
      return [2, new Promise(function(n, r) {
        e.file(function(i) {
          var s = Wc(i, e.fullPath);
          n(s);
        }, function(i) {
          r(i);
        });
      })];
    });
  });
}
var pR = function(e, t) {
  if (e && t) {
    var n = Array.isArray(t) ? t : t.split(","), r = e.name || "", i = (e.type || "").toLowerCase(), s = i.replace(/\/.*$/, "");
    return n.some(function(o) {
      var l = o.trim().toLowerCase();
      return l.charAt(0) === "." ? r.toLowerCase().endsWith(l) : l.endsWith("/*") ? s === l.replace(/\/.*$/, "") : i === l;
    });
  }
  return !0;
};
function bv(e) {
  return hR(e) || fR(e) || Ox(e) || mR();
}
function mR() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function fR(e) {
  if (typeof Symbol < "u" && e[Symbol.iterator] != null || e["@@iterator"] != null) return Array.from(e);
}
function hR(e) {
  if (Array.isArray(e)) return mf(e);
}
function vv(e, t) {
  var n = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(e);
    t && (r = r.filter(function(i) {
      return Object.getOwnPropertyDescriptor(e, i).enumerable;
    })), n.push.apply(n, r);
  }
  return n;
}
function yv(e) {
  for (var t = 1; t < arguments.length; t++) {
    var n = arguments[t] != null ? arguments[t] : {};
    t % 2 ? vv(Object(n), !0).forEach(function(r) {
      kx(e, r, n[r]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : vv(Object(n)).forEach(function(r) {
      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(n, r));
    });
  }
  return e;
}
function kx(e, t, n) {
  return t in e ? Object.defineProperty(e, t, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : e[t] = n, e;
}
function pc(e, t) {
  return vR(e) || bR(e, t) || Ox(e, t) || gR();
}
function gR() {
  throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function Ox(e, t) {
  if (e) {
    if (typeof e == "string") return mf(e, t);
    var n = Object.prototype.toString.call(e).slice(8, -1);
    if (n === "Object" && e.constructor && (n = e.constructor.name), n === "Map" || n === "Set") return Array.from(e);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return mf(e, t);
  }
}
function mf(e, t) {
  (t == null || t > e.length) && (t = e.length);
  for (var n = 0, r = new Array(t); n < t; n++)
    r[n] = e[n];
  return r;
}
function bR(e, t) {
  var n = e == null ? null : typeof Symbol < "u" && e[Symbol.iterator] || e["@@iterator"];
  if (n != null) {
    var r = [], i = !0, s = !1, o, l;
    try {
      for (n = n.call(e); !(i = (o = n.next()).done) && (r.push(o.value), !(t && r.length === t)); i = !0)
        ;
    } catch (c) {
      s = !0, l = c;
    } finally {
      try {
        !i && n.return != null && n.return();
      } finally {
        if (s) throw l;
      }
    }
    return r;
  }
}
function vR(e) {
  if (Array.isArray(e)) return e;
}
var yR = "file-invalid-type", CR = "file-too-large", xR = "file-too-small", SR = "too-many-files", wR = function(t) {
  t = Array.isArray(t) && t.length === 1 ? t[0] : t;
  var n = Array.isArray(t) ? "one of ".concat(t.join(", ")) : t;
  return {
    code: yR,
    message: "File type must be ".concat(n)
  };
}, Cv = function(t) {
  return {
    code: CR,
    message: "File is larger than ".concat(t, " ").concat(t === 1 ? "byte" : "bytes")
  };
}, xv = function(t) {
  return {
    code: xR,
    message: "File is smaller than ".concat(t, " ").concat(t === 1 ? "byte" : "bytes")
  };
}, kR = {
  code: SR,
  message: "Too many files"
};
function Tx(e, t) {
  var n = e.type === "application/x-moz-file" || pR(e, t);
  return [n, n ? null : wR(t)];
}
function Ex(e, t, n) {
  if (Ss(e.size))
    if (Ss(t) && Ss(n)) {
      if (e.size > n) return [!1, Cv(n)];
      if (e.size < t) return [!1, xv(t)];
    } else {
      if (Ss(t) && e.size < t) return [!1, xv(t)];
      if (Ss(n) && e.size > n) return [!1, Cv(n)];
    }
  return [!0, null];
}
function Ss(e) {
  return e != null;
}
function OR(e) {
  var t = e.files, n = e.accept, r = e.minSize, i = e.maxSize, s = e.multiple, o = e.maxFiles, l = e.validator;
  return !s && t.length > 1 || s && o >= 1 && t.length > o ? !1 : t.every(function(c) {
    var d = Tx(c, n), u = pc(d, 1), p = u[0], m = Ex(c, r, i), f = pc(m, 1), g = f[0], b = l ? l(c) : null;
    return p && g && !b;
  });
}
function iu(e) {
  return typeof e.isPropagationStopped == "function" ? e.isPropagationStopped() : typeof e.cancelBubble < "u" ? e.cancelBubble : !1;
}
function xd(e) {
  return e.dataTransfer ? Array.prototype.some.call(e.dataTransfer.types, function(t) {
    return t === "Files" || t === "application/x-moz-file";
  }) : !!e.target && !!e.target.files;
}
function Sv(e) {
  e.preventDefault();
}
function TR(e) {
  return e.indexOf("MSIE") !== -1 || e.indexOf("Trident/") !== -1;
}
function ER(e) {
  return e.indexOf("Edge/") !== -1;
}
function IR() {
  var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : window.navigator.userAgent;
  return TR(e) || ER(e);
}
function Rr() {
  for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
    t[n] = arguments[n];
  return function(r) {
    for (var i = arguments.length, s = new Array(i > 1 ? i - 1 : 0), o = 1; o < i; o++)
      s[o - 1] = arguments[o];
    return t.some(function(l) {
      return !iu(r) && l && l.apply(void 0, [r].concat(s)), iu(r);
    });
  };
}
function PR() {
  return "showOpenFilePicker" in window;
}
function _R(e) {
  if (Ss(e)) {
    var t = Object.entries(e).filter(function(n) {
      var r = pc(n, 2), i = r[0], s = r[1], o = !0;
      return Ix(i) || (console.warn('Skipped "'.concat(i, '" because it is not a valid MIME type. Check https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types for a list of valid MIME types.')), o = !1), (!Array.isArray(s) || !s.every(Px)) && (console.warn('Skipped "'.concat(i, '" because an invalid file extension was provided.')), o = !1), o;
    }).reduce(function(n, r) {
      var i = pc(r, 2), s = i[0], o = i[1];
      return yv(yv({}, n), {}, kx({}, s, o));
    }, {});
    return [{
      // description is required due to https://crbug.com/1264708
      description: "Files",
      accept: t
    }];
  }
  return e;
}
function RR(e) {
  if (Ss(e))
    return Object.entries(e).reduce(function(t, n) {
      var r = pc(n, 2), i = r[0], s = r[1];
      return [].concat(bv(t), [i], bv(s));
    }, []).filter(function(t) {
      return Ix(t) || Px(t);
    }).join(",");
}
function AR(e) {
  return e instanceof DOMException && (e.name === "AbortError" || e.code === e.ABORT_ERR);
}
function LR(e) {
  return e instanceof DOMException && (e.name === "SecurityError" || e.code === e.SECURITY_ERR);
}
function Ix(e) {
  return e === "audio/*" || e === "video/*" || e === "image/*" || e === "text/*" || /\w+\/[-+.\w]+/g.test(e);
}
function Px(e) {
  return /^.*\.[\w]+$/.test(e);
}
var NR = ["children"], DR = ["open"], MR = ["refKey", "role", "onKeyDown", "onFocus", "onBlur", "onClick", "onDragEnter", "onDragOver", "onDragLeave", "onDrop"], FR = ["refKey", "onChange", "onClick"];
function $R(e) {
  return UR(e) || BR(e) || _x(e) || jR();
}
function jR() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function BR(e) {
  if (typeof Symbol < "u" && e[Symbol.iterator] != null || e["@@iterator"] != null) return Array.from(e);
}
function UR(e) {
  if (Array.isArray(e)) return ff(e);
}
function im(e, t) {
  return HR(e) || KR(e, t) || _x(e, t) || VR();
}
function VR() {
  throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function _x(e, t) {
  if (e) {
    if (typeof e == "string") return ff(e, t);
    var n = Object.prototype.toString.call(e).slice(8, -1);
    if (n === "Object" && e.constructor && (n = e.constructor.name), n === "Map" || n === "Set") return Array.from(e);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return ff(e, t);
  }
}
function ff(e, t) {
  (t == null || t > e.length) && (t = e.length);
  for (var n = 0, r = new Array(t); n < t; n++)
    r[n] = e[n];
  return r;
}
function KR(e, t) {
  var n = e == null ? null : typeof Symbol < "u" && e[Symbol.iterator] || e["@@iterator"];
  if (n != null) {
    var r = [], i = !0, s = !1, o, l;
    try {
      for (n = n.call(e); !(i = (o = n.next()).done) && (r.push(o.value), !(t && r.length === t)); i = !0)
        ;
    } catch (c) {
      s = !0, l = c;
    } finally {
      try {
        !i && n.return != null && n.return();
      } finally {
        if (s) throw l;
      }
    }
    return r;
  }
}
function HR(e) {
  if (Array.isArray(e)) return e;
}
function wv(e, t) {
  var n = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(e);
    t && (r = r.filter(function(i) {
      return Object.getOwnPropertyDescriptor(e, i).enumerable;
    })), n.push.apply(n, r);
  }
  return n;
}
function xn(e) {
  for (var t = 1; t < arguments.length; t++) {
    var n = arguments[t] != null ? arguments[t] : {};
    t % 2 ? wv(Object(n), !0).forEach(function(r) {
      hf(e, r, n[r]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : wv(Object(n)).forEach(function(r) {
      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(n, r));
    });
  }
  return e;
}
function hf(e, t, n) {
  return t in e ? Object.defineProperty(e, t, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : e[t] = n, e;
}
function su(e, t) {
  if (e == null) return {};
  var n = zR(e, t), r, i;
  if (Object.getOwnPropertySymbols) {
    var s = Object.getOwnPropertySymbols(e);
    for (i = 0; i < s.length; i++)
      r = s[i], !(t.indexOf(r) >= 0) && Object.prototype.propertyIsEnumerable.call(e, r) && (n[r] = e[r]);
  }
  return n;
}
function zR(e, t) {
  if (e == null) return {};
  var n = {}, r = Object.keys(e), i, s;
  for (s = 0; s < r.length; s++)
    i = r[s], !(t.indexOf(i) >= 0) && (n[i] = e[i]);
  return n;
}
var Wu = /* @__PURE__ */ rh(function(e, t) {
  var n = e.children, r = su(e, NR), i = Ax(r), s = i.open, o = su(i, DR);
  return ih(t, function() {
    return {
      open: s
    };
  }, [s]), /* @__PURE__ */ re.createElement(ka, null, n(xn(xn({}, o), {}, {
    open: s
  })));
});
Wu.displayName = "Dropzone";
var Rx = {
  disabled: !1,
  getFilesFromEvent: xx,
  maxSize: 1 / 0,
  minSize: 0,
  multiple: !0,
  maxFiles: 0,
  preventDropOnDocument: !0,
  noClick: !1,
  noKeyboard: !1,
  noDrag: !1,
  noDragEventsBubbling: !1,
  validator: null,
  useFsAccessApi: !0,
  autoFocus: !1
};
Wu.defaultProps = Rx;
Wu.propTypes = {
  /**
   * Render function that exposes the dropzone state and prop getter fns
   *
   * @param {object} params
   * @param {Function} params.getRootProps Returns the props you should apply to the root drop container you render
   * @param {Function} params.getInputProps Returns the props you should apply to hidden file input you render
   * @param {Function} params.open Open the native file selection dialog
   * @param {boolean} params.isFocused Dropzone area is in focus
   * @param {boolean} params.isFileDialogActive File dialog is opened
   * @param {boolean} params.isDragActive Active drag is in progress
   * @param {boolean} params.isDragAccept Dragged files are accepted
   * @param {boolean} params.isDragReject Some dragged files are rejected
   * @param {File[]} params.acceptedFiles Accepted files
   * @param {FileRejection[]} params.fileRejections Rejected files and why they were rejected
   */
  children: tn.func,
  /**
   * Set accepted file types.
   * Checkout https://developer.mozilla.org/en-US/docs/Web/API/window/showOpenFilePicker types option for more information.
   * Keep in mind that mime type determination is not reliable across platforms. CSV files,
   * for example, are reported as text/plain under macOS but as application/vnd.ms-excel under
   * Windows. In some cases there might not be a mime type set at all (https://github.com/react-dropzone/react-dropzone/issues/276).
   */
  accept: tn.objectOf(tn.arrayOf(tn.string)),
  /**
   * Allow drag 'n' drop (or selection from the file dialog) of multiple files
   */
  multiple: tn.bool,
  /**
   * If false, allow dropped items to take over the current browser window
   */
  preventDropOnDocument: tn.bool,
  /**
   * If true, disables click to open the native file selection dialog
   */
  noClick: tn.bool,
  /**
   * If true, disables SPACE/ENTER to open the native file selection dialog.
   * Note that it also stops tracking the focus state.
   */
  noKeyboard: tn.bool,
  /**
   * If true, disables drag 'n' drop
   */
  noDrag: tn.bool,
  /**
   * If true, stops drag event propagation to parents
   */
  noDragEventsBubbling: tn.bool,
  /**
   * Minimum file size (in bytes)
   */
  minSize: tn.number,
  /**
   * Maximum file size (in bytes)
   */
  maxSize: tn.number,
  /**
   * Maximum accepted number of files
   * The default value is 0 which means there is no limitation to how many files are accepted.
   */
  maxFiles: tn.number,
  /**
   * Enable/disable the dropzone
   */
  disabled: tn.bool,
  /**
   * Use this to provide a custom file aggregator
   *
   * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)
   */
  getFilesFromEvent: tn.func,
  /**
   * Cb for when closing the file dialog with no selection
   */
  onFileDialogCancel: tn.func,
  /**
   * Cb for when opening the file dialog
   */
  onFileDialogOpen: tn.func,
  /**
   * Set to true to use the https://developer.mozilla.org/en-US/docs/Web/API/File_System_Access_API
   * to open the file picker instead of using an `<input type="file">` click event.
   */
  useFsAccessApi: tn.bool,
  /**
   * Set to true to focus the root element on render
   */
  autoFocus: tn.bool,
  /**
   * Cb for when the `dragenter` event occurs.
   *
   * @param {DragEvent} event
   */
  onDragEnter: tn.func,
  /**
   * Cb for when the `dragleave` event occurs
   *
   * @param {DragEvent} event
   */
  onDragLeave: tn.func,
  /**
   * Cb for when the `dragover` event occurs
   *
   * @param {DragEvent} event
   */
  onDragOver: tn.func,
  /**
   * Cb for when the `drop` event occurs.
   * Note that this callback is invoked after the `getFilesFromEvent` callback is done.
   *
   * Files are accepted or rejected based on the `accept`, `multiple`, `minSize` and `maxSize` props.
   * `accept` must be a valid [MIME type](http://www.iana.org/assignments/media-types/media-types.xhtml) according to [input element specification](https://www.w3.org/wiki/HTML/Elements/input/file) or a valid file extension.
   * If `multiple` is set to false and additional files are dropped,
   * all files besides the first will be rejected.
   * Any file which does not have a size in the [`minSize`, `maxSize`] range, will be rejected as well.
   *
   * Note that the `onDrop` callback will always be invoked regardless if the dropped files were accepted or rejected.
   * If you'd like to react to a specific scenario, use the `onDropAccepted`/`onDropRejected` props.
   *
   * `onDrop` will provide you with an array of [File](https://developer.mozilla.org/en-US/docs/Web/API/File) objects which you can then process and send to a server.
   * For example, with [SuperAgent](https://github.com/visionmedia/superagent) as a http/ajax library:
   *
   * ```js
   * function onDrop(acceptedFiles) {
   *   const req = request.post('/upload')
   *   acceptedFiles.forEach(file => {
   *     req.attach(file.name, file)
   *   })
   *   req.end(callback)
   * }
   * ```
   *
   * @param {File[]} acceptedFiles
   * @param {FileRejection[]} fileRejections
   * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)
   */
  onDrop: tn.func,
  /**
   * Cb for when the `drop` event occurs.
   * Note that if no files are accepted, this callback is not invoked.
   *
   * @param {File[]} files
   * @param {(DragEvent|Event)} event
   */
  onDropAccepted: tn.func,
  /**
   * Cb for when the `drop` event occurs.
   * Note that if no files are rejected, this callback is not invoked.
   *
   * @param {FileRejection[]} fileRejections
   * @param {(DragEvent|Event)} event
   */
  onDropRejected: tn.func,
  /**
   * Cb for when there's some error from any of the promises.
   *
   * @param {Error} error
   */
  onError: tn.func,
  /**
   * Custom validation function. It must return null if there's no errors.
   * @param {File} file
   * @returns {FileError|FileError[]|null}
   */
  validator: tn.func
};
var gf = {
  isFocused: !1,
  isFileDialogActive: !1,
  isDragActive: !1,
  isDragAccept: !1,
  isDragReject: !1,
  acceptedFiles: [],
  fileRejections: []
};
function Ax() {
  var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, t = xn(xn({}, Rx), e), n = t.accept, r = t.disabled, i = t.getFilesFromEvent, s = t.maxSize, o = t.minSize, l = t.multiple, c = t.maxFiles, d = t.onDragEnter, u = t.onDragLeave, p = t.onDragOver, m = t.onDrop, f = t.onDropAccepted, g = t.onDropRejected, b = t.onFileDialogCancel, v = t.onFileDialogOpen, y = t.useFsAccessApi, x = t.autoFocus, w = t.preventDropOnDocument, R = t.noClick, S = t.noKeyboard, _ = t.noDrag, O = t.noDragEventsBubbling, E = t.onError, T = t.validator, I = et(function() {
    return RR(n);
  }, [n]), k = et(function() {
    return _R(n);
  }, [n]), P = et(function() {
    return typeof v == "function" ? v : kv;
  }, [v]), D = et(function() {
    return typeof b == "function" ? b : kv;
  }, [b]), F = Ct(null), A = Ct(null), M = jE(qR, gf), V = im(M, 2), U = V[0], G = V[1], q = U.isFocused, L = U.isFileDialogActive, K = Ct(typeof window < "u" && window.isSecureContext && y && PR()), B = function() {
    !K.current && L && setTimeout(function() {
      if (A.current) {
        var Ce = A.current.files;
        Ce.length || (G({
          type: "closeDialog"
        }), D());
      }
    }, 300);
  };
  He(function() {
    return window.addEventListener("focus", B, !1), function() {
      window.removeEventListener("focus", B, !1);
    };
  }, [A, L, D, K]);
  var j = Ct([]), W = function(Ce) {
    F.current && F.current.contains(Ce.target) || (Ce.preventDefault(), j.current = []);
  };
  He(function() {
    return w && (document.addEventListener("dragover", Sv, !1), document.addEventListener("drop", W, !1)), function() {
      w && (document.removeEventListener("dragover", Sv), document.removeEventListener("drop", W));
    };
  }, [F, w]), He(function() {
    return !r && x && F.current && F.current.focus(), function() {
    };
  }, [F, x, r]);
  var Q = bn(function(he) {
    E ? E(he) : console.error(he);
  }, [E]), te = bn(function(he) {
    he.preventDefault(), he.persist(), Y(he), j.current = [].concat($R(j.current), [he.target]), xd(he) && Promise.resolve(i(he)).then(function(Ce) {
      if (!(iu(he) && !O)) {
        var Ge = Ce.length, it = Ge > 0 && OR({
          files: Ce,
          accept: I,
          minSize: o,
          maxSize: s,
          multiple: l,
          maxFiles: c,
          validator: T
        }), qe = Ge > 0 && !it;
        G({
          isDragAccept: it,
          isDragReject: qe,
          isDragActive: !0,
          type: "setDraggedFiles"
        }), d && d(he);
      }
    }).catch(function(Ce) {
      return Q(Ce);
    });
  }, [i, d, Q, O, I, o, s, l, c, T]), ie = bn(function(he) {
    he.preventDefault(), he.persist(), Y(he);
    var Ce = xd(he);
    if (Ce && he.dataTransfer)
      try {
        he.dataTransfer.dropEffect = "copy";
      } catch {
      }
    return Ce && p && p(he), !1;
  }, [p, O]), ce = bn(function(he) {
    he.preventDefault(), he.persist(), Y(he);
    var Ce = j.current.filter(function(it) {
      return F.current && F.current.contains(it);
    }), Ge = Ce.indexOf(he.target);
    Ge !== -1 && Ce.splice(Ge, 1), j.current = Ce, !(Ce.length > 0) && (G({
      type: "setDraggedFiles",
      isDragActive: !1,
      isDragAccept: !1,
      isDragReject: !1
    }), xd(he) && u && u(he));
  }, [F, u, O]), Z = bn(function(he, Ce) {
    var Ge = [], it = [];
    he.forEach(function(qe) {
      var kt = Tx(qe, I), jt = im(kt, 2), Xe = jt[0], It = jt[1], en = Ex(qe, o, s), qn = im(en, 2), Ra = qn[0], za = qn[1], ri = T ? T(qe) : null;
      if (Xe && Ra && !ri)
        Ge.push(qe);
      else {
        var ii = [It, za];
        ri && (ii = ii.concat(ri)), it.push({
          file: qe,
          errors: ii.filter(function(md) {
            return md;
          })
        });
      }
    }), (!l && Ge.length > 1 || l && c >= 1 && Ge.length > c) && (Ge.forEach(function(qe) {
      it.push({
        file: qe,
        errors: [kR]
      });
    }), Ge.splice(0)), G({
      acceptedFiles: Ge,
      fileRejections: it,
      type: "setFiles"
    }), m && m(Ge, it, Ce), it.length > 0 && g && g(it, Ce), Ge.length > 0 && f && f(Ge, Ce);
  }, [G, l, I, o, s, c, m, f, g, T]), me = bn(function(he) {
    he.preventDefault(), he.persist(), Y(he), j.current = [], xd(he) && Promise.resolve(i(he)).then(function(Ce) {
      iu(he) && !O || Z(Ce, he);
    }).catch(function(Ce) {
      return Q(Ce);
    }), G({
      type: "reset"
    });
  }, [i, Z, Q, O]), ne = bn(function() {
    if (K.current) {
      G({
        type: "openDialog"
      }), P();
      var he = {
        multiple: l,
        types: k
      };
      window.showOpenFilePicker(he).then(function(Ce) {
        return i(Ce);
      }).then(function(Ce) {
        Z(Ce, null), G({
          type: "closeDialog"
        });
      }).catch(function(Ce) {
        AR(Ce) ? (D(Ce), G({
          type: "closeDialog"
        })) : LR(Ce) ? (K.current = !1, A.current ? (A.current.value = null, A.current.click()) : Q(new Error("Cannot open the file picker because the https://developer.mozilla.org/en-US/docs/Web/API/File_System_Access_API is not supported and no <input> was provided."))) : Q(Ce);
      });
      return;
    }
    A.current && (G({
      type: "openDialog"
    }), P(), A.current.value = null, A.current.click());
  }, [G, P, D, y, Z, Q, k, l]), Oe = bn(function(he) {
    !F.current || !F.current.isEqualNode(he.target) || (he.key === " " || he.key === "Enter" || he.keyCode === 32 || he.keyCode === 13) && (he.preventDefault(), ne());
  }, [F, ne]), Pe = bn(function() {
    G({
      type: "focus"
    });
  }, []), $e = bn(function() {
    G({
      type: "blur"
    });
  }, []), fe = bn(function() {
    R || (IR() ? setTimeout(ne, 0) : ne());
  }, [R, ne]), we = function(Ce) {
    return r ? null : Ce;
  }, J = function(Ce) {
    return S ? null : we(Ce);
  }, X = function(Ce) {
    return _ ? null : we(Ce);
  }, Y = function(Ce) {
    O && Ce.stopPropagation();
  }, ae = et(function() {
    return function() {
      var he = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, Ce = he.refKey, Ge = Ce === void 0 ? "ref" : Ce, it = he.role, qe = he.onKeyDown, kt = he.onFocus, jt = he.onBlur, Xe = he.onClick, It = he.onDragEnter, en = he.onDragOver, qn = he.onDragLeave, Ra = he.onDrop, za = su(he, MR);
      return xn(xn(hf({
        onKeyDown: J(Rr(qe, Oe)),
        onFocus: J(Rr(kt, Pe)),
        onBlur: J(Rr(jt, $e)),
        onClick: we(Rr(Xe, fe)),
        onDragEnter: X(Rr(It, te)),
        onDragOver: X(Rr(en, ie)),
        onDragLeave: X(Rr(qn, ce)),
        onDrop: X(Rr(Ra, me)),
        role: typeof it == "string" && it !== "" ? it : "presentation"
      }, Ge, F), !r && !S ? {
        tabIndex: 0
      } : {}), za);
    };
  }, [F, Oe, Pe, $e, fe, te, ie, ce, me, S, _, r]), de = bn(function(he) {
    he.stopPropagation();
  }, []), ye = et(function() {
    return function() {
      var he = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, Ce = he.refKey, Ge = Ce === void 0 ? "ref" : Ce, it = he.onChange, qe = he.onClick, kt = su(he, FR), jt = hf({
        accept: I,
        multiple: l,
        type: "file",
        style: {
          display: "none"
        },
        onChange: we(Rr(it, me)),
        onClick: we(Rr(qe, de)),
        tabIndex: -1
      }, Ge, A);
      return xn(xn({}, jt), kt);
    };
  }, [A, n, l, me, r]);
  return xn(xn({}, U), {}, {
    isFocused: q && !r,
    getRootProps: ae,
    getInputProps: ye,
    rootRef: F,
    inputRef: A,
    open: we(ne)
  });
}
function qR(e, t) {
  switch (t.type) {
    case "focus":
      return xn(xn({}, e), {}, {
        isFocused: !0
      });
    case "blur":
      return xn(xn({}, e), {}, {
        isFocused: !1
      });
    case "openDialog":
      return xn(xn({}, gf), {}, {
        isFileDialogActive: !0
      });
    case "closeDialog":
      return xn(xn({}, e), {}, {
        isFileDialogActive: !1
      });
    case "setDraggedFiles":
      return xn(xn({}, e), {}, {
        isDragActive: t.isDragActive,
        isDragAccept: t.isDragAccept,
        isDragReject: t.isDragReject
      });
    case "setFiles":
      return xn(xn({}, e), {}, {
        acceptedFiles: t.acceptedFiles,
        fileRejections: t.fileRejections
      });
    case "reset":
      return xn({}, gf);
    default:
      return e;
  }
}
function kv() {
}
const Vn = {
  button: "pf-v5-c-button",
  dirRtl: "pf-v5-m-dir-rtl",
  jumpLinks: "pf-v5-c-jump-links",
  jumpLinksItem: "pf-v5-c-jump-links__item",
  jumpLinksLabel: "pf-v5-c-jump-links__label",
  jumpLinksLink: "pf-v5-c-jump-links__link",
  jumpLinksLinkText: "pf-v5-c-jump-links__link-text",
  jumpLinksList: "pf-v5-c-jump-links__list",
  jumpLinksMain: "pf-v5-c-jump-links__main",
  jumpLinksToggle: "pf-v5-c-jump-links__toggle",
  jumpLinksToggleIcon: "pf-v5-c-jump-links__toggle-icon",
  jumpLinksToggleText: "pf-v5-c-jump-links__toggle-text",
  modifiers: {
    center: "pf-m-center",
    vertical: "pf-m-vertical",
    expandable: "pf-m-expandable",
    nonExpandable: "pf-m-non-expandable",
    expandableOnSm: "pf-m-expandable-on-sm",
    nonExpandableOnSm: "pf-m-non-expandable-on-sm",
    expandableOnMd: "pf-m-expandable-on-md",
    nonExpandableOnMd: "pf-m-non-expandable-on-md",
    expandableOnLg: "pf-m-expandable-on-lg",
    nonExpandableOnLg: "pf-m-non-expandable-on-lg",
    expandableOnXl: "pf-m-expandable-on-xl",
    nonExpandableOnXl: "pf-m-non-expandable-on-xl",
    expandableOn_2xl: "pf-m-expandable-on-2xl",
    nonExpandableOn_2xl: "pf-m-non-expandable-on-2xl",
    expanded: "pf-m-expanded",
    current: "pf-m-current"
  }
}, GR = {
  modifiers: {
    gutter: "pf-m-gutter",
    panelRight: "pf-m-panel-right",
    stack: "pf-m-stack",
    split: "pf-m-split",
    border: "pf-m-border",
    padding: "pf-m-padding",
    sticky: "pf-m-sticky",
    static: "pf-m-static",
    noBackground: "pf-m-no-background",
    widthDefault: "pf-m-width-default",
    width_25: "pf-m-width-25",
    width_33: "pf-m-width-33",
    width_50: "pf-m-width-50",
    width_66: "pf-m-width-66",
    width_75: "pf-m-width-75",
    width_100: "pf-m-width-100",
    widthDefaultOnSm: "pf-m-width-default-on-sm",
    width_25OnSm: "pf-m-width-25-on-sm",
    width_33OnSm: "pf-m-width-33-on-sm",
    width_50OnSm: "pf-m-width-50-on-sm",
    width_66OnSm: "pf-m-width-66-on-sm",
    width_75OnSm: "pf-m-width-75-on-sm",
    width_100OnSm: "pf-m-width-100-on-sm",
    widthDefaultOnMd: "pf-m-width-default-on-md",
    width_25OnMd: "pf-m-width-25-on-md",
    width_33OnMd: "pf-m-width-33-on-md",
    width_50OnMd: "pf-m-width-50-on-md",
    width_66OnMd: "pf-m-width-66-on-md",
    width_75OnMd: "pf-m-width-75-on-md",
    width_100OnMd: "pf-m-width-100-on-md",
    widthDefaultOnLg: "pf-m-width-default-on-lg",
    width_25OnLg: "pf-m-width-25-on-lg",
    width_33OnLg: "pf-m-width-33-on-lg",
    width_50OnLg: "pf-m-width-50-on-lg",
    width_66OnLg: "pf-m-width-66-on-lg",
    width_75OnLg: "pf-m-width-75-on-lg",
    width_100OnLg: "pf-m-width-100-on-lg",
    widthDefaultOnXl: "pf-m-width-default-on-xl",
    width_25OnXl: "pf-m-width-25-on-xl",
    width_33OnXl: "pf-m-width-33-on-xl",
    width_50OnXl: "pf-m-width-50-on-xl",
    width_66OnXl: "pf-m-width-66-on-xl",
    width_75OnXl: "pf-m-width-75-on-xl",
    width_100OnXl: "pf-m-width-100-on-xl",
    widthDefaultOn_2xl: "pf-m-width-default-on-2xl",
    width_25On_2xl: "pf-m-width-25-on-2xl",
    width_33On_2xl: "pf-m-width-33-on-2xl",
    width_50On_2xl: "pf-m-width-50-on-2xl",
    width_66On_2xl: "pf-m-width-66-on-2xl",
    width_75On_2xl: "pf-m-width-75-on-2xl",
    width_100On_2xl: "pf-m-width-100-on-2xl"
  },
  sidebar: "pf-v5-c-sidebar",
  sidebarContent: "pf-v5-c-sidebar__content",
  sidebarMain: "pf-v5-c-sidebar__main",
  sidebarPanel: "pf-v5-c-sidebar__panel"
}, mc = (e) => {
  var { children: t, className: n } = e, r = oe(e, ["children", "className"]);
  return h.createElement("ul", Object.assign({ className: $(Vn.jumpLinksList, n), role: "list" }, r), t);
};
mc.displayName = "JumpLinksList";
const fc = (e) => {
  var {
    isActive: t,
    href: n,
    // eslint-disable-next-line
    node: r,
    children: i,
    onClick: s,
    className: o
  } = e, l = oe(e, ["isActive", "href", "node", "children", "onClick", "className"]);
  const c = h.Children.toArray(i), d = c.filter((u) => u.type === mc);
  return i = c.filter((u) => u.type !== mc), h.createElement(
    "li",
    Object.assign({ className: $(Vn.jumpLinksItem, t && Vn.modifiers.current, o) }, t && { "aria-current": "location" }, l),
    h.createElement(
      "a",
      { className: Vn.jumpLinksLink, href: n, onClick: s },
      h.createElement("span", { className: Vn.jumpLinksLinkText }, i)
    ),
    d
  );
};
fc.displayName = "JumpLinksItem";
const WR = {
  name: "--pf-v5-c-jump-links__toggle--Display",
  value: "none",
  var: "var(--pf-v5-c-jump-links__toggle--Display)"
}, Ud = (e, t) => (h.Children.forEach(e, (n) => {
  if (Sn && document.getElementById && document.querySelector && n.type === fc) {
    const r = n.props.node || n.props.href;
    typeof r == "string" ? r.startsWith("#") ? t.push(document.getElementById(r.substr(1))) : t.push(document.querySelector(r)) : r instanceof HTMLElement && t.push(r);
  }
  [h.Fragment, mc, fc].includes(n.type) && Ud(n.props.children, t);
}), t);
function XR(e) {
  return e && getComputedStyle(e).getPropertyValue(WR.name).includes("block");
}
const Lx = (e) => {
  var { isCentered: t, isVertical: n, children: r, label: i, "aria-label": s = typeof i == "string" ? i : null, scrollableRef: o, scrollableSelector: l, activeIndex: c = 0, offset: d = 0, expandable: u, isExpanded: p = !1, alwaysShowLabel: m = !0, toggleAriaLabel: f = "Toggle jump links", className: g } = e, b = oe(e, ["isCentered", "isVertical", "children", "label", "aria-label", "scrollableRef", "scrollableSelector", "activeIndex", "offset", "expandable", "isExpanded", "alwaysShowLabel", "toggleAriaLabel", "className"]);
  const v = !!(o || l), [y, x] = h.useState(v ? Ud(r, []) : []), [w, R] = h.useState(c), [S, _] = h.useState(p), O = h.useRef(!1), E = h.useRef();
  let T;
  const I = () => {
    if (o)
      return o instanceof HTMLElement ? o : typeof o == "function" ? o() : o.current;
    if (l)
      return document.querySelector(l);
  }, k = h.useCallback(() => {
    if (!Sn || !v || !(T instanceof HTMLElement))
      return;
    if (O.current) {
      O.current = !1;
      return;
    }
    const F = Math.ceil(T.scrollTop + d);
    window.requestAnimationFrame(() => {
      let A = y;
      (A.every((U) => !U?.offsetTop) || !A[0] || A.includes(null)) && (A = Ud(r, []), x(A));
      const V = A.map((U, G) => ({
        y: U ? U.offsetTop : null,
        index: G
      })).filter(({ y: U }) => U !== null).sort((U, G) => G.y - U.y);
      for (const { y: U, index: G } of V)
        if (F >= U)
          return R(G);
    });
  }, [y, v, T, d]);
  h.useEffect(() => {
    if (T = I(), T instanceof HTMLElement)
      return T.addEventListener("scroll", k), () => T.removeEventListener("scroll", k);
  }, [T, k, I]), h.useEffect(() => {
    k();
  }, []);
  let P = 0;
  const D = (F) => v ? h.Children.map(F, (A) => {
    if (A.type === fc) {
      const { onClick: M, isActive: V } = A.props, U = P++, G = y[U];
      return h.cloneElement(A, {
        onClick(q) {
          O.current = !0;
          let L;
          G || (L = Ud(F, []), x(L));
          const K = G || L[U];
          if (K) {
            const B = I();
            if (B instanceof HTMLElement) {
              if (XR(E.current)) {
                E.current && E.current.classList.remove(Vn.modifiers.expanded);
                let j = E.current && E.current.parentElement;
                for (; j && !j.classList.contains(GR.modifiers.sticky); )
                  j = j.parentElement;
                _(!1), j && (d += j.scrollHeight);
              }
              B.scrollTo(0, K.offsetTop - d);
            }
            K.focus(), window.history.pushState("", "", q.currentTarget.href), q.preventDefault(), R(U);
          }
          M && M(q);
        },
        isActive: V || w === U,
        children: D(A.props.children)
      });
    } else {
      if (A.type === h.Fragment)
        return D(A.props.children);
      if (A.type === mc)
        return h.cloneElement(A, { children: D(A.props.children) });
    }
    return A;
  }) : F;
  return h.createElement(
    "nav",
    Object.assign({ className: $(Vn.jumpLinks, t && Vn.modifiers.center, n && Vn.modifiers.vertical, ut(u, Vn), S && Vn.modifiers.expanded, g), "aria-label": s, ref: E }, b),
    h.createElement(
      "div",
      { className: Vn.jumpLinksMain },
      h.createElement(
        "div",
        { className: $(`${Vn.jumpLinks}__header`) },
        u && h.createElement(
          "div",
          { className: Vn.jumpLinksToggle },
          h.createElement(
            z,
            { variant: "plain", onClick: () => _(!S), "aria-label": f, "aria-expanded": S },
            h.createElement(
              "span",
              { className: Vn.jumpLinksToggleIcon },
              h.createElement(Nn, null)
            ),
            i && h.createElement(
              "span",
              { className: $(Vn.jumpLinksToggleText) },
              " ",
              i,
              " "
            )
          )
        ),
        i && m && h.createElement("div", { className: $(Vn.jumpLinksLabel) }, i)
      ),
      h.createElement("ul", { className: Vn.jumpLinksList, role: "list" }, D(r))
    )
  );
};
Lx.displayName = "JumpLinks";
const Dn = {
  button: "pf-v5-c-button",
  label: "pf-v5-c-label",
  labelActions: "pf-v5-c-label__actions",
  labelContent: "pf-v5-c-label__content",
  labelIcon: "pf-v5-c-label__icon",
  labelText: "pf-v5-c-label__text",
  modifiers: {
    compact: "pf-m-compact",
    blue: "pf-m-blue",
    green: "pf-m-green",
    orange: "pf-m-orange",
    red: "pf-m-red",
    purple: "pf-m-purple",
    cyan: "pf-m-cyan",
    gold: "pf-m-gold",
    outline: "pf-m-outline",
    overflow: "pf-m-overflow",
    add: "pf-m-add",
    editable: "pf-m-editable",
    editableActive: "pf-m-editable-active",
    disabled: "pf-m-disabled"
  },
  themeDark: "pf-v5-theme-dark"
}, YR = {
  button: "pf-v5-c-button",
  labelGroup: "pf-v5-c-label-group",
  labelGroupClose: "pf-v5-c-label-group__close",
  labelGroupLabel: "pf-v5-c-label-group__label",
  labelGroupList: "pf-v5-c-label-group__list",
  labelGroupListItem: "pf-v5-c-label-group__list-item",
  labelGroupMain: "pf-v5-c-label-group__main",
  labelGroupTextarea: "pf-v5-c-label-group__textarea",
  modifiers: {
    category: "pf-m-category",
    vertical: "pf-m-vertical",
    editable: "pf-m-editable",
    textarea: "pf-m-textarea"
  }
}, JR = {
  name: "--pf-v5-c-label__text--MaxWidth",
  value: "100%",
  var: "var(--pf-v5-c-label__text--MaxWidth)"
}, ZR = {
  blue: Dn.modifiers.blue,
  cyan: Dn.modifiers.cyan,
  green: Dn.modifiers.green,
  orange: Dn.modifiers.orange,
  purple: Dn.modifiers.purple,
  red: Dn.modifiers.red,
  gold: Dn.modifiers.gold,
  grey: ""
}, pn = (e) => {
  var { children: t, className: n = "", color: r = "grey", variant: i = "filled", isCompact: s = !1, isDisabled: o = !1, isEditable: l = !1, editableProps: c, textMaxWidth: d, tooltipPosition: u, icon: p, onClose: m, onClick: f, onEditCancel: g, onEditComplete: b, closeBtn: v, closeBtnAriaLabel: y, closeBtnProps: x, href: w, isOverflowLabel: R, render: S } = e, _ = oe(e, ["children", "className", "color", "variant", "isCompact", "isDisabled", "isEditable", "editableProps", "textMaxWidth", "tooltipPosition", "icon", "onClose", "onClick", "onEditCancel", "onEditComplete", "closeBtn", "closeBtnAriaLabel", "closeBtnProps", "href", "isOverflowLabel", "render"]);
  const [O, E] = N(!1), [T, I] = N(t), k = h.useRef(), P = h.useRef();
  h.useEffect(() => (document.addEventListener("mousedown", D), document.addEventListener("keydown", F), () => {
    document.removeEventListener("mousedown", D), document.removeEventListener("keydown", F);
  })), h.useEffect(() => {
    f && w ? console.warn("Link labels cannot have onClick passed, this results in invalid HTML. Please remove either the href or onClick prop.") : f && l && console.warn("Editable labels cannot have onClick passed, clicking starts the label edit process. Please remove either the isEditable or onClick prop.");
  }, [f, w, l]);
  const D = (Z) => {
    O && P && P.current && !P.current.contains(Z.target) && (P.current.value && b && b(Z, P.current.value), E(!1));
  }, F = (Z) => {
    var me, ne;
    const Oe = Z.key;
    if (!(!O && (!k || !k.current || !k.current.contains(Z.target)) || O && (!P || !P.current || !P.current.contains(Z.target))) && (O && (Oe === "Enter" || Oe === "Tab") && (Z.preventDefault(), Z.stopImmediatePropagation(), P.current.value && b && b(Z, P.current.value), E(!1), (me = k?.current) === null || me === void 0 || me.focus()), O && Oe === "Escape" && (Z.preventDefault(), Z.stopImmediatePropagation(), P.current.value && (P.current.value = t, g && g(Z, t)), E(!1), (ne = k?.current) === null || ne === void 0 || ne.focus()), !O && Oe === "Enter")) {
      Z.preventDefault(), Z.stopImmediatePropagation(), E(!0);
      const Pe = Z.target, $e = document.createRange(), fe = window.getSelection();
      $e.selectNodeContents(Pe), $e.collapse(!1), fe.removeAllRanges(), fe.addRange($e);
    }
  }, A = (w || f) && o, M = h.createElement(
    z,
    Object.assign({ type: "button", variant: "plain", onClick: m, "aria-label": y || `Close ${t}` }, A && { isDisabled: !0 }, x),
    h.createElement(Oa, null)
  ), V = h.createElement("span", { className: $(Dn.labelActions) }, v || M), U = h.createRef(), G = h.useRef(), [q, L] = h.useState(!1);
  dc(() => {
    const Z = l ? k : U;
    O || L(Z.current && Z.current.offsetWidth < Z.current.scrollWidth);
  }, [O]);
  const K = h.createElement(
    h.Fragment,
    null,
    p && h.createElement("span", { className: $(Dn.labelIcon) }, p),
    h.createElement("span", Object.assign({ ref: U, className: $(Dn.labelText) }, d && {
      style: {
        [JR.name]: d
      }
    }), t)
  );
  h.useEffect(() => {
    O && P && P.current && P.current.focus();
  }, [P, O]);
  const B = () => {
    I(P.current.value);
  };
  let j = "span";
  w ? j = "a" : (l || f && !R) && (j = "button");
  const W = {
    type: "button",
    onClick: f
  }, Q = j === "button", te = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({ className: $(Dn.labelContent) }, q && { tabIndex: 0 }), w && { href: w }), w && o && { onClick: (Z) => Z.preventDefault() }), Q && W), l && Object.assign({ ref: k, onClick: (Z) => {
    E(!0), Z.stopPropagation();
  } }, c)), A && Q && { disabled: !0 }), A && w && { tabindex: -1, "aria-disabled": !0 });
  let ie = h.createElement(j, Object.assign({}, te), K);
  S ? ie = h.createElement(
    h.Fragment,
    null,
    q && h.createElement(Yt, { triggerRef: G, content: t, position: u }),
    S({
      className: Dn.labelContent,
      content: K,
      componentRef: G
    })
  ) : q && (ie = h.createElement(Yt, { content: t, position: u }, ie));
  const ce = R ? "button" : "span";
  return h.createElement(
    ce,
    Object.assign({}, _, { className: $(Dn.label, A && Dn.modifiers.disabled, ZR[r], i === "outline" && Dn.modifiers.outline, R && Dn.modifiers.overflow, s && Dn.modifiers.compact, l && YR.modifiers.editable, O && Dn.modifiers.editableActive, n), onClick: R ? f : void 0 }),
    !O && ie,
    !O && m && V,
    O && h.createElement("input", Object.assign({ className: $(Dn.labelContent), type: "text", id: "editable-input", ref: P, value: T, onChange: B }, c))
  );
};
pn.displayName = "Label";
const Ya = {
  list: "pf-v5-c-list",
  listItem: "pf-v5-c-list__item",
  listItemIcon: "pf-v5-c-list__item-icon",
  modifiers: {
    iconLg: "pf-m-icon-lg",
    plain: "pf-m-plain",
    inline: "pf-m-inline",
    bordered: "pf-m-bordered"
  }
};
var bf;
(function(e) {
  e.number = "1", e.lowercaseLetter = "a", e.uppercaseLetter = "A", e.lowercaseRomanNumber = "i", e.uppercaseRomanNumber = "I";
})(bf || (bf = {}));
var hc;
(function(e) {
  e.inline = "inline";
})(hc || (hc = {}));
var ou;
(function(e) {
  e.ol = "ol", e.ul = "ul";
})(ou || (ou = {}));
const lu = (e) => {
  var { className: t = "", children: n = null, variant: r = null, isBordered: i = !1, isPlain: s = !1, iconSize: o = "default", type: l = bf.number, ref: c = null, component: d = ou.ul } = e, u = oe(e, ["className", "children", "variant", "isBordered", "isPlain", "iconSize", "type", "ref", "component"]);
  return d === ou.ol ? h.createElement("ol", Object.assign({ ref: c, type: l }, s && { role: "list" }, u, { className: $(Ya.list, r && Ya.modifiers[r], i && Ya.modifiers.bordered, s && Ya.modifiers.plain, o && o === "large" && Ya.modifiers.iconLg, t) }), n) : h.createElement("ul", Object.assign({ ref: c }, s && { role: "list" }, u, { className: $(Ya.list, r && Ya.modifiers[r], i && Ya.modifiers.bordered, s && Ya.modifiers.plain, o && o === "large" && Ya.modifiers.iconLg, t) }), n);
};
lu.displayName = "List";
const zh = (e) => {
  var { icon: t = null, children: n = null } = e, r = oe(e, ["icon", "children"]);
  return h.createElement(
    "li",
    Object.assign({ className: $(t && Ya.listItem) }, r),
    t && h.createElement("span", { className: $(Ya.listItemIcon) }, t),
    n
  );
};
zh.displayName = "ListItem";
const QR = {
  name: "EyeSlashIcon",
  height: 512,
  width: 640,
  svgPath: "M320 400c-75.85 0-137.25-58.71-142.9-133.11L72.2 185.82c-13.79 17.3-26.48 35.59-36.72 55.59a32.35 32.35 0 0 0 0 29.19C89.71 376.41 197.07 448 320 448c26.91 0 52.87-4 77.89-10.46L346 397.39a144.13 144.13 0 0 1-26 2.61zm313.82 58.1l-110.55-85.44a331.25 331.25 0 0 0 81.25-102.07 32.35 32.35 0 0 0 0-29.19C550.29 135.59 442.93 64 320 64a308.15 308.15 0 0 0-147.32 37.7L45.46 3.37A16 16 0 0 0 23 6.18L3.37 31.45A16 16 0 0 0 6.18 53.9l588.36 454.73a16 16 0 0 0 22.46-2.81l19.64-25.27a16 16 0 0 0-2.82-22.45zm-183.72-142l-39.3-30.38A94.75 94.75 0 0 0 416 256a94.76 94.76 0 0 0-121.31-92.21A47.65 47.65 0 0 1 304 192a46.64 46.64 0 0 1-1.54 10l-73.61-56.89A142.31 142.31 0 0 1 320 112a143.92 143.92 0 0 1 144 144c0 21.63-5.29 41.79-13.9 60.11z",
  yOffset: 0,
  xOffset: 0
}, eA = Qe(QR), tA = {
  name: "EyeIcon",
  height: 512,
  width: 576,
  svgPath: "M572.52 241.4C518.29 135.59 410.93 64 288 64S57.68 135.64 3.48 241.41a32.35 32.35 0 0 0 0 29.19C57.71 376.41 165.07 448 288 448s230.32-71.64 284.52-177.41a32.35 32.35 0 0 0 0-29.19zM288 400a144 144 0 1 1 144-144 143.93 143.93 0 0 1-144 144zm0-240a95.31 95.31 0 0 0-25.31 3.79 47.85 47.85 0 0 1-66.9 66.9A95.78 95.78 0 1 0 288 160z",
  yOffset: 0,
  xOffset: 0
}, nA = Qe(tA), zi = {
  button: "pf-v5-c-button",
  contextSelector: "pf-v5-c-context-selector",
  dropdown: "pf-v5-c-dropdown",
  masthead: "pf-v5-c-masthead",
  mastheadBrand: "pf-v5-c-masthead__brand",
  mastheadContent: "pf-v5-c-masthead__content",
  mastheadMain: "pf-v5-c-masthead__main",
  mastheadToggle: "pf-v5-c-masthead__toggle",
  menuToggle: "pf-v5-c-menu-toggle",
  modifiers: {
    light_200: "pf-m-light-200",
    light: "pf-m-light",
    plain: "pf-m-plain",
    resizeObserver: "pf-m-resize-observer",
    fullHeight: "pf-m-full-height",
    horizontal: "pf-m-horizontal",
    displayStack: "pf-m-display-stack",
    displayInline: "pf-m-display-inline",
    insetNone: "pf-m-inset-none",
    insetSm: "pf-m-inset-sm",
    insetMd: "pf-m-inset-md",
    insetLg: "pf-m-inset-lg",
    insetXl: "pf-m-inset-xl",
    inset_2xl: "pf-m-inset-2xl",
    displayStackOnSm: "pf-m-display-stack-on-sm",
    displayInlineOnSm: "pf-m-display-inline-on-sm",
    insetNoneOnSm: "pf-m-inset-none-on-sm",
    insetSmOnSm: "pf-m-inset-sm-on-sm",
    insetMdOnSm: "pf-m-inset-md-on-sm",
    insetLgOnSm: "pf-m-inset-lg-on-sm",
    insetXlOnSm: "pf-m-inset-xl-on-sm",
    inset_2xlOnSm: "pf-m-inset-2xl-on-sm",
    displayStackOnMd: "pf-m-display-stack-on-md",
    displayInlineOnMd: "pf-m-display-inline-on-md",
    insetNoneOnMd: "pf-m-inset-none-on-md",
    insetSmOnMd: "pf-m-inset-sm-on-md",
    insetMdOnMd: "pf-m-inset-md-on-md",
    insetLgOnMd: "pf-m-inset-lg-on-md",
    insetXlOnMd: "pf-m-inset-xl-on-md",
    inset_2xlOnMd: "pf-m-inset-2xl-on-md",
    displayStackOnLg: "pf-m-display-stack-on-lg",
    displayInlineOnLg: "pf-m-display-inline-on-lg",
    insetNoneOnLg: "pf-m-inset-none-on-lg",
    insetSmOnLg: "pf-m-inset-sm-on-lg",
    insetMdOnLg: "pf-m-inset-md-on-lg",
    insetLgOnLg: "pf-m-inset-lg-on-lg",
    insetXlOnLg: "pf-m-inset-xl-on-lg",
    inset_2xlOnLg: "pf-m-inset-2xl-on-lg",
    displayStackOnXl: "pf-m-display-stack-on-xl",
    displayInlineOnXl: "pf-m-display-inline-on-xl",
    insetNoneOnXl: "pf-m-inset-none-on-xl",
    insetSmOnXl: "pf-m-inset-sm-on-xl",
    insetMdOnXl: "pf-m-inset-md-on-xl",
    insetLgOnXl: "pf-m-inset-lg-on-xl",
    insetXlOnXl: "pf-m-inset-xl-on-xl",
    inset_2xlOnXl: "pf-m-inset-2xl-on-xl",
    displayStackOn_2xl: "pf-m-display-stack-on-2xl",
    displayInlineOn_2xl: "pf-m-display-inline-on-2xl",
    insetNoneOn_2xl: "pf-m-inset-none-on-2xl",
    insetSmOn_2xl: "pf-m-inset-sm-on-2xl",
    insetMdOn_2xl: "pf-m-inset-md-on-2xl",
    insetLgOn_2xl: "pf-m-inset-lg-on-2xl",
    insetXlOn_2xl: "pf-m-inset-xl-on-2xl",
    inset_2xlOn_2xl: "pf-m-inset-2xl-on-2xl"
  },
  nav: "pf-v5-c-nav",
  page: "pf-v5-c-page",
  themeDark: "pf-v5-theme-dark",
  toolbar: "pf-v5-c-toolbar",
  toolbarContentSection: "pf-v5-c-toolbar__content-section",
  toolbarExpandableContent: "pf-v5-c-toolbar__expandable-content"
}, aA = {
  isManagedSidebar: !1,
  isSidebarOpen: !1,
  onSidebarToggle: () => null,
  width: null,
  height: null,
  getBreakpoint: d1,
  getVerticalBreakpoint: c1
}, Li = h.createContext(aA), rA = Li.Provider, Nx = Li.Consumer, Dx = (e) => {
  var { children: t, className: n, backgroundColor: r = "dark", display: i = {
    md: "inline"
  }, inset: s } = e, o = oe(e, ["children", "className", "backgroundColor", "display", "inset"]);
  const { width: l, getBreakpoint: c } = h.useContext(Li);
  return h.createElement("header", Object.assign({ className: $(zi.masthead, ut(i, zi, "display-", c(l)), ut(s, zi, "", c(l)), r === "light" && zi.modifiers.light, r === "light200" && zi.modifiers.light_200, n) }, o), t);
};
Dx.displayName = "Masthead";
const Mx = (e) => {
  var { children: t, className: n, component: r } = e, i = oe(e, ["children", "className", "component"]);
  let s = r;
  return r || (i?.href !== void 0 ? s = "a" : s = "span"), h.createElement(s, Object.assign({ className: $(zi.mastheadBrand, n) }, s === "a" && { tabIndex: 0 }, i), t);
};
Mx.displayName = "MastheadBrand";
const Fx = (e) => {
  var { children: t, className: n } = e, r = oe(e, ["children", "className"]);
  return h.createElement("div", Object.assign({ className: $(zi.mastheadContent, n) }, r), t);
};
Fx.displayName = "MastheadContent";
const $x = (e) => {
  var { children: t, className: n } = e, r = oe(e, ["children", "className"]);
  return h.createElement("span", Object.assign({ className: $(zi.mastheadToggle, n) }, r), t);
};
$x.displayName = "MastheadToggle";
const gn = {
  dirRtl: "pf-v5-m-dir-rtl",
  divider: "pf-v5-c-divider",
  menu: "pf-v5-c-menu",
  menuContent: "pf-v5-c-menu__content",
  menuItem: "pf-v5-c-menu__item",
  menuItemToggleIcon: "pf-v5-c-menu__item-toggle-icon",
  menuListItem: "pf-v5-c-menu__list-item",
  modifiers: {
    flyout: "pf-m-flyout",
    top: "pf-m-top",
    left: "pf-m-left",
    current: "pf-m-current",
    drillUp: "pf-m-drill-up",
    horizontal: "pf-m-horizontal",
    tertiary: "pf-m-tertiary",
    horizontalSubnav: "pf-m-horizontal-subnav",
    light: "pf-m-light",
    scrollable: "pf-m-scrollable",
    overflowHidden: "pf-m-overflow-hidden",
    expandable: "pf-m-expandable",
    expanded: "pf-m-expanded",
    drilldown: "pf-m-drilldown",
    hover: "pf-m-hover",
    start: "pf-m-start"
  },
  nav: "pf-v5-c-nav",
  navItem: "pf-v5-c-nav__item",
  navLink: "pf-v5-c-nav__link",
  navList: "pf-v5-c-nav__list",
  navScrollButton: "pf-v5-c-nav__scroll-button",
  navSection: "pf-v5-c-nav__section",
  navSectionTitle: "pf-v5-c-nav__section-title",
  navSubnav: "pf-v5-c-nav__subnav",
  navToggle: "pf-v5-c-nav__toggle",
  navToggleIcon: "pf-v5-c-nav__toggle-icon",
  themeDark: "pf-v5-theme-dark"
}, iA = {}, gc = h.createContext(iA);
class Do extends h.Component {
  constructor() {
    super(...arguments), this.state = {
      isScrollable: !1,
      ouiaStateId: cr(Do.displayName, this.props.variant),
      flyoutRef: null
    }, this.navRef = h.createRef();
  }
  // Callback from NavItem
  onSelect(t, n, r, i, s, o) {
    s && t.preventDefault(), this.props.onSelect(t, { groupId: n, itemId: r, to: i }), o && o(t, r, n, i);
  }
  // Callback from NavExpandable
  onToggle(t, n, r) {
    this.props.onToggle(t, {
      groupId: n,
      isExpanded: r
    });
  }
  render() {
    const t = this.props, {
      "aria-label": n,
      children: r,
      className: i,
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      onSelect: s,
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      onToggle: o,
      theme: l,
      ouiaId: c,
      ouiaSafe: d,
      variant: u
    } = t, p = oe(t, ["aria-label", "children", "className", "onSelect", "onToggle", "theme", "ouiaId", "ouiaSafe", "variant"]), m = ["horizontal", "tertiary"].includes(u);
    return h.createElement(
      gc.Provider,
      { value: {
        onSelect: (f, g, b, v, y, x) => this.onSelect(f, g, b, v, y, x),
        onToggle: (f, g, b) => this.onToggle(f, g, b),
        updateIsScrollable: (f) => this.setState({ isScrollable: f }),
        isHorizontal: ["horizontal", "tertiary", "horizontal-subnav"].includes(u),
        flyoutRef: this.state.flyoutRef,
        setFlyoutRef: (f) => this.setState({ flyoutRef: f }),
        navRef: this.navRef
      } },
      h.createElement("nav", Object.assign({ className: $(gn.nav, l === "light" && gn.modifiers.light, m && gn.modifiers.horizontal, u === "tertiary" && gn.modifiers.tertiary, u === "horizontal-subnav" && gn.modifiers.horizontalSubnav, this.state.isScrollable && gn.modifiers.scrollable, i), "aria-label": n || (["tertiary", "horizontal-subnav"].includes(u) ? "Local" : "Global"), ref: this.navRef }, Yn(Do.displayName, c !== void 0 ? c : this.state.ouiaStateId, d), p), r)
    );
  }
}
Do.displayName = "Nav";
Do.defaultProps = {
  onSelect: () => {
  },
  onToggle: () => {
  },
  theme: "dark",
  ouiaSafe: !0
};
const Ot = {
  avatar: "pf-v5-c-avatar",
  brand: "pf-v5-c-brand",
  button: "pf-v5-c-button",
  contextSelector: "pf-v5-c-context-selector",
  dirRtl: "pf-v5-m-dir-rtl",
  drawer: "pf-v5-c-drawer",
  masthead: "pf-v5-c-masthead",
  modifiers: {
    light: "pf-m-light",
    menu: "pf-m-menu",
    hidden: "pf-m-hidden",
    hiddenOnSm: "pf-m-hidden-on-sm",
    visibleOnSm: "pf-m-visible-on-sm",
    hiddenOnMd: "pf-m-hidden-on-md",
    visibleOnMd: "pf-m-visible-on-md",
    hiddenOnLg: "pf-m-hidden-on-lg",
    visibleOnLg: "pf-m-visible-on-lg",
    hiddenOnXl: "pf-m-hidden-on-xl",
    visibleOnXl: "pf-m-visible-on-xl",
    hiddenOn_2xl: "pf-m-hidden-on-2xl",
    visibleOn_2xl: "pf-m-visible-on-2xl",
    read: "pf-m-read",
    selected: "pf-m-selected",
    unread: "pf-m-unread",
    attention: "pf-m-attention",
    expanded: "pf-m-expanded",
    collapsed: "pf-m-collapsed",
    pageInsets: "pf-m-page-insets",
    insetNone: "pf-m-inset-none",
    fill: "pf-m-fill",
    noFill: "pf-m-no-fill",
    limitWidth: "pf-m-limit-width",
    alignCenter: "pf-m-align-center",
    overflowScroll: "pf-m-overflow-scroll",
    shadowBottom: "pf-m-shadow-bottom",
    shadowTop: "pf-m-shadow-top",
    stickyTop: "pf-m-sticky-top",
    stickyBottom: "pf-m-sticky-bottom",
    stickyTopOnSmHeight: "pf-m-sticky-top-on-sm-height",
    stickyBottomOnSmHeight: "pf-m-sticky-bottom-on-sm-height",
    stickyTopOnMdHeight: "pf-m-sticky-top-on-md-height",
    stickyBottomOnMdHeight: "pf-m-sticky-bottom-on-md-height",
    stickyTopOnLgHeight: "pf-m-sticky-top-on-lg-height",
    stickyBottomOnLgHeight: "pf-m-sticky-bottom-on-lg-height",
    stickyTopOnXlHeight: "pf-m-sticky-top-on-xl-height",
    stickyBottomOnXlHeight: "pf-m-sticky-bottom-on-xl-height",
    stickyTopOn_2xlHeight: "pf-m-sticky-top-on-2xl-height",
    stickyBottomOn_2xlHeight: "pf-m-sticky-bottom-on-2xl-height",
    light_100: "pf-m-light-100",
    dark_100: "pf-m-dark-100",
    dark_200: "pf-m-dark-200",
    padding: "pf-m-padding",
    noPadding: "pf-m-no-padding",
    paddingOnSm: "pf-m-padding-on-sm",
    noPaddingOnSm: "pf-m-no-padding-on-sm",
    paddingOnMd: "pf-m-padding-on-md",
    noPaddingOnMd: "pf-m-no-padding-on-md",
    paddingOnLg: "pf-m-padding-on-lg",
    noPaddingOnLg: "pf-m-no-padding-on-lg",
    paddingOnXl: "pf-m-padding-on-xl",
    noPaddingOnXl: "pf-m-no-padding-on-xl",
    paddingOn_2xl: "pf-m-padding-on-2xl",
    noPaddingOn_2xl: "pf-m-no-padding-on-2xl",
    light_200: "pf-m-light-200"
  },
  nav: "pf-v5-c-nav",
  notificationBadge: "pf-v5-c-notification-badge",
  page: "pf-v5-c-page",
  pageDrawer: "pf-v5-c-page__drawer",
  pageHeader: "pf-v5-c-page__header",
  pageHeaderBrand: "pf-v5-c-page__header-brand",
  pageHeaderBrandLink: "pf-v5-c-page__header-brand-link",
  pageHeaderBrandToggle: "pf-v5-c-page__header-brand-toggle",
  pageHeaderNav: "pf-v5-c-page__header-nav",
  pageHeaderTools: "pf-v5-c-page__header-tools",
  pageHeaderToolsGroup: "pf-v5-c-page__header-tools-group",
  pageHeaderToolsItem: "pf-v5-c-page__header-tools-item",
  pageMain: "pf-v5-c-page__main",
  pageMainBody: "pf-v5-c-page__main-body",
  pageMainBreadcrumb: "pf-v5-c-page__main-breadcrumb",
  pageMainDrawer: "pf-v5-c-page__main-drawer",
  pageMainGroup: "pf-v5-c-page__main-group",
  pageMainNav: "pf-v5-c-page__main-nav",
  pageMainSection: "pf-v5-c-page__main-section",
  pageMainSubnav: "pf-v5-c-page__main-subnav",
  pageMainTabs: "pf-v5-c-page__main-tabs",
  pageMainWizard: "pf-v5-c-page__main-wizard",
  pageSidebar: "pf-v5-c-page__sidebar",
  pageSidebarBody: "pf-v5-c-page__sidebar-body",
  themeDark: "pf-v5-theme-dark"
}, sA = {
  isSidebarOpen: !0
}, qh = h.createContext(sA), jx = (e) => {
  var { className: t = "", children: n, isSidebarOpen: r = !0, theme: i = "dark", id: s = "page-sidebar" } = e, o = oe(e, ["className", "children", "isSidebarOpen", "theme", "id"]);
  return h.createElement(Nx, null, ({ isManagedSidebar: l, isSidebarOpen: c }) => {
    const d = l ? c : r;
    return h.createElement(
      "div",
      Object.assign({ id: s, className: $(Ot.pageSidebar, i === "light" && Ot.modifiers.light, d && Ot.modifiers.expanded, !d && Ot.modifiers.collapsed, t), "aria-hidden": !d }, o),
      h.createElement(qh.Provider, { value: { isSidebarOpen: d } }, n)
    );
  });
};
jx.displayName = "PageSidebar";
class Xu extends h.Component {
  constructor() {
    super(...arguments), this.direction = "ltr", this.state = {
      scrollViewAtStart: !1,
      scrollViewAtEnd: !1
    }, this.navList = h.createRef(), this.observer = () => {
    }, this.handleScrollButtons = () => {
      const t = this.navList.current;
      if (t) {
        const n = fi(t, t.firstChild), r = fi(t, t.lastChild);
        this.setState({
          scrollViewAtStart: n,
          scrollViewAtEnd: r
        }), this.context.updateIsScrollable(!n || !r);
      }
    }, this.scrollBack = () => {
      const t = this.navList.current;
      if (t) {
        const n = Array.from(t.children);
        let r, i;
        for (let s = 0; s < n.length && !r; s++)
          fi(t, n[s]) && (r = n[s], i = n[s - 1]);
        i && (this.direction === "ltr" ? t.scrollLeft -= i.scrollWidth : t.scrollLeft += i.scrollWidth), this.handleScrollButtons();
      }
    }, this.scrollForward = () => {
      const t = this.navList.current;
      if (t) {
        const n = Array.from(t.children);
        let r, i;
        for (let s = n.length - 1; s >= 0 && !r; s--)
          fi(t, n[s]) && (r = n[s], i = n[s + 1]);
        i && (this.direction === "ltr" ? t.scrollLeft += i.scrollWidth : t.scrollLeft -= i.scrollWidth), this.handleScrollButtons();
      }
    };
  }
  componentDidMount() {
    this.observer = Wo(this.navList.current, this.handleScrollButtons, !0), this.direction = Ji(this.navList.current), this.handleScrollButtons();
  }
  componentWillUnmount() {
    this.observer();
  }
  componentDidUpdate() {
    this.direction = Ji(this.navList.current);
  }
  render() {
    const t = this.props, { children: n, className: r, ariaLeftScroll: i, ariaRightScroll: s, backScrollAriaLabel: o, forwardScrollAriaLabel: l } = t, c = oe(t, ["children", "className", "ariaLeftScroll", "ariaRightScroll", "backScrollAriaLabel", "forwardScrollAriaLabel"]), { scrollViewAtStart: d, scrollViewAtEnd: u } = this.state;
    return h.createElement(gc.Consumer, null, ({ isHorizontal: p }) => h.createElement(qh.Consumer, null, ({ isSidebarOpen: m }) => h.createElement(
      h.Fragment,
      null,
      p && h.createElement(
        "button",
        { className: $(gn.navScrollButton), "aria-label": o || i, onClick: this.scrollBack, disabled: d, tabIndex: m ? null : -1 },
        h.createElement(Hs, null)
      ),
      h.createElement("ul", Object.assign({ ref: this.navList, className: $(gn.navList, r), onScroll: this.handleScrollButtons, role: "list" }, c), n),
      p && h.createElement(
        "button",
        { className: $(gn.navScrollButton), "aria-label": l || s, onClick: this.scrollForward, disabled: u, tabIndex: m ? null : -1 },
        h.createElement(Nn, null)
      )
    )));
  }
}
Xu.displayName = "NavList";
Xu.contextType = gc;
Xu.defaultProps = {
  ariaLeftScroll: "Scroll left",
  backScrollAriaLabel: "Scroll back",
  ariaRightScroll: "Scroll right",
  forwardScrollAriaLabel: "Scroll foward"
};
const vf = (e) => {
  var { title: t, children: n = null, className: r = "", id: i = Si() } = e, s = oe(e, ["title", "children", "className", "id"]);
  !t && !s["aria-label"] && console.warn("For accessibility reasons an aria-label should be specified on nav groups if a title isn't");
  const o = t ? i : void 0;
  return h.createElement(
    "section",
    Object.assign({ className: $(gn.navSection, r), "aria-labelledby": o }, s),
    t && h.createElement("h2", { className: $(gn.navSectionTitle), id: i }, t),
    h.createElement("ul", { className: $(gn.navList, r), role: "list" }, n)
  );
};
vf.displayName = "NavGroup";
const Gh = (e) => {
  var { children: t, styleChildren: n = !0, className: r, to: i, isActive: s = !1, groupId: o = null, itemId: l = null, preventDefault: c = !1, onClick: d, component: u = "a", flyout: p, onShowFlyout: m, ouiaId: f, ouiaSafe: g, zIndex: b = 9999, hasNavLinkWrapper: v } = e, y = oe(e, ["children", "styleChildren", "className", "to", "isActive", "groupId", "itemId", "preventDefault", "onClick", "component", "flyout", "onShowFlyout", "ouiaId", "ouiaSafe", "zIndex", "hasNavLinkWrapper"]);
  const { flyoutRef: x, setFlyoutRef: w, navRef: R } = h.useContext(gc), { isSidebarOpen: S } = h.useContext(qh), [_, O] = h.useState(null), [E, T] = h.useState(!1), I = h.useRef(), k = I === x, P = h.useRef(), D = p !== void 0, F = D ? "button" : u;
  i && D && console.error('NavItem cannot have both "to" and "flyout" props.');
  const A = (ce, Z) => {
    (!k || Z) && ce ? w(I) : (k || Z) && !ce && w(null), m && ce && m();
  }, M = (ce) => {
    const Z = ce.target.closest(`.${gn.navItem}.pf-m-flyout`);
    D && !k ? A(!0) : x !== null && !Z && w(null);
  }, V = (ce) => {
    ce.target.closest(".pf-m-flyout") || (D ? A(!1, !0) : x !== null && w(null));
  }, U = (ce) => {
    var Z, me;
    const ne = ce.key, Oe = ce.target;
    (ne === " " || ne === "Enter" || ne === "ArrowRight") && D && (!((Z = I?.current) === null || Z === void 0) && Z.contains(Oe)) && (ce.stopPropagation(), ce.preventDefault(), k || (A(!0), O(Oe))), (ne === "Escape" || ne === "ArrowLeft") && ((me = P?.current) === null || me === void 0 ? void 0 : me.querySelectorAll(`.${gn.menu}`).length) === 1 && k && (ce.stopPropagation(), ce.preventDefault(), A(!1));
  };
  h.useEffect(() => (D && window.addEventListener("click", V), () => {
    D && window.removeEventListener("click", V);
  }), []), h.useEffect(() => {
    _ && (k ? Array.from(P.current.getElementsByTagName("UL")[0].children).filter((Z) => !(Z.classList.contains("pf-m-disabled") || Z.classList.contains(gn.divider)))[0].firstChild.focus() : _.focus());
  }, [k, _]);
  const G = h.createElement(
    "span",
    { className: $(gn.navToggle) },
    h.createElement(
      "span",
      { className: $(gn.navToggleIcon) },
      h.createElement(Nn, { "aria-hidden": !0 })
    )
  ), q = {
    "aria-haspopup": "menu",
    "aria-expanded": k
  }, L = S ? null : -1, K = (ce) => {
    const Z = c || !i;
    return h.createElement(
      F,
      Object.assign({ href: i, onClick: (me) => ce.onSelect(me, o, l, i, Z, d), className: $(gn.navLink, s && gn.modifiers.current, E && gn.modifiers.hover, r), "aria-current": s ? "page" : null, tabIndex: L }, D && Object.assign({}, q), y),
      v ? h.createElement("span", { className: $(`${gn.nav}__link-text`) }, t) : t,
      p && G
    );
  }, B = (ce, Z) => h.cloneElement(Z, Object.assign(Object.assign({ onClick: (me) => ce.onSelect(me, o, l, i, c, d), "aria-current": s ? "page" : null }, n && {
    className: $(gn.navLink, s && gn.modifiers.current, Z.props && Z.props.className)
  }), { tabIndex: Z.props.tabIndex || L, children: D ? h.createElement(
    h.Fragment,
    null,
    Z.props.children,
    G
  ) : Z.props.children })), j = Ka(Gh.displayName, f, g), W = () => {
    T(!0);
  }, Q = () => {
    T(!1);
  }, te = h.createElement(Qr, { triggerRef: I, popper: h.createElement("div", { ref: P, onMouseEnter: W, onMouseLeave: Q }, p), popperRef: P, placement: "right-start", isVisible: k, onDocumentKeyDown: U, zIndex: b, appendTo: R?.current });
  return h.createElement(
    h.Fragment,
    null,
    h.createElement(
      "li",
      Object.assign({ onMouseOver: M, className: $(gn.navItem, D && gn.modifiers.flyout, r), ref: I }, j),
      h.createElement(gc.Consumer, null, (ce) => h.isValidElement(t) ? B(ce, t) : K(ce))
    ),
    p && te
  );
};
Gh.displayName = "NavItem";
const Pt = (e) => {
  var { children: t, className: n = "", isVisited: r = !1 } = e, i = oe(e, ["children", "className", "isVisited"]);
  return h.createElement("div", Object.assign({}, i, { className: $(Gd.content, r && Gd.modifiers.visited, n) }), t);
};
Pt.displayName = "TextContent";
var Wt;
(function(e) {
  e.h1 = "h1", e.h2 = "h2", e.h3 = "h3", e.h4 = "h4", e.h5 = "h5", e.h6 = "h6", e.p = "p", e.a = "a", e.small = "small", e.blockquote = "blockquote", e.pre = "pre";
})(Wt || (Wt = {}));
const tt = (e) => {
  var { children: t = null, className: n = "", component: r = Wt.p, isVisitedLink: i = !1, ouiaId: s, ouiaSafe: o = !0 } = e, l = oe(e, ["children", "className", "component", "isVisitedLink", "ouiaId", "ouiaSafe"]);
  const c = r, d = Ka(tt.displayName, s, o);
  return h.createElement(c, Object.assign({}, d, l, { "data-pf-content": !0, className: $(i && r === Wt.a && Gd.modifiers.visited, n) }), t);
};
tt.displayName = "Text";
var yf;
(function(e) {
  e.ul = "ul", e.ol = "ol", e.dl = "dl";
})(yf || (yf = {}));
const Bx = (e) => {
  var { children: t = null, className: n = "", component: r = yf.ul, isPlain: i = !1 } = e, s = oe(e, ["children", "className", "component", "isPlain"]);
  const o = r;
  return h.createElement(o, Object.assign({}, s, { className: $(i && Gd.modifiers.plain, n) }), t);
};
Bx.displayName = "TextList";
var Cf;
(function(e) {
  e.li = "li", e.dt = "dt", e.dd = "dd";
})(Cf || (Cf = {}));
const Ux = (e) => {
  var { children: t = null, className: n = "", component: r = Cf.li } = e, i = oe(e, ["children", "className", "component"]);
  const s = r;
  return h.createElement(s, Object.assign({}, i, { className: $(n) }), t);
};
Ux.displayName = "TextListItem";
const Vx = (e) => {
  var { className: t = "", children: n, stickyOnBreakpoint: r, hasShadowTop: i = !1, hasShadowBottom: s = !1, hasOverflowScroll: o = !1, "aria-label": l } = e, c = oe(e, ["className", "children", "stickyOnBreakpoint", "hasShadowTop", "hasShadowBottom", "hasOverflowScroll", "aria-label"]);
  const { height: d, getVerticalBreakpoint: u } = h.useContext(Li);
  return h.useEffect(() => {
    o && !l && console.warn("PageGroup: An accessible aria-label is required when hasOverflowScroll is set to true.");
  }, [o, l]), h.createElement("div", Object.assign({}, c, { className: $(Ot.pageMainGroup, ut(r, Ot, "sticky-", u(d), !0), i && Ot.modifiers.shadowTop, s && Ot.modifiers.shadowBottom, o && Ot.modifiers.overflowScroll, t) }, o && { tabIndex: 0, role: "region", "aria-label": l }), n);
};
Vx.displayName = "PageGroup";
var Ov;
(function(e) {
  e.vertical = "vertical", e.horizontal = "horizontal";
})(Ov || (Ov = {}));
let Yu = class extends h.Component {
  constructor(t) {
    super(t), this.mainRef = h.createRef(), this.pageRef = h.createRef(), this.observer = () => {
    }, this.getWindowWidth = () => Sn ? this.pageRef.current ? this.pageRef.current.clientWidth : window.innerWidth : 1200, this.isMobile = () => (
      // eslint-disable-next-line radix
      this.getWindowWidth() < Number.parseInt(ch.value, 10)
    ), this.resize = (s) => {
      var o;
      const { onPageResize: l } = this.props, c = this.isMobile();
      if (l && l(s, { mobileView: c, windowSize: this.getWindowWidth() }), c !== this.state.mobileView && this.setState({ mobileView: c }), !((o = this.pageRef) === null || o === void 0) && o.current) {
        const d = this.pageRef.current.clientWidth, u = this.pageRef.current.clientHeight;
        this.state.width !== d && this.setState({ width: d }), this.state.height !== u && this.setState({ height: u });
      }
    }, this.handleResize = dh(this.resize, 250), this.handleMainClick = () => {
      this.isMobile() && this.state.mobileIsSidebarOpen && this.mainRef.current && this.setState({ mobileIsSidebarOpen: !1 });
    }, this.onSidebarToggleMobile = () => {
      this.setState((s) => ({
        mobileIsSidebarOpen: !s.mobileIsSidebarOpen
      }));
    }, this.onSidebarToggleDesktop = () => {
      this.setState((s) => ({
        desktopIsSidebarOpen: !s.desktopIsSidebarOpen
      }));
    };
    const { isManagedSidebar: n, defaultManagedSidebarIsOpen: r } = t, i = n ? r : !0;
    this.state = {
      desktopIsSidebarOpen: i,
      mobileIsSidebarOpen: !1,
      mobileView: !1,
      width: null,
      height: null
    };
  }
  componentDidMount() {
    const { isManagedSidebar: t, onPageResize: n } = this.props;
    if (t || n) {
      this.observer = Wo(this.pageRef.current, this.handleResize);
      const r = this.mainRef.current;
      r && (r.addEventListener("mousedown", this.handleMainClick), r.addEventListener("touchstart", this.handleMainClick)), this.resize();
    }
  }
  componentWillUnmount() {
    const { isManagedSidebar: t, onPageResize: n } = this.props;
    if (t || n) {
      this.observer();
      const r = this.mainRef.current;
      r && (r.removeEventListener("mousedown", this.handleMainClick), r.removeEventListener("touchstart", this.handleMainClick));
    }
  }
  render() {
    const t = this.props, {
      breadcrumb: n,
      isBreadcrumbWidthLimited: r,
      className: i,
      children: s,
      header: o,
      sidebar: l,
      notificationDrawer: c,
      isNotificationDrawerExpanded: d,
      onNotificationDrawerExpand: u,
      isTertiaryNavWidthLimited: p,
      skipToContent: m,
      role: f,
      mainContainerId: g,
      isManagedSidebar: b,
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      defaultManagedSidebarIsOpen: v,
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      onPageResize: y,
      getBreakpoint: x,
      getVerticalBreakpoint: w,
      mainAriaLabel: R,
      mainTabIndex: S,
      mainComponent: _,
      tertiaryNav: O,
      isTertiaryNavGrouped: E,
      isBreadcrumbGrouped: T,
      additionalGroupedContent: I,
      groupProps: k,
      breadcrumbProps: P
    } = t, D = oe(t, ["breadcrumb", "isBreadcrumbWidthLimited", "className", "children", "header", "sidebar", "notificationDrawer", "isNotificationDrawerExpanded", "onNotificationDrawerExpand", "isTertiaryNavWidthLimited", "skipToContent", "role", "mainContainerId", "isManagedSidebar", "defaultManagedSidebarIsOpen", "onPageResize", "getBreakpoint", "getVerticalBreakpoint", "mainAriaLabel", "mainTabIndex", "mainComponent", "tertiaryNav", "isTertiaryNavGrouped", "isBreadcrumbGrouped", "additionalGroupedContent", "groupProps", "breadcrumbProps"]), { mobileView: F, mobileIsSidebarOpen: A, desktopIsSidebarOpen: M, width: V, height: U } = this.state, G = {
      isManagedSidebar: b,
      onSidebarToggle: F ? this.onSidebarToggleMobile : this.onSidebarToggleDesktop,
      isSidebarOpen: F ? A : M,
      width: V,
      height: U,
      getBreakpoint: x,
      getVerticalBreakpoint: w
    };
    let q = null;
    O && p ? q = h.createElement(
      "div",
      { className: $(Ot.pageMainNav, Ot.modifiers.limitWidth) },
      h.createElement("div", { className: $(Ot.pageMainBody) }, O)
    ) : O && (q = h.createElement("div", { className: $(Ot.pageMainNav) }, O));
    const L = n ? h.createElement("section", { className: $(Ot.pageMainBreadcrumb, r && Ot.modifiers.limitWidth, ut(P?.stickyOnBreakpoint, Ot, "sticky-", w(U), !0)) }, r ? h.createElement("div", { className: $(Ot.pageMainBody) }, n) : n) : null, B = E || T || I ? h.createElement(
      Vx,
      Object.assign({}, k),
      E && q,
      T && L,
      I
    ) : null, j = _, W = h.createElement(
      j,
      { ref: this.mainRef, role: f, id: g, className: $(Ot.pageMain), tabIndex: S, "aria-label": R },
      B,
      !E && q,
      !T && L,
      s
    ), Q = h.createElement(jh, null, c);
    return h.createElement(
      rA,
      { value: G },
      h.createElement(
        "div",
        Object.assign({ ref: this.pageRef }, D, { className: $(Ot.page, V !== null && U !== null && "pf-m-resize-observer", V !== null && `pf-m-breakpoint-${x(V)}`, U !== null && `pf-m-height-breakpoint-${w(U)}`, i) }),
        m,
        o,
        l,
        c && h.createElement(
          "div",
          { className: $(Ot.pageDrawer) },
          h.createElement(
            Mh,
            { isExpanded: d, onExpand: (te) => u(te) },
            h.createElement(
              Fh,
              { panelContent: Q },
              h.createElement($h, null, W)
            )
          )
        ),
        !c && W
      )
    );
  }
};
Yu.displayName = "Page";
Yu.defaultProps = {
  isManagedSidebar: !1,
  isBreadcrumbWidthLimited: !1,
  defaultManagedSidebarIsOpen: !0,
  mainTabIndex: -1,
  isNotificationDrawerExpanded: !1,
  onNotificationDrawerExpand: () => null,
  mainComponent: "main",
  getBreakpoint: d1,
  getVerticalBreakpoint: c1
};
const Kx = (e) => {
  var { children: t, className: n, usePageInsets: r, isFilled: i } = e, s = oe(e, ["children", "className", "usePageInsets", "isFilled"]);
  return h.createElement("div", Object.assign({ className: $(Ot.pageSidebarBody, r && Ot.modifiers.pageInsets, i === !1 && Ot.modifiers.noFill, i === !0 && Ot.modifiers.fill, n) }, s), t);
};
Kx.displayName = "PageSidebarBody";
var hr;
(function(e) {
  e.default = "default", e.light = "light", e.dark = "dark", e.darker = "darker";
})(hr || (hr = {}));
var mi;
(function(e) {
  e.default = "default", e.nav = "nav", e.subNav = "subnav", e.breadcrumb = "breadcrumb", e.tabs = "tabs", e.wizard = "wizard";
})(mi || (mi = {}));
const oA = {
  [mi.default]: Ot.pageMainSection,
  [mi.nav]: Ot.pageMainNav,
  [mi.subNav]: Ot.pageMainSubnav,
  [mi.breadcrumb]: Ot.pageMainBreadcrumb,
  [mi.tabs]: Ot.pageMainTabs,
  [mi.wizard]: Ot.pageMainWizard
}, lA = {
  [hr.default]: "",
  [hr.light]: Ot.modifiers.light,
  [hr.dark]: Ot.modifiers.dark_200,
  [hr.darker]: Ot.modifiers.dark_100
}, Te = (e) => {
  var { className: t = "", children: n, variant: r = "default", type: i = "default", padding: s, isFilled: o, isWidthLimited: l = !1, isCenterAligned: c = !1, stickyOnBreakpoint: d, hasShadowTop: u = !1, hasShadowBottom: p = !1, hasOverflowScroll: m = !1, "aria-label": f, component: g = "section" } = e, b = oe(e, ["className", "children", "variant", "type", "padding", "isFilled", "isWidthLimited", "isCenterAligned", "stickyOnBreakpoint", "hasShadowTop", "hasShadowBottom", "hasOverflowScroll", "aria-label", "component"]);
  const { height: v, getVerticalBreakpoint: y } = h.useContext(Li);
  h.useEffect(() => {
    m && !f && console.warn("PageSection: An accessible aria-label is required when hasOverflowScroll is set to true.");
  }, [m, f]);
  const x = g;
  return h.createElement(
    x,
    Object.assign({}, b, { className: $(oA[i], ut(s, Ot), ut(d, Ot, "sticky-", y(v), !0), lA[r], o === !1 && Ot.modifiers.noFill, o === !0 && Ot.modifiers.fill, l && Ot.modifiers.limitWidth, l && c && i !== mi.subNav && Ot.modifiers.alignCenter, u && Ot.modifiers.shadowTop, p && Ot.modifiers.shadowBottom, m && Ot.modifiers.overflowScroll, t) }, m && { tabIndex: 0 }, { "aria-label": f }),
    l && h.createElement("div", { className: $(Ot.pageMainBody) }, n),
    !l && n
  );
};
Te.displayName = "PageSection";
const Hx = (e) => {
  var { children: t, isSidebarOpen: n = !0, onSidebarToggle: r = () => {
  }, id: i = "nav-toggle" } = e, s = oe(e, ["children", "isSidebarOpen", "onSidebarToggle", "id"]);
  return h.createElement(Nx, null, ({ isManagedSidebar: o, onSidebarToggle: l, isSidebarOpen: c }) => {
    const d = o ? l : r, u = o ? c : n;
    return h.createElement(z, Object.assign({ id: i, onClick: d, "aria-label": "Side navigation toggle", "aria-expanded": u ? "true" : "false", variant: xe.plain }, s), t);
  });
};
Hx.displayName = "PageToggleButton";
const Wh = ({ firstIndex: e = 0, lastIndex: t = 0, itemCount: n = 0, itemsTitle: r = "items", ofWord: i = "of" }) => h.createElement(
  h.Fragment,
  null,
  h.createElement(
    "b",
    null,
    e,
    " - ",
    t
  ),
  " ",
  i,
  " ",
  h.createElement("b", null, n),
  " ",
  r
);
Wh.displayName = "ToggleTemplate";
const ta = {
  button: "pf-v5-c-button",
  dirRtl: "pf-v5-m-dir-rtl",
  formControl: "pf-v5-c-form-control",
  menuToggle: "pf-v5-c-menu-toggle",
  modifiers: {
    bottom: "pf-m-bottom",
    static: "pf-m-static",
    first: "pf-m-first",
    last: "pf-m-last",
    sticky: "pf-m-sticky",
    compact: "pf-m-compact",
    pageInsets: "pf-m-page-insets",
    displaySummary: "pf-m-display-summary",
    displayFull: "pf-m-display-full",
    insetNone: "pf-m-inset-none",
    insetSm: "pf-m-inset-sm",
    insetMd: "pf-m-inset-md",
    insetLg: "pf-m-inset-lg",
    insetXl: "pf-m-inset-xl",
    inset_2xl: "pf-m-inset-2xl",
    displaySummaryOnSm: "pf-m-display-summary-on-sm",
    displayFullOnSm: "pf-m-display-full-on-sm",
    insetNoneOnSm: "pf-m-inset-none-on-sm",
    insetSmOnSm: "pf-m-inset-sm-on-sm",
    insetMdOnSm: "pf-m-inset-md-on-sm",
    insetLgOnSm: "pf-m-inset-lg-on-sm",
    insetXlOnSm: "pf-m-inset-xl-on-sm",
    inset_2xlOnSm: "pf-m-inset-2xl-on-sm",
    displaySummaryOnMd: "pf-m-display-summary-on-md",
    displayFullOnMd: "pf-m-display-full-on-md",
    insetNoneOnMd: "pf-m-inset-none-on-md",
    insetSmOnMd: "pf-m-inset-sm-on-md",
    insetMdOnMd: "pf-m-inset-md-on-md",
    insetLgOnMd: "pf-m-inset-lg-on-md",
    insetXlOnMd: "pf-m-inset-xl-on-md",
    inset_2xlOnMd: "pf-m-inset-2xl-on-md",
    displaySummaryOnLg: "pf-m-display-summary-on-lg",
    displayFullOnLg: "pf-m-display-full-on-lg",
    insetNoneOnLg: "pf-m-inset-none-on-lg",
    insetSmOnLg: "pf-m-inset-sm-on-lg",
    insetMdOnLg: "pf-m-inset-md-on-lg",
    insetLgOnLg: "pf-m-inset-lg-on-lg",
    insetXlOnLg: "pf-m-inset-xl-on-lg",
    inset_2xlOnLg: "pf-m-inset-2xl-on-lg",
    displaySummaryOnXl: "pf-m-display-summary-on-xl",
    displayFullOnXl: "pf-m-display-full-on-xl",
    insetNoneOnXl: "pf-m-inset-none-on-xl",
    insetSmOnXl: "pf-m-inset-sm-on-xl",
    insetMdOnXl: "pf-m-inset-md-on-xl",
    insetLgOnXl: "pf-m-inset-lg-on-xl",
    insetXlOnXl: "pf-m-inset-xl-on-xl",
    inset_2xlOnXl: "pf-m-inset-2xl-on-xl",
    displaySummaryOn_2xl: "pf-m-display-summary-on-2xl",
    displayFullOn_2xl: "pf-m-display-full-on-2xl",
    insetNoneOn_2xl: "pf-m-inset-none-on-2xl",
    insetSmOn_2xl: "pf-m-inset-sm-on-2xl",
    insetMdOn_2xl: "pf-m-inset-md-on-2xl",
    insetLgOn_2xl: "pf-m-inset-lg-on-2xl",
    insetXlOn_2xl: "pf-m-inset-xl-on-2xl",
    inset_2xlOn_2xl: "pf-m-inset-2xl-on-2xl"
  },
  pagination: "pf-v5-c-pagination",
  paginationNav: "pf-v5-c-pagination__nav",
  paginationNavControl: "pf-v5-c-pagination__nav-control",
  paginationNavPageSelect: "pf-v5-c-pagination__nav-page-select",
  paginationTotalItems: "pf-v5-c-pagination__total-items",
  themeDark: "pf-v5-theme-dark"
};
class Mo extends h.Component {
  constructor(t) {
    super(t), this.handleNewPage = (n, r) => {
      const { perPage: i, onSetPage: s } = this.props, o = (r - 1) * i, l = r * i;
      return s(n, r, i, o, l);
    }, this.state = { userInputPage: this.props.page };
  }
  static parseInteger(t, n) {
    let r = Number.parseInt(t, 10);
    return Number.isNaN(r) || (r = r > n ? n : r, r = r < 1 ? 1 : r), r;
  }
  onChange(t, n) {
    const r = Mo.parseInteger(t.currentTarget.value, n);
    this.setState({ userInputPage: Number.isNaN(r) ? t.currentTarget.value : r });
  }
  onKeyDown(t, n, r, i) {
    const s = [
      "Tab",
      "Backspace",
      "Delete",
      "ArrowLeft",
      "ArrowRight",
      "Home",
      "End",
      "ArrowUp",
      "ArrowDown"
    ];
    if (t.key === dn.Enter) {
      const o = Mo.parseInteger(this.state.userInputPage, r);
      i(t, Number.isNaN(o) ? n : o), this.handleNewPage(t, Number.isNaN(o) ? n : o);
    } else !/^\d*$/.test(t.key) && !s.includes(t.key) && t.preventDefault();
  }
  componentDidUpdate(t) {
    this.props.page !== t.page && this.props.page <= this.props.lastPage && this.state.userInputPage !== this.props.page && this.setState({ userInputPage: this.props.page });
  }
  render() {
    const t = this.props, {
      page: n,
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      perPage: r,
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      onSetPage: i,
      isDisabled: s,
      itemCount: o,
      lastPage: l,
      firstPage: c,
      pagesTitle: d,
      pagesTitlePlural: u,
      toLastPageAriaLabel: p,
      toNextPageAriaLabel: m,
      toFirstPageAriaLabel: f,
      toPreviousPageAriaLabel: g,
      currPageAriaLabel: b,
      paginationAriaLabel: v,
      ofWord: y,
      onNextClick: x,
      onPreviousClick: w,
      onFirstClick: R,
      onLastClick: S,
      onPageInput: _,
      className: O,
      isCompact: E
    } = t, T = oe(t, ["page", "perPage", "onSetPage", "isDisabled", "itemCount", "lastPage", "firstPage", "pagesTitle", "pagesTitlePlural", "toLastPageAriaLabel", "toNextPageAriaLabel", "toFirstPageAriaLabel", "toPreviousPageAriaLabel", "currPageAriaLabel", "paginationAriaLabel", "ofWord", "onNextClick", "onPreviousClick", "onFirstClick", "onLastClick", "onPageInput", "className", "isCompact"]), { userInputPage: I } = this.state;
    return h.createElement(
      "nav",
      Object.assign({ className: $(ta.paginationNav, O), "aria-label": v }, T),
      !E && h.createElement(
        "div",
        { className: $(ta.paginationNavControl, ta.modifiers.first) },
        h.createElement(
          z,
          { variant: xe.plain, isDisabled: s || n === c || n === 0, "aria-label": f, "data-action": "first", onClick: (k) => {
            R(k, 1), this.handleNewPage(k, 1), this.setState({ userInputPage: 1 });
          } },
          h.createElement(L_, null)
        )
      ),
      h.createElement(
        "div",
        { className: ta.paginationNavControl },
        h.createElement(
          z,
          { variant: xe.plain, isDisabled: s || n === c || n === 0, "data-action": "previous", onClick: (k) => {
            const P = n - 1 >= 1 ? n - 1 : 1;
            w(k, P), this.handleNewPage(k, P), this.setState({ userInputPage: P });
          }, "aria-label": g },
          h.createElement(Hs, null)
        )
      ),
      !E && h.createElement(
        "div",
        { className: ta.paginationNavPageSelect },
        h.createElement(mt, { "aria-label": b, type: "number", isDisabled: s || o && n === c && n === l && o >= 0 || n === 0, min: l <= 0 && c <= 0 ? 0 : 1, max: l, value: I, onKeyDown: (k) => this.onKeyDown(k, n, l, _), onChange: (k) => this.onChange(k, l) }),
        (o || o === 0) && h.createElement(
          "span",
          { "aria-hidden": "true" },
          y,
          " ",
          d ? i2(l, d, u) : l
        )
      ),
      h.createElement(
        "div",
        { className: ta.paginationNavControl },
        h.createElement(
          z,
          { variant: xe.plain, isDisabled: s || n === l, "aria-label": m, "data-action": "next", onClick: (k) => {
            const P = n + 1 <= l ? n + 1 : l;
            x(k, P), this.handleNewPage(k, P), this.setState({ userInputPage: P });
          } },
          h.createElement(Nn, null)
        )
      ),
      !E && h.createElement(
        "div",
        { className: $(ta.paginationNavControl, ta.modifiers.last) },
        h.createElement(
          z,
          { variant: xe.plain, isDisabled: s || n === l, "aria-label": p, "data-action": "last", onClick: (k) => {
            S(k, l), this.handleNewPage(k, l), this.setState({ userInputPage: l });
          } },
          h.createElement(D_, null)
        )
      )
    );
  }
}
Mo.displayName = "Navigation";
Mo.defaultProps = {
  className: "",
  isDisabled: !1,
  isCompact: !1,
  lastPage: 0,
  firstPage: 0,
  pagesTitle: "",
  pagesTitlePlural: "",
  toLastPageAriaLabel: "Go to last page",
  toNextPageAriaLabel: "Go to next page",
  toFirstPageAriaLabel: "Go to first page",
  toPreviousPageAriaLabel: "Go to previous page",
  currPageAriaLabel: "Current page",
  paginationAriaLabel: "Pagination",
  ofWord: "of",
  onNextClick: () => {
  },
  onPreviousClick: () => {
  },
  onFirstClick: () => {
  },
  onLastClick: () => {
  },
  onPageInput: () => {
  }
};
const zx = ({
  className: e,
  widgetId: t,
  page: n,
  itemCount: r,
  isDisabled: i = !1,
  minWidth: s,
  dropDirection: o = "down",
  perPageOptions: l = [],
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  itemsPerPageTitle: c = "Items per page",
  perPageSuffix: d = "per page",
  optionsToggleAriaLabel: u,
  ofWord: p = "of",
  perPage: m = 0,
  firstIndex: f = 0,
  lastIndex: g = 0,
  isLastFullPageShown: b = !1,
  itemsTitle: v = "items",
  toggleTemplate: y,
  onPerPageSelect: x = () => null
}) => {
  const [w, R] = h.useState(!1), S = h.useRef(null), _ = h.useRef(null), O = h.useRef(null), E = () => {
    R((F) => !F);
  }, T = () => {
    var F;
    R((A) => !A), (F = S.current) === null || F === void 0 || F.focus();
  }, I = (F, A) => {
    let M = n;
    for (; Math.ceil(r / A) < M; )
      M--;
    if (b && r / A !== M)
      for (; M > 1 && r - A * M < 0; )
        M--;
    const V = (M - 1) * A, U = M * A;
    return x(F, A, M, V, U);
  };
  h.useEffect(() => {
    const F = (M) => {
      var V, U, G;
      (w && (!((V = _.current) === null || V === void 0) && V.contains(M.target)) || !((U = S.current) === null || U === void 0) && U.contains(M.target)) && (M.key === "Escape" || M.key === "Tab") && (R(!1), (G = S.current) === null || G === void 0 || G.focus());
    }, A = (M) => {
      var V, U, G;
      w && (!((V = S.current) === null || V === void 0) && V.contains(M.target)) && setTimeout(() => {
        var q;
        const L = (q = _?.current) === null || q === void 0 ? void 0 : q.querySelector("li button:not(:disabled)");
        L && L.focus();
      }, 0), w && !(!((U = S?.current) === null || U === void 0) && U.contains(M.target)) && !(!((G = _.current) === null || G === void 0) && G.contains(M.target)) && R(!1);
    };
    return window.addEventListener("keydown", F), window.addEventListener("click", A), () => {
      window.removeEventListener("keydown", F), window.removeEventListener("click", A);
    };
  }, [w, _]);
  const k = () => l.map(({ value: F, title: A }) => h.createElement(
    Yo,
    { key: F, "data-action": `per-page-${F}`, isSelected: m === F, onClick: (M) => I(M, F) },
    A,
    ` ${d}`
  )), P = h.createElement(
    yt,
    Object.assign({ ref: S, onClick: E }, u && { "aria-label": u }, { isDisabled: i || r && r <= 0, isExpanded: w }, t && { id: `${t}-toggle` }, { variant: "plainText", "aria-haspopup": "listbox" }),
    y && typeof y == "string" && uh(y, { firstIndex: f, lastIndex: g, ofWord: p, itemCount: r, itemsTitle: v }),
    y && typeof y != "string" && y({
      firstIndex: f,
      lastIndex: g,
      ofWord: p,
      itemCount: r,
      itemsTitle: v
    }),
    !y && h.createElement(Wh, { firstIndex: f, lastIndex: g, ofWord: p, itemCount: r, itemsTitle: v })
  ), D = h.createElement(
    as,
    { className: $(e), onSelect: T, ref: _ },
    h.createElement(
      Xo,
      null,
      h.createElement(Jo, null, k())
    )
  );
  return h.createElement(
    "div",
    { ref: O },
    h.createElement(Qr, { trigger: P, triggerRef: S, popper: D, popperRef: _, isVisible: w, direction: o, appendTo: O.current || void 0, minWidth: s !== void 0 ? s : "revert" })
  );
};
zx.displayName = "PaginationOptionsMenu";
const Tv = {
  name: "--pf-v5-c-pagination__nav-page-select--c-form-control--width-chars",
  value: "2",
  var: "var(--pf-v5-c-pagination__nav-page-select--c-form-control--width-chars)"
};
var zl;
(function(e) {
  e.bottom = "bottom", e.top = "top";
})(zl || (zl = {}));
const Ev = [
  {
    title: "10",
    value: 10
  },
  {
    title: "20",
    value: 20
  },
  {
    title: "50",
    value: 50
  },
  {
    title: "100",
    value: 100
  }
], cA = (e, t) => {
  if (!t)
    return;
  const n = String(e).length;
  n >= 3 ? t.style.setProperty(Tv.name, `${n}`) : t.style.setProperty(Tv.name, "2");
}, Xh = (e) => {
  var { children: t, className: n = "", variant: r = zl.top, isDisabled: i = !1, isCompact: s = !1, isSticky: o = !1, isStatic: l = !1, dropDirection: c, toggleTemplate: d, perPage: u = Ev[0].value, titles: p = {
    items: "",
    page: "",
    pages: "",
    itemsPerPage: "Items per page",
    perPageSuffix: "per page",
    toFirstPageAriaLabel: "Go to first page",
    toPreviousPageAriaLabel: "Go to previous page",
    toLastPageAriaLabel: "Go to last page",
    toNextPageAriaLabel: "Go to next page",
    optionsToggleAriaLabel: "",
    currPageAriaLabel: "Current page",
    paginationAriaLabel: "Pagination",
    ofWord: "of"
  }, firstPage: m = 1, page: f = 1, offset: g = null, isLastFullPageShown: b = !1, itemsStart: v = null, itemsEnd: y = null, itemCount: x, perPageOptions: w = Ev, widgetId: R = "options-menu", onSetPage: S = () => {
  }, onPerPageSelect: _ = () => {
  }, onFirstClick: O = () => {
  }, onPreviousClick: E = () => {
  }, onNextClick: T = () => {
  }, onPageInput: I = () => {
  }, onLastClick: k = () => {
  }, ouiaId: P, ouiaSafe: D = !0, usePageInsets: F, inset: A } = e, M = oe(e, ["children", "className", "variant", "isDisabled", "isCompact", "isSticky", "isStatic", "dropDirection", "toggleTemplate", "perPage", "titles", "firstPage", "page", "offset", "isLastFullPageShown", "itemsStart", "itemsEnd", "itemCount", "perPageOptions", "widgetId", "onSetPage", "onPerPageSelect", "onFirstClick", "onPreviousClick", "onNextClick", "onPageInput", "onLastClick", "ouiaId", "ouiaSafe", "usePageInsets", "inset"]);
  const V = h.useRef(null), U = () => (
    // when itemCount is not known let's set lastPage as page+1 as we don't know the total count
    x || x === 0 ? Math.ceil(x / u) || 0 : q + 1
  );
  h.useEffect(() => {
    const W = V.current;
    cA(U(), W);
  }, [u, x]);
  const G = c || (r === "bottom" && !l ? "up" : "down");
  let q = f;
  g !== null && (v = g + 1, q = Math.max(Math.ceil(v / u), 1), y = g + u);
  const L = U();
  let K = (q - 1) * u + 1, B = q * u;
  (x || x === 0) && (K = x <= 0 ? 0 : (q - 1) * u + 1, q < m && x > 0 ? q = m : q > L && (q = L), x >= 0 && (B = q === L || x === 0 ? x : q * u));
  const j = {
    firstIndex: K,
    lastIndex: B,
    itemCount: x,
    itemsTitle: p.items,
    ofWord: p.ofWord
  };
  return h.createElement(
    "div",
    Object.assign({ ref: V, className: $(ta.pagination, r === zl.bottom && ta.modifiers.bottom, F && ta.modifiers.pageInsets, ut(A, ta), s && ta.modifiers.compact, l && ta.modifiers.static, o && ta.modifiers.sticky, n) }, R && { id: `${R}-${r}-pagination` }, Ka(Xh.displayName, P, D, r), M),
    r === zl.top && h.createElement(
      "div",
      { className: $(ta.paginationTotalItems) },
      d && typeof d == "string" && uh(d, j),
      d && typeof d != "string" && d(j),
      !d && h.createElement(Wh, { firstIndex: K, lastIndex: B, itemCount: x, itemsTitle: p.items, ofWord: p.ofWord })
    ),
    w && w.length > 0 && h.createElement(zx, { itemsPerPageTitle: p.itemsPerPage, perPageSuffix: p.perPageSuffix, itemsTitle: s ? "" : p.items, optionsToggleAriaLabel: p.optionsToggleAriaLabel, perPageOptions: w, firstIndex: v !== null ? v : K, lastIndex: y !== null ? y : B, ofWord: p.ofWord, isLastFullPageShown: b, itemCount: x, page: q, perPage: u, lastPage: L, onPerPageSelect: _, dropDirection: G, widgetId: `${R}-${r}`, toggleTemplate: d, isDisabled: i }),
    h.createElement(Mo, { pagesTitle: p.page, pagesTitlePlural: p.pages, toLastPageAriaLabel: p.toLastPageAriaLabel, toPreviousPageAriaLabel: p.toPreviousPageAriaLabel, toNextPageAriaLabel: p.toNextPageAriaLabel, toFirstPageAriaLabel: p.toFirstPageAriaLabel, currPageAriaLabel: p.currPageAriaLabel, paginationAriaLabel: p.paginationAriaLabel, ofWord: p.ofWord, page: x && x <= 0 ? 0 : q, perPage: u, itemCount: x, firstPage: v !== null ? v : 1, lastPage: L, onSetPage: S, onFirstClick: O, onPreviousClick: E, onNextClick: T, onLastClick: k, onPageInput: I, isDisabled: i, isCompact: s }),
    t
  );
};
Xh.displayName = "Pagination";
const pr = {
  dirRtl: "pf-v5-m-dir-rtl",
  modifiers: {
    reverse: "pf-m-reverse",
    off: "pf-m-off",
    on: "pf-m-on"
  },
  switch: "pf-v5-c-switch",
  switchInput: "pf-v5-c-switch__input",
  switchLabel: "pf-v5-c-switch__label",
  switchToggle: "pf-v5-c-switch__toggle",
  switchToggleIcon: "pf-v5-c-switch__toggle-icon",
  themeDark: "pf-v5-theme-dark"
};
class Ye extends h.Component {
  constructor(t) {
    super(t), !t.label && !t["aria-label"] && console.error("Switch: Switch requires either a label or an aria-label to be specified"), this.id = t.id || Si(), this.state = {
      ouiaStateId: cr(Ye.displayName)
    };
  }
  render() {
    const t = this.props, {
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      id: n,
      className: r,
      label: i,
      labelOff: s,
      isChecked: o,
      defaultChecked: l,
      hasCheckIcon: c,
      isDisabled: d,
      onChange: u,
      isReversed: p,
      ouiaId: m,
      ouiaSafe: f
    } = t, g = oe(t, ["id", "className", "label", "labelOff", "isChecked", "defaultChecked", "hasCheckIcon", "isDisabled", "onChange", "isReversed", "ouiaId", "ouiaSafe"]), b = g["aria-label"] === "";
    return h.createElement(
      "label",
      Object.assign({ className: $(pr.switch, p && pr.modifiers.reverse, r), htmlFor: this.id }, Yn(Ye.displayName, m !== void 0 ? m : this.state.ouiaStateId, f)),
      h.createElement("input", Object.assign({ id: this.id, className: $(pr.switchInput), type: "checkbox", onChange: (v) => u(v, v.target.checked) }, l !== void 0 ? { defaultChecked: l } : { checked: o }, { disabled: d, "aria-labelledby": b ? `${this.id}-${o !== !0 ? "off" : "on"}` : null }, g)),
      i !== void 0 ? h.createElement(
        h.Fragment,
        null,
        h.createElement("span", { className: $(pr.switchToggle) }, c && h.createElement(
          "span",
          { className: $(pr.switchToggleIcon), "aria-hidden": "true" },
          h.createElement(As, null)
        )),
        h.createElement("span", { className: $(pr.switchLabel, pr.modifiers.on), id: b ? `${this.id}-on` : null, "aria-hidden": "true" }, i),
        h.createElement("span", { className: $(pr.switchLabel, pr.modifiers.off), id: b ? `${this.id}-off` : null, "aria-hidden": "true" }, s !== void 0 ? s : i)
      ) : h.createElement(
        "span",
        { className: $(pr.switchToggle) },
        h.createElement(
          "div",
          { className: $(pr.switchToggleIcon), "aria-hidden": "true" },
          h.createElement(As, null)
        )
      )
    );
  }
}
Ye.displayName = "Switch";
Ye.defaultProps = {
  isChecked: !0,
  isDisabled: !1,
  isReversed: !1,
  "aria-label": "",
  onChange: () => {
  }
};
const At = {
  button: "pf-v5-c-button",
  dirRtl: "pf-v5-m-dir-rtl",
  modifiers: {
    fill: "pf-m-fill",
    scrollable: "pf-m-scrollable",
    noBorderBottom: "pf-m-no-border-bottom",
    box: "pf-m-box",
    vertical: "pf-m-vertical",
    current: "pf-m-current",
    colorSchemeLight_300: "pf-m-color-scheme--light-300",
    expandable: "pf-m-expandable",
    nonExpandable: "pf-m-non-expandable",
    expandableOnSm: "pf-m-expandable-on-sm",
    nonExpandableOnSm: "pf-m-non-expandable-on-sm",
    expandableOnMd: "pf-m-expandable-on-md",
    nonExpandableOnMd: "pf-m-non-expandable-on-md",
    expandableOnLg: "pf-m-expandable-on-lg",
    nonExpandableOnLg: "pf-m-non-expandable-on-lg",
    expandableOnXl: "pf-m-expandable-on-xl",
    nonExpandableOnXl: "pf-m-non-expandable-on-xl",
    expandableOn_2xl: "pf-m-expandable-on-2xl",
    nonExpandableOn_2xl: "pf-m-non-expandable-on-2xl",
    expanded: "pf-m-expanded",
    secondary: "pf-m-secondary",
    pageInsets: "pf-m-page-insets",
    overflow: "pf-m-overflow",
    action: "pf-m-action",
    active: "pf-m-active",
    disabled: "pf-m-disabled",
    ariaDisabled: "pf-m-aria-disabled",
    insetNone: "pf-m-inset-none",
    insetSm: "pf-m-inset-sm",
    insetMd: "pf-m-inset-md",
    insetLg: "pf-m-inset-lg",
    insetXl: "pf-m-inset-xl",
    inset_2xl: "pf-m-inset-2xl",
    insetNoneOnSm: "pf-m-inset-none-on-sm",
    insetSmOnSm: "pf-m-inset-sm-on-sm",
    insetMdOnSm: "pf-m-inset-md-on-sm",
    insetLgOnSm: "pf-m-inset-lg-on-sm",
    insetXlOnSm: "pf-m-inset-xl-on-sm",
    inset_2xlOnSm: "pf-m-inset-2xl-on-sm",
    insetNoneOnMd: "pf-m-inset-none-on-md",
    insetSmOnMd: "pf-m-inset-sm-on-md",
    insetMdOnMd: "pf-m-inset-md-on-md",
    insetLgOnMd: "pf-m-inset-lg-on-md",
    insetXlOnMd: "pf-m-inset-xl-on-md",
    inset_2xlOnMd: "pf-m-inset-2xl-on-md",
    insetNoneOnLg: "pf-m-inset-none-on-lg",
    insetSmOnLg: "pf-m-inset-sm-on-lg",
    insetMdOnLg: "pf-m-inset-md-on-lg",
    insetLgOnLg: "pf-m-inset-lg-on-lg",
    insetXlOnLg: "pf-m-inset-xl-on-lg",
    inset_2xlOnLg: "pf-m-inset-2xl-on-lg",
    insetNoneOnXl: "pf-m-inset-none-on-xl",
    insetSmOnXl: "pf-m-inset-sm-on-xl",
    insetMdOnXl: "pf-m-inset-md-on-xl",
    insetLgOnXl: "pf-m-inset-lg-on-xl",
    insetXlOnXl: "pf-m-inset-xl-on-xl",
    inset_2xlOnXl: "pf-m-inset-2xl-on-xl",
    insetNoneOn_2xl: "pf-m-inset-none-on-2xl",
    insetSmOn_2xl: "pf-m-inset-sm-on-2xl",
    insetMdOn_2xl: "pf-m-inset-md-on-2xl",
    insetLgOn_2xl: "pf-m-inset-lg-on-2xl",
    insetXlOn_2xl: "pf-m-inset-xl-on-2xl",
    inset_2xlOn_2xl: "pf-m-inset-2xl-on-2xl"
  },
  tabs: "pf-v5-c-tabs",
  tabsAdd: "pf-v5-c-tabs__add",
  tabsItem: "pf-v5-c-tabs__item",
  tabsItemAction: "pf-v5-c-tabs__item-action",
  tabsItemActionIcon: "pf-v5-c-tabs__item-action-icon",
  tabsItemIcon: "pf-v5-c-tabs__item-icon",
  tabsItemText: "pf-v5-c-tabs__item-text",
  tabsLink: "pf-v5-c-tabs__link",
  tabsLinkToggleIcon: "pf-v5-c-tabs__link-toggle-icon",
  tabsList: "pf-v5-c-tabs__list",
  tabsScrollButton: "pf-v5-c-tabs__scroll-button",
  tabsToggle: "pf-v5-c-tabs__toggle",
  tabsToggleButton: "pf-v5-c-tabs__toggle-button",
  tabsToggleIcon: "pf-v5-c-tabs__toggle-icon",
  tabsToggleText: "pf-v5-c-tabs__toggle-text",
  themeDark: "pf-v5-theme-dark"
}, Yh = (e) => {
  var {
    children: t,
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    tabContentRef: n,
    ouiaId: r,
    parentInnerRef: i,
    ouiaSafe: s
  } = e, o = oe(e, ["children", "tabContentRef", "ouiaId", "parentInnerRef", "ouiaSafe"]);
  const l = o.href ? "a" : "button";
  return h.createElement(l, Object.assign({}, !o.href && { type: "button" }, { ref: i }, Yn(Yh.displayName, r, s), o), t);
};
Yh.displayName = "TabButton";
const Ju = h.createContext({
  variant: "default",
  mountOnEnter: !1,
  unmountOnExit: !1,
  localActiveKey: "",
  uniqueId: "",
  handleTabClick: () => null,
  handleTabClose: void 0
}), dA = Ju.Provider, uA = Ju.Consumer, pA = (e) => {
  var {
    children: t,
    className: n,
    onClick: r,
    isDisabled: i,
    "aria-label": s = "Tab action",
    innerRef: o,
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    ouiaId: l,
    ouiaSafe: c
  } = e, d = oe(e, ["children", "className", "onClick", "isDisabled", "aria-label", "innerRef", "ouiaId", "ouiaSafe"]);
  return h.createElement(
    "span",
    { className: $(At.tabsItemAction, n) },
    h.createElement(
      z,
      Object.assign({ ref: o, type: "button", variant: "plain", "aria-label": s, onClick: r, isDisabled: i }, Yn(Jh.displayName, l, c), d),
      h.createElement("span", { className: $(At.tabsItemActionIcon) }, t)
    )
  );
}, Jh = h.forwardRef((e, t) => h.createElement(pA, Object.assign({}, e, { innerRef: t })));
Jh.displayName = "TabAction";
const mA = (e) => {
  var { title: t, eventKey: n, tabContentRef: r, id: i, tabContentId: s, className: o = "", ouiaId: l, isDisabled: c, isAriaDisabled: d, inoperableEvents: u = ["onClick", "onKeyPress"], href: p, innerRef: m, tooltip: f, closeButtonAriaLabel: g, isCloseDisabled: b = !1, actions: v } = e, y = oe(e, ["title", "eventKey", "tabContentRef", "id", "tabContentId", "className", "ouiaId", "isDisabled", "isAriaDisabled", "inoperableEvents", "href", "innerRef", "tooltip", "closeButtonAriaLabel", "isCloseDisabled", "actions"]);
  const x = u.reduce((D, F) => Object.assign(Object.assign({}, D), { [F]: (A) => {
    A.preventDefault();
  } }), {}), { mountOnEnter: w, localActiveKey: R, unmountOnExit: S, uniqueId: _, handleTabClick: O, handleTabClose: E } = h.useContext(Ju);
  let T = s ? `${s}` : `pf-tab-section-${n}-${i || _}`;
  (w || S) && n !== R && (T = void 0);
  const I = !p, k = () => {
    if (c)
      return I ? null : -1;
    if (d)
      return null;
  }, P = h.createElement(Yh, Object.assign({ parentInnerRef: m, className: $(At.tabsLink, c && p && At.modifiers.disabled, d && At.modifiers.ariaDisabled), disabled: I ? c : null, "aria-disabled": c || d, tabIndex: k(), onClick: (D) => O(D, n, r) }, d ? x : null, { id: `pf-tab-${n}-${i || _}`, "aria-controls": T, tabContentRef: r, ouiaId: l, href: p, role: "tab", "aria-selected": n === R }, y), t);
  return h.createElement(
    "li",
    { className: $(At.tabsItem, n === R && At.modifiers.current, (E || v) && At.modifiers.action, (c || d) && At.modifiers.disabled, o), role: "presentation" },
    f ? h.createElement(Yt, Object.assign({}, f.props), P) : P,
    v && v,
    E !== void 0 && h.createElement(
      Jh,
      { "aria-label": g || "Close tab", onClick: (D) => E(D, n, r), isDisabled: b },
      h.createElement(Oa, null)
    )
  );
}, Ee = h.forwardRef((e, t) => h.createElement(mA, Object.assign({ innerRef: t }, e)));
Ee.displayName = "Tab";
const fA = {
  name: "PlusIcon",
  height: 512,
  width: 448,
  svgPath: "M416 208H272V64c0-17.67-14.33-32-32-32h-32c-17.67 0-32 14.33-32 32v144H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h144v144c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32V304h144c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z",
  yOffset: 0,
  xOffset: 0
}, qx = Qe(fA), xf = {
  modifiers: {
    light_300: "pf-m-light-300",
    padding: "pf-m-padding"
  },
  tabContent: "pf-v5-c-tab-content",
  tabContentBody: "pf-v5-c-tab-content__body"
}, Iv = {
  default: "",
  light300: xf.modifiers.light_300
}, hA = (e) => {
  var {
    id: t,
    activeKey: n,
    "aria-label": r,
    child: i,
    children: s,
    className: o,
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    eventKey: l,
    innerRef: c,
    ouiaId: d,
    ouiaSafe: u
  } = e, p = oe(e, ["id", "activeKey", "aria-label", "child", "children", "className", "eventKey", "innerRef", "ouiaId", "ouiaSafe"]);
  if (s || i) {
    let m;
    return r ? m = null : m = s ? `${t}` : `pf-tab-${i.props.eventKey}-${t}`, h.createElement(uA, null, ({ variant: f }) => h.createElement("section", Object.assign({ ref: c, hidden: s ? null : i.props.eventKey !== n, className: s ? $(xf.tabContent, o, Iv[f]) : $(xf.tabContent, i.props.className, Iv[f]), id: s ? t : `pf-tab-section-${i.props.eventKey}-${t}`, "aria-label": r, "aria-labelledby": m, role: "tabpanel", tabIndex: 0 }, Yn("TabContent", d, u), p), s || i.props.children));
  }
  return null;
}, fo = h.forwardRef((e, t) => h.createElement(hA, Object.assign({}, e, { innerRef: t }))), Ie = (e) => {
  var { children: t, className: n = "" } = e, r = oe(e, ["children", "className"]);
  return h.createElement("span", Object.assign({ className: $(At.tabsItemText, n) }, r), t);
};
Ie.displayName = "TabTitleText";
const Gx = (e) => {
  var { className: t, overflowingTabs: n = [], showTabCount: r, defaultTitleText: i = "More", toggleAriaLabel: s, zIndex: o = 9999 } = e, l = oe(e, ["className", "overflowingTabs", "showTabCount", "defaultTitleText", "toggleAriaLabel", "zIndex"]);
  const c = re.useRef(), d = re.useRef(), u = re.useRef(), [p, m] = re.useState(!1), { localActiveKey: f, handleTabClick: g } = re.useContext(Ju), b = () => {
    m(!1), d.current.focus();
  }, v = (T) => {
    var I;
    const k = (I = c?.current) === null || I === void 0 ? void 0 : I.contains(T.target);
    p && k && T.key === "Escape" && b();
  }, y = (T) => {
    var I, k;
    const P = !(!((I = c?.current) === null || I === void 0) && I.contains(T.target)), D = !(!((k = d?.current) === null || k === void 0) && k.contains(T.target));
    p && P && D && b();
  };
  re.useEffect(() => (window.addEventListener("click", y), window.addEventListener("keydown", v), () => {
    window.removeEventListener("click", y), window.removeEventListener("keydown", v);
  }), [p, c, d]);
  const x = n.find((T) => T.eventKey === f), w = x?.title ? x.title : i, R = () => {
    m((T) => !T), setTimeout(() => {
      if (c?.current) {
        const T = c.current.querySelector("li > button,input:not(:disabled)");
        T && T.focus();
      }
    }, 0);
  }, S = re.createElement(
    "li",
    Object.assign({ className: $(At.tabsItem, At.modifiers.overflow, x && At.modifiers.current, t), role: "presentation", ref: u }, l),
    re.createElement(
      "button",
      { type: "button", className: $(At.tabsLink, p && At.modifiers.expanded), onClick: () => R(), "aria-label": s, "aria-haspopup": "menu", "aria-expanded": p, role: "tab", ref: d },
      re.createElement(
        Ie,
        null,
        w,
        r && w === i && ` (${n.length})`
      ),
      re.createElement(
        "span",
        { className: At.tabsLinkToggleIcon },
        re.createElement(Nn, null)
      )
    )
  ), _ = n.map((T) => re.createElement(Yo, { key: T.eventKey, itemId: T.eventKey, isSelected: f === T.eventKey }, T.title)), O = (T, I) => {
    b();
    const k = n.find((P) => P.eventKey === I).tabContentRef;
    g(T, I, k);
  }, E = re.createElement(
    as,
    { ref: c, onSelect: (T, I) => O(T, I) },
    re.createElement(
      Xo,
      null,
      re.createElement(Jo, null, _)
    )
  );
  return re.createElement(
    re.Fragment,
    null,
    S,
    re.createElement(Qr, { triggerRef: d, popper: E, popperRef: c, isVisible: p, minWidth: "revert", appendTo: u.current, zIndex: o })
  );
};
Gx.displayName = "OverflowTab";
var bc;
(function(e) {
  e.div = "div", e.nav = "nav";
})(bc || (bc = {}));
const gA = {
  default: "",
  light300: At.modifiers.colorSchemeLight_300
};
class Ua extends h.Component {
  constructor(t) {
    super(t), this.tabList = h.createRef(), this.leftScrollButtonRef = h.createRef(), this.direction = "ltr", this.scrollTimeout = null, this.countOverflowingElements = (n) => Array.from(n.children).filter((i) => !fi(n, i)).length, this.handleScrollButtons = () => {
      const { isOverflowHorizontal: n } = this.props;
      clearTimeout(this.scrollTimeout), this.scrollTimeout = setTimeout(() => {
        const r = this.tabList.current;
        let i = !0, s = !0, o = !1, l = 0;
        if (r && !this.props.isVertical && !n) {
          const c = !fi(r, r.firstChild), d = !fi(r, r.lastChild);
          o = c || d, i = !c, s = !d;
        }
        n && (l = this.countOverflowingElements(r)), this.setState({
          enableScrollButtons: o,
          disableBackScrollButton: i,
          disableForwardScrollButton: s,
          overflowingTabCount: l
        });
      }, 100);
    }, this.scrollBack = () => {
      if (this.tabList.current) {
        const n = this.tabList.current, r = Array.from(n.children);
        let i, s, o;
        for (o = 0; o < r.length && !i; o++)
          fi(n, r[o]) && (i = r[o], s = r[o - 1]);
        s && (this.direction === "ltr" ? n.scrollLeft -= s.scrollWidth : n.scrollLeft += s.scrollWidth);
      }
    }, this.scrollForward = () => {
      if (this.tabList.current) {
        const n = this.tabList.current, r = Array.from(n.children);
        let i, s;
        for (let o = r.length - 1; o >= 0 && !i; o--)
          fi(n, r[o]) && (i = r[o], s = r[o + 1]);
        s && (this.direction === "ltr" ? n.scrollLeft += s.scrollWidth : n.scrollLeft -= s.scrollWidth);
      }
    }, this.hideScrollButtons = () => {
      const { enableScrollButtons: n, renderScrollButtons: r, showScrollButtons: i } = this.state;
      !n && !i && r && this.setState({ renderScrollButtons: !1 });
    }, this.state = {
      enableScrollButtons: !1,
      showScrollButtons: !1,
      renderScrollButtons: !1,
      disableBackScrollButton: !0,
      disableForwardScrollButton: !0,
      shownKeys: this.props.defaultActiveKey !== void 0 ? [this.props.defaultActiveKey] : [this.props.activeKey],
      uncontrolledActiveKey: this.props.defaultActiveKey,
      uncontrolledIsExpandedLocal: this.props.defaultIsExpanded,
      ouiaStateId: cr(Ua.displayName),
      overflowingTabCount: 0
    }, this.props.isVertical && this.props.expandable !== void 0 && !this.props.toggleAriaLabel && !this.props.toggleText && console.error("Tabs:", "toggleAriaLabel or the toggleText prop is required to make the toggle button accessible");
  }
  handleTabClick(t, n, r) {
    const { shownKeys: i } = this.state, { onSelect: s, defaultActiveKey: o } = this.props;
    o !== void 0 ? this.setState({
      uncontrolledActiveKey: n
    }) : s(t, n), r && (h.Children.toArray(this.props.children).filter((l) => h.isValidElement(l)).filter(({ props: l }) => l.tabContentRef && l.tabContentRef.current).forEach((l) => l.props.tabContentRef.current.hidden = !0), r.current && (r.current.hidden = !1)), this.props.mountOnEnter && this.setState({
      shownKeys: i.concat(n)
    });
  }
  componentDidMount() {
    this.props.isVertical || (Sn && window.addEventListener("resize", this.handleScrollButtons, !1), this.direction = Ji(this.tabList.current), this.handleScrollButtons());
  }
  componentWillUnmount() {
    var t;
    this.props.isVertical || Sn && window.removeEventListener("resize", this.handleScrollButtons, !1), clearTimeout(this.scrollTimeout), (t = this.leftScrollButtonRef.current) === null || t === void 0 || t.removeEventListener("transitionend", this.hideScrollButtons);
  }
  componentDidUpdate(t, n) {
    const { activeKey: r, mountOnEnter: i, isOverflowHorizontal: s, children: o } = this.props, { shownKeys: l, overflowingTabCount: c, enableScrollButtons: d } = this.state;
    t.activeKey !== r && i && l.indexOf(r) < 0 && this.setState({
      shownKeys: l.concat(r)
    }), t.children && o && h.Children.toArray(t.children).length !== h.Children.toArray(o).length && this.handleScrollButtons();
    const u = this.countOverflowingElements(this.tabList.current);
    s && u && this.setState({ overflowingTabCount: u + c }), !n.enableScrollButtons && d ? (this.setState({ renderScrollButtons: !0 }), setTimeout(() => {
      var p;
      (p = this.leftScrollButtonRef.current) === null || p === void 0 || p.addEventListener("transitionend", this.hideScrollButtons), this.setState({ showScrollButtons: !0 });
    }, 100)) : n.enableScrollButtons && !d && this.setState({ showScrollButtons: !1 }), this.direction = Ji(this.tabList.current);
  }
  render() {
    const t = this.props, { className: n, children: r, activeKey: i, defaultActiveKey: s, id: o, isFilled: l, isSecondary: c, isVertical: d, isBox: u, hasNoBorderBottom: p, leftScrollAriaLabel: m, rightScrollAriaLabel: f, backScrollAriaLabel: g, forwardScrollAriaLabel: b, "aria-label": v, component: y, ouiaId: x, ouiaSafe: w, mountOnEnter: R, unmountOnExit: S, usePageInsets: _, inset: O, variant: E, expandable: T, isExpanded: I, defaultIsExpanded: k, toggleText: P, toggleAriaLabel: D, addButtonAriaLabel: F, onToggle: A, onClose: M, onAdd: V, isOverflowHorizontal: U } = t, G = oe(t, ["className", "children", "activeKey", "defaultActiveKey", "id", "isFilled", "isSecondary", "isVertical", "isBox", "hasNoBorderBottom", "leftScrollAriaLabel", "rightScrollAriaLabel", "backScrollAriaLabel", "forwardScrollAriaLabel", "aria-label", "component", "ouiaId", "ouiaSafe", "mountOnEnter", "unmountOnExit", "usePageInsets", "inset", "variant", "expandable", "isExpanded", "defaultIsExpanded", "toggleText", "toggleAriaLabel", "addButtonAriaLabel", "onToggle", "onClose", "onAdd", "isOverflowHorizontal"]), { showScrollButtons: q, renderScrollButtons: L, disableBackScrollButton: K, disableForwardScrollButton: B, shownKeys: j, uncontrolledActiveKey: W, uncontrolledIsExpandedLocal: Q, overflowingTabCount: te } = this.state, ie = h.Children.toArray(r).filter((X) => h.isValidElement(X)).filter(({ props: X }) => !X.isHidden), ce = ie.slice(0, ie.length - te), me = ie.slice(ie.length - te).map((X) => X.props), ne = o || Si(), Oe = y === bc.nav ? "nav" : "div", Pe = s !== void 0 ? W : i, $e = k !== void 0 ? Q : I, fe = (X, Y) => {
      I === void 0 ? this.setState({ uncontrolledIsExpandedLocal: Y }) : A(X, Y);
    }, we = U && te > 0, J = typeof U == "object" ? Object.assign({}, U) : {};
    return h.createElement(
      dA,
      { value: {
        variant: E,
        mountOnEnter: R,
        unmountOnExit: S,
        localActiveKey: Pe,
        uniqueId: ne,
        handleTabClick: (...X) => this.handleTabClick(...X),
        handleTabClose: M
      } },
      h.createElement(
        Oe,
        Object.assign({ "aria-label": v, className: $(At.tabs, l && At.modifiers.fill, c && At.modifiers.secondary, d && At.modifiers.vertical, d && T && ut(T, At), d && T && $e && At.modifiers.expanded, u && At.modifiers.box, q && At.modifiers.scrollable, _ && At.modifiers.pageInsets, p && At.modifiers.noBorderBottom, ut(O, At), gA[E], we && At.modifiers.overflow, n) }, Yn(Ua.displayName, x !== void 0 ? x : this.state.ouiaStateId, w), { id: o && o }, G),
        T && d && h.createElement($a, null, (X) => h.createElement(
          "div",
          { className: $(At.tabsToggle) },
          h.createElement(
            "div",
            { className: $(At.tabsToggleButton) },
            h.createElement(
              z,
              { onClick: (Y) => fe(Y, !$e), variant: "plain", "aria-label": D, "aria-expanded": $e, id: `${X}-button`, "aria-labelledby": `${X}-text ${X}-button` },
              h.createElement(
                "span",
                { className: $(At.tabsToggleIcon) },
                h.createElement(Nn, { "arian-hidden": "true" })
              ),
              P && h.createElement("span", { className: $(At.tabsToggleText), id: `${X}-text` }, P)
            )
          )
        )),
        L && h.createElement(
          "button",
          { type: "button", className: $(At.tabsScrollButton, c && Tn.modifiers.secondary), "aria-label": g || m, onClick: this.scrollBack, disabled: K, "aria-hidden": K, ref: this.leftScrollButtonRef },
          h.createElement(Hs, null)
        ),
        h.createElement(
          "ul",
          { className: $(At.tabsList), ref: this.tabList, onScroll: this.handleScrollButtons, role: "tablist" },
          U ? ce : ie,
          we && h.createElement(Gx, Object.assign({ overflowingTabs: me }, J))
        ),
        L && h.createElement(
          "button",
          { type: "button", className: $(At.tabsScrollButton, c && Tn.modifiers.secondary), "aria-label": b || f, onClick: this.scrollForward, disabled: B, "aria-hidden": B },
          h.createElement(Nn, null)
        ),
        V !== void 0 && h.createElement(
          "span",
          { className: $(At.tabsAdd) },
          h.createElement(
            z,
            { variant: "plain", "aria-label": F || "Add tab", onClick: V },
            h.createElement(qx, null)
          )
        )
      ),
      ie.filter((X) => X.props.children && !(S && X.props.eventKey !== Pe) && !(R && j.indexOf(X.props.eventKey) === -1)).map((X) => h.createElement(fo, { key: X.props.eventKey, activeKey: Pe, child: X, id: X.props.id || ne, ouiaId: X.props.ouiaId }))
    );
  }
}
Ua.displayName = "Tabs";
Ua.defaultProps = {
  activeKey: 0,
  onSelect: () => {
  },
  isFilled: !1,
  isSecondary: !1,
  isVertical: !1,
  isBox: !1,
  hasNoBorderBottom: !1,
  leftScrollAriaLabel: "Scroll left",
  backScrollAriaLabel: "Scroll back",
  rightScrollAriaLabel: "Scroll right",
  forwardScrollAriaLabel: "Scroll forward",
  component: bc.div,
  mountOnEnter: !1,
  unmountOnExit: !1,
  ouiaSafe: !0,
  variant: "default",
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  onToggle: (e, t) => {
  }
};
const hi = " AM", gi = " PM", bA = (e, t, n, r, i, s) => {
  const o = [], l = new Date((/* @__PURE__ */ new Date()).setHours(0, 0, 0, 0)), c = l.getDay();
  for (; l.getDay() === c; ) {
    let d = l.getHours(), u = hi;
    t && (d === 0 ? d = 12 : d >= 12 && (u = gi), d > 12 && (d %= 12)), d = t ? d.toString() : d.toString().padStart(2, "0");
    const p = l.getMinutes().toString().padStart(2, "0"), m = `${d}${n}${p}${t ? u : ""}`;
    Xx(r, i, m, n, s) && o.push(m), l.setMinutes(l.getMinutes() + e);
  }
  return o;
}, li = (e, t, n, r, i) => {
  const s = new Date(e);
  if (!isNaN(s.getDate()) && (e instanceof Date || e.includes("T"))) {
    const o = r ? `${s.getHours() > 12 ? s.getHours() - 12 : s.getHours()}` : `${s.getHours()}`.padStart(2, "0"), l = `${s.getMinutes()}`.padStart(2, "0"), c = i ? `${s.getSeconds()}`.padStart(2, "0") : "", d = c ? `${n}${c}` : "";
    let u = "";
    return r && s.getHours() > 11 ? u = gi : r && (u = hi), `${o}${n}${l}${d}${u}`;
  } else if (typeof e == "string" && (e = e.trim(), e !== "" && Wx(e, t, n, r))) {
    const [, o, l, c, d = ""] = t.exec(e), u = i ? `${n}${c ?? "00"}` : "";
    let p = "";
    if (r) {
      const m = d.toUpperCase();
      m === hi.toUpperCase().trim() ? p = hi : m === gi.toUpperCase().trim() ? p = gi : p = (/* @__PURE__ */ new Date()).getHours() > 11 ? gi : hi;
    }
    return `${o}${n}${l}${u}${p}`;
  }
  return e.toString();
}, Wx = (e, t, n, r) => {
  const i = new Date(e);
  if (!isNaN(i.getDate()) && e.includes("T"))
    return !0;
  const s = parseInt(e.split(n)[0]), o = s >= (r ? 1 : 0) && s <= (r ? 12 : 23);
  return e === "" || t.test(e) && o;
}, Pv = (e, t) => {
  const n = e.match(t);
  return n && n.length ? /pm/i.test(n[4]) ? parseInt(n[1]) === 12 ? parseInt(n[1]) : parseInt(n[1]) + 12 : /am/i.test(n[4]) && parseInt(n[1]) === 12 ? 0 : parseInt(n[1]) : null;
}, _v = (e, t) => {
  const n = e.match(t);
  return n && n.length ? parseInt(n[2]) : null;
}, Rv = (e, t) => {
  var n;
  const r = (n = e.match(t)) === null || n === void 0 ? void 0 : n[3];
  return r ? parseInt(r) : null;
}, Xx = (e, t, n, r, i) => {
  if (n.trim() === "")
    return !0;
  const s = sm(e, r, i), o = sm(n, r, i), l = sm(t, r, i);
  return s <= o && o <= l;
}, sm = (e, t, n) => {
  const i = new RegExp(`^\\s*(\\d\\d?)${t}([0-5]\\d)${t}?([0-5]\\d)?\\s*([AaPp][Mm])?\\s*$`).exec(e);
  if (!i || !i.length)
    return;
  let s = i[1].padStart(2, "0");
  const o = i[2];
  let l = i[3] ? `${t}${i[3]}` : "";
  !l && n && (l = `${t}00`);
  const c = i[4] || "";
  return c.toUpperCase() === "PM" && s !== "12" ? s = `${parseInt(s) + 12}` : c.toUpperCase() === "AM" && s === "12" && (s = "00"), `${s}${t}${o}${l}`;
}, vA = {
  name: "OutlinedClockIcon",
  height: 512,
  width: 512,
  svgPath: "M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm61.8-104.4l-84.9-61.7c-3.1-2.3-4.9-5.9-4.9-9.7V116c0-6.6 5.4-12 12-12h32c6.6 0 12 5.4 12 12v141.7l66.8 48.6c5.4 3.9 6.5 11.4 2.6 16.8L334.6 349c-3.9 5.3-11.4 6.5-16.8 2.6z",
  yOffset: 0,
  xOffset: 0
}, yA = Qe(vA), CA = {
  name: "--pf-v5-c-date-picker__input--c-form-control--Width",
  value: "calc(10 * 1ch + calc(2rem + 0.5rem))",
  var: "var(--pf-v5-c-date-picker__input--c-form-control--Width)"
};
class Zh extends h.Component {
  constructor(t) {
    super(t), this.baseComponentRef = h.createRef(), this.toggleRef = h.createRef(), this.inputRef = h.createRef(), this.menuRef = h.createRef(), this.onDocClick = (u) => {
      var p, m, f, g;
      const b = (m = (p = this.toggleRef) === null || p === void 0 ? void 0 : p.current) === null || m === void 0 ? void 0 : m.contains(u.target), v = (g = (f = this.menuRef) === null || f === void 0 ? void 0 : f.current) === null || g === void 0 ? void 0 : g.contains(u.target);
      this.state.isTimeOptionsOpen && !(b || v) && this.onToggle(!1);
    }, this.handleGlobalKeys = (u) => {
      var p, m, f, g;
      const { isTimeOptionsOpen: b, focusedIndex: v, scrollIndex: y } = this.state;
      !((m = (p = this.inputRef) === null || p === void 0 ? void 0 : p.current) === null || m === void 0) && m.contains(u.target) ? !b && u.key !== dn.Tab && u.key !== dn.Escape ? this.onToggle(!0) : b && (u.key === dn.Escape || u.key === dn.Tab ? this.onToggle(!1) : u.key === dn.Enter ? v !== null ? (this.focusSelection(v), u.stopPropagation()) : this.onToggle(!1) : (u.key === dn.ArrowDown || u.key === dn.ArrowUp) && (this.focusSelection(y), this.updateFocusedIndex(0), u.preventDefault())) : !((g = (f = this.menuRef) === null || f === void 0 ? void 0 : f.current) === null || g === void 0) && g.contains(u.target) && (u.key === dn.ArrowDown ? (this.updateFocusedIndex(1), u.preventDefault()) : u.key === dn.ArrowUp ? (this.updateFocusedIndex(-1), u.preventDefault()) : (u.key === dn.Escape || u.key === dn.Tab) && (this.inputRef.current.focus(), this.onToggle(!1)));
    }, this.updateFocusedIndex = (u) => {
      this.setState((p) => {
        const m = this.getOptions().length - 1;
        let f = p.focusedIndex !== null ? p.focusedIndex + u : p.scrollIndex + u;
        return f < 0 ? f = m : f > m && (f = 0), this.scrollToIndex(f), {
          focusedIndex: f
        };
      });
    }, this.getIndexToScroll = (u) => this.props.menuAppendTo === "inline" ? u > 0 ? u - 1 : 0 : u, this.scrollToIndex = (u) => {
      this.getOptions()[u].closest(`.${lt.menuContent}`).scrollTop = this.getOptions()[this.getIndexToScroll(u)].offsetTop;
    }, this.focusSelection = (u) => {
      var p;
      const m = u !== -1 ? u : 0;
      !((p = this.menuRef) === null || p === void 0) && p.current && this.getOptions()[m].querySelector(`.${lt.menuItem}`).focus();
    }, this.scrollToSelection = (u) => {
      const { delimiter: p, is24Hour: m } = this.props;
      let f = u.split(this.props.delimiter), g = null;
      if (f.length < 2 ? (u = `${u}${p}00`, f = u.split(p)) : f.length > 2 && (u = li(u, this.state.timeRegex, p, !m, !1), f = u.split(p)), !m && f.length > 1 && f[1].length < 2) {
        const v = f[1].length === 0 ? "00" : f[1] + "0";
        u = `${f[0]}${p}${v}${(/* @__PURE__ */ new Date()).getHours() > 11 ? gi : hi}`;
      } else !m && f.length > 1 && f[1].length === 2 && !u.toUpperCase().includes(hi.toUpperCase().trim()) && !u.toUpperCase().includes(gi.toUpperCase().trim()) && (u = `${u}${(/* @__PURE__ */ new Date()).getHours() > 11 ? gi : hi}`);
      let b = this.getOptions().findIndex((v) => v.textContent === u);
      if (b !== -1)
        this.scrollToIndex(b), g = b;
      else if (f.length === 2) {
        let v = "";
        m || (f[1].toUpperCase().includes("P") ? v = gi : f[1].toUpperCase().includes("A") && (v = hi)), u = `${f[0]}${p}00${v}`, b = this.getOptions().findIndex((y) => y.textContent === u), b !== -1 && this.scrollToIndex(b);
      }
      this.setState({
        focusedIndex: g,
        scrollIndex: b
      });
    }, this.getRegExp = (u = !0) => {
      const { is24Hour: p, delimiter: m } = this.props;
      let f = `\\s*(\\d\\d?)${m}([0-5]\\d)`;
      return u && (f += `${m}?([0-5]\\d)?`), new RegExp(`^${f}${p ? "" : "\\s*([AaPp][Mm])?"}\\s*$`);
    }, this.getOptions = () => {
      var u;
      return !((u = this.menuRef) === null || u === void 0) && u.current ? Array.from(this.menuRef.current.querySelectorAll(`.${lt.menuListItem}`)) : [];
    }, this.isValidFormat = (u) => {
      if (this.props.validateTime)
        return this.props.validateTime(u);
      const { delimiter: p, is24Hour: m, includeSeconds: f } = this.props;
      return Wx(u, this.getRegExp(f), p, !m);
    }, this.isValidTime = (u) => {
      const { delimiter: p, includeSeconds: m } = this.props, { minTimeState: f, maxTimeState: g } = this.state;
      return Xx(f, g, u, p, m);
    }, this.isValid = (u) => this.isValidFormat(u) && this.isValidTime(u), this.onToggle = (u) => {
      this.setState((p) => {
        const { timeRegex: m, isInvalid: f, timeState: g } = p, { delimiter: b, is24Hour: v, includeSeconds: y, onChange: x } = this.props, w = li(g, m, b, !v, y);
        return x && !u && w !== g && x(null, w, Pv(w, m), _v(w, m), Rv(w, m), this.isValid(w)), {
          isTimeOptionsOpen: u,
          timeState: w,
          isInvalid: u ? f : !this.isValid(w)
        };
      }), this.props.setIsOpen(u), u || this.inputRef.current.focus();
    }, this.onSelect = (u) => {
      const { timeRegex: p, timeState: m } = this.state, { delimiter: f, is24Hour: g, includeSeconds: b, setIsOpen: v } = this.props, y = li(u.target.textContent, p, f, !g, b);
      y !== m && this.onInputChange(u, y), this.inputRef.current.focus(), this.setState({
        isTimeOptionsOpen: !1,
        isInvalid: !1
      }), v(!1);
    }, this.onInputClick = (u) => {
      this.state.isTimeOptionsOpen || this.onToggle(!0), u.stopPropagation();
    }, this.onInputChange = (u, p) => {
      const { onChange: m } = this.props, { timeRegex: f } = this.state;
      m && m(u, p, Pv(p, f), _v(p, f), Rv(p, f), this.isValid(p)), this.scrollToSelection(p), this.setState({
        timeState: p
      });
    };
    const { is24Hour: n, delimiter: r, time: i, includeSeconds: s, isOpen: o } = this.props;
    let { minTime: l, maxTime: c } = this.props;
    if (l === "") {
      const u = s ? `${r}00` : "";
      l = n ? `00${r}00${u}` : `12${r}00${u} AM`;
    }
    if (c === "") {
      const u = s ? `${r}59` : "";
      c = n ? `23${r}59${u}` : `11${r}59${u} PM`;
    }
    const d = this.getRegExp();
    this.state = {
      isInvalid: !1,
      isTimeOptionsOpen: o,
      timeState: li(i, d, r, !n, s),
      focusedIndex: null,
      scrollIndex: 0,
      timeRegex: d,
      minTimeState: li(l, d, r, !n, s),
      maxTimeState: li(c, d, r, !n, s)
    };
  }
  componentDidMount() {
    document.addEventListener("mousedown", this.onDocClick), document.addEventListener("touchstart", this.onDocClick), document.addEventListener("keydown", this.handleGlobalKeys), this.setState({ isInvalid: !this.isValid(this.state.timeState) });
  }
  componentWillUnmount() {
    document.removeEventListener("mousedown", this.onDocClick), document.removeEventListener("touchstart", this.onDocClick), document.removeEventListener("keydown", this.handleGlobalKeys);
  }
  componentDidUpdate(t, n) {
    const { timeState: r, isTimeOptionsOpen: i, isInvalid: s, timeRegex: o } = this.state, { time: l, is24Hour: c, delimiter: d, includeSeconds: u, isOpen: p, minTime: m, maxTime: f } = this.props;
    if (t.isOpen !== p && this.onToggle(p), i && !n.isTimeOptionsOpen && r && !s && this.scrollToSelection(r), d !== t.delimiter && this.setState({
      timeRegex: this.getRegExp()
    }), l !== "" && l !== t.time) {
      const g = li(l, o, d, !c, u);
      this.setState({
        timeState: g,
        isInvalid: !this.isValid(g)
      });
    }
    m !== "" && m !== t.minTime && this.setState({
      minTimeState: li(m, o, d, !c, u)
    }), f !== "" && f !== t.maxTime && this.setState({
      maxTimeState: li(f, o, d, !c, u)
    });
  }
  render() {
    const t = this.props, {
      "aria-label": n,
      isDisabled: r,
      className: i,
      placeholder: s,
      id: o,
      menuAppendTo: l,
      is24Hour: c,
      invalidFormatErrorMessage: d,
      invalidMinMaxErrorMessage: u,
      stepMinutes: p,
      width: m,
      delimiter: f,
      inputProps: g,
      /* eslint-disable @typescript-eslint/no-unused-vars */
      onChange: b,
      /* eslint-disable @typescript-eslint/no-unused-vars */
      setIsOpen: v,
      /* eslint-disable @typescript-eslint/no-unused-vars */
      isOpen: y,
      time: x,
      validateTime: w,
      minTime: R,
      maxTime: S,
      includeSeconds: _,
      zIndex: O
    } = t, E = oe(t, ["aria-label", "isDisabled", "className", "placeholder", "id", "menuAppendTo", "is24Hour", "invalidFormatErrorMessage", "invalidMinMaxErrorMessage", "stepMinutes", "width", "delimiter", "inputProps", "onChange", "setIsOpen", "isOpen", "time", "validateTime", "minTime", "maxTime", "includeSeconds", "zIndex"]), { timeState: T, isTimeOptionsOpen: I, isInvalid: k, minTimeState: P, maxTimeState: D } = this.state, F = { [CA.name]: m }, A = bA(p, !c, f, P, D, _), M = this.isValidFormat(T), V = o || Si("time-picker"), U = () => this.baseComponentRef && this.baseComponentRef.current ? this.baseComponentRef.current.parentElement : null, G = h.createElement(
      as,
      { ref: this.menuRef, isScrollable: !0 },
      h.createElement(
        Xo,
        { maxMenuHeight: "200px" },
        h.createElement(Jo, { "aria-label": n }, A.map((K, B) => h.createElement(Yo, { onClick: this.onSelect, key: K, id: `${V}-option-${B}` }, K)))
      )
    ), q = h.createElement(mt, Object.assign({ "aria-haspopup": "menu", id: `${V}-input`, "aria-label": n, validated: k ? "error" : "default", placeholder: s, value: T || "", type: "text", customIcon: h.createElement(yA, null), onClick: this.onInputClick, onChange: this.onInputChange, autoComplete: "off", isDisabled: r, isExpanded: I, ref: this.inputRef }, g));
    let L;
    switch (l) {
      case "inline":
        L = () => this.toggleRef.current;
        break;
      case "parent":
        L = U;
        break;
      default:
        L = l;
    }
    return h.createElement(
      "div",
      { ref: this.baseComponentRef, className: $(Co.datePicker, i) },
      h.createElement(
        "div",
        Object.assign({ className: $(Co.datePickerInput), style: F }, E),
        h.createElement(
          Qt,
          null,
          h.createElement(
            dt,
            null,
            h.createElement(
              "div",
              { id: V },
              h.createElement(
                "div",
                { ref: this.toggleRef, style: { paddingLeft: "0" } },
                h.createElement(Qr, { appendTo: L, trigger: q, triggerRef: this.toggleRef, popper: G, popperRef: this.menuRef, isVisible: I, zIndex: O })
              )
            )
          )
        ),
        k && h.createElement(
          "div",
          { className: $(Co.datePickerHelperText) },
          h.createElement(
            Xr,
            null,
            h.createElement(Yr, { variant: "error" }, M ? u : d)
          )
        )
      )
    );
  }
}
Zh.displayName = "TimePicker";
Zh.defaultProps = {
  className: "",
  isDisabled: !1,
  time: "",
  is24Hour: !1,
  invalidFormatErrorMessage: "Invalid time format",
  invalidMinMaxErrorMessage: "Invalid time entered",
  placeholder: "hh:mm",
  delimiter: ":",
  "aria-label": "Time picker",
  width: "150px",
  menuAppendTo: "inline",
  stepMinutes: 30,
  inputProps: {},
  minTime: "",
  maxTime: "",
  isOpen: !1,
  setIsOpen: () => {
  },
  zIndex: 9999
};
const vt = {
  button: "pf-v5-c-button",
  chipGroup: "pf-v5-c-chip-group",
  divider: "pf-v5-c-divider",
  modifiers: {
    hidden: "pf-m-hidden",
    hiddenOnSm: "pf-m-hidden-on-sm",
    visibleOnSm: "pf-m-visible-on-sm",
    hiddenOnMd: "pf-m-hidden-on-md",
    visibleOnMd: "pf-m-visible-on-md",
    hiddenOnLg: "pf-m-hidden-on-lg",
    visibleOnLg: "pf-m-visible-on-lg",
    hiddenOnXl: "pf-m-hidden-on-xl",
    visibleOnXl: "pf-m-visible-on-xl",
    hiddenOn_2xl: "pf-m-hidden-on-2xl",
    visibleOn_2xl: "pf-m-visible-on-2xl",
    pageInsets: "pf-m-page-insets",
    sticky: "pf-m-sticky",
    fullHeight: "pf-m-full-height",
    static: "pf-m-static",
    vertical: "pf-m-vertical",
    alignItemsStart: "pf-m-align-items-start",
    alignItemsCenter: "pf-m-align-items-center",
    alignItemsBaseline: "pf-m-align-items-baseline",
    alignSelfStart: "pf-m-align-self-start",
    alignSelfCenter: "pf-m-align-self-center",
    alignSelfBaseline: "pf-m-align-self-baseline",
    buttonGroup: "pf-m-button-group",
    iconButtonGroup: "pf-m-icon-button-group",
    filterGroup: "pf-m-filter-group",
    toggleGroup: "pf-m-toggle-group",
    overflowMenu: "pf-m-overflow-menu",
    bulkSelect: "pf-m-bulk-select",
    expandAll: "pf-m-expand-all",
    expanded: "pf-m-expanded",
    searchFilter: "pf-m-search-filter",
    chipGroup: "pf-m-chip-group",
    label: "pf-m-label",
    formElement: "pf-m-form-element",
    pagination: "pf-m-pagination",
    overflowContainer: "pf-m-overflow-container",
    chipContainer: "pf-m-chip-container",
    plain: "pf-m-plain",
    show: "pf-m-show",
    showOnSm: "pf-m-show-on-sm",
    showOnMd: "pf-m-show-on-md",
    showOnLg: "pf-m-show-on-lg",
    showOnXl: "pf-m-show-on-xl",
    showOn_2xl: "pf-m-show-on-2xl",
    alignRight: "pf-m-align-right",
    alignLeft: "pf-m-align-left",
    nowrap: "pf-m-nowrap",
    wrap: "pf-m-wrap",
    alignRightOnSm: "pf-m-align-right-on-sm",
    alignLeftOnSm: "pf-m-align-left-on-sm",
    nowrapOnSm: "pf-m-nowrap-on-sm",
    wrapOnSm: "pf-m-wrap-on-sm",
    alignRightOnMd: "pf-m-align-right-on-md",
    alignLeftOnMd: "pf-m-align-left-on-md",
    nowrapOnMd: "pf-m-nowrap-on-md",
    wrapOnMd: "pf-m-wrap-on-md",
    alignRightOnLg: "pf-m-align-right-on-lg",
    alignLeftOnLg: "pf-m-align-left-on-lg",
    nowrapOnLg: "pf-m-nowrap-on-lg",
    wrapOnLg: "pf-m-wrap-on-lg",
    alignRightOnXl: "pf-m-align-right-on-xl",
    alignLeftOnXl: "pf-m-align-left-on-xl",
    nowrapOnXl: "pf-m-nowrap-on-xl",
    wrapOnXl: "pf-m-wrap-on-xl",
    alignRightOn_2xl: "pf-m-align-right-on-2xl",
    alignLeftOn_2xl: "pf-m-align-left-on-2xl",
    nowrapOn_2xl: "pf-m-nowrap-on-2xl",
    wrapOn_2xl: "pf-m-wrap-on-2xl",
    spaceItemsNone: "pf-m-space-items-none",
    spaceItemsSm: "pf-m-space-items-sm",
    spaceItemsMd: "pf-m-space-items-md",
    spaceItemsLg: "pf-m-space-items-lg",
    spaceItemsNoneOnSm: "pf-m-space-items-none-on-sm",
    spaceItemsSmOnSm: "pf-m-space-items-sm-on-sm",
    spaceItemsMdOnSm: "pf-m-space-items-md-on-sm",
    spaceItemsLgOnSm: "pf-m-space-items-lg-on-sm",
    spaceItemsNoneOnMd: "pf-m-space-items-none-on-md",
    spaceItemsSmOnMd: "pf-m-space-items-sm-on-md",
    spaceItemsMdOnMd: "pf-m-space-items-md-on-md",
    spaceItemsLgOnMd: "pf-m-space-items-lg-on-md",
    spaceItemsNoneOnLg: "pf-m-space-items-none-on-lg",
    spaceItemsSmOnLg: "pf-m-space-items-sm-on-lg",
    spaceItemsMdOnLg: "pf-m-space-items-md-on-lg",
    spaceItemsLgOnLg: "pf-m-space-items-lg-on-lg",
    spaceItemsNoneOnXl: "pf-m-space-items-none-on-xl",
    spaceItemsSmOnXl: "pf-m-space-items-sm-on-xl",
    spaceItemsMdOnXl: "pf-m-space-items-md-on-xl",
    spaceItemsLgOnXl: "pf-m-space-items-lg-on-xl",
    spaceItemsNoneOn_2xl: "pf-m-space-items-none-on-2xl",
    spaceItemsSmOn_2xl: "pf-m-space-items-sm-on-2xl",
    spaceItemsMdOn_2xl: "pf-m-space-items-md-on-2xl",
    spaceItemsLgOn_2xl: "pf-m-space-items-lg-on-2xl",
    spacerNone: "pf-m-spacer-none",
    spacerSm: "pf-m-spacer-sm",
    spacerMd: "pf-m-spacer-md",
    spacerLg: "pf-m-spacer-lg",
    spacerNoneOnSm: "pf-m-spacer-none-on-sm",
    spacerSmOnSm: "pf-m-spacer-sm-on-sm",
    spacerMdOnSm: "pf-m-spacer-md-on-sm",
    spacerLgOnSm: "pf-m-spacer-lg-on-sm",
    spacerNoneOnMd: "pf-m-spacer-none-on-md",
    spacerSmOnMd: "pf-m-spacer-sm-on-md",
    spacerMdOnMd: "pf-m-spacer-md-on-md",
    spacerLgOnMd: "pf-m-spacer-lg-on-md",
    spacerNoneOnLg: "pf-m-spacer-none-on-lg",
    spacerSmOnLg: "pf-m-spacer-sm-on-lg",
    spacerMdOnLg: "pf-m-spacer-md-on-lg",
    spacerLgOnLg: "pf-m-spacer-lg-on-lg",
    spacerNoneOnXl: "pf-m-spacer-none-on-xl",
    spacerSmOnXl: "pf-m-spacer-sm-on-xl",
    spacerMdOnXl: "pf-m-spacer-md-on-xl",
    spacerLgOnXl: "pf-m-spacer-lg-on-xl",
    spacerNoneOn_2xl: "pf-m-spacer-none-on-2xl",
    spacerSmOn_2xl: "pf-m-spacer-sm-on-2xl",
    spacerMdOn_2xl: "pf-m-spacer-md-on-2xl",
    spacerLgOn_2xl: "pf-m-spacer-lg-on-2xl",
    insetNone: "pf-m-inset-none",
    insetSm: "pf-m-inset-sm",
    insetMd: "pf-m-inset-md",
    insetLg: "pf-m-inset-lg",
    insetXl: "pf-m-inset-xl",
    inset_2xl: "pf-m-inset-2xl",
    insetNoneOnSm: "pf-m-inset-none-on-sm",
    insetSmOnSm: "pf-m-inset-sm-on-sm",
    insetMdOnSm: "pf-m-inset-md-on-sm",
    insetLgOnSm: "pf-m-inset-lg-on-sm",
    insetXlOnSm: "pf-m-inset-xl-on-sm",
    inset_2xlOnSm: "pf-m-inset-2xl-on-sm",
    insetNoneOnMd: "pf-m-inset-none-on-md",
    insetSmOnMd: "pf-m-inset-sm-on-md",
    insetMdOnMd: "pf-m-inset-md-on-md",
    insetLgOnMd: "pf-m-inset-lg-on-md",
    insetXlOnMd: "pf-m-inset-xl-on-md",
    inset_2xlOnMd: "pf-m-inset-2xl-on-md",
    insetNoneOnLg: "pf-m-inset-none-on-lg",
    insetSmOnLg: "pf-m-inset-sm-on-lg",
    insetMdOnLg: "pf-m-inset-md-on-lg",
    insetLgOnLg: "pf-m-inset-lg-on-lg",
    insetXlOnLg: "pf-m-inset-xl-on-lg",
    inset_2xlOnLg: "pf-m-inset-2xl-on-lg",
    insetNoneOnXl: "pf-m-inset-none-on-xl",
    insetSmOnXl: "pf-m-inset-sm-on-xl",
    insetMdOnXl: "pf-m-inset-md-on-xl",
    insetLgOnXl: "pf-m-inset-lg-on-xl",
    insetXlOnXl: "pf-m-inset-xl-on-xl",
    inset_2xlOnXl: "pf-m-inset-2xl-on-xl",
    insetNoneOn_2xl: "pf-m-inset-none-on-2xl",
    insetSmOn_2xl: "pf-m-inset-sm-on-2xl",
    insetMdOn_2xl: "pf-m-inset-md-on-2xl",
    insetLgOn_2xl: "pf-m-inset-lg-on-2xl",
    insetXlOn_2xl: "pf-m-inset-xl-on-2xl",
    inset_2xlOn_2xl: "pf-m-inset-2xl-on-2xl"
  },
  pagination: "pf-v5-c-pagination",
  toolbar: "pf-v5-c-toolbar",
  toolbarContent: "pf-v5-c-toolbar__content",
  toolbarContentSection: "pf-v5-c-toolbar__content-section",
  toolbarExpandAllIcon: "pf-v5-c-toolbar__expand-all-icon",
  toolbarExpandableContent: "pf-v5-c-toolbar__expandable-content",
  toolbarGroup: "pf-v5-c-toolbar__group",
  toolbarItem: "pf-v5-c-toolbar__item",
  toolbarToggle: "pf-v5-c-toolbar__toggle"
}, Yx = h.createContext({
  isExpanded: !1,
  toggleIsExpanded: () => {
  },
  chipGroupContentRef: null,
  updateNumberFilters: () => {
  },
  numberOfFilters: 0,
  clearAllFilters: () => {
  }
}), xA = h.createContext({
  expandableContentRef: null,
  expandableContentId: "",
  chipContainerRef: null,
  clearAllFilters: () => {
  }
}), SA = {
  md: parseInt(e1.value),
  lg: parseInt(t1.value),
  xl: parseInt(ch.value),
  "2xl": parseInt(n1.value)
}, wA = {
  name: "--pf-v5-c-toolbar__item--Width",
  value: "auto",
  var: "var(--pf-v5-c-toolbar__item--Width)"
};
var Sf;
(function(e) {
  e.separator = "separator", e["bulk-select"] = "bulk-select", e["overflow-menu"] = "overflow-menu", e.pagination = "pagination", e["search-filter"] = "search-filter", e.label = "label", e["chip-group"] = "chip-group", e["expand-all"] = "expand-all";
})(Sf || (Sf = {}));
const je = (e) => {
  var { className: t, variant: n, visibility: r, spacer: i, widths: s, align: o, alignSelf: l, alignItems: c, id: d, children: u, isAllExpanded: p, isOverflowContainer: m } = e, f = oe(e, ["className", "variant", "visibility", "spacer", "widths", "align", "alignSelf", "alignItems", "id", "children", "isAllExpanded", "isOverflowContainer"]);
  if (n === Sf.separator)
    return h.createElement(_t, Object.assign({ className: $(vt.modifiers.vertical, t) }, f));
  const g = {};
  return s && Object.entries(s || {}).map(([b, v]) => g[`${wA.name}${b !== "default" ? `-on-${b}` : ""}`] = v), h.createElement(Li.Consumer, null, ({ width: b, getBreakpoint: v }) => h.createElement("div", Object.assign({ className: $(vt.toolbarItem, n && vt.modifiers[Vl(n)], p && vt.modifiers.expanded, m && vt.modifiers.overflowContainer, ut(r, vt, "", v(b)), ut(o, vt, "", v(b)), ut(i, vt, "", v(b)), c === "start" && vt.modifiers.alignItemsStart, c === "center" && vt.modifiers.alignItemsCenter, c === "baseline" && vt.modifiers.alignItemsBaseline, l === "start" && vt.modifiers.alignSelfStart, l === "center" && vt.modifiers.alignSelfCenter, l === "baseline" && vt.modifiers.alignSelfBaseline, t) }, n === "label" && { "aria-hidden": !0 }, { id: d }, f, s && { style: Object.assign(Object.assign({}, g), f.style) }), u));
};
je.displayName = "ToolbarItem";
var Av;
(function(e) {
  e["filter-group"] = "filter-group", e["icon-button-group"] = "icon-button-group", e["button-group"] = "button-group";
})(Av || (Av = {}));
class kA extends h.Component {
  render() {
    const t = this.props, { visibility: n, align: r, alignItems: i, alignSelf: s, spacer: o, spaceItems: l, className: c, variant: d, children: u, isOverflowContainer: p, innerRef: m } = t, f = oe(t, ["visibility", "align", "alignItems", "alignSelf", "spacer", "spaceItems", "className", "variant", "children", "isOverflowContainer", "innerRef"]);
    return h.createElement(Li.Consumer, null, ({ width: g, getBreakpoint: b }) => h.createElement("div", Object.assign({ className: $(vt.toolbarGroup, d && vt.modifiers[Vl(d)], ut(n, vt, "", b(g)), ut(r, vt, "", b(g)), ut(o, vt, "", b(g)), ut(l, vt, "", b(g)), i === "start" && vt.modifiers.alignItemsStart, i === "center" && vt.modifiers.alignItemsCenter, i === "baseline" && vt.modifiers.alignItemsBaseline, s === "start" && vt.modifiers.alignSelfStart, s === "center" && vt.modifiers.alignSelfCenter, s === "baseline" && vt.modifiers.alignSelfBaseline, p && vt.modifiers.overflowContainer, c) }, f, { ref: m }), u));
  }
}
const cu = h.forwardRef((e, t) => h.createElement(kA, Object.assign({}, e, { innerRef: t })));
class Qh extends h.Component {
  render() {
    const t = this.props, { className: n, isExpanded: r, chipGroupContentRef: i, clearAllFilters: s, showClearFiltersButton: o, clearFiltersButtonText: l, collapseListedFiltersBreakpoint: c, numberOfFilters: d, numberOfFiltersText: u, customChipGroupContent: p } = t, m = oe(t, ["className", "isExpanded", "chipGroupContentRef", "clearAllFilters", "showClearFiltersButton", "clearFiltersButtonText", "collapseListedFiltersBreakpoint", "numberOfFilters", "numberOfFiltersText", "customChipGroupContent"]), f = () => {
      s();
    };
    let g = !1;
    c === "all" ? g = !0 : Sn && (g = (Sn ? window.innerWidth : 1200) < SA[c]);
    const b = d === 0 || r;
    return h.createElement(
      "div",
      Object.assign({ className: $(vt.toolbarContent, !b && !g && vt.modifiers.chipContainer, b && vt.modifiers.hidden, n) }, (d === 0 || r) && { hidden: !0 }, { ref: i }, m),
      h.createElement(cu, Object.assign({ className: $(g && vt.modifiers.hidden) }, g && { hidden: !0 }, g && { "aria-hidden": !0 })),
      g && d > 0 && !r && h.createElement(
        cu,
        null,
        h.createElement(je, null, u(d))
      ),
      o && !r && !p && h.createElement(
        je,
        null,
        h.createElement(z, { variant: "link", onClick: f, isInline: !0 }, l)
      ),
      p && p
    );
  }
}
Qh.displayName = "ToolbarChipGroupContent";
Qh.defaultProps = {
  clearFiltersButtonText: "Clear all filters",
  collapseListedFiltersBreakpoint: "lg",
  numberOfFiltersText: (e) => `${e} filters applied`
};
class Sa extends h.Component {
  constructor() {
    super(...arguments), this.chipGroupContentRef = h.createRef(), this.staticFilterInfo = {}, this.state = {
      isManagedToggleExpanded: !1,
      filterInfo: {},
      windowWidth: Sn ? window.innerWidth : 1200,
      ouiaStateId: cr(Sa.displayName)
    }, this.isToggleManaged = () => !(this.props.isExpanded || this.props.toggleIsExpanded), this.toggleIsExpanded = () => {
      this.setState((t) => ({
        isManagedToggleExpanded: !t.isManagedToggleExpanded
      }));
    }, this.closeExpandableContent = (t) => {
      t.target.innerWidth !== this.state.windowWidth && this.setState(() => ({
        isManagedToggleExpanded: !1,
        windowWidth: t.target.innerWidth
      }));
    }, this.updateNumberFilters = (t, n) => {
      const r = Object.assign({}, this.staticFilterInfo);
      (!r.hasOwnProperty(t) || r[t] !== n) && (r[t] = n, this.staticFilterInfo = r, this.setState({ filterInfo: r }));
    }, this.getNumberOfFilters = () => Object.values(this.state.filterInfo).reduce((t, n) => t + n, 0), this.renderToolbar = (t) => {
      const n = this.props, { clearAllFilters: r, clearFiltersButtonText: i, collapseListedFiltersBreakpoint: s, isExpanded: o, toggleIsExpanded: l, className: c, children: d, isFullHeight: u, isStatic: p, inset: m, usePageInsets: f, isSticky: g, ouiaId: b, numberOfFiltersText: v, customChipGroupContent: y } = n, x = oe(n, ["clearAllFilters", "clearFiltersButtonText", "collapseListedFiltersBreakpoint", "isExpanded", "toggleIsExpanded", "className", "children", "isFullHeight", "isStatic", "inset", "usePageInsets", "isSticky", "ouiaId", "numberOfFiltersText", "customChipGroupContent"]), { isManagedToggleExpanded: w } = this.state, R = this.isToggleManaged(), S = R ? w : o, _ = this.getNumberOfFilters(), O = _ > 0;
      return h.createElement(Li.Consumer, null, ({ width: E, getBreakpoint: T }) => h.createElement(
        "div",
        Object.assign({ className: $(vt.toolbar, u && vt.modifiers.fullHeight, p && vt.modifiers.static, f && vt.modifiers.pageInsets, g && vt.modifiers.sticky, ut(m, vt, "", T(E)), c), id: t }, Yn(Sa.displayName, b !== void 0 ? b : this.state.ouiaStateId), x),
        h.createElement(
          Yx.Provider,
          { value: {
            isExpanded: S,
            toggleIsExpanded: R ? this.toggleIsExpanded : l,
            chipGroupContentRef: this.chipGroupContentRef,
            updateNumberFilters: this.updateNumberFilters,
            numberOfFilters: _,
            clearAllFilters: r,
            clearFiltersButtonText: i,
            showClearFiltersButton: O,
            toolbarId: t,
            customChipGroupContent: y
          } },
          d,
          h.createElement(Qh, { isExpanded: S, chipGroupContentRef: this.chipGroupContentRef, clearAllFilters: r, showClearFiltersButton: O, clearFiltersButtonText: i, numberOfFilters: _, numberOfFiltersText: v, collapseListedFiltersBreakpoint: s, customChipGroupContent: y })
        )
      ));
    };
  }
  componentDidMount() {
    this.isToggleManaged() && Sn && window.addEventListener("resize", this.closeExpandableContent);
  }
  componentWillUnmount() {
    this.isToggleManaged() && Sn && window.removeEventListener("resize", this.closeExpandableContent);
  }
  render() {
    return this.props.id ? this.renderToolbar(this.props.id) : h.createElement($a, null, (t) => this.renderToolbar(t));
  }
}
Sa.displayName = "Toolbar";
class rr extends h.Component {
  constructor() {
    super(...arguments), this.expandableContentRef = h.createRef(), this.chipContainerRef = h.createRef();
  }
  render() {
    const t = this.props, { className: n, children: r, isExpanded: i, toolbarId: s, visibility: o, alignItems: l, clearAllFilters: c, showClearFiltersButton: d, clearFiltersButtonText: u, alignSelf: p } = t, m = oe(t, ["className", "children", "isExpanded", "toolbarId", "visibility", "alignItems", "clearAllFilters", "showClearFiltersButton", "clearFiltersButtonText", "alignSelf"]);
    return h.createElement(Li.Consumer, null, ({ width: f, getBreakpoint: g }) => h.createElement(
      "div",
      Object.assign({ className: $(vt.toolbarContent, ut(o, vt, "", g(f)), n), ref: this.expandableContentRef }, m),
      h.createElement(Yx.Consumer, null, ({ clearAllFilters: b, clearFiltersButtonText: v, showClearFiltersButton: y, isExpanded: x, toolbarId: w }) => {
        const R = `${s || w}-expandable-content-${rr.currentId++}`;
        return h.createElement(
          xA.Provider,
          { value: {
            expandableContentRef: this.expandableContentRef,
            expandableContentId: R,
            chipContainerRef: this.chipContainerRef,
            isExpanded: i || x,
            clearAllFilters: c || b,
            clearFiltersButtonText: u || v,
            showClearFiltersButton: d || y
          } },
          h.createElement("div", { className: $(vt.toolbarContentSection, l === "center" && vt.modifiers.alignItemsCenter, l === "start" && vt.modifiers.alignItemsStart, l === "baseline" && vt.modifiers.alignItemsBaseline, p === "center" && vt.modifiers.alignSelfCenter, p === "start" && vt.modifiers.alignSelfStart, p === "baseline" && vt.modifiers.alignSelfBaseline) }, r)
        );
      })
    ));
  }
}
rr.displayName = "ToolbarContent";
rr.currentId = 0;
rr.defaultProps = {
  isExpanded: !1,
  showClearFiltersButton: !1
};
const El = {
  formControl: "pf-v5-c-form-control",
  inputGroup: "pf-v5-c-input-group",
  modifiers: {
    status: "pf-m-status"
  },
  numberInput: "pf-v5-c-number-input",
  numberInputIcon: "pf-v5-c-number-input__icon",
  numberInputUnit: "pf-v5-c-number-input__unit"
}, OA = {
  name: "--pf-v5-c-number-input--c-form-control--width-chars",
  value: "4",
  var: "var(--pf-v5-c-number-input--c-form-control--width-chars)"
}, TA = (e) => (t) => {
  dn.ArrowUp === t.key && e.onPlus && (t.preventDefault(), e.onPlus(null, e.inputName)), dn.ArrowDown === t.key && e.onMinus && (t.preventDefault(), e.onMinus(null, e.inputName));
}, is = (e) => {
  var { value: t = 0, className: n, widthChars: r, isDisabled: i = !1, validated: s = Pn.default, onMinus: o = () => {
  }, onChange: l, onBlur: c, onPlus: d = () => {
  }, unit: u, unitPosition: p = "after", min: m, max: f, inputName: g, inputAriaLabel: b = "Input", minusBtnAriaLabel: v = "Minus", plusBtnAriaLabel: y = "Plus", inputProps: x, minusBtnProps: w, plusBtnProps: R } = e, S = oe(e, ["value", "className", "widthChars", "isDisabled", "validated", "onMinus", "onChange", "onBlur", "onPlus", "unit", "unitPosition", "min", "max", "inputName", "inputAriaLabel", "minusBtnAriaLabel", "plusBtnAriaLabel", "inputProps", "minusBtnProps", "plusBtnProps"]);
  const _ = h.createElement("div", { className: $(El.numberInputUnit) }, u), O = x && x.onKeyDown ? x.onKeyDown : TA({ inputName: g, onMinus: o, onPlus: d }), E = (T) => {
    T.target.value = Number(T.target.value).toString(), l && l(T), c && c(T);
  };
  return h.createElement(
    "div",
    Object.assign({ className: $(El.numberInput, s !== "default" && El.modifiers.status, n) }, r && {
      style: Object.assign({ [OA.name]: r }, S.style)
    }, S),
    u && p === "before" && _,
    h.createElement(
      Qt,
      null,
      h.createElement(
        dt,
        null,
        h.createElement(
          z,
          Object.assign({ variant: "control", "aria-label": v, isDisabled: i || t <= m, onClick: (T) => o(T, g) }, w),
          h.createElement(
            "span",
            { className: $(El.numberInputIcon) },
            h.createElement(sx, { "aria-hidden": "true" })
          )
        )
      ),
      h.createElement(
        dt,
        null,
        h.createElement(mt, Object.assign({}, x, { type: "number", value: t, name: g, "aria-label": b }, i && { isDisabled: i }, l && { onChange: (T, I) => l(T) }, { onBlur: E }, !l && { readOnlyVariant: "default" }, { onKeyDown: O, validated: s }))
      ),
      h.createElement(
        dt,
        null,
        h.createElement(
          z,
          Object.assign({ variant: "control", "aria-label": y, isDisabled: i || t >= f, onClick: (T) => d(T, g) }, R),
          h.createElement(
            "span",
            { className: $(El.numberInputIcon) },
            h.createElement(qx, { "aria-hidden": "true" })
          )
        )
      )
    ),
    u && p === "after" && _
  );
};
is.displayName = "NumberInput";
const Bt = {
  badge: "pf-v5-c-badge",
  dirRtl: "pf-v5-m-dir-rtl",
  modifiers: {
    compact: "pf-m-compact",
    guides: "pf-m-guides",
    expanded: "pf-m-expanded",
    noBackground: "pf-m-no-background",
    current: "pf-m-current",
    read: "pf-m-read",
    selectable: "pf-m-selectable",
    truncate: "pf-m-truncate"
  },
  themeDark: "pf-v5-theme-dark",
  treeView: "pf-v5-c-tree-view",
  treeViewAction: "pf-v5-c-tree-view__action",
  treeViewContent: "pf-v5-c-tree-view__content",
  treeViewListItem: "pf-v5-c-tree-view__list-item",
  treeViewNode: "pf-v5-c-tree-view__node",
  treeViewNodeCheck: "pf-v5-c-tree-view__node-check",
  treeViewNodeContainer: "pf-v5-c-tree-view__node-container",
  treeViewNodeContent: "pf-v5-c-tree-view__node-content",
  treeViewNodeCount: "pf-v5-c-tree-view__node-count",
  treeViewNodeIcon: "pf-v5-c-tree-view__node-icon",
  treeViewNodeText: "pf-v5-c-tree-view__node-text",
  treeViewNodeTitle: "pf-v5-c-tree-view__node-title",
  treeViewNodeToggle: "pf-v5-c-tree-view__node-toggle",
  treeViewNodeToggleIcon: "pf-v5-c-tree-view__node-toggle-icon",
  treeViewSearch: "pf-v5-c-tree-view__search"
}, Jx = (e) => {
  var { isNested: t = !1, toolbar: n, children: r } = e, i = oe(e, ["isNested", "toolbar", "children"]);
  return h.createElement(
    h.Fragment,
    null,
    n && h.createElement(
      h.Fragment,
      null,
      n,
      h.createElement(_t, null)
    ),
    h.createElement("ul", Object.assign({ className: $(`${Bt.treeView}__list`), role: t ? "group" : "tree" }, i), r)
  );
};
Jx.displayName = "TreeViewList";
const EA = ({
  name: e,
  title: t,
  id: n,
  isExpanded: r,
  defaultExpanded: i = !1,
  children: s = null,
  onSelect: o,
  onExpand: l,
  onCollapse: c,
  onCheck: d,
  hasCheckbox: u = !1,
  checkProps: p = {
    checked: !1
  },
  hasBadge: m = !1,
  customBadgeContent: f,
  badgeProps: g = { isRead: !0 },
  isSelectable: b = !1,
  isCompact: v,
  activeItems: y = [],
  itemData: x,
  parentItem: w,
  icon: R,
  expandedIcon: S,
  action: _,
  compareItems: O,
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  useMemo: E
}) => {
  const [T, I] = N(i);
  He(() => {
    r != null ? I(r) : i != null && I(T || i);
  }, [r, i]);
  let k = "button";
  u ? k = "label" : b && (k = "div");
  const P = u || b ? "button" : "span", D = (U) => re.createElement(
    P,
    Object.assign({ className: $(Bt.treeViewNodeToggle), onClick: (G) => {
      (b || u) && (T ? c && c(G, x, w) : l && l(G, x, w), I(!T)), b && G.stopPropagation();
    } }, (u || b) && { "aria-labelledby": `label-${U}` }, P === "button" && { type: "button" }, { tabIndex: -1 }),
    re.createElement(
      "span",
      { className: $(Bt.treeViewNodeToggleIcon) },
      re.createElement(Nn, { "aria-hidden": "true" })
    )
  ), F = (U) => re.createElement(
    "span",
    { className: $(Bt.treeViewNodeCheck) },
    re.createElement("input", Object.assign({ type: "checkbox", onChange: (G) => d && d(G, x, w), onClick: (G) => G.stopPropagation(), ref: (G) => G && (G.indeterminate = p.checked === null) }, p, { checked: p.checked === null ? !1 : p.checked, id: U, tabIndex: -1 }))
  ), A = re.createElement(
    "span",
    { className: $(Bt.treeViewNodeIcon) },
    !T && R,
    T && (S || R)
  ), M = () => {
    const U = re.createElement(
      re.Fragment,
      null,
      v && t && re.createElement("span", { className: $(Bt.treeViewNodeTitle) }, t),
      b ? re.createElement("button", { tabIndex: -1, className: $(Bt.treeViewNodeText), type: "button" }, e) : re.createElement("span", { className: $(Bt.treeViewNodeText) }, e)
    );
    return v ? re.createElement("span", { className: $(Bt.treeViewNodeContent) }, U) : U;
  }, V = re.createElement(
    re.Fragment,
    null,
    m && s && re.createElement(
      "span",
      { className: $(Bt.treeViewNodeCount) },
      re.createElement(Wr, Object.assign({}, g), f || s.props.data.length)
    ),
    m && !s && f !== void 0 && re.createElement(
      "span",
      { className: $(Bt.treeViewNodeCount) },
      re.createElement(Wr, Object.assign({}, g), f)
    )
  );
  return re.createElement(
    "li",
    { id: n, className: $(Bt.treeViewListItem, T && Bt.modifiers.expanded), "aria-expanded": T, role: "treeitem", tabIndex: -1 },
    re.createElement(
      "div",
      { className: $(Bt.treeViewContent) },
      re.createElement($a, { prefix: b ? "selectable-id" : "checkbox-id" }, (U) => re.createElement(
        k,
        Object.assign({ className: $(Bt.treeViewNode, s && (b || u) && Bt.modifiers.selectable, (!s || b) && y && y.length > 0 && y.some((G) => O && G && O(G, x)) ? Bt.modifiers.current : ""), onClick: (G) => {
          u || (o && o(G, x, w), !b && s && G.isDefaultPrevented() !== !0 && (T ? c && c(G, x, w) : l && l(G, x, w), I(!T)));
        } }, u && { htmlFor: U }, (u || b && s) && { id: `label-${U}` }, k === "button" && { type: "button" }),
        re.createElement(
          "span",
          { className: $(Bt.treeViewNodeContainer) },
          s && D(U),
          u && F(U),
          R && A,
          M(),
          V
        )
      )),
      _ && re.createElement("div", { className: $(Bt.treeViewAction) }, _)
    ),
    T && s
  );
}, Zx = re.memo(EA, (e, t) => {
  if (!t.useMemo)
    return !1;
  const n = e.activeItems && e.activeItems.length > 0 && e.activeItems.some((i) => e.compareItems && i && e.compareItems(i, e.itemData)), r = t.activeItems && t.activeItems.length > 0 && t.activeItems.some((i) => t.compareItems && i && t.compareItems(i, t.itemData));
  return !(n || r || e.name !== t.name || e.title !== t.title || e.id !== t.id || e.isExpanded !== t.isExpanded || e.defaultExpanded !== t.defaultExpanded || e.onSelect !== t.onSelect || e.onCheck !== t.onCheck || e.onExpand !== t.onExpand || e.onCollapse !== t.onCollapse || e.hasCheckbox !== t.hasCheckbox || e.checkProps !== t.checkProps || e.hasBadge !== t.hasBadge || e.customBadgeContent !== t.customBadgeContent || e.badgeProps !== t.badgeProps || e.isCompact !== t.isCompact || e.icon !== t.icon || e.expandedIcon !== t.expandedIcon || e.action !== t.action || e.parentItem !== t.parentItem || e.itemData !== t.itemData);
});
Zx.displayName = "TreeViewListItem";
class IA extends h.Component {
  constructor() {
    super(...arguments), this.displayName = "TreeViewRoot", this.treeRef = h.createRef(), this.handleKeys = (t) => {
      var n, r, i, s, o, l, c;
      if (!this.treeRef.current.contains(t.target) || !t.target.classList.contains(Bt.treeViewNode))
        return;
      const d = document.activeElement, u = t.key, p = Array.from((n = this.treeRef.current) === null || n === void 0 ? void 0 : n.getElementsByClassName(Bt.treeViewNode)).filter((m) => !m.classList.contains("pf-m-disabled"));
      if (u === dn.Space && (d.click(), t.preventDefault()), Zd(t, p, (m) => d === m, void 0, [], void 0, !0, !0), ["ArrowLeft", "ArrowRight"].includes(u)) {
        const m = (i = (r = d?.firstElementChild) === null || r === void 0 ? void 0 : r.firstElementChild) === null || i === void 0 ? void 0 : i.classList.contains(Bt.treeViewNodeToggle), f = (s = d?.closest("li")) === null || s === void 0 ? void 0 : s.classList.contains("pf-m-expanded");
        if (u === "ArrowLeft")
          if (m && f)
            d.click();
          else {
            const g = (o = d?.closest("ul")) === null || o === void 0 ? void 0 : o.parentElement;
            if (g?.tagName !== "DIV") {
              const b = g?.querySelector("button");
              d.tabIndex = -1, b && (b.tabIndex = 0, b.focus());
            }
          }
        else if (m && !f) {
          d.tabIndex = -1, d.click();
          const g = (c = (l = d?.closest("li")) === null || l === void 0 ? void 0 : l.querySelector("ul > li")) === null || c === void 0 ? void 0 : c.querySelector("button");
          g && (g.tabIndex = 0, g.focus());
        }
        t.preventDefault();
      }
    }, this.handleKeysCheckbox = (t) => {
      var n, r, i, s, o;
      if (!this.treeRef.current.contains(t.target))
        return;
      const l = document.activeElement, c = t.key;
      c === dn.Space && (l.click(), t.preventDefault());
      const d = Array.from((n = this.treeRef.current) === null || n === void 0 ? void 0 : n.getElementsByClassName(Bt.treeViewNode));
      Zd(t, d, (u) => u.contains(l), (u) => u.querySelector("button,input"), [], void 0, !0, !0), ["ArrowLeft", "ArrowRight"].includes(c) && (c === "ArrowLeft" ? l?.tagName === "INPUT" ? !((r = l?.parentElement) === null || r === void 0) && r.previousSibling && l.parentElement.previousSibling.focus() : l?.previousSibling && (((i = l.previousElementSibling) === null || i === void 0 ? void 0 : i.tagName) === "SPAN" ? l.previousSibling.firstChild.focus() : l.previousSibling.focus()) : l?.tagName === "INPUT" ? !((s = l.parentElement) === null || s === void 0) && s.nextSibling && l.parentElement.nextSibling.focus() : l?.nextSibling && (((o = l.nextElementSibling) === null || o === void 0 ? void 0 : o.tagName) === "SPAN" ? l.nextSibling.firstChild.focus() : l.nextSibling.focus()), t.preventDefault());
    }, this.variantStyleModifiers = {
      default: "",
      compact: Bt.modifiers.compact,
      compactNoBackground: [Bt.modifiers.compact, Bt.modifiers.noBackground]
    };
  }
  componentDidMount() {
    var t;
    if (Sn && window.addEventListener("keydown", this.props.hasCheckboxes || this.props.hasSelectableNodes ? this.handleKeysCheckbox : this.handleKeys), this.props.hasCheckboxes || this.props.hasSelectableNodes) {
      const n = this.treeRef.current.getElementsByClassName(Bt.treeViewNodeToggle)[0];
      if (n && (n.tabIndex = 0), this.props.hasCheckboxes) {
        const r = this.treeRef.current.getElementsByTagName("INPUT")[0];
        r && (r.tabIndex = 0);
      }
      if (this.props.hasSelectableNodes) {
        const r = this.treeRef.current.getElementsByClassName(Bt.treeViewNodeText)[0];
        r && (r.tabIndex = 0);
      }
    } else
      ((t = this.treeRef.current) === null || t === void 0 ? void 0 : t.getElementsByClassName(Bt.treeViewNode)[0]).tabIndex = 0;
  }
  componentWillUnmount() {
    Sn && window.removeEventListener("keydown", this.props.hasCheckboxes || this.props.hasSelectableNodes ? this.handleKeysCheckbox : this.handleKeys);
  }
  render() {
    const t = this.props, { children: n, hasCheckboxes: r, hasGuides: i, variant: s, className: o, hasSelectableNodes: l } = t, c = oe(t, ["children", "hasCheckboxes", "hasGuides", "variant", "className", "hasSelectableNodes"]);
    return h.createElement("div", Object.assign({ className: $(Bt.treeView, i && Bt.modifiers.guides, this.variantStyleModifiers[s], o), ref: this.treeRef }, c), n);
  }
}
const Zu = (e) => {
  var { data: t, isNested: n = !1, hasCheckboxes: r = !1, hasBadges: i = !1, hasGuides: s = !1, hasSelectableNodes: o = !1, variant: l = "default", defaultAllExpanded: c = !1, allExpanded: d, icon: u, expandedIcon: p, parentItem: m, onSelect: f, onCheck: g, onExpand: b, onCollapse: v, toolbar: y, activeItems: x, compareItems: w = (E, T) => E.id === T.id, className: R, useMemo: S } = e, _ = oe(e, ["data", "isNested", "hasCheckboxes", "hasBadges", "hasGuides", "hasSelectableNodes", "variant", "defaultAllExpanded", "allExpanded", "icon", "expandedIcon", "parentItem", "onSelect", "onCheck", "onExpand", "onCollapse", "toolbar", "activeItems", "compareItems", "className", "useMemo"]);
  const O = h.createElement(Jx, { isNested: n, toolbar: y }, t.map((E) => {
    var T, I;
    return h.createElement(Zx, Object.assign({ key: ((T = E.id) === null || T === void 0 ? void 0 : T.toString()) || ((I = E.name) === null || I === void 0 ? void 0 : I.toString()), name: E.name, title: E.title, id: E.id, isExpanded: d, isSelectable: o, defaultExpanded: E.defaultExpanded !== void 0 ? E.defaultExpanded : c, onSelect: f, onCheck: g, onExpand: b, onCollapse: v, hasCheckbox: E.hasCheckbox !== void 0 ? E.hasCheckbox : r, checkProps: E.checkProps, hasBadge: E.hasBadge !== void 0 ? E.hasBadge : i, customBadgeContent: E.customBadgeContent, badgeProps: E.badgeProps, activeItems: x, parentItem: m, itemData: E, icon: E.icon !== void 0 ? E.icon : u, expandedIcon: E.expandedIcon !== void 0 ? E.expandedIcon : p, action: E.action, compareItems: w, isCompact: l === "compact" || l === "compactNoBackground", useMemo: S }, E.children && {
      children: h.createElement(Zu, { data: E.children, isNested: !0, parentItem: E, hasCheckboxes: r, hasBadges: i, hasGuides: s, hasSelectableNodes: o, variant: l, allExpanded: d, defaultAllExpanded: c, onSelect: f, onCheck: g, onExpand: b, onCollapse: v, activeItems: x, icon: u, expandedIcon: p })
    }));
  }));
  return h.createElement(h.Fragment, null, m ? O : h.createElement(IA, Object.assign({ hasSelectableNodes: o, hasCheckboxes: r, hasGuides: s, variant: l, className: R }, _), O));
};
Zu.displayName = "TreeView";
const Zt = {
  button: "pf-v5-c-button",
  dirRtl: "pf-v5-m-dir-rtl",
  drawer: "pf-v5-c-drawer",
  modalBox: "pf-v5-c-modal-box",
  modifiers: {
    finished: "pf-m-finished",
    expanded: "pf-m-expanded",
    current: "pf-m-current",
    expandable: "pf-m-expandable",
    disabled: "pf-m-disabled",
    noPadding: "pf-m-no-padding"
  },
  pageMainWizard: "pf-v5-c-page__main-wizard",
  themeDark: "pf-v5-theme-dark",
  wizard: "pf-v5-c-wizard",
  wizardClose: "pf-v5-c-wizard__close",
  wizardDescription: "pf-v5-c-wizard__description",
  wizardFooter: "pf-v5-c-wizard__footer",
  wizardFooterCancel: "pf-v5-c-wizard__footer-cancel",
  wizardHeader: "pf-v5-c-wizard__header",
  wizardInnerWrap: "pf-v5-c-wizard__inner-wrap",
  wizardMain: "pf-v5-c-wizard__main",
  wizardMainBody: "pf-v5-c-wizard__main-body",
  wizardNav: "pf-v5-c-wizard__nav",
  wizardNavItem: "pf-v5-c-wizard__nav-item",
  wizardNavLink: "pf-v5-c-wizard__nav-link",
  wizardNavLinkText: "pf-v5-c-wizard__nav-link-text",
  wizardNavLinkToggle: "pf-v5-c-wizard__nav-link-toggle",
  wizardNavLinkToggleIcon: "pf-v5-c-wizard__nav-link-toggle-icon",
  wizardNavList: "pf-v5-c-wizard__nav-list",
  wizardOuterWrap: "pf-v5-c-wizard__outer-wrap",
  wizardTitle: "pf-v5-c-wizard__title",
  wizardTitleText: "pf-v5-c-wizard__title-text",
  wizardToggle: "pf-v5-c-wizard__toggle",
  wizardToggleIcon: "pf-v5-c-wizard__toggle-icon",
  wizardToggleList: "pf-v5-c-wizard__toggle-list",
  wizardToggleListItem: "pf-v5-c-wizard__toggle-list-item",
  wizardToggleNum: "pf-v5-c-wizard__toggle-num",
  wizardToggleSeparator: "pf-v5-c-wizard__toggle-separator"
};
var ql;
(function(e) {
  e.Default = "default", e.Error = "error";
})(ql || (ql = {}));
var Gl;
(function(e) {
  e.Next = "next", e.Back = "back", e.Nav = "nav";
})(Gl || (Gl = {}));
function PA(e) {
  return typeof e == "function" || re.isValidElement(e);
}
function Lv(e) {
  return typeof e == "function" || re.isValidElement(e);
}
function Qx(e) {
  return typeof e == "function" || re.isValidElement(e);
}
function _A(e) {
  return e?.subStepIds === void 0 && !vc(e);
}
function vc(e) {
  return e?.parentId !== void 0;
}
function Qu(e) {
  return e?.subStepIds !== void 0;
}
const eg = ({ children: e }) => re.createElement("footer", { className: $(Zt.wizardFooter) }, e), Xc = (e) => {
  var { activeStep: t } = e, n = oe(e, ["activeStep"]);
  const r = !Qx(t?.footer) && t?.footer;
  return re.createElement(RA, Object.assign({}, n, r));
}, RA = ({ onNext: e, onBack: t, onClose: n, isNextDisabled: r, isBackDisabled: i, isBackHidden: s, isCancelHidden: o, nextButtonText: l = "Next", backButtonText: c = "Back", cancelButtonText: d = "Cancel", nextButtonProps: u, backButtonProps: p, cancelButtonProps: m }) => re.createElement(
  eg,
  null,
  !s && re.createElement(z, Object.assign({ variant: xe.secondary, onClick: t, isDisabled: i }, p), c),
  re.createElement(z, Object.assign({ variant: xe.primary, type: "submit", onClick: e, isDisabled: r }, u), l),
  !o && re.createElement(
    "div",
    { className: Zt.wizardFooterCancel },
    re.createElement(z, Object.assign({ variant: xe.link, onClick: n }, m), d)
  )
);
eg.displayName = "WizardFooterWrapper";
Xc.displayName = "WizardFooter";
const tg = re.createContext({}), eS = ({ steps: e, footer: t, activeStepIndex: n, children: r, onNext: i, onBack: s, onClose: o, goToStepById: l, goToStepByName: c, goToStepByIndex: d }) => {
  const [u, p] = re.useState(e), [m, f] = re.useState(), g = re.useMemo(() => u.map((_, O) => Object.assign(Object.assign({}, _), e[O])), [e, u]), b = re.useMemo(() => g.find((_) => _.index === n), [n, g]), v = re.useCallback(() => o?.(null), [o]), y = re.useCallback(() => i(null, g), [i, g]), x = re.useCallback(() => s(null, g), [s, g]), w = re.useMemo(() => {
    const _ = b?.footer || m || t;
    if (Qx(_)) {
      const O = _;
      return typeof O == "function" ? O(b, y, x, v) : O;
    }
    return re.createElement(Xc, Object.assign({ activeStep: b, onNext: y, onBack: x, onClose: v, isBackDisabled: b?.index === 1 || vc(b) && b?.index === 2 }, _));
  }, [m, t, b, y, x, v]), R = re.useCallback((_) => g.find((O) => O.id === _), [g]), S = re.useCallback((_) => p((O) => O.map((E) => E.id === _.id ? Object.assign(Object.assign({}, E), _) : E)), []);
  return re.createElement(tg.Provider, { value: {
    steps: g,
    activeStep: b,
    footer: w,
    close: v,
    getStep: R,
    setStep: S,
    goToNextStep: y,
    goToPrevStep: x,
    setFooter: f,
    goToStepById: re.useCallback((_) => l(g, _), [l, g]),
    goToStepByName: re.useCallback((_) => c(g, _), [c, g]),
    goToStepByIndex: re.useCallback((_) => d(null, g, _), [d, g])
  } }, r);
};
eS.displayName = "WizardContextProvider";
const zs = () => re.useContext(tg), ca = (e) => {
  var { children: t, steps: n } = e, r = oe(e, ["children", "steps"]);
  const { activeStep: i, setStep: s } = zs(), { id: o, name: l, body: c, isDisabled: d, isHidden: u, navItem: p, footer: m, status: f } = r, g = Qu(i);
  return re.useEffect(() => {
    s(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({
      id: o,
      name: l
    }, c && { body: c }), d && { isDisabled: d }), u && { isHidden: u }), p && { navItem: p }), m && { footer: m }), f && { status: f }), !g && o === i?.id && !i?.isVisited && { isVisited: !0 }));
  }, [
    c,
    m,
    o,
    d,
    u,
    l,
    p,
    f,
    g,
    s,
    i?.id,
    i?.isVisited
  ]), re.createElement(re.Fragment, null, t);
};
ca.displayName = "WizardStep";
const AA = (e) => re.Children.toArray(e).reduce((t, n, r) => {
  if (LA(n)) {
    const { props: i } = n, { steps: s, id: o } = i, l = t.length + 1, c = [];
    t.push(Object.assign(Object.assign(Object.assign({ index: l, component: n }, r === 0 && !s?.length && { isVisited: !0 }), s && {
      subStepIds: s?.map((d, u) => (c.push(Object.assign(Object.assign({ index: l + u + 1, component: d, parentId: o }, r === 0 && u === 0 && { isVisited: !0 }), Nv(d.props))), d.props.id))
    }), Nv(i)), ...c);
  } else
    throw new Error("Wizard only accepts children of type WizardStep.");
  return t;
}, []);
function LA(e) {
  return re.isValidElement(e) && e.type === ca;
}
const Nv = (e) => {
  var t = oe(e, ["children", "steps"]);
  return t;
}, Dv = (e, t) => {
  if (!Qu(t) && !t.isHidden && !t.isDisabled)
    if (vc(t)) {
      const n = e.find((r) => r.id === t.parentId);
      if (!n.isHidden && !n.isDisabled)
        return !0;
    } else
      return !0;
  return !1;
}, tS = ({ children: e, hasNoPadding: t = !1, "aria-label": n, "aria-labelledby": r, component: i = "div" }) => {
  const [s, o] = re.useState(!1), [l, c] = re.useState(void 0), d = re.useRef(null), u = i, { activeStep: p } = re.useContext(tg), m = n || `${p?.name} content`;
  return re.useEffect(() => {
    const g = dh(() => {
      if (d?.current) {
        const { offsetWidth: v, offsetHeight: y, scrollHeight: x } = d.current;
        l !== v && (c(v), o(y < x));
      }
    }, 250);
    let b = () => {
    };
    if (d?.current) {
      b = Wo(d.current, g);
      const { offsetHeight: v, scrollHeight: y } = d.current;
      o(v < y), c(d.current.offsetWidth);
    }
    return () => {
      b();
    };
  }, [l]), re.createElement(
    u,
    Object.assign({ ref: d }, i === "div" && s && { role: "region" }, s && { "aria-label": m, "aria-labelledby": r, tabIndex: 0 }, { className: $(Zt.wizardMain) }),
    re.createElement("div", { className: $(Zt.wizardMainBody, t && Zt.modifiers.noPadding) }, e)
  );
};
tS.displayName = "WizardBody";
const nS = ({ steps: e, activeStep: t, footer: n, nav: r, isNavExpanded: i, toggleNavExpanded: s, "aria-label": o = "Wizard toggle" }) => {
  const l = vc(t), c = l && e.find((f) => f.id === t.parentId), u = e.filter((f) => !vc(f)).indexOf(c || t) + 1, p = re.useCallback((f) => {
    i && f.key === dn.Escape && s?.(f);
  }, [i, s]);
  re.useEffect(() => {
    const f = typeof document < "u" ? document.body : null;
    return f?.addEventListener("keydown", p, !1), () => {
      f?.removeEventListener("keydown", p, !1);
    };
  }, [p]);
  const m = e.map((f) => {
    var g;
    const b = ((g = f.component) === null || g === void 0 ? void 0 : g.props) || {}, { children: v, body: y } = b, x = oe(b, ["children", "body"]);
    return re.createElement(
      re.Fragment,
      { key: f.id },
      t?.id === f.id && (y || y === void 0 ? re.createElement(tS, Object.assign({}, y), v) : v),
      re.createElement(
        "div",
        { key: f.id, style: { display: "none" } },
        re.createElement(ca, Object.assign({}, x))
      )
    );
  });
  return re.createElement(
    re.Fragment,
    null,
    re.createElement(
      "button",
      { onClick: s, className: $(Zt.wizardToggle, i && "pf-m-expanded"), "aria-label": o, "aria-expanded": i },
      re.createElement(
        "span",
        { className: $(Zt.wizardToggleList) },
        re.createElement(
          "span",
          { className: $(Zt.wizardToggleListItem) },
          re.createElement("span", { className: $(Zt.wizardToggleNum) }, u),
          " ",
          c?.name || t?.name,
          l && re.createElement(Nn, { className: $(Zt.wizardToggleSeparator), "aria-hidden": "true" })
        ),
        l && re.createElement("span", { className: $(Zt.wizardToggleListItem) }, t?.name)
      ),
      re.createElement(
        "span",
        { className: $(Zt.wizardToggleIcon) },
        re.createElement(Lo, { "aria-hidden": "true" })
      )
    ),
    re.createElement(
      "div",
      { className: $(Zt.wizardOuterWrap) },
      re.createElement(
        "div",
        { className: $(Zt.wizardInnerWrap) },
        r,
        m
      ),
      n
    )
  );
};
nS.displayName = "WizardToggle";
const wf = ({ children: e, "aria-label": t, "aria-labelledby": n, isExpanded: r = !1, isInnerList: i = !1 }) => i ? h.createElement("ol", { className: $(Zt.wizardNavList), role: "list" }, e) : h.createElement(
  "nav",
  { className: $(Zt.wizardNav, r && Zt.modifiers.expanded), "aria-label": t, "aria-labelledby": n },
  h.createElement("ol", { className: $(Zt.wizardNavList), role: "list" }, e)
);
wf.displayName = "WizardNav";
const NA = {
  name: "--pf-v5-global--spacer--sm",
  value: "0.5rem",
  var: "var(--pf-v5-global--spacer--sm)"
}, DA = {
  name: "--pf-v5-global--danger-color--100",
  value: "#c9190b",
  var: "var(--pf-v5-global--danger-color--100)"
}, Wl = ({ children: e = null, content: t = "", isCurrent: n = !1, isDisabled: r = !1, isVisited: i = !1, stepIndex: s, onClick: o, component: l = "button", href: c, isExpandable: d = !1, id: u, status: p = "default", target: m, ouiaId: f, ouiaSafe: g = !0 }) => {
  const [b, v] = h.useState(!1), y = Ka(Wl.displayName, f, g);
  h.useEffect(() => {
    v(n);
  }, [n]), l === "a" && !c && process.env.NODE_ENV !== "production" && console.error("WizardNavItem: When using an anchor, please provide an href");
  const x = h.useMemo(() => {
    if (p === ql.Error || i && !n) {
      let w = t.toString();
      return p === ql.Error && (w += `, ${p}`), i && !n && (w += ", visited"), w;
    }
  }, [t, n, i, p]);
  return h.createElement(
    "li",
    { className: $(Zt.wizardNavItem, d && Zt.modifiers.expandable, d && b && Zt.modifiers.expanded) },
    h.createElement(l, Object.assign({}, l === "a" ? { tabIndex: r ? -1 : void 0, href: c, target: m } : { disabled: r }, u && { id: u.toString() }, { onClick: (w) => {
      w.stopPropagation(), d ? v(!b || n) : o?.(w, s);
    }, className: $(Zt.wizardNavLink, n && Zt.modifiers.current, r && Zt.modifiers.disabled), "aria-disabled": r ? !0 : null, "aria-current": n && !e ? "step" : !1 }, d && { "aria-expanded": b }, x && { "aria-label": x }, y), d ? h.createElement(
      h.Fragment,
      null,
      h.createElement("span", { className: $(Zt.wizardNavLinkText) }, t),
      h.createElement(
        "span",
        { className: $(Zt.wizardNavLinkToggle) },
        h.createElement(
          "span",
          { className: $(Zt.wizardNavLinkToggleIcon) },
          h.createElement(Nn, { "aria-label": `${n ? "Collapse" : "Expand"} step icon` })
        )
      )
    ) : h.createElement(
      h.Fragment,
      null,
      t,
      p === ql.Error && h.createElement(
        "span",
        { style: { marginLeft: NA.var } },
        h.createElement(ds, { color: DA.var })
      )
    )),
    e
  );
};
Wl.displayName = "WizardNavItem";
const MA = ({ nav: e, navAriaLabel: t, isVisitRequired: n, isProgressive: r, isNavExpanded: i }) => {
  const { activeStep: s, steps: o, goToStepByIndex: l } = zs(), c = Object.assign({ isExpanded: i, "aria-label": t || e?.["aria-label"] || "Wizard steps" }, e?.["aria-labelledby"] && {
    "aria-labelledby": e["aria-labelledby"]
  });
  return re.createElement(wf, Object.assign({}, c), o.map((d, u) => {
    var p;
    const m = o.some((b) => b.index > u + 1 && b.isVisited), f = d.isDisabled || n && !d.isVisited && !m, g = Lv(d.navItem) && re.createElement(re.Fragment, { key: d.id }, typeof d.navItem == "function" ? d.navItem(d, s, o, l) : d.navItem);
    if (Qu(d) && !d.isHidden) {
      let b, v = !1;
      const y = (p = d.subStepIds) === null || p === void 0 ? void 0 : p.map((w, R) => {
        const S = o.find((T) => T.id === w), _ = o.some((T) => T.index > S.index && T.isVisited), O = S.isDisabled || n && !S.isVisited && !_, E = Lv(S.navItem) && re.createElement(re.Fragment, { key: S.id }, typeof S.navItem == "function" ? S.navItem(S, s, o, l) : S.navItem);
        if (!S.isHidden && (R === 0 && (b = S.index), s?.id === S.id && (v = !0), !r || r && S.index <= s.index))
          return E || re.createElement(Wl, Object.assign({ key: S.id, id: S.id, content: S.name, isCurrent: s?.id === S.id, isDisabled: O || f, isVisited: S.isVisited, stepIndex: S.index, onClick: () => l(S.index), status: S.status }, S.navItem));
      }), x = re.Children.toArray(y).some((w) => re.isValidElement(w) && !w.props.isDisabled);
      if (!r || r && d.index <= s.index)
        return g || re.createElement(
          Wl,
          Object.assign({ key: d.id, id: d.id, content: d.name, isExpandable: d.isExpandable, isCurrent: v, isDisabled: !x || f, isVisited: d.isVisited, stepIndex: b, onClick: () => l(b), status: d.status }, d.navItem),
          re.createElement(wf, Object.assign({}, c, { isInnerList: !0 }), y)
        );
    }
    if (_A(d) && !d.isHidden && (!r || r && d.index <= s.index))
      return g || re.createElement(Wl, Object.assign({ key: d.id, id: d.id, content: d.name, isCurrent: s?.id === d.id, isDisabled: f, isVisited: d.isVisited, stepIndex: d.index, onClick: () => l(d.index), status: d.status }, d.navItem));
  }));
}, ep = (e) => {
  var { children: t, footer: n, height: r, width: i, className: s, header: o, nav: l, navAriaLabel: c, startIndex: d = 1, isVisitRequired: u = !1, isProgressive: p = !1, onStepChange: m, onSave: f, onClose: g } = e, b = oe(e, ["children", "footer", "height", "width", "className", "header", "nav", "navAriaLabel", "startIndex", "isVisitRequired", "isProgressive", "onStepChange", "onSave", "onClose"]);
  const [v, y] = re.useState(d), x = AA(t), w = re.useRef(x[d - 1]);
  re.useEffect(() => {
    Qu(w.current) && y(d + 1);
  }, [d]);
  const R = (T, I = x) => {
    const k = I.find((P) => P.index > v && Dv(I, P));
    if (v >= I.length || !k?.index)
      return f ? f(T) : g?.(T);
    y(k?.index), m?.(T, k, I[v - 1], Gl.Next);
  }, S = (T, I = x) => {
    const k = [...I].reverse().find((P) => P.index < v && Dv(I, P));
    y(k?.index), m?.(T, k, I[v - 1], Gl.Back);
  }, _ = (T, I = x, k) => {
    const P = I.length + 1;
    k < 1 ? k = 1 : k > P && (k = P);
    const D = I[k - 1], F = I[v - 1];
    y(k), m?.(T, D, F, Gl.Nav);
  }, O = (T = x, I) => {
    const k = T.find((F) => F.id === I), P = k?.index, D = T.length + 1;
    P > 0 && P < D && !k.isDisabled && !k.isHidden && y(P);
  }, E = (T = x, I) => {
    const k = T.find((F) => F.name === I), P = k?.index, D = T.length + 1;
    P > 0 && P < D && !k.isDisabled && !k.isHidden && y(P);
  };
  return re.createElement(
    eS,
    { steps: x, activeStepIndex: v, footer: n, onNext: R, onBack: S, onClose: g, goToStepById: O, goToStepByName: E, goToStepByIndex: _ },
    re.createElement(
      "div",
      Object.assign({ className: $(Zt.wizard, s), style: Object.assign(Object.assign({}, r ? { height: r } : {}), i ? { width: i } : {}) }, b),
      o,
      re.createElement(FA, { nav: l, navAriaLabel: c, isVisitRequired: u, isProgressive: p })
    )
  );
}, FA = ({ nav: e, navAriaLabel: t, isVisitRequired: n, isProgressive: r }) => {
  const { activeStep: i, steps: s, footer: o, goToStepByIndex: l } = zs(), [c, d] = re.useState(!1), u = re.useMemo(() => PA(e) ? typeof e == "function" ? e(c, s, i, l) : e : re.createElement(MA, { nav: e, navAriaLabel: t, isNavExpanded: c, isVisitRequired: n, isProgressive: r }), [i, n, r, l, c, e, t, s]);
  return re.createElement(nS, { nav: u, footer: o, steps: s, activeStep: i, isNavExpanded: c, toggleNavExpanded: () => d((p) => !p) });
};
ep.displayName = "Wizard";
const aS = (e) => {
  var { children: t = null, className: n = "", component: r = "div" } = e, i = oe(e, ["children", "className", "component"]);
  const s = r;
  return h.createElement(s, Object.assign({ className: $(C1.bullseye, n) }, i), t);
};
aS.displayName = "Bullseye";
const mn = {
  flex: "pf-v5-l-flex",
  modifiers: {
    flex: "pf-m-flex",
    inlineFlex: "pf-m-inline-flex",
    column: "pf-m-column",
    columnReverse: "pf-m-column-reverse",
    row: "pf-m-row",
    rowReverse: "pf-m-row-reverse",
    wrap: "pf-m-wrap",
    wrapReverse: "pf-m-wrap-reverse",
    nowrap: "pf-m-nowrap",
    justifyContentFlexStart: "pf-m-justify-content-flex-start",
    justifyContentFlexEnd: "pf-m-justify-content-flex-end",
    justifyContentCenter: "pf-m-justify-content-center",
    justifyContentSpaceBetween: "pf-m-justify-content-space-between",
    justifyContentSpaceAround: "pf-m-justify-content-space-around",
    justifyContentSpaceEvenly: "pf-m-justify-content-space-evenly",
    alignItemsFlexStart: "pf-m-align-items-flex-start",
    alignItemsFlexEnd: "pf-m-align-items-flex-end",
    alignItemsCenter: "pf-m-align-items-center",
    alignItemsStretch: "pf-m-align-items-stretch",
    alignItemsBaseline: "pf-m-align-items-baseline",
    alignContentFlexStart: "pf-m-align-content-flex-start",
    alignContentFlexEnd: "pf-m-align-content-flex-end",
    alignContentCenter: "pf-m-align-content-center",
    alignContentStretch: "pf-m-align-content-stretch",
    alignContentSpaceBetween: "pf-m-align-content-space-between",
    alignContentSpaceAround: "pf-m-align-content-space-around",
    alignRight: "pf-m-align-right",
    alignLeft: "pf-m-align-left",
    grow: "pf-m-grow",
    shrink: "pf-m-shrink",
    fullWidth: "pf-m-full-width",
    flex_1: "pf-m-flex-1",
    flex_2: "pf-m-flex-2",
    flex_3: "pf-m-flex-3",
    flex_4: "pf-m-flex-4",
    flexDefault: "pf-m-flex-default",
    flexNone: "pf-m-flex-none",
    alignSelfFlexStart: "pf-m-align-self-flex-start",
    alignSelfFlexEnd: "pf-m-align-self-flex-end",
    alignSelfCenter: "pf-m-align-self-center",
    alignSelfBaseline: "pf-m-align-self-baseline",
    alignSelfStretch: "pf-m-align-self-stretch",
    flexOnSm: "pf-m-flex-on-sm",
    inlineFlexOnSm: "pf-m-inline-flex-on-sm",
    columnOnSm: "pf-m-column-on-sm",
    columnReverseOnSm: "pf-m-column-reverse-on-sm",
    rowOnSm: "pf-m-row-on-sm",
    rowReverseOnSm: "pf-m-row-reverse-on-sm",
    wrapOnSm: "pf-m-wrap-on-sm",
    wrapReverseOnSm: "pf-m-wrap-reverse-on-sm",
    nowrapOnSm: "pf-m-nowrap-on-sm",
    justifyContentFlexStartOnSm: "pf-m-justify-content-flex-start-on-sm",
    justifyContentFlexEndOnSm: "pf-m-justify-content-flex-end-on-sm",
    justifyContentCenterOnSm: "pf-m-justify-content-center-on-sm",
    justifyContentSpaceBetweenOnSm: "pf-m-justify-content-space-between-on-sm",
    justifyContentSpaceAroundOnSm: "pf-m-justify-content-space-around-on-sm",
    justifyContentSpaceEvenlyOnSm: "pf-m-justify-content-space-evenly-on-sm",
    alignItemsFlexStartOnSm: "pf-m-align-items-flex-start-on-sm",
    alignItemsFlexEndOnSm: "pf-m-align-items-flex-end-on-sm",
    alignItemsCenterOnSm: "pf-m-align-items-center-on-sm",
    alignItemsStretchOnSm: "pf-m-align-items-stretch-on-sm",
    alignItemsBaselineOnSm: "pf-m-align-items-baseline-on-sm",
    alignContentFlexStartOnSm: "pf-m-align-content-flex-start-on-sm",
    alignContentFlexEndOnSm: "pf-m-align-content-flex-end-on-sm",
    alignContentCenterOnSm: "pf-m-align-content-center-on-sm",
    alignContentStretchOnSm: "pf-m-align-content-stretch-on-sm",
    alignContentSpaceBetweenOnSm: "pf-m-align-content-space-between-on-sm",
    alignContentSpaceAroundOnSm: "pf-m-align-content-space-around-on-sm",
    alignRightOnSm: "pf-m-align-right-on-sm",
    alignLeftOnSm: "pf-m-align-left-on-sm",
    growOnSm: "pf-m-grow-on-sm",
    shrinkOnSm: "pf-m-shrink-on-sm",
    fullWidthOnSm: "pf-m-full-width-on-sm",
    flex_1OnSm: "pf-m-flex-1-on-sm",
    flex_2OnSm: "pf-m-flex-2-on-sm",
    flex_3OnSm: "pf-m-flex-3-on-sm",
    flex_4OnSm: "pf-m-flex-4-on-sm",
    flexDefaultOnSm: "pf-m-flex-default-on-sm",
    flexNoneOnSm: "pf-m-flex-none-on-sm",
    alignSelfFlexStartOnSm: "pf-m-align-self-flex-start-on-sm",
    alignSelfFlexEndOnSm: "pf-m-align-self-flex-end-on-sm",
    alignSelfCenterOnSm: "pf-m-align-self-center-on-sm",
    alignSelfBaselineOnSm: "pf-m-align-self-baseline-on-sm",
    alignSelfStretchOnSm: "pf-m-align-self-stretch-on-sm",
    flexOnMd: "pf-m-flex-on-md",
    inlineFlexOnMd: "pf-m-inline-flex-on-md",
    columnOnMd: "pf-m-column-on-md",
    columnReverseOnMd: "pf-m-column-reverse-on-md",
    rowOnMd: "pf-m-row-on-md",
    rowReverseOnMd: "pf-m-row-reverse-on-md",
    wrapOnMd: "pf-m-wrap-on-md",
    wrapReverseOnMd: "pf-m-wrap-reverse-on-md",
    nowrapOnMd: "pf-m-nowrap-on-md",
    justifyContentFlexStartOnMd: "pf-m-justify-content-flex-start-on-md",
    justifyContentFlexEndOnMd: "pf-m-justify-content-flex-end-on-md",
    justifyContentCenterOnMd: "pf-m-justify-content-center-on-md",
    justifyContentSpaceBetweenOnMd: "pf-m-justify-content-space-between-on-md",
    justifyContentSpaceAroundOnMd: "pf-m-justify-content-space-around-on-md",
    justifyContentSpaceEvenlyOnMd: "pf-m-justify-content-space-evenly-on-md",
    alignItemsFlexStartOnMd: "pf-m-align-items-flex-start-on-md",
    alignItemsFlexEndOnMd: "pf-m-align-items-flex-end-on-md",
    alignItemsCenterOnMd: "pf-m-align-items-center-on-md",
    alignItemsStretchOnMd: "pf-m-align-items-stretch-on-md",
    alignItemsBaselineOnMd: "pf-m-align-items-baseline-on-md",
    alignContentFlexStartOnMd: "pf-m-align-content-flex-start-on-md",
    alignContentFlexEndOnMd: "pf-m-align-content-flex-end-on-md",
    alignContentCenterOnMd: "pf-m-align-content-center-on-md",
    alignContentStretchOnMd: "pf-m-align-content-stretch-on-md",
    alignContentSpaceBetweenOnMd: "pf-m-align-content-space-between-on-md",
    alignContentSpaceAroundOnMd: "pf-m-align-content-space-around-on-md",
    alignRightOnMd: "pf-m-align-right-on-md",
    alignLeftOnMd: "pf-m-align-left-on-md",
    growOnMd: "pf-m-grow-on-md",
    shrinkOnMd: "pf-m-shrink-on-md",
    fullWidthOnMd: "pf-m-full-width-on-md",
    flex_1OnMd: "pf-m-flex-1-on-md",
    flex_2OnMd: "pf-m-flex-2-on-md",
    flex_3OnMd: "pf-m-flex-3-on-md",
    flex_4OnMd: "pf-m-flex-4-on-md",
    flexDefaultOnMd: "pf-m-flex-default-on-md",
    flexNoneOnMd: "pf-m-flex-none-on-md",
    alignSelfFlexStartOnMd: "pf-m-align-self-flex-start-on-md",
    alignSelfFlexEndOnMd: "pf-m-align-self-flex-end-on-md",
    alignSelfCenterOnMd: "pf-m-align-self-center-on-md",
    alignSelfBaselineOnMd: "pf-m-align-self-baseline-on-md",
    alignSelfStretchOnMd: "pf-m-align-self-stretch-on-md",
    flexOnLg: "pf-m-flex-on-lg",
    inlineFlexOnLg: "pf-m-inline-flex-on-lg",
    columnOnLg: "pf-m-column-on-lg",
    columnReverseOnLg: "pf-m-column-reverse-on-lg",
    rowOnLg: "pf-m-row-on-lg",
    rowReverseOnLg: "pf-m-row-reverse-on-lg",
    wrapOnLg: "pf-m-wrap-on-lg",
    wrapReverseOnLg: "pf-m-wrap-reverse-on-lg",
    nowrapOnLg: "pf-m-nowrap-on-lg",
    justifyContentFlexStartOnLg: "pf-m-justify-content-flex-start-on-lg",
    justifyContentFlexEndOnLg: "pf-m-justify-content-flex-end-on-lg",
    justifyContentCenterOnLg: "pf-m-justify-content-center-on-lg",
    justifyContentSpaceBetweenOnLg: "pf-m-justify-content-space-between-on-lg",
    justifyContentSpaceAroundOnLg: "pf-m-justify-content-space-around-on-lg",
    justifyContentSpaceEvenlyOnLg: "pf-m-justify-content-space-evenly-on-lg",
    alignItemsFlexStartOnLg: "pf-m-align-items-flex-start-on-lg",
    alignItemsFlexEndOnLg: "pf-m-align-items-flex-end-on-lg",
    alignItemsCenterOnLg: "pf-m-align-items-center-on-lg",
    alignItemsStretchOnLg: "pf-m-align-items-stretch-on-lg",
    alignItemsBaselineOnLg: "pf-m-align-items-baseline-on-lg",
    alignContentFlexStartOnLg: "pf-m-align-content-flex-start-on-lg",
    alignContentFlexEndOnLg: "pf-m-align-content-flex-end-on-lg",
    alignContentCenterOnLg: "pf-m-align-content-center-on-lg",
    alignContentStretchOnLg: "pf-m-align-content-stretch-on-lg",
    alignContentSpaceBetweenOnLg: "pf-m-align-content-space-between-on-lg",
    alignContentSpaceAroundOnLg: "pf-m-align-content-space-around-on-lg",
    alignRightOnLg: "pf-m-align-right-on-lg",
    alignLeftOnLg: "pf-m-align-left-on-lg",
    growOnLg: "pf-m-grow-on-lg",
    shrinkOnLg: "pf-m-shrink-on-lg",
    fullWidthOnLg: "pf-m-full-width-on-lg",
    flex_1OnLg: "pf-m-flex-1-on-lg",
    flex_2OnLg: "pf-m-flex-2-on-lg",
    flex_3OnLg: "pf-m-flex-3-on-lg",
    flex_4OnLg: "pf-m-flex-4-on-lg",
    flexDefaultOnLg: "pf-m-flex-default-on-lg",
    flexNoneOnLg: "pf-m-flex-none-on-lg",
    alignSelfFlexStartOnLg: "pf-m-align-self-flex-start-on-lg",
    alignSelfFlexEndOnLg: "pf-m-align-self-flex-end-on-lg",
    alignSelfCenterOnLg: "pf-m-align-self-center-on-lg",
    alignSelfBaselineOnLg: "pf-m-align-self-baseline-on-lg",
    alignSelfStretchOnLg: "pf-m-align-self-stretch-on-lg",
    flexOnXl: "pf-m-flex-on-xl",
    inlineFlexOnXl: "pf-m-inline-flex-on-xl",
    columnOnXl: "pf-m-column-on-xl",
    columnReverseOnXl: "pf-m-column-reverse-on-xl",
    rowOnXl: "pf-m-row-on-xl",
    rowReverseOnXl: "pf-m-row-reverse-on-xl",
    wrapOnXl: "pf-m-wrap-on-xl",
    wrapReverseOnXl: "pf-m-wrap-reverse-on-xl",
    nowrapOnXl: "pf-m-nowrap-on-xl",
    justifyContentFlexStartOnXl: "pf-m-justify-content-flex-start-on-xl",
    justifyContentFlexEndOnXl: "pf-m-justify-content-flex-end-on-xl",
    justifyContentCenterOnXl: "pf-m-justify-content-center-on-xl",
    justifyContentSpaceBetweenOnXl: "pf-m-justify-content-space-between-on-xl",
    justifyContentSpaceAroundOnXl: "pf-m-justify-content-space-around-on-xl",
    justifyContentSpaceEvenlyOnXl: "pf-m-justify-content-space-evenly-on-xl",
    alignItemsFlexStartOnXl: "pf-m-align-items-flex-start-on-xl",
    alignItemsFlexEndOnXl: "pf-m-align-items-flex-end-on-xl",
    alignItemsCenterOnXl: "pf-m-align-items-center-on-xl",
    alignItemsStretchOnXl: "pf-m-align-items-stretch-on-xl",
    alignItemsBaselineOnXl: "pf-m-align-items-baseline-on-xl",
    alignContentFlexStartOnXl: "pf-m-align-content-flex-start-on-xl",
    alignContentFlexEndOnXl: "pf-m-align-content-flex-end-on-xl",
    alignContentCenterOnXl: "pf-m-align-content-center-on-xl",
    alignContentStretchOnXl: "pf-m-align-content-stretch-on-xl",
    alignContentSpaceBetweenOnXl: "pf-m-align-content-space-between-on-xl",
    alignContentSpaceAroundOnXl: "pf-m-align-content-space-around-on-xl",
    alignRightOnXl: "pf-m-align-right-on-xl",
    alignLeftOnXl: "pf-m-align-left-on-xl",
    growOnXl: "pf-m-grow-on-xl",
    shrinkOnXl: "pf-m-shrink-on-xl",
    fullWidthOnXl: "pf-m-full-width-on-xl",
    flex_1OnXl: "pf-m-flex-1-on-xl",
    flex_2OnXl: "pf-m-flex-2-on-xl",
    flex_3OnXl: "pf-m-flex-3-on-xl",
    flex_4OnXl: "pf-m-flex-4-on-xl",
    flexDefaultOnXl: "pf-m-flex-default-on-xl",
    flexNoneOnXl: "pf-m-flex-none-on-xl",
    alignSelfFlexStartOnXl: "pf-m-align-self-flex-start-on-xl",
    alignSelfFlexEndOnXl: "pf-m-align-self-flex-end-on-xl",
    alignSelfCenterOnXl: "pf-m-align-self-center-on-xl",
    alignSelfBaselineOnXl: "pf-m-align-self-baseline-on-xl",
    alignSelfStretchOnXl: "pf-m-align-self-stretch-on-xl",
    flexOn_2xl: "pf-m-flex-on-2xl",
    inlineFlexOn_2xl: "pf-m-inline-flex-on-2xl",
    columnOn_2xl: "pf-m-column-on-2xl",
    columnReverseOn_2xl: "pf-m-column-reverse-on-2xl",
    rowOn_2xl: "pf-m-row-on-2xl",
    rowReverseOn_2xl: "pf-m-row-reverse-on-2xl",
    wrapOn_2xl: "pf-m-wrap-on-2xl",
    wrapReverseOn_2xl: "pf-m-wrap-reverse-on-2xl",
    nowrapOn_2xl: "pf-m-nowrap-on-2xl",
    justifyContentFlexStartOn_2xl: "pf-m-justify-content-flex-start-on-2xl",
    justifyContentFlexEndOn_2xl: "pf-m-justify-content-flex-end-on-2xl",
    justifyContentCenterOn_2xl: "pf-m-justify-content-center-on-2xl",
    justifyContentSpaceBetweenOn_2xl: "pf-m-justify-content-space-between-on-2xl",
    justifyContentSpaceAroundOn_2xl: "pf-m-justify-content-space-around-on-2xl",
    justifyContentSpaceEvenlyOn_2xl: "pf-m-justify-content-space-evenly-on-2xl",
    alignItemsFlexStartOn_2xl: "pf-m-align-items-flex-start-on-2xl",
    alignItemsFlexEndOn_2xl: "pf-m-align-items-flex-end-on-2xl",
    alignItemsCenterOn_2xl: "pf-m-align-items-center-on-2xl",
    alignItemsStretchOn_2xl: "pf-m-align-items-stretch-on-2xl",
    alignItemsBaselineOn_2xl: "pf-m-align-items-baseline-on-2xl",
    alignContentFlexStartOn_2xl: "pf-m-align-content-flex-start-on-2xl",
    alignContentFlexEndOn_2xl: "pf-m-align-content-flex-end-on-2xl",
    alignContentCenterOn_2xl: "pf-m-align-content-center-on-2xl",
    alignContentStretchOn_2xl: "pf-m-align-content-stretch-on-2xl",
    alignContentSpaceBetweenOn_2xl: "pf-m-align-content-space-between-on-2xl",
    alignContentSpaceAroundOn_2xl: "pf-m-align-content-space-around-on-2xl",
    alignRightOn_2xl: "pf-m-align-right-on-2xl",
    alignLeftOn_2xl: "pf-m-align-left-on-2xl",
    growOn_2xl: "pf-m-grow-on-2xl",
    shrinkOn_2xl: "pf-m-shrink-on-2xl",
    fullWidthOn_2xl: "pf-m-full-width-on-2xl",
    flex_1On_2xl: "pf-m-flex-1-on-2xl",
    flex_2On_2xl: "pf-m-flex-2-on-2xl",
    flex_3On_2xl: "pf-m-flex-3-on-2xl",
    flex_4On_2xl: "pf-m-flex-4-on-2xl",
    flexDefaultOn_2xl: "pf-m-flex-default-on-2xl",
    flexNoneOn_2xl: "pf-m-flex-none-on-2xl",
    alignSelfFlexStartOn_2xl: "pf-m-align-self-flex-start-on-2xl",
    alignSelfFlexEndOn_2xl: "pf-m-align-self-flex-end-on-2xl",
    alignSelfCenterOn_2xl: "pf-m-align-self-center-on-2xl",
    alignSelfBaselineOn_2xl: "pf-m-align-self-baseline-on-2xl",
    alignSelfStretchOn_2xl: "pf-m-align-self-stretch-on-2xl",
    spaceItemsNone: "pf-m-space-items-none",
    spaceItemsXs: "pf-m-space-items-xs",
    spaceItemsSm: "pf-m-space-items-sm",
    spaceItemsMd: "pf-m-space-items-md",
    spaceItemsLg: "pf-m-space-items-lg",
    spaceItemsXl: "pf-m-space-items-xl",
    spaceItems_2xl: "pf-m-space-items-2xl",
    spaceItems_3xl: "pf-m-space-items-3xl",
    spaceItems_4xl: "pf-m-space-items-4xl",
    spaceItemsNoneOnSm: "pf-m-space-items-none-on-sm",
    spaceItemsXsOnSm: "pf-m-space-items-xs-on-sm",
    spaceItemsSmOnSm: "pf-m-space-items-sm-on-sm",
    spaceItemsMdOnSm: "pf-m-space-items-md-on-sm",
    spaceItemsLgOnSm: "pf-m-space-items-lg-on-sm",
    spaceItemsXlOnSm: "pf-m-space-items-xl-on-sm",
    spaceItems_2xlOnSm: "pf-m-space-items-2xl-on-sm",
    spaceItems_3xlOnSm: "pf-m-space-items-3xl-on-sm",
    spaceItems_4xlOnSm: "pf-m-space-items-4xl-on-sm",
    spaceItemsNoneOnMd: "pf-m-space-items-none-on-md",
    spaceItemsXsOnMd: "pf-m-space-items-xs-on-md",
    spaceItemsSmOnMd: "pf-m-space-items-sm-on-md",
    spaceItemsMdOnMd: "pf-m-space-items-md-on-md",
    spaceItemsLgOnMd: "pf-m-space-items-lg-on-md",
    spaceItemsXlOnMd: "pf-m-space-items-xl-on-md",
    spaceItems_2xlOnMd: "pf-m-space-items-2xl-on-md",
    spaceItems_3xlOnMd: "pf-m-space-items-3xl-on-md",
    spaceItems_4xlOnMd: "pf-m-space-items-4xl-on-md",
    spaceItemsNoneOnLg: "pf-m-space-items-none-on-lg",
    spaceItemsXsOnLg: "pf-m-space-items-xs-on-lg",
    spaceItemsSmOnLg: "pf-m-space-items-sm-on-lg",
    spaceItemsMdOnLg: "pf-m-space-items-md-on-lg",
    spaceItemsLgOnLg: "pf-m-space-items-lg-on-lg",
    spaceItemsXlOnLg: "pf-m-space-items-xl-on-lg",
    spaceItems_2xlOnLg: "pf-m-space-items-2xl-on-lg",
    spaceItems_3xlOnLg: "pf-m-space-items-3xl-on-lg",
    spaceItems_4xlOnLg: "pf-m-space-items-4xl-on-lg",
    spaceItemsNoneOnXl: "pf-m-space-items-none-on-xl",
    spaceItemsXsOnXl: "pf-m-space-items-xs-on-xl",
    spaceItemsSmOnXl: "pf-m-space-items-sm-on-xl",
    spaceItemsMdOnXl: "pf-m-space-items-md-on-xl",
    spaceItemsLgOnXl: "pf-m-space-items-lg-on-xl",
    spaceItemsXlOnXl: "pf-m-space-items-xl-on-xl",
    spaceItems_2xlOnXl: "pf-m-space-items-2xl-on-xl",
    spaceItems_3xlOnXl: "pf-m-space-items-3xl-on-xl",
    spaceItems_4xlOnXl: "pf-m-space-items-4xl-on-xl",
    spaceItemsNoneOn_2xl: "pf-m-space-items-none-on-2xl",
    spaceItemsXsOn_2xl: "pf-m-space-items-xs-on-2xl",
    spaceItemsSmOn_2xl: "pf-m-space-items-sm-on-2xl",
    spaceItemsMdOn_2xl: "pf-m-space-items-md-on-2xl",
    spaceItemsLgOn_2xl: "pf-m-space-items-lg-on-2xl",
    spaceItemsXlOn_2xl: "pf-m-space-items-xl-on-2xl",
    spaceItems_2xlOn_2xl: "pf-m-space-items-2xl-on-2xl",
    spaceItems_3xlOn_2xl: "pf-m-space-items-3xl-on-2xl",
    spaceItems_4xlOn_2xl: "pf-m-space-items-4xl-on-2xl",
    spacerNone: "pf-m-spacer-none",
    spacerXs: "pf-m-spacer-xs",
    spacerSm: "pf-m-spacer-sm",
    spacerMd: "pf-m-spacer-md",
    spacerLg: "pf-m-spacer-lg",
    spacerXl: "pf-m-spacer-xl",
    spacer_2xl: "pf-m-spacer-2xl",
    spacer_3xl: "pf-m-spacer-3xl",
    spacer_4xl: "pf-m-spacer-4xl",
    spacerNoneOnSm: "pf-m-spacer-none-on-sm",
    spacerXsOnSm: "pf-m-spacer-xs-on-sm",
    spacerSmOnSm: "pf-m-spacer-sm-on-sm",
    spacerMdOnSm: "pf-m-spacer-md-on-sm",
    spacerLgOnSm: "pf-m-spacer-lg-on-sm",
    spacerXlOnSm: "pf-m-spacer-xl-on-sm",
    spacer_2xlOnSm: "pf-m-spacer-2xl-on-sm",
    spacer_3xlOnSm: "pf-m-spacer-3xl-on-sm",
    spacer_4xlOnSm: "pf-m-spacer-4xl-on-sm",
    spacerNoneOnMd: "pf-m-spacer-none-on-md",
    spacerXsOnMd: "pf-m-spacer-xs-on-md",
    spacerSmOnMd: "pf-m-spacer-sm-on-md",
    spacerMdOnMd: "pf-m-spacer-md-on-md",
    spacerLgOnMd: "pf-m-spacer-lg-on-md",
    spacerXlOnMd: "pf-m-spacer-xl-on-md",
    spacer_2xlOnMd: "pf-m-spacer-2xl-on-md",
    spacer_3xlOnMd: "pf-m-spacer-3xl-on-md",
    spacer_4xlOnMd: "pf-m-spacer-4xl-on-md",
    spacerNoneOnLg: "pf-m-spacer-none-on-lg",
    spacerXsOnLg: "pf-m-spacer-xs-on-lg",
    spacerSmOnLg: "pf-m-spacer-sm-on-lg",
    spacerMdOnLg: "pf-m-spacer-md-on-lg",
    spacerLgOnLg: "pf-m-spacer-lg-on-lg",
    spacerXlOnLg: "pf-m-spacer-xl-on-lg",
    spacer_2xlOnLg: "pf-m-spacer-2xl-on-lg",
    spacer_3xlOnLg: "pf-m-spacer-3xl-on-lg",
    spacer_4xlOnLg: "pf-m-spacer-4xl-on-lg",
    spacerNoneOnXl: "pf-m-spacer-none-on-xl",
    spacerXsOnXl: "pf-m-spacer-xs-on-xl",
    spacerSmOnXl: "pf-m-spacer-sm-on-xl",
    spacerMdOnXl: "pf-m-spacer-md-on-xl",
    spacerLgOnXl: "pf-m-spacer-lg-on-xl",
    spacerXlOnXl: "pf-m-spacer-xl-on-xl",
    spacer_2xlOnXl: "pf-m-spacer-2xl-on-xl",
    spacer_3xlOnXl: "pf-m-spacer-3xl-on-xl",
    spacer_4xlOnXl: "pf-m-spacer-4xl-on-xl",
    spacerNoneOn_2xl: "pf-m-spacer-none-on-2xl",
    spacerXsOn_2xl: "pf-m-spacer-xs-on-2xl",
    spacerSmOn_2xl: "pf-m-spacer-sm-on-2xl",
    spacerMdOn_2xl: "pf-m-spacer-md-on-2xl",
    spacerLgOn_2xl: "pf-m-spacer-lg-on-2xl",
    spacerXlOn_2xl: "pf-m-spacer-xl-on-2xl",
    spacer_2xlOn_2xl: "pf-m-spacer-2xl-on-2xl",
    spacer_3xlOn_2xl: "pf-m-spacer-3xl-on-2xl",
    spacer_4xlOn_2xl: "pf-m-spacer-4xl-on-2xl",
    gap: "pf-m-gap",
    gapNone: "pf-m-gap-none",
    gapXs: "pf-m-gap-xs",
    gapSm: "pf-m-gap-sm",
    gapMd: "pf-m-gap-md",
    gapLg: "pf-m-gap-lg",
    gapXl: "pf-m-gap-xl",
    gap_2xl: "pf-m-gap-2xl",
    gap_3xl: "pf-m-gap-3xl",
    gap_4xl: "pf-m-gap-4xl",
    gapOnSm: "pf-m-gap-on-sm",
    gapNoneOnSm: "pf-m-gap-none-on-sm",
    gapXsOnSm: "pf-m-gap-xs-on-sm",
    gapSmOnSm: "pf-m-gap-sm-on-sm",
    gapMdOnSm: "pf-m-gap-md-on-sm",
    gapLgOnSm: "pf-m-gap-lg-on-sm",
    gapXlOnSm: "pf-m-gap-xl-on-sm",
    gap_2xlOnSm: "pf-m-gap-2xl-on-sm",
    gap_3xlOnSm: "pf-m-gap-3xl-on-sm",
    gap_4xlOnSm: "pf-m-gap-4xl-on-sm",
    gapOnMd: "pf-m-gap-on-md",
    gapNoneOnMd: "pf-m-gap-none-on-md",
    gapXsOnMd: "pf-m-gap-xs-on-md",
    gapSmOnMd: "pf-m-gap-sm-on-md",
    gapMdOnMd: "pf-m-gap-md-on-md",
    gapLgOnMd: "pf-m-gap-lg-on-md",
    gapXlOnMd: "pf-m-gap-xl-on-md",
    gap_2xlOnMd: "pf-m-gap-2xl-on-md",
    gap_3xlOnMd: "pf-m-gap-3xl-on-md",
    gap_4xlOnMd: "pf-m-gap-4xl-on-md",
    gapOnLg: "pf-m-gap-on-lg",
    gapNoneOnLg: "pf-m-gap-none-on-lg",
    gapXsOnLg: "pf-m-gap-xs-on-lg",
    gapSmOnLg: "pf-m-gap-sm-on-lg",
    gapMdOnLg: "pf-m-gap-md-on-lg",
    gapLgOnLg: "pf-m-gap-lg-on-lg",
    gapXlOnLg: "pf-m-gap-xl-on-lg",
    gap_2xlOnLg: "pf-m-gap-2xl-on-lg",
    gap_3xlOnLg: "pf-m-gap-3xl-on-lg",
    gap_4xlOnLg: "pf-m-gap-4xl-on-lg",
    gapOnXl: "pf-m-gap-on-xl",
    gapNoneOnXl: "pf-m-gap-none-on-xl",
    gapXsOnXl: "pf-m-gap-xs-on-xl",
    gapSmOnXl: "pf-m-gap-sm-on-xl",
    gapMdOnXl: "pf-m-gap-md-on-xl",
    gapLgOnXl: "pf-m-gap-lg-on-xl",
    gapXlOnXl: "pf-m-gap-xl-on-xl",
    gap_2xlOnXl: "pf-m-gap-2xl-on-xl",
    gap_3xlOnXl: "pf-m-gap-3xl-on-xl",
    gap_4xlOnXl: "pf-m-gap-4xl-on-xl",
    gapOn_2xl: "pf-m-gap-on-2xl",
    gapNoneOn_2xl: "pf-m-gap-none-on-2xl",
    gapXsOn_2xl: "pf-m-gap-xs-on-2xl",
    gapSmOn_2xl: "pf-m-gap-sm-on-2xl",
    gapMdOn_2xl: "pf-m-gap-md-on-2xl",
    gapLgOn_2xl: "pf-m-gap-lg-on-2xl",
    gapXlOn_2xl: "pf-m-gap-xl-on-2xl",
    gap_2xlOn_2xl: "pf-m-gap-2xl-on-2xl",
    gap_3xlOn_2xl: "pf-m-gap-3xl-on-2xl",
    gap_4xlOn_2xl: "pf-m-gap-4xl-on-2xl",
    rowGap: "pf-m-row-gap",
    rowGapNone: "pf-m-row-gap-none",
    rowGapXs: "pf-m-row-gap-xs",
    rowGapSm: "pf-m-row-gap-sm",
    rowGapMd: "pf-m-row-gap-md",
    rowGapLg: "pf-m-row-gap-lg",
    rowGapXl: "pf-m-row-gap-xl",
    rowGap_2xl: "pf-m-row-gap-2xl",
    rowGap_3xl: "pf-m-row-gap-3xl",
    rowGap_4xl: "pf-m-row-gap-4xl",
    rowGapOnSm: "pf-m-row-gap-on-sm",
    rowGapNoneOnSm: "pf-m-row-gap-none-on-sm",
    rowGapXsOnSm: "pf-m-row-gap-xs-on-sm",
    rowGapSmOnSm: "pf-m-row-gap-sm-on-sm",
    rowGapMdOnSm: "pf-m-row-gap-md-on-sm",
    rowGapLgOnSm: "pf-m-row-gap-lg-on-sm",
    rowGapXlOnSm: "pf-m-row-gap-xl-on-sm",
    rowGap_2xlOnSm: "pf-m-row-gap-2xl-on-sm",
    rowGap_3xlOnSm: "pf-m-row-gap-3xl-on-sm",
    rowGap_4xlOnSm: "pf-m-row-gap-4xl-on-sm",
    rowGapOnMd: "pf-m-row-gap-on-md",
    rowGapNoneOnMd: "pf-m-row-gap-none-on-md",
    rowGapXsOnMd: "pf-m-row-gap-xs-on-md",
    rowGapSmOnMd: "pf-m-row-gap-sm-on-md",
    rowGapMdOnMd: "pf-m-row-gap-md-on-md",
    rowGapLgOnMd: "pf-m-row-gap-lg-on-md",
    rowGapXlOnMd: "pf-m-row-gap-xl-on-md",
    rowGap_2xlOnMd: "pf-m-row-gap-2xl-on-md",
    rowGap_3xlOnMd: "pf-m-row-gap-3xl-on-md",
    rowGap_4xlOnMd: "pf-m-row-gap-4xl-on-md",
    rowGapOnLg: "pf-m-row-gap-on-lg",
    rowGapNoneOnLg: "pf-m-row-gap-none-on-lg",
    rowGapXsOnLg: "pf-m-row-gap-xs-on-lg",
    rowGapSmOnLg: "pf-m-row-gap-sm-on-lg",
    rowGapMdOnLg: "pf-m-row-gap-md-on-lg",
    rowGapLgOnLg: "pf-m-row-gap-lg-on-lg",
    rowGapXlOnLg: "pf-m-row-gap-xl-on-lg",
    rowGap_2xlOnLg: "pf-m-row-gap-2xl-on-lg",
    rowGap_3xlOnLg: "pf-m-row-gap-3xl-on-lg",
    rowGap_4xlOnLg: "pf-m-row-gap-4xl-on-lg",
    rowGapOnXl: "pf-m-row-gap-on-xl",
    rowGapNoneOnXl: "pf-m-row-gap-none-on-xl",
    rowGapXsOnXl: "pf-m-row-gap-xs-on-xl",
    rowGapSmOnXl: "pf-m-row-gap-sm-on-xl",
    rowGapMdOnXl: "pf-m-row-gap-md-on-xl",
    rowGapLgOnXl: "pf-m-row-gap-lg-on-xl",
    rowGapXlOnXl: "pf-m-row-gap-xl-on-xl",
    rowGap_2xlOnXl: "pf-m-row-gap-2xl-on-xl",
    rowGap_3xlOnXl: "pf-m-row-gap-3xl-on-xl",
    rowGap_4xlOnXl: "pf-m-row-gap-4xl-on-xl",
    rowGapOn_2xl: "pf-m-row-gap-on-2xl",
    rowGapNoneOn_2xl: "pf-m-row-gap-none-on-2xl",
    rowGapXsOn_2xl: "pf-m-row-gap-xs-on-2xl",
    rowGapSmOn_2xl: "pf-m-row-gap-sm-on-2xl",
    rowGapMdOn_2xl: "pf-m-row-gap-md-on-2xl",
    rowGapLgOn_2xl: "pf-m-row-gap-lg-on-2xl",
    rowGapXlOn_2xl: "pf-m-row-gap-xl-on-2xl",
    rowGap_2xlOn_2xl: "pf-m-row-gap-2xl-on-2xl",
    rowGap_3xlOn_2xl: "pf-m-row-gap-3xl-on-2xl",
    rowGap_4xlOn_2xl: "pf-m-row-gap-4xl-on-2xl",
    columnGap: "pf-m-column-gap",
    columnGapNone: "pf-m-column-gap-none",
    columnGapXs: "pf-m-column-gap-xs",
    columnGapSm: "pf-m-column-gap-sm",
    columnGapMd: "pf-m-column-gap-md",
    columnGapLg: "pf-m-column-gap-lg",
    columnGapXl: "pf-m-column-gap-xl",
    columnGap_2xl: "pf-m-column-gap-2xl",
    columnGap_3xl: "pf-m-column-gap-3xl",
    columnGap_4xl: "pf-m-column-gap-4xl",
    columnGapOnSm: "pf-m-column-gap-on-sm",
    columnGapNoneOnSm: "pf-m-column-gap-none-on-sm",
    columnGapXsOnSm: "pf-m-column-gap-xs-on-sm",
    columnGapSmOnSm: "pf-m-column-gap-sm-on-sm",
    columnGapMdOnSm: "pf-m-column-gap-md-on-sm",
    columnGapLgOnSm: "pf-m-column-gap-lg-on-sm",
    columnGapXlOnSm: "pf-m-column-gap-xl-on-sm",
    columnGap_2xlOnSm: "pf-m-column-gap-2xl-on-sm",
    columnGap_3xlOnSm: "pf-m-column-gap-3xl-on-sm",
    columnGap_4xlOnSm: "pf-m-column-gap-4xl-on-sm",
    columnGapOnMd: "pf-m-column-gap-on-md",
    columnGapNoneOnMd: "pf-m-column-gap-none-on-md",
    columnGapXsOnMd: "pf-m-column-gap-xs-on-md",
    columnGapSmOnMd: "pf-m-column-gap-sm-on-md",
    columnGapMdOnMd: "pf-m-column-gap-md-on-md",
    columnGapLgOnMd: "pf-m-column-gap-lg-on-md",
    columnGapXlOnMd: "pf-m-column-gap-xl-on-md",
    columnGap_2xlOnMd: "pf-m-column-gap-2xl-on-md",
    columnGap_3xlOnMd: "pf-m-column-gap-3xl-on-md",
    columnGap_4xlOnMd: "pf-m-column-gap-4xl-on-md",
    columnGapOnLg: "pf-m-column-gap-on-lg",
    columnGapNoneOnLg: "pf-m-column-gap-none-on-lg",
    columnGapXsOnLg: "pf-m-column-gap-xs-on-lg",
    columnGapSmOnLg: "pf-m-column-gap-sm-on-lg",
    columnGapMdOnLg: "pf-m-column-gap-md-on-lg",
    columnGapLgOnLg: "pf-m-column-gap-lg-on-lg",
    columnGapXlOnLg: "pf-m-column-gap-xl-on-lg",
    columnGap_2xlOnLg: "pf-m-column-gap-2xl-on-lg",
    columnGap_3xlOnLg: "pf-m-column-gap-3xl-on-lg",
    columnGap_4xlOnLg: "pf-m-column-gap-4xl-on-lg",
    columnGapOnXl: "pf-m-column-gap-on-xl",
    columnGapNoneOnXl: "pf-m-column-gap-none-on-xl",
    columnGapXsOnXl: "pf-m-column-gap-xs-on-xl",
    columnGapSmOnXl: "pf-m-column-gap-sm-on-xl",
    columnGapMdOnXl: "pf-m-column-gap-md-on-xl",
    columnGapLgOnXl: "pf-m-column-gap-lg-on-xl",
    columnGapXlOnXl: "pf-m-column-gap-xl-on-xl",
    columnGap_2xlOnXl: "pf-m-column-gap-2xl-on-xl",
    columnGap_3xlOnXl: "pf-m-column-gap-3xl-on-xl",
    columnGap_4xlOnXl: "pf-m-column-gap-4xl-on-xl",
    columnGapOn_2xl: "pf-m-column-gap-on-2xl",
    columnGapNoneOn_2xl: "pf-m-column-gap-none-on-2xl",
    columnGapXsOn_2xl: "pf-m-column-gap-xs-on-2xl",
    columnGapSmOn_2xl: "pf-m-column-gap-sm-on-2xl",
    columnGapMdOn_2xl: "pf-m-column-gap-md-on-2xl",
    columnGapLgOn_2xl: "pf-m-column-gap-lg-on-2xl",
    columnGapXlOn_2xl: "pf-m-column-gap-xl-on-2xl",
    columnGap_2xlOn_2xl: "pf-m-column-gap-2xl-on-2xl",
    columnGap_3xlOn_2xl: "pf-m-column-gap-3xl-on-2xl",
    columnGap_4xlOn_2xl: "pf-m-column-gap-4xl-on-2xl"
  }
}, rS = {
  name: "--pf-v5-l-flex--item--Order",
  value: "0",
  var: "var(--pf-v5-l-flex--item--Order)"
}, ra = (e) => {
  var { children: t = null, className: n = "", component: r = "div", spacer: i, spaceItems: s, gap: o, rowGap: l, columnGap: c, grow: d, shrink: u, flex: p, direction: m, alignItems: f, alignContent: g, alignSelf: b, align: v, justifyContent: y, display: x, fullWidth: w, flexWrap: R, order: S, style: _ } = e, O = oe(e, ["children", "className", "component", "spacer", "spaceItems", "gap", "rowGap", "columnGap", "grow", "shrink", "flex", "direction", "alignItems", "alignContent", "alignSelf", "align", "justifyContent", "display", "fullWidth", "flexWrap", "order", "style"]);
  const E = r;
  return h.createElement(E, Object.assign({ className: $(mn.flex, ut(i, mn), ut(s, mn), ut(d, mn), ut(u, mn), ut(p, mn), ut(m, mn), ut(f, mn), ut(g, mn), ut(b, mn), ut(v, mn), ut(y, mn), ut(x, mn), ut(w, mn), ut(R, mn), ut(o, mn), ut(l, mn), ut(c, mn), n), style: _ || S ? Object.assign(Object.assign({}, _), _o(S, rS.name)) : void 0 }, O), t);
};
ra.displayName = "Flex";
const Nt = (e) => {
  var { children: t = null, className: n = "", component: r = "div", spacer: i, grow: s, shrink: o, flex: l, alignSelf: c, align: d, fullWidth: u, order: p, style: m } = e, f = oe(e, ["children", "className", "component", "spacer", "grow", "shrink", "flex", "alignSelf", "align", "fullWidth", "order", "style"]);
  const g = r;
  return h.createElement(g, Object.assign({}, f, { className: $(ut(i, mn), ut(s, mn), ut(o, mn), ut(l, mn), ut(c, mn), ut(d, mn), ut(u, mn), n), style: m || p ? Object.assign(Object.assign({}, m), _o(p, rS.name)) : void 0 }), t);
};
Nt.displayName = "FlexItem";
const Mv = {
  gallery: "pf-v5-l-gallery",
  modifiers: {
    gutter: "pf-m-gutter"
  }
}, $A = {
  name: "--pf-v5-l-gallery--GridTemplateColumns--min",
  value: "250px",
  var: "var(--pf-v5-l-gallery--GridTemplateColumns--min)"
}, jA = {
  name: "--pf-v5-l-gallery--GridTemplateColumns--max",
  value: "1fr",
  var: "var(--pf-v5-l-gallery--GridTemplateColumns--max)"
}, du = (e) => {
  var { children: t = null, className: n = "", component: r = "div", hasGutter: i = !1, minWidths: s, maxWidths: o } = e, l = oe(e, ["children", "className", "component", "hasGutter", "minWidths", "maxWidths"]);
  const c = {}, d = r;
  s && Object.entries(s || {}).map(([m, f]) => c[`${$A.name}${m !== "default" ? `-on-${m}` : ""}`] = f);
  const u = {};
  o && Object.entries(o || {}).map(([m, f]) => u[`${jA.name}${m !== "default" ? `-on-${m}` : ""}`] = f);
  const p = Object.assign(Object.assign({}, c), u);
  return h.createElement(d, Object.assign({ className: $(Mv.gallery, i && Mv.modifiers.gutter, n) }, l, (s || o) && { style: Object.assign(Object.assign({}, p), l.style) }), t);
};
du.displayName = "Gallery";
const iS = (e) => {
  var { children: t = null, component: n = "div" } = e, r = oe(e, ["children", "component"]);
  const i = n;
  return h.createElement(i, Object.assign({}, r), t);
};
iS.displayName = "GalleryItem";
const fr = {
  grid: "pf-v5-l-grid",
  gridItem: "pf-v5-l-grid__item",
  modifiers: {
    all_1Col: "pf-m-all-1-col",
    all_2Col: "pf-m-all-2-col",
    all_3Col: "pf-m-all-3-col",
    all_4Col: "pf-m-all-4-col",
    all_5Col: "pf-m-all-5-col",
    all_6Col: "pf-m-all-6-col",
    all_7Col: "pf-m-all-7-col",
    all_8Col: "pf-m-all-8-col",
    all_9Col: "pf-m-all-9-col",
    all_10Col: "pf-m-all-10-col",
    all_11Col: "pf-m-all-11-col",
    all_12Col: "pf-m-all-12-col",
    all_1ColOnSm: "pf-m-all-1-col-on-sm",
    all_2ColOnSm: "pf-m-all-2-col-on-sm",
    all_3ColOnSm: "pf-m-all-3-col-on-sm",
    all_4ColOnSm: "pf-m-all-4-col-on-sm",
    all_5ColOnSm: "pf-m-all-5-col-on-sm",
    all_6ColOnSm: "pf-m-all-6-col-on-sm",
    all_7ColOnSm: "pf-m-all-7-col-on-sm",
    all_8ColOnSm: "pf-m-all-8-col-on-sm",
    all_9ColOnSm: "pf-m-all-9-col-on-sm",
    all_10ColOnSm: "pf-m-all-10-col-on-sm",
    all_11ColOnSm: "pf-m-all-11-col-on-sm",
    all_12ColOnSm: "pf-m-all-12-col-on-sm",
    all_1ColOnMd: "pf-m-all-1-col-on-md",
    all_2ColOnMd: "pf-m-all-2-col-on-md",
    all_3ColOnMd: "pf-m-all-3-col-on-md",
    all_4ColOnMd: "pf-m-all-4-col-on-md",
    all_5ColOnMd: "pf-m-all-5-col-on-md",
    all_6ColOnMd: "pf-m-all-6-col-on-md",
    all_7ColOnMd: "pf-m-all-7-col-on-md",
    all_8ColOnMd: "pf-m-all-8-col-on-md",
    all_9ColOnMd: "pf-m-all-9-col-on-md",
    all_10ColOnMd: "pf-m-all-10-col-on-md",
    all_11ColOnMd: "pf-m-all-11-col-on-md",
    all_12ColOnMd: "pf-m-all-12-col-on-md",
    all_1ColOnLg: "pf-m-all-1-col-on-lg",
    all_2ColOnLg: "pf-m-all-2-col-on-lg",
    all_3ColOnLg: "pf-m-all-3-col-on-lg",
    all_4ColOnLg: "pf-m-all-4-col-on-lg",
    all_5ColOnLg: "pf-m-all-5-col-on-lg",
    all_6ColOnLg: "pf-m-all-6-col-on-lg",
    all_7ColOnLg: "pf-m-all-7-col-on-lg",
    all_8ColOnLg: "pf-m-all-8-col-on-lg",
    all_9ColOnLg: "pf-m-all-9-col-on-lg",
    all_10ColOnLg: "pf-m-all-10-col-on-lg",
    all_11ColOnLg: "pf-m-all-11-col-on-lg",
    all_12ColOnLg: "pf-m-all-12-col-on-lg",
    all_1ColOnXl: "pf-m-all-1-col-on-xl",
    all_2ColOnXl: "pf-m-all-2-col-on-xl",
    all_3ColOnXl: "pf-m-all-3-col-on-xl",
    all_4ColOnXl: "pf-m-all-4-col-on-xl",
    all_5ColOnXl: "pf-m-all-5-col-on-xl",
    all_6ColOnXl: "pf-m-all-6-col-on-xl",
    all_7ColOnXl: "pf-m-all-7-col-on-xl",
    all_8ColOnXl: "pf-m-all-8-col-on-xl",
    all_9ColOnXl: "pf-m-all-9-col-on-xl",
    all_10ColOnXl: "pf-m-all-10-col-on-xl",
    all_11ColOnXl: "pf-m-all-11-col-on-xl",
    all_12ColOnXl: "pf-m-all-12-col-on-xl",
    all_1ColOn_2xl: "pf-m-all-1-col-on-2xl",
    all_2ColOn_2xl: "pf-m-all-2-col-on-2xl",
    all_3ColOn_2xl: "pf-m-all-3-col-on-2xl",
    all_4ColOn_2xl: "pf-m-all-4-col-on-2xl",
    all_5ColOn_2xl: "pf-m-all-5-col-on-2xl",
    all_6ColOn_2xl: "pf-m-all-6-col-on-2xl",
    all_7ColOn_2xl: "pf-m-all-7-col-on-2xl",
    all_8ColOn_2xl: "pf-m-all-8-col-on-2xl",
    all_9ColOn_2xl: "pf-m-all-9-col-on-2xl",
    all_10ColOn_2xl: "pf-m-all-10-col-on-2xl",
    all_11ColOn_2xl: "pf-m-all-11-col-on-2xl",
    all_12ColOn_2xl: "pf-m-all-12-col-on-2xl",
    "1Col": "pf-m-1-col",
    "2Col": "pf-m-2-col",
    "3Col": "pf-m-3-col",
    "4Col": "pf-m-4-col",
    "5Col": "pf-m-5-col",
    "6Col": "pf-m-6-col",
    "7Col": "pf-m-7-col",
    "8Col": "pf-m-8-col",
    "9Col": "pf-m-9-col",
    "10Col": "pf-m-10-col",
    "11Col": "pf-m-11-col",
    "12Col": "pf-m-12-col",
    offset_1Col: "pf-m-offset-1-col",
    offset_2Col: "pf-m-offset-2-col",
    offset_3Col: "pf-m-offset-3-col",
    offset_4Col: "pf-m-offset-4-col",
    offset_5Col: "pf-m-offset-5-col",
    offset_6Col: "pf-m-offset-6-col",
    offset_7Col: "pf-m-offset-7-col",
    offset_8Col: "pf-m-offset-8-col",
    offset_9Col: "pf-m-offset-9-col",
    offset_10Col: "pf-m-offset-10-col",
    offset_11Col: "pf-m-offset-11-col",
    offset_12Col: "pf-m-offset-12-col",
    "1Row": "pf-m-1-row",
    "2Row": "pf-m-2-row",
    "3Row": "pf-m-3-row",
    "4Row": "pf-m-4-row",
    "5Row": "pf-m-5-row",
    "6Row": "pf-m-6-row",
    "7Row": "pf-m-7-row",
    "8Row": "pf-m-8-row",
    "9Row": "pf-m-9-row",
    "10Row": "pf-m-10-row",
    "11Row": "pf-m-11-row",
    "12Row": "pf-m-12-row",
    "1ColOnSm": "pf-m-1-col-on-sm",
    "2ColOnSm": "pf-m-2-col-on-sm",
    "3ColOnSm": "pf-m-3-col-on-sm",
    "4ColOnSm": "pf-m-4-col-on-sm",
    "5ColOnSm": "pf-m-5-col-on-sm",
    "6ColOnSm": "pf-m-6-col-on-sm",
    "7ColOnSm": "pf-m-7-col-on-sm",
    "8ColOnSm": "pf-m-8-col-on-sm",
    "9ColOnSm": "pf-m-9-col-on-sm",
    "10ColOnSm": "pf-m-10-col-on-sm",
    "11ColOnSm": "pf-m-11-col-on-sm",
    "12ColOnSm": "pf-m-12-col-on-sm",
    offset_1ColOnSm: "pf-m-offset-1-col-on-sm",
    offset_2ColOnSm: "pf-m-offset-2-col-on-sm",
    offset_3ColOnSm: "pf-m-offset-3-col-on-sm",
    offset_4ColOnSm: "pf-m-offset-4-col-on-sm",
    offset_5ColOnSm: "pf-m-offset-5-col-on-sm",
    offset_6ColOnSm: "pf-m-offset-6-col-on-sm",
    offset_7ColOnSm: "pf-m-offset-7-col-on-sm",
    offset_8ColOnSm: "pf-m-offset-8-col-on-sm",
    offset_9ColOnSm: "pf-m-offset-9-col-on-sm",
    offset_10ColOnSm: "pf-m-offset-10-col-on-sm",
    offset_11ColOnSm: "pf-m-offset-11-col-on-sm",
    offset_12ColOnSm: "pf-m-offset-12-col-on-sm",
    "1RowOnSm": "pf-m-1-row-on-sm",
    "2RowOnSm": "pf-m-2-row-on-sm",
    "3RowOnSm": "pf-m-3-row-on-sm",
    "4RowOnSm": "pf-m-4-row-on-sm",
    "5RowOnSm": "pf-m-5-row-on-sm",
    "6RowOnSm": "pf-m-6-row-on-sm",
    "7RowOnSm": "pf-m-7-row-on-sm",
    "8RowOnSm": "pf-m-8-row-on-sm",
    "9RowOnSm": "pf-m-9-row-on-sm",
    "10RowOnSm": "pf-m-10-row-on-sm",
    "11RowOnSm": "pf-m-11-row-on-sm",
    "12RowOnSm": "pf-m-12-row-on-sm",
    "1ColOnMd": "pf-m-1-col-on-md",
    "2ColOnMd": "pf-m-2-col-on-md",
    "3ColOnMd": "pf-m-3-col-on-md",
    "4ColOnMd": "pf-m-4-col-on-md",
    "5ColOnMd": "pf-m-5-col-on-md",
    "6ColOnMd": "pf-m-6-col-on-md",
    "7ColOnMd": "pf-m-7-col-on-md",
    "8ColOnMd": "pf-m-8-col-on-md",
    "9ColOnMd": "pf-m-9-col-on-md",
    "10ColOnMd": "pf-m-10-col-on-md",
    "11ColOnMd": "pf-m-11-col-on-md",
    "12ColOnMd": "pf-m-12-col-on-md",
    offset_1ColOnMd: "pf-m-offset-1-col-on-md",
    offset_2ColOnMd: "pf-m-offset-2-col-on-md",
    offset_3ColOnMd: "pf-m-offset-3-col-on-md",
    offset_4ColOnMd: "pf-m-offset-4-col-on-md",
    offset_5ColOnMd: "pf-m-offset-5-col-on-md",
    offset_6ColOnMd: "pf-m-offset-6-col-on-md",
    offset_7ColOnMd: "pf-m-offset-7-col-on-md",
    offset_8ColOnMd: "pf-m-offset-8-col-on-md",
    offset_9ColOnMd: "pf-m-offset-9-col-on-md",
    offset_10ColOnMd: "pf-m-offset-10-col-on-md",
    offset_11ColOnMd: "pf-m-offset-11-col-on-md",
    offset_12ColOnMd: "pf-m-offset-12-col-on-md",
    "1RowOnMd": "pf-m-1-row-on-md",
    "2RowOnMd": "pf-m-2-row-on-md",
    "3RowOnMd": "pf-m-3-row-on-md",
    "4RowOnMd": "pf-m-4-row-on-md",
    "5RowOnMd": "pf-m-5-row-on-md",
    "6RowOnMd": "pf-m-6-row-on-md",
    "7RowOnMd": "pf-m-7-row-on-md",
    "8RowOnMd": "pf-m-8-row-on-md",
    "9RowOnMd": "pf-m-9-row-on-md",
    "10RowOnMd": "pf-m-10-row-on-md",
    "11RowOnMd": "pf-m-11-row-on-md",
    "12RowOnMd": "pf-m-12-row-on-md",
    "1ColOnLg": "pf-m-1-col-on-lg",
    "2ColOnLg": "pf-m-2-col-on-lg",
    "3ColOnLg": "pf-m-3-col-on-lg",
    "4ColOnLg": "pf-m-4-col-on-lg",
    "5ColOnLg": "pf-m-5-col-on-lg",
    "6ColOnLg": "pf-m-6-col-on-lg",
    "7ColOnLg": "pf-m-7-col-on-lg",
    "8ColOnLg": "pf-m-8-col-on-lg",
    "9ColOnLg": "pf-m-9-col-on-lg",
    "10ColOnLg": "pf-m-10-col-on-lg",
    "11ColOnLg": "pf-m-11-col-on-lg",
    "12ColOnLg": "pf-m-12-col-on-lg",
    offset_1ColOnLg: "pf-m-offset-1-col-on-lg",
    offset_2ColOnLg: "pf-m-offset-2-col-on-lg",
    offset_3ColOnLg: "pf-m-offset-3-col-on-lg",
    offset_4ColOnLg: "pf-m-offset-4-col-on-lg",
    offset_5ColOnLg: "pf-m-offset-5-col-on-lg",
    offset_6ColOnLg: "pf-m-offset-6-col-on-lg",
    offset_7ColOnLg: "pf-m-offset-7-col-on-lg",
    offset_8ColOnLg: "pf-m-offset-8-col-on-lg",
    offset_9ColOnLg: "pf-m-offset-9-col-on-lg",
    offset_10ColOnLg: "pf-m-offset-10-col-on-lg",
    offset_11ColOnLg: "pf-m-offset-11-col-on-lg",
    offset_12ColOnLg: "pf-m-offset-12-col-on-lg",
    "1RowOnLg": "pf-m-1-row-on-lg",
    "2RowOnLg": "pf-m-2-row-on-lg",
    "3RowOnLg": "pf-m-3-row-on-lg",
    "4RowOnLg": "pf-m-4-row-on-lg",
    "5RowOnLg": "pf-m-5-row-on-lg",
    "6RowOnLg": "pf-m-6-row-on-lg",
    "7RowOnLg": "pf-m-7-row-on-lg",
    "8RowOnLg": "pf-m-8-row-on-lg",
    "9RowOnLg": "pf-m-9-row-on-lg",
    "10RowOnLg": "pf-m-10-row-on-lg",
    "11RowOnLg": "pf-m-11-row-on-lg",
    "12RowOnLg": "pf-m-12-row-on-lg",
    "1ColOnXl": "pf-m-1-col-on-xl",
    "2ColOnXl": "pf-m-2-col-on-xl",
    "3ColOnXl": "pf-m-3-col-on-xl",
    "4ColOnXl": "pf-m-4-col-on-xl",
    "5ColOnXl": "pf-m-5-col-on-xl",
    "6ColOnXl": "pf-m-6-col-on-xl",
    "7ColOnXl": "pf-m-7-col-on-xl",
    "8ColOnXl": "pf-m-8-col-on-xl",
    "9ColOnXl": "pf-m-9-col-on-xl",
    "10ColOnXl": "pf-m-10-col-on-xl",
    "11ColOnXl": "pf-m-11-col-on-xl",
    "12ColOnXl": "pf-m-12-col-on-xl",
    offset_1ColOnXl: "pf-m-offset-1-col-on-xl",
    offset_2ColOnXl: "pf-m-offset-2-col-on-xl",
    offset_3ColOnXl: "pf-m-offset-3-col-on-xl",
    offset_4ColOnXl: "pf-m-offset-4-col-on-xl",
    offset_5ColOnXl: "pf-m-offset-5-col-on-xl",
    offset_6ColOnXl: "pf-m-offset-6-col-on-xl",
    offset_7ColOnXl: "pf-m-offset-7-col-on-xl",
    offset_8ColOnXl: "pf-m-offset-8-col-on-xl",
    offset_9ColOnXl: "pf-m-offset-9-col-on-xl",
    offset_10ColOnXl: "pf-m-offset-10-col-on-xl",
    offset_11ColOnXl: "pf-m-offset-11-col-on-xl",
    offset_12ColOnXl: "pf-m-offset-12-col-on-xl",
    "1RowOnXl": "pf-m-1-row-on-xl",
    "2RowOnXl": "pf-m-2-row-on-xl",
    "3RowOnXl": "pf-m-3-row-on-xl",
    "4RowOnXl": "pf-m-4-row-on-xl",
    "5RowOnXl": "pf-m-5-row-on-xl",
    "6RowOnXl": "pf-m-6-row-on-xl",
    "7RowOnXl": "pf-m-7-row-on-xl",
    "8RowOnXl": "pf-m-8-row-on-xl",
    "9RowOnXl": "pf-m-9-row-on-xl",
    "10RowOnXl": "pf-m-10-row-on-xl",
    "11RowOnXl": "pf-m-11-row-on-xl",
    "12RowOnXl": "pf-m-12-row-on-xl",
    "1ColOn_2xl": "pf-m-1-col-on-2xl",
    "2ColOn_2xl": "pf-m-2-col-on-2xl",
    "3ColOn_2xl": "pf-m-3-col-on-2xl",
    "4ColOn_2xl": "pf-m-4-col-on-2xl",
    "5ColOn_2xl": "pf-m-5-col-on-2xl",
    "6ColOn_2xl": "pf-m-6-col-on-2xl",
    "7ColOn_2xl": "pf-m-7-col-on-2xl",
    "8ColOn_2xl": "pf-m-8-col-on-2xl",
    "9ColOn_2xl": "pf-m-9-col-on-2xl",
    "10ColOn_2xl": "pf-m-10-col-on-2xl",
    "11ColOn_2xl": "pf-m-11-col-on-2xl",
    "12ColOn_2xl": "pf-m-12-col-on-2xl",
    offset_1ColOn_2xl: "pf-m-offset-1-col-on-2xl",
    offset_2ColOn_2xl: "pf-m-offset-2-col-on-2xl",
    offset_3ColOn_2xl: "pf-m-offset-3-col-on-2xl",
    offset_4ColOn_2xl: "pf-m-offset-4-col-on-2xl",
    offset_5ColOn_2xl: "pf-m-offset-5-col-on-2xl",
    offset_6ColOn_2xl: "pf-m-offset-6-col-on-2xl",
    offset_7ColOn_2xl: "pf-m-offset-7-col-on-2xl",
    offset_8ColOn_2xl: "pf-m-offset-8-col-on-2xl",
    offset_9ColOn_2xl: "pf-m-offset-9-col-on-2xl",
    offset_10ColOn_2xl: "pf-m-offset-10-col-on-2xl",
    offset_11ColOn_2xl: "pf-m-offset-11-col-on-2xl",
    offset_12ColOn_2xl: "pf-m-offset-12-col-on-2xl",
    "1RowOn_2xl": "pf-m-1-row-on-2xl",
    "2RowOn_2xl": "pf-m-2-row-on-2xl",
    "3RowOn_2xl": "pf-m-3-row-on-2xl",
    "4RowOn_2xl": "pf-m-4-row-on-2xl",
    "5RowOn_2xl": "pf-m-5-row-on-2xl",
    "6RowOn_2xl": "pf-m-6-row-on-2xl",
    "7RowOn_2xl": "pf-m-7-row-on-2xl",
    "8RowOn_2xl": "pf-m-8-row-on-2xl",
    "9RowOn_2xl": "pf-m-9-row-on-2xl",
    "10RowOn_2xl": "pf-m-10-row-on-2xl",
    "11RowOn_2xl": "pf-m-11-row-on-2xl",
    "12RowOn_2xl": "pf-m-12-row-on-2xl",
    gutter: "pf-m-gutter"
  }
};
var Fv;
(function(e) {
  e.xs = "xs", e.sm = "sm", e.md = "md", e.lg = "lg", e.xl = "xl", e["2xl"] = "2xl", e["3xl"] = "3xl", e["4xl"] = "4xl";
})(Fv || (Fv = {}));
var uu;
(function(e) {
  e.sm = "Sm", e.md = "Md", e.lg = "Lg", e.xl = "Xl", e.xl2 = "_2xl";
})(uu || (uu = {}));
const sS = {
  name: "--pf-v5-l-grid--item--Order",
  value: "0",
  var: "var(--pf-v5-l-grid--item--Order)"
}, Va = (e) => {
  var { children: t = null, className: n = "", component: r = "div", hasGutter: i, span: s = null, order: o, style: l } = e, c = oe(e, ["children", "className", "component", "hasGutter", "span", "order", "style"]);
  const d = [fr.grid, s && fr.modifiers[`all_${s}Col`]], u = r;
  return Object.entries(uu).forEach(([p, m]) => {
    const f = p, g = c[f];
    g && d.push(fr.modifiers[`all_${g}ColOn${m}`]), delete c[f];
  }), h.createElement(u, Object.assign({ className: $(...d, i && fr.modifiers.gutter, n), style: l || o ? Object.assign(Object.assign({}, l), _o(o, sS.name)) : void 0 }, c), t);
};
Va.displayName = "Grid";
const zt = (e) => {
  var { children: t = null, className: n = "", component: r = "div", span: i = null, rowSpan: s = null, offset: o = null, order: l, style: c } = e, d = oe(e, ["children", "className", "component", "span", "rowSpan", "offset", "order", "style"]);
  const u = [
    fr.gridItem,
    i && fr.modifiers[`${i}Col`],
    s && fr.modifiers[`${s}Row`],
    o && fr.modifiers[`offset_${o}Col`]
  ], p = r;
  return Object.entries(uu).forEach(([m, f]) => {
    const g = m, b = `${g}RowSpan`, v = `${g}Offset`, y = d[g], x = d[b], w = d[v];
    y && u.push(fr.modifiers[`${y}ColOn${f}`]), x && u.push(fr.modifiers[`${x}RowOn${f}`]), w && u.push(fr.modifiers[`offset_${w}ColOn${f}`]), delete d[g], delete d[b], delete d[v];
  }), h.createElement(p, Object.assign({ className: $(...u, n), style: c || l ? Object.assign(Object.assign({}, c), _o(l, sS.name)) : void 0 }, d), t);
};
zt.displayName = "GridItem";
const $v = {
  level: "pf-v5-l-level",
  modifiers: {
    gutter: "pf-m-gutter"
  }
}, kf = (e) => {
  var { hasGutter: t, className: n = "", children: r = null } = e, i = oe(e, ["hasGutter", "className", "children"]);
  return h.createElement("div", Object.assign({}, i, { className: $($v.level, t && $v.modifiers.gutter, n) }), r);
};
kf.displayName = "Level";
const Dl = (e) => {
  var { children: t = null } = e, n = oe(e, ["children"]);
  return h.createElement("div", Object.assign({}, n), t);
};
Dl.displayName = "LevelItem";
const Xl = {
  modifiers: {
    wrap: "pf-m-wrap",
    fill: "pf-m-fill",
    gutter: "pf-m-gutter"
  },
  split: "pf-v5-l-split",
  splitItem: "pf-v5-l-split__item"
}, Jn = (e) => {
  var { hasGutter: t = !1, isWrappable: n = !1, className: r = "", children: i = null, component: s = "div" } = e, o = oe(e, ["hasGutter", "isWrappable", "className", "children", "component"]);
  const l = s;
  return h.createElement(l, Object.assign({}, o, { className: $(Xl.split, t && Xl.modifiers.gutter, n && Xl.modifiers.wrap, r) }), i);
};
Jn.displayName = "Split";
const Dt = (e) => {
  var { isFilled: t = !1, className: n = "", children: r = null } = e, i = oe(e, ["isFilled", "className", "children"]);
  return h.createElement("div", Object.assign({}, i, { className: $(Xl.splitItem, t && Xl.modifiers.fill, n) }), r);
};
Dt.displayName = "SplitItem";
const pu = {
  modifiers: {
    fill: "pf-m-fill",
    gutter: "pf-m-gutter"
  },
  stack: "pf-v5-l-stack",
  stackItem: "pf-v5-l-stack__item"
}, rl = (e) => {
  var { hasGutter: t = !1, className: n = "", children: r = null, component: i = "div" } = e, s = oe(e, ["hasGutter", "className", "children", "component"]);
  const o = i;
  return h.createElement(o, Object.assign({}, s, { className: $(pu.stack, t && pu.modifiers.gutter, n) }), r);
};
rl.displayName = "Stack";
const va = (e) => {
  var { isFilled: t = !1, className: n = "", children: r = null } = e, i = oe(e, ["isFilled", "className", "children"]);
  return h.createElement("div", Object.assign({}, i, { className: $(pu.stackItem, t && pu.modifiers.fill, n) }), r);
};
va.displayName = "StackItem";
class Ml extends Error {
}
Ml.prototype.name = "InvalidTokenError";
function BA(e) {
  return decodeURIComponent(atob(e).replace(/(.)/g, (t, n) => {
    let r = n.charCodeAt(0).toString(16).toUpperCase();
    return r.length < 2 && (r = "0" + r), "%" + r;
  }));
}
function UA(e) {
  let t = e.replace(/-/g, "+").replace(/_/g, "/");
  switch (t.length % 4) {
    case 0:
      break;
    case 2:
      t += "==";
      break;
    case 3:
      t += "=";
      break;
    default:
      throw new Error("base64 string is not of the correct length");
  }
  try {
    return BA(t);
  } catch {
    return atob(t);
  }
}
function om(e, t) {
  if (typeof e != "string")
    throw new Ml("Invalid token specified: must be a string");
  t || (t = {});
  const n = t.header === !0 ? 0 : 1, r = e.split(".")[n];
  if (typeof r != "string")
    throw new Ml(`Invalid token specified: missing part #${n + 1}`);
  let i;
  try {
    i = UA(r);
  } catch (s) {
    throw new Ml(`Invalid token specified: invalid base64 for part #${n + 1} (${s.message})`);
  }
  try {
    return JSON.parse(i);
  } catch (s) {
    throw new Ml(`Invalid token specified: invalid json for part #${n + 1} (${s.message})`);
  }
}
function VA(e) {
  return e instanceof Uint8Array || e != null && typeof e == "object" && e.constructor.name === "Uint8Array";
}
function oS(e, ...t) {
  if (!VA(e))
    throw new Error("Uint8Array expected");
  if (t.length > 0 && !t.includes(e.length))
    throw new Error(`Uint8Array expected of length ${t}, not of length=${e.length}`);
}
function jv(e, t = !0) {
  if (e.destroyed)
    throw new Error("Hash instance has been destroyed");
  if (t && e.finished)
    throw new Error("Hash#digest() has already been called");
}
function KA(e, t) {
  oS(e);
  const n = t.outputLen;
  if (e.length < n)
    throw new Error(`digestInto() expects output buffer of length at least ${n}`);
}
/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */
const lm = (e) => new DataView(e.buffer, e.byteOffset, e.byteLength), Ar = (e, t) => e << 32 - t | e >>> t;
new Uint8Array(new Uint32Array([287454020]).buffer)[0];
function HA(e) {
  if (typeof e != "string")
    throw new Error(`utf8ToBytes expected string, got ${typeof e}`);
  return new Uint8Array(new TextEncoder().encode(e));
}
function lS(e) {
  return typeof e == "string" && (e = HA(e)), oS(e), e;
}
let zA = class {
  // Safe version that clones internal state
  clone() {
    return this._cloneInto();
  }
};
function qA(e) {
  const t = (r) => e().update(lS(r)).digest(), n = e();
  return t.outputLen = n.outputLen, t.blockLen = n.blockLen, t.create = () => e(), t;
}
function GA(e, t, n, r) {
  if (typeof e.setBigUint64 == "function")
    return e.setBigUint64(t, n, r);
  const i = BigInt(32), s = BigInt(4294967295), o = Number(n >> i & s), l = Number(n & s), c = r ? 4 : 0, d = r ? 0 : 4;
  e.setUint32(t + c, o, r), e.setUint32(t + d, l, r);
}
const WA = (e, t, n) => e & t ^ ~e & n, XA = (e, t, n) => e & t ^ e & n ^ t & n;
class YA extends zA {
  constructor(t, n, r, i) {
    super(), this.blockLen = t, this.outputLen = n, this.padOffset = r, this.isLE = i, this.finished = !1, this.length = 0, this.pos = 0, this.destroyed = !1, this.buffer = new Uint8Array(t), this.view = lm(this.buffer);
  }
  update(t) {
    jv(this);
    const { view: n, buffer: r, blockLen: i } = this;
    t = lS(t);
    const s = t.length;
    for (let o = 0; o < s; ) {
      const l = Math.min(i - this.pos, s - o);
      if (l === i) {
        const c = lm(t);
        for (; i <= s - o; o += i)
          this.process(c, o);
        continue;
      }
      r.set(t.subarray(o, o + l), this.pos), this.pos += l, o += l, this.pos === i && (this.process(n, 0), this.pos = 0);
    }
    return this.length += t.length, this.roundClean(), this;
  }
  digestInto(t) {
    jv(this), KA(t, this), this.finished = !0;
    const { buffer: n, view: r, blockLen: i, isLE: s } = this;
    let { pos: o } = this;
    n[o++] = 128, this.buffer.subarray(o).fill(0), this.padOffset > i - o && (this.process(r, 0), o = 0);
    for (let p = o; p < i; p++)
      n[p] = 0;
    GA(r, i - 8, BigInt(this.length * 8), s), this.process(r, 0);
    const l = lm(t), c = this.outputLen;
    if (c % 4)
      throw new Error("_sha2: outputLen should be aligned to 32bit");
    const d = c / 4, u = this.get();
    if (d > u.length)
      throw new Error("_sha2: outputLen bigger than state");
    for (let p = 0; p < d; p++)
      l.setUint32(4 * p, u[p], s);
  }
  digest() {
    const { buffer: t, outputLen: n } = this;
    this.digestInto(t);
    const r = t.slice(0, n);
    return this.destroy(), r;
  }
  _cloneInto(t) {
    t || (t = new this.constructor()), t.set(...this.get());
    const { blockLen: n, buffer: r, length: i, finished: s, destroyed: o, pos: l } = this;
    return t.length = i, t.pos = l, t.finished = s, t.destroyed = o, i % n && t.buffer.set(r), t;
  }
}
const JA = /* @__PURE__ */ new Uint32Array([
  1116352408,
  1899447441,
  3049323471,
  3921009573,
  961987163,
  1508970993,
  2453635748,
  2870763221,
  3624381080,
  310598401,
  607225278,
  1426881987,
  1925078388,
  2162078206,
  2614888103,
  3248222580,
  3835390401,
  4022224774,
  264347078,
  604807628,
  770255983,
  1249150122,
  1555081692,
  1996064986,
  2554220882,
  2821834349,
  2952996808,
  3210313671,
  3336571891,
  3584528711,
  113926993,
  338241895,
  666307205,
  773529912,
  1294757372,
  1396182291,
  1695183700,
  1986661051,
  2177026350,
  2456956037,
  2730485921,
  2820302411,
  3259730800,
  3345764771,
  3516065817,
  3600352804,
  4094571909,
  275423344,
  430227734,
  506948616,
  659060556,
  883997877,
  958139571,
  1322822218,
  1537002063,
  1747873779,
  1955562222,
  2024104815,
  2227730452,
  2361852424,
  2428436474,
  2756734187,
  3204031479,
  3329325298
]), Ui = /* @__PURE__ */ new Uint32Array([
  1779033703,
  3144134277,
  1013904242,
  2773480762,
  1359893119,
  2600822924,
  528734635,
  1541459225
]), Vi = /* @__PURE__ */ new Uint32Array(64);
class ZA extends YA {
  constructor() {
    super(64, 32, 8, !1), this.A = Ui[0] | 0, this.B = Ui[1] | 0, this.C = Ui[2] | 0, this.D = Ui[3] | 0, this.E = Ui[4] | 0, this.F = Ui[5] | 0, this.G = Ui[6] | 0, this.H = Ui[7] | 0;
  }
  get() {
    const { A: t, B: n, C: r, D: i, E: s, F: o, G: l, H: c } = this;
    return [t, n, r, i, s, o, l, c];
  }
  // prettier-ignore
  set(t, n, r, i, s, o, l, c) {
    this.A = t | 0, this.B = n | 0, this.C = r | 0, this.D = i | 0, this.E = s | 0, this.F = o | 0, this.G = l | 0, this.H = c | 0;
  }
  process(t, n) {
    for (let p = 0; p < 16; p++, n += 4)
      Vi[p] = t.getUint32(n, !1);
    for (let p = 16; p < 64; p++) {
      const m = Vi[p - 15], f = Vi[p - 2], g = Ar(m, 7) ^ Ar(m, 18) ^ m >>> 3, b = Ar(f, 17) ^ Ar(f, 19) ^ f >>> 10;
      Vi[p] = b + Vi[p - 7] + g + Vi[p - 16] | 0;
    }
    let { A: r, B: i, C: s, D: o, E: l, F: c, G: d, H: u } = this;
    for (let p = 0; p < 64; p++) {
      const m = Ar(l, 6) ^ Ar(l, 11) ^ Ar(l, 25), f = u + m + WA(l, c, d) + JA[p] + Vi[p] | 0, b = (Ar(r, 2) ^ Ar(r, 13) ^ Ar(r, 22)) + XA(r, i, s) | 0;
      u = d, d = c, c = l, l = o + f | 0, o = s, s = i, i = r, r = f + b | 0;
    }
    r = r + this.A | 0, i = i + this.B | 0, s = s + this.C | 0, o = o + this.D | 0, l = l + this.E | 0, c = c + this.F | 0, d = d + this.G | 0, u = u + this.H | 0, this.set(r, i, s, o, l, c, d, u);
  }
  roundClean() {
    Vi.fill(0);
  }
  destroy() {
    this.set(0, 0, 0, 0, 0, 0, 0, 0), this.buffer.fill(0);
  }
}
const QA = /* @__PURE__ */ qA(() => new ZA());
if (typeof Promise > "u")
  throw Error("Keycloak requires an environment that supports Promises. Make sure that you include the appropriate polyfill.");
function cS(e) {
  if (!(this instanceof cS))
    throw new Error("The 'Keycloak' constructor must be invoked with 'new'.");
  for (var t = this, n, r = [], i, s = {
    enable: !0,
    callbackList: [],
    interval: 5
  }, o = document.getElementsByTagName("script"), l = 0; l < o.length; l++)
    (o[l].src.indexOf("keycloak.js") !== -1 || o[l].src.indexOf("keycloak.min.js") !== -1) && o[l].src.indexOf("version=") !== -1 && (t.iframeVersion = o[l].src.substring(o[l].src.indexOf("version=") + 8).split("&")[0]);
  var c = !0, d = q(console.info), u = q(console.warn);
  t.init = function(L) {
    if (t.didInitialize)
      throw new Error("A 'Keycloak' instance can only be initialized once.");
    t.didInitialize = !0, t.authenticated = !1, i = G();
    var K = ["default", "cordova", "cordova-native"];
    if (L && K.indexOf(L.adapter) > -1 ? n = M(L.adapter) : L && typeof L.adapter == "object" ? n = L.adapter : window.Cordova || window.cordova ? n = M("cordova") : n = M(), L) {
      if (typeof L.useNonce < "u" && (c = L.useNonce), typeof L.checkLoginIframe < "u" && (s.enable = L.checkLoginIframe), L.checkLoginIframeInterval && (s.interval = L.checkLoginIframeInterval), L.onLoad === "login-required" && (t.loginRequired = !0), L.responseMode)
        if (L.responseMode === "query" || L.responseMode === "fragment")
          t.responseMode = L.responseMode;
        else
          throw "Invalid value for responseMode";
      if (L.flow) {
        switch (L.flow) {
          case "standard":
            t.responseType = "code";
            break;
          case "implicit":
            t.responseType = "id_token token";
            break;
          case "hybrid":
            t.responseType = "code id_token token";
            break;
          default:
            throw "Invalid value for flow";
        }
        t.flow = L.flow;
      }
      if (L.timeSkew != null && (t.timeSkew = L.timeSkew), L.redirectUri && (t.redirectUri = L.redirectUri), L.silentCheckSsoRedirectUri && (t.silentCheckSsoRedirectUri = L.silentCheckSsoRedirectUri), typeof L.silentCheckSsoFallback == "boolean" ? t.silentCheckSsoFallback = L.silentCheckSsoFallback : t.silentCheckSsoFallback = !0, typeof L.pkceMethod < "u") {
        if (L.pkceMethod !== "S256" && L.pkceMethod !== !1)
          throw new TypeError(`Invalid value for pkceMethod', expected 'S256' or false but got ${L.pkceMethod}.`);
        t.pkceMethod = L.pkceMethod;
      } else
        t.pkceMethod = "S256";
      typeof L.enableLogging == "boolean" ? t.enableLogging = L.enableLogging : t.enableLogging = !1, L.logoutMethod === "POST" ? t.logoutMethod = "POST" : t.logoutMethod = "GET", typeof L.scope == "string" && (t.scope = L.scope), typeof L.acrValues == "string" && (t.acrValues = L.acrValues), typeof L.messageReceiveTimeout == "number" && L.messageReceiveTimeout > 0 ? t.messageReceiveTimeout = L.messageReceiveTimeout : t.messageReceiveTimeout = 1e4;
    }
    t.responseMode || (t.responseMode = "fragment"), t.responseType || (t.responseType = "code", t.flow = "standard");
    var B = I(), j = I();
    j.promise.then(function() {
      t.onReady && t.onReady(t.authenticated), B.setSuccess(t.authenticated);
    }).catch(function(ce) {
      B.setError(ce);
    });
    var W = w();
    function Q() {
      var ce = function(ne) {
        ne || (me.prompt = "none"), L && L.locale && (me.locale = L.locale), t.login(me).then(function() {
          j.setSuccess();
        }).catch(function(Oe) {
          j.setError(Oe);
        });
      }, Z = function() {
        var ne = document.createElement("iframe"), Oe = t.createLoginUrl({ prompt: "none", redirectUri: t.silentCheckSsoRedirectUri });
        ne.setAttribute("src", Oe), ne.setAttribute("sandbox", "allow-storage-access-by-user-activation allow-scripts allow-same-origin"), ne.setAttribute("title", "keycloak-silent-check-sso"), ne.style.display = "none", document.body.appendChild(ne);
        var Pe = function($e) {
          if (!($e.origin !== window.location.origin || ne.contentWindow !== $e.source)) {
            var fe = O($e.data);
            x(fe, j), document.body.removeChild(ne), window.removeEventListener("message", Pe);
          }
        };
        window.addEventListener("message", Pe);
      }, me = {};
      switch (L.onLoad) {
        case "check-sso":
          s.enable ? P().then(function() {
            F().then(function(ne) {
              ne ? j.setSuccess() : t.silentCheckSsoRedirectUri ? Z() : ce(!1);
            }).catch(function(ne) {
              j.setError(ne);
            });
          }) : t.silentCheckSsoRedirectUri ? Z() : ce(!1);
          break;
        case "login-required":
          ce(!0);
          break;
        default:
          throw "Invalid value for onLoad";
      }
    }
    function te() {
      var ce = O(window.location.href);
      if (ce && window.history.replaceState(window.history.state, null, ce.newUrl), ce && ce.valid)
        return P().then(function() {
          x(ce, j);
        }).catch(function(Z) {
          j.setError(Z);
        });
      L ? L.token && L.refreshToken ? (S(L.token, L.refreshToken, L.idToken), s.enable ? P().then(function() {
        F().then(function(Z) {
          Z ? (t.onAuthSuccess && t.onAuthSuccess(), j.setSuccess(), D()) : j.setSuccess();
        }).catch(function(Z) {
          j.setError(Z);
        });
      }) : t.updateToken(-1).then(function() {
        t.onAuthSuccess && t.onAuthSuccess(), j.setSuccess();
      }).catch(function(Z) {
        t.onAuthError && t.onAuthError(), L.onLoad ? Q() : j.setError(Z);
      })) : L.onLoad ? Q() : j.setSuccess() : j.setSuccess();
    }
    function ie() {
      var ce = I(), Z = function() {
        (document.readyState === "interactive" || document.readyState === "complete") && (document.removeEventListener("readystatechange", Z), ce.setSuccess());
      };
      return document.addEventListener("readystatechange", Z), Z(), ce.promise;
    }
    return W.then(function() {
      ie().then(A).then(te).catch(function(ce) {
        B.setError(ce);
      });
    }), W.catch(function(ce) {
      B.setError(ce);
    }), B.promise;
  }, t.login = function(L) {
    return n.login(L);
  };
  function p(L) {
    var K = null, B = window.crypto || window.msCrypto;
    if (B && B.getRandomValues && window.Uint8Array)
      return K = new Uint8Array(L), B.getRandomValues(K), K;
    K = new Array(L);
    for (var j = 0; j < K.length; j++)
      K[j] = Math.floor(256 * Math.random());
    return K;
  }
  function m(L) {
    return f(L, "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789");
  }
  function f(L, K) {
    for (var B = p(L), j = new Array(L), W = 0; W < L; W++)
      j[W] = K.charCodeAt(B[W] % K.length);
    return String.fromCharCode.apply(null, j);
  }
  function g(L, K) {
    if (L !== "S256")
      throw new TypeError(`Invalid value for 'pkceMethod', expected 'S256' but got '${L}'.`);
    const B = QA(K);
    return eL(B).replace(/\+/g, "-").replace(/\//g, "_").replace(/\=/g, "");
  }
  function b(L) {
    var K = {
      id_token: {
        acr: L
      }
    };
    return JSON.stringify(K);
  }
  t.createLoginUrl = function(L) {
    var K = _(), B = _(), j = n.redirectUri(L), W = {
      state: K,
      nonce: B,
      redirectUri: encodeURIComponent(j),
      loginOptions: L
    };
    L && L.prompt && (W.prompt = L.prompt);
    var Q;
    L && L.action == "register" ? Q = t.endpoints.register() : Q = t.endpoints.authorize();
    var te = L && L.scope || t.scope;
    te ? te.indexOf("openid") === -1 && (te = "openid " + te) : te = "openid";
    var ie = Q + "?client_id=" + encodeURIComponent(t.clientId) + "&redirect_uri=" + encodeURIComponent(j) + "&state=" + encodeURIComponent(K) + "&response_mode=" + encodeURIComponent(t.responseMode) + "&response_type=" + encodeURIComponent(t.responseType) + "&scope=" + encodeURIComponent(te);
    if (c && (ie = ie + "&nonce=" + encodeURIComponent(B)), L && L.prompt && (ie += "&prompt=" + encodeURIComponent(L.prompt)), L && L.maxAge && (ie += "&max_age=" + encodeURIComponent(L.maxAge)), L && L.loginHint && (ie += "&login_hint=" + encodeURIComponent(L.loginHint)), L && L.idpHint && (ie += "&kc_idp_hint=" + encodeURIComponent(L.idpHint)), L && L.action && L.action != "register" && (ie += "&kc_action=" + encodeURIComponent(L.action)), L && L.locale && (ie += "&ui_locales=" + encodeURIComponent(L.locale)), L && L.acr) {
      var ce = b(L.acr);
      ie += "&claims=" + encodeURIComponent(ce);
    }
    if ((L && L.acrValues || t.acrValues) && (ie += "&acr_values=" + encodeURIComponent(L.acrValues || t.acrValues)), t.pkceMethod) {
      var Z = m(96);
      W.pkceCodeVerifier = Z;
      var me = g(t.pkceMethod, Z);
      ie += "&code_challenge=" + me, ie += "&code_challenge_method=" + t.pkceMethod;
    }
    return i.add(W), ie;
  }, t.logout = function(L) {
    return n.logout(L);
  }, t.createLogoutUrl = function(L) {
    if ((L?.logoutMethod ?? t.logoutMethod) === "POST")
      return t.endpoints.logout();
    var B = t.endpoints.logout() + "?client_id=" + encodeURIComponent(t.clientId) + "&post_logout_redirect_uri=" + encodeURIComponent(n.redirectUri(L, !1));
    return t.idToken && (B += "&id_token_hint=" + encodeURIComponent(t.idToken)), B;
  }, t.register = function(L) {
    return n.register(L);
  }, t.createRegisterUrl = function(L) {
    return L || (L = {}), L.action = "register", t.createLoginUrl(L);
  }, t.createAccountUrl = function(L) {
    var K = v(), B = void 0;
    return typeof K < "u" && (B = K + "/account?referrer=" + encodeURIComponent(t.clientId) + "&referrer_uri=" + encodeURIComponent(n.redirectUri(L))), B;
  }, t.accountManagement = function() {
    return n.accountManagement();
  }, t.hasRealmRole = function(L) {
    var K = t.realmAccess;
    return !!K && K.roles.indexOf(L) >= 0;
  }, t.hasResourceRole = function(L, K) {
    if (!t.resourceAccess)
      return !1;
    var B = t.resourceAccess[K || t.clientId];
    return !!B && B.roles.indexOf(L) >= 0;
  }, t.loadUserProfile = function() {
    var L = v() + "/account", K = new XMLHttpRequest();
    K.open("GET", L, !0), K.setRequestHeader("Accept", "application/json"), K.setRequestHeader("Authorization", "bearer " + t.token);
    var B = I();
    return K.onreadystatechange = function() {
      K.readyState == 4 && (K.status == 200 ? (t.profile = JSON.parse(K.responseText), B.setSuccess(t.profile)) : B.setError());
    }, K.send(), B.promise;
  }, t.loadUserInfo = function() {
    var L = t.endpoints.userinfo(), K = new XMLHttpRequest();
    K.open("GET", L, !0), K.setRequestHeader("Accept", "application/json"), K.setRequestHeader("Authorization", "bearer " + t.token);
    var B = I();
    return K.onreadystatechange = function() {
      K.readyState == 4 && (K.status == 200 ? (t.userInfo = JSON.parse(K.responseText), B.setSuccess(t.userInfo)) : B.setError());
    }, K.send(), B.promise;
  }, t.isTokenExpired = function(L) {
    if (!t.tokenParsed || !t.refreshToken && t.flow != "implicit")
      throw "Not authenticated";
    if (t.timeSkew == null)
      return d("[KEYCLOAK] Unable to determine if token is expired as timeskew is not set"), !0;
    var K = t.tokenParsed.exp - Math.ceil((/* @__PURE__ */ new Date()).getTime() / 1e3) + t.timeSkew;
    if (L) {
      if (isNaN(L))
        throw "Invalid minValidity";
      K -= L;
    }
    return K < 0;
  }, t.updateToken = function(L) {
    var K = I();
    if (!t.refreshToken)
      return K.setError(), K.promise;
    L = L || 5;
    var B = function() {
      var W = !1;
      if (L == -1 ? (W = !0, d("[KEYCLOAK] Refreshing token: forced refresh")) : (!t.tokenParsed || t.isTokenExpired(L)) && (W = !0, d("[KEYCLOAK] Refreshing token: token expired")), !W)
        K.setSuccess(!1);
      else {
        var Q = "grant_type=refresh_token&refresh_token=" + t.refreshToken, te = t.endpoints.token();
        if (r.push(K), r.length == 1) {
          var ie = new XMLHttpRequest();
          ie.open("POST", te, !0), ie.setRequestHeader("Content-type", "application/x-www-form-urlencoded"), ie.withCredentials = !0, Q += "&client_id=" + encodeURIComponent(t.clientId);
          var ce = (/* @__PURE__ */ new Date()).getTime();
          ie.onreadystatechange = function() {
            if (ie.readyState == 4)
              if (ie.status == 200) {
                d("[KEYCLOAK] Token refreshed"), ce = (ce + (/* @__PURE__ */ new Date()).getTime()) / 2;
                var Z = JSON.parse(ie.responseText);
                S(Z.access_token, Z.refresh_token, Z.id_token, ce), t.onAuthRefreshSuccess && t.onAuthRefreshSuccess();
                for (var me = r.pop(); me != null; me = r.pop())
                  me.setSuccess(!0);
              } else {
                u("[KEYCLOAK] Failed to refresh token"), ie.status == 400 && t.clearToken(), t.onAuthRefreshError && t.onAuthRefreshError();
                for (var me = r.pop(); me != null; me = r.pop())
                  me.setError(!0);
              }
          }, ie.send(Q);
        }
      }
    };
    if (s.enable) {
      var j = F();
      j.then(function() {
        B();
      }).catch(function(W) {
        K.setError(W);
      });
    } else
      B();
    return K.promise;
  }, t.clearToken = function() {
    t.token && (S(null, null, null), t.onAuthLogout && t.onAuthLogout(), t.loginRequired && t.login());
  };
  function v() {
    if (typeof t.authServerUrl < "u")
      return t.authServerUrl.charAt(t.authServerUrl.length - 1) == "/" ? t.authServerUrl + "realms/" + encodeURIComponent(t.realm) : t.authServerUrl + "/realms/" + encodeURIComponent(t.realm);
  }
  function y() {
    return window.location.origin ? window.location.origin : window.location.protocol + "//" + window.location.hostname + (window.location.port ? ":" + window.location.port : "");
  }
  function x(L, K) {
    var B = L.code, j = L.error, W = L.prompt, Q = (/* @__PURE__ */ new Date()).getTime();
    if (L.kc_action_status && t.onActionUpdate && t.onActionUpdate(L.kc_action_status), j) {
      if (W != "none")
        if (L.error_description && L.error_description === "authentication_expired")
          t.login(L.loginOptions);
        else {
          var te = { error: j, error_description: L.error_description };
          t.onAuthError && t.onAuthError(te), K && K.setError(te);
        }
      else
        K && K.setSuccess();
      return;
    } else t.flow != "standard" && (L.access_token || L.id_token) && me(L.access_token, null, L.id_token, !0);
    if (t.flow != "implicit" && B) {
      var ie = "code=" + B + "&grant_type=authorization_code", ce = t.endpoints.token(), Z = new XMLHttpRequest();
      Z.open("POST", ce, !0), Z.setRequestHeader("Content-type", "application/x-www-form-urlencoded"), ie += "&client_id=" + encodeURIComponent(t.clientId), ie += "&redirect_uri=" + L.redirectUri, L.pkceCodeVerifier && (ie += "&code_verifier=" + L.pkceCodeVerifier), Z.withCredentials = !0, Z.onreadystatechange = function() {
        if (Z.readyState == 4)
          if (Z.status == 200) {
            var ne = JSON.parse(Z.responseText);
            me(ne.access_token, ne.refresh_token, ne.id_token, t.flow === "standard"), D();
          } else
            t.onAuthError && t.onAuthError(), K && K.setError();
      }, Z.send(ie);
    }
    function me(ne, Oe, Pe, $e) {
      Q = (Q + (/* @__PURE__ */ new Date()).getTime()) / 2, S(ne, Oe, Pe, Q), c && t.idTokenParsed && t.idTokenParsed.nonce != L.storedNonce ? (d("[KEYCLOAK] Invalid nonce, clearing token"), t.clearToken(), K && K.setError()) : $e && (t.onAuthSuccess && t.onAuthSuccess(), K && K.setSuccess());
    }
  }
  function w(L) {
    var K = I(), B;
    e ? typeof e == "string" && (B = e) : B = "keycloak.json";
    function j(Z) {
      Z ? t.endpoints = {
        authorize: function() {
          return Z.authorization_endpoint;
        },
        token: function() {
          return Z.token_endpoint;
        },
        logout: function() {
          if (!Z.end_session_endpoint)
            throw "Not supported by the OIDC server";
          return Z.end_session_endpoint;
        },
        checkSessionIframe: function() {
          if (!Z.check_session_iframe)
            throw "Not supported by the OIDC server";
          return Z.check_session_iframe;
        },
        register: function() {
          throw 'Redirection to "Register user" page not supported in standard OIDC mode';
        },
        userinfo: function() {
          if (!Z.userinfo_endpoint)
            throw "Not supported by the OIDC server";
          return Z.userinfo_endpoint;
        }
      } : t.endpoints = {
        authorize: function() {
          return v() + "/protocol/openid-connect/auth";
        },
        token: function() {
          return v() + "/protocol/openid-connect/token";
        },
        logout: function() {
          return v() + "/protocol/openid-connect/logout";
        },
        checkSessionIframe: function() {
          var me = v() + "/protocol/openid-connect/login-status-iframe.html";
          return t.iframeVersion && (me = me + "?version=" + t.iframeVersion), me;
        },
        thirdPartyCookiesIframe: function() {
          var me = v() + "/protocol/openid-connect/3p-cookies/step1.html";
          return t.iframeVersion && (me = me + "?version=" + t.iframeVersion), me;
        },
        register: function() {
          return v() + "/protocol/openid-connect/registrations";
        },
        userinfo: function() {
          return v() + "/protocol/openid-connect/userinfo";
        }
      };
    }
    if (B) {
      var W = new XMLHttpRequest();
      W.open("GET", B, !0), W.setRequestHeader("Accept", "application/json"), W.onreadystatechange = function() {
        if (W.readyState == 4)
          if (W.status == 200 || R(W)) {
            var Z = JSON.parse(W.responseText);
            t.authServerUrl = Z["auth-server-url"], t.realm = Z.realm, t.clientId = Z.resource, j(null), K.setSuccess();
          } else
            K.setError();
      }, W.send();
    } else {
      if (!e.clientId)
        throw "clientId missing";
      t.clientId = e.clientId;
      var Q = e.oidcProvider;
      if (Q)
        if (typeof Q == "string") {
          var ce;
          Q.charAt(Q.length - 1) == "/" ? ce = Q + ".well-known/openid-configuration" : ce = Q + "/.well-known/openid-configuration";
          var W = new XMLHttpRequest();
          W.open("GET", ce, !0), W.setRequestHeader("Accept", "application/json"), W.onreadystatechange = function() {
            if (W.readyState == 4)
              if (W.status == 200 || R(W)) {
                var me = JSON.parse(W.responseText);
                j(me), K.setSuccess();
              } else
                K.setError();
          }, W.send();
        } else
          j(Q), K.setSuccess();
      else {
        if (!e.url) {
          for (var te = document.getElementsByTagName("script"), ie = 0; ie < te.length; ie++)
            if (te[ie].src.match(/.*keycloak\.js/)) {
              e.url = te[ie].src.substr(0, te[ie].src.indexOf("/js/keycloak.js"));
              break;
            }
        }
        if (!e.realm)
          throw "realm missing";
        t.authServerUrl = e.url, t.realm = e.realm, j(null), K.setSuccess();
      }
    }
    return K.promise;
  }
  function R(L) {
    return L.status == 0 && L.responseText && L.responseURL.startsWith("file:");
  }
  function S(L, K, B, j) {
    if (t.tokenTimeoutHandle && (clearTimeout(t.tokenTimeoutHandle), t.tokenTimeoutHandle = null), K ? (t.refreshToken = K, t.refreshTokenParsed = om(K)) : (delete t.refreshToken, delete t.refreshTokenParsed), B ? (t.idToken = B, t.idTokenParsed = om(B)) : (delete t.idToken, delete t.idTokenParsed), L) {
      if (t.token = L, t.tokenParsed = om(L), t.sessionId = t.tokenParsed.sid, t.authenticated = !0, t.subject = t.tokenParsed.sub, t.realmAccess = t.tokenParsed.realm_access, t.resourceAccess = t.tokenParsed.resource_access, j && (t.timeSkew = Math.floor(j / 1e3) - t.tokenParsed.iat), t.timeSkew != null && (d("[KEYCLOAK] Estimated time difference between browser and server is " + t.timeSkew + " seconds"), t.onTokenExpired)) {
        var W = (t.tokenParsed.exp - (/* @__PURE__ */ new Date()).getTime() / 1e3 + t.timeSkew) * 1e3;
        d("[KEYCLOAK] Token expires in " + Math.round(W / 1e3) + " s"), W <= 0 ? t.onTokenExpired() : t.tokenTimeoutHandle = setTimeout(t.onTokenExpired, W);
      }
    } else
      delete t.token, delete t.tokenParsed, delete t.subject, delete t.realmAccess, delete t.resourceAccess, t.authenticated = !1;
  }
  function _() {
    var L = "0123456789abcdef", K = f(36, L).split("");
    K[14] = "4", K[19] = L.substr(K[19] & 3 | 8, 1), K[8] = K[13] = K[18] = K[23] = "-";
    var B = K.join("");
    return B;
  }
  function O(L) {
    var K = E(L);
    if (K) {
      var B = i.get(K.state);
      return B && (K.valid = !0, K.redirectUri = B.redirectUri, K.storedNonce = B.nonce, K.prompt = B.prompt, K.pkceCodeVerifier = B.pkceCodeVerifier, K.loginOptions = B.loginOptions), K;
    }
  }
  function E(L) {
    var K;
    switch (t.flow) {
      case "standard":
        K = ["code", "state", "session_state", "kc_action_status", "iss"];
        break;
      case "implicit":
        K = ["access_token", "token_type", "id_token", "state", "session_state", "expires_in", "kc_action_status", "iss"];
        break;
      case "hybrid":
        K = ["access_token", "token_type", "id_token", "code", "state", "session_state", "expires_in", "kc_action_status", "iss"];
        break;
    }
    K.push("error"), K.push("error_description"), K.push("error_uri");
    var B = L.indexOf("?"), j = L.indexOf("#"), W, Q;
    if (t.responseMode === "query" && B !== -1 ? (W = L.substring(0, B), Q = T(L.substring(B + 1, j !== -1 ? j : L.length), K), Q.paramsString !== "" && (W += "?" + Q.paramsString), j !== -1 && (W += L.substring(j))) : t.responseMode === "fragment" && j !== -1 && (W = L.substring(0, j), Q = T(L.substring(j + 1), K), Q.paramsString !== "" && (W += "#" + Q.paramsString)), Q && Q.oauthParams) {
      if (t.flow === "standard" || t.flow === "hybrid") {
        if ((Q.oauthParams.code || Q.oauthParams.error) && Q.oauthParams.state)
          return Q.oauthParams.newUrl = W, Q.oauthParams;
      } else if (t.flow === "implicit" && (Q.oauthParams.access_token || Q.oauthParams.error) && Q.oauthParams.state)
        return Q.oauthParams.newUrl = W, Q.oauthParams;
    }
  }
  function T(L, K) {
    for (var B = L.split("&"), j = {
      paramsString: "",
      oauthParams: {}
    }, W = 0; W < B.length; W++) {
      var Q = B[W].indexOf("="), te = B[W].slice(0, Q);
      K.indexOf(te) !== -1 ? j.oauthParams[te] = B[W].slice(Q + 1) : (j.paramsString !== "" && (j.paramsString += "&"), j.paramsString += B[W]);
    }
    return j;
  }
  function I() {
    var L = {
      setSuccess: function(K) {
        L.resolve(K);
      },
      setError: function(K) {
        L.reject(K);
      }
    };
    return L.promise = new Promise(function(K, B) {
      L.resolve = K, L.reject = B;
    }), L;
  }
  function k(L, K, B) {
    var j = null, W = new Promise(function(Q, te) {
      j = setTimeout(function() {
        te({ error: B });
      }, K);
    });
    return Promise.race([L, W]).finally(function() {
      clearTimeout(j);
    });
  }
  function P() {
    var L = I();
    if (!s.enable || s.iframe)
      return L.setSuccess(), L.promise;
    var K = document.createElement("iframe");
    s.iframe = K, K.onload = function() {
      var W = t.endpoints.authorize();
      W.charAt(0) === "/" ? s.iframeOrigin = y() : s.iframeOrigin = W.substring(0, W.indexOf("/", 8)), L.setSuccess();
    };
    var B = t.endpoints.checkSessionIframe();
    K.setAttribute("src", B), K.setAttribute("sandbox", "allow-storage-access-by-user-activation allow-scripts allow-same-origin"), K.setAttribute("title", "keycloak-session-iframe"), K.style.display = "none", document.body.appendChild(K);
    var j = function(W) {
      if (!(W.origin !== s.iframeOrigin || s.iframe.contentWindow !== W.source) && (W.data == "unchanged" || W.data == "changed" || W.data == "error")) {
        W.data != "unchanged" && t.clearToken();
        for (var Q = s.callbackList.splice(0, s.callbackList.length), te = Q.length - 1; te >= 0; --te) {
          var ie = Q[te];
          W.data == "error" ? ie.setError() : ie.setSuccess(W.data == "unchanged");
        }
      }
    };
    return window.addEventListener("message", j, !1), L.promise;
  }
  function D() {
    s.enable && t.token && setTimeout(function() {
      F().then(function(L) {
        L && D();
      });
    }, s.interval * 1e3);
  }
  function F() {
    var L = I();
    if (s.iframe && s.iframeOrigin) {
      var K = t.clientId + " " + (t.sessionId ? t.sessionId : "");
      s.callbackList.push(L);
      var B = s.iframeOrigin;
      s.callbackList.length == 1 && s.iframe.contentWindow.postMessage(K, B);
    } else
      L.setSuccess();
    return L.promise;
  }
  function A() {
    var L = I();
    if (s.enable || t.silentCheckSsoRedirectUri) {
      var K = document.createElement("iframe");
      K.setAttribute("src", t.endpoints.thirdPartyCookiesIframe()), K.setAttribute("sandbox", "allow-storage-access-by-user-activation allow-scripts allow-same-origin"), K.setAttribute("title", "keycloak-3p-check-iframe"), K.style.display = "none", document.body.appendChild(K);
      var B = function(j) {
        K.contentWindow === j.source && (j.data !== "supported" && j.data !== "unsupported" || (j.data === "unsupported" && (u(
          `[KEYCLOAK] Your browser is blocking access to 3rd-party cookies, this means:

 - It is not possible to retrieve tokens without redirecting to the Keycloak server (a.k.a. no support for silent authentication).
 - It is not possible to automatically detect changes to the session status (such as the user logging out in another tab).

For more information see: https://www.keycloak.org/docs/latest/securing_apps/#_modern_browsers`
        ), s.enable = !1, t.silentCheckSsoFallback && (t.silentCheckSsoRedirectUri = !1)), document.body.removeChild(K), window.removeEventListener("message", B), L.setSuccess()));
      };
      window.addEventListener("message", B, !1);
    } else
      L.setSuccess();
    return k(L.promise, t.messageReceiveTimeout, "Timeout when waiting for 3rd party check iframe message.");
  }
  function M(L) {
    if (!L || L == "default")
      return {
        login: function(te) {
          return window.location.assign(t.createLoginUrl(te)), I().promise;
        },
        logout: async function(te) {
          if ((te?.logoutMethod ?? t.logoutMethod) === "GET") {
            window.location.replace(t.createLogoutUrl(te));
            return;
          }
          const ce = t.createLogoutUrl(te), Z = await fetch(ce, {
            method: "POST",
            headers: {
              "Content-Type": "application/x-www-form-urlencoded"
            },
            body: new URLSearchParams({
              id_token_hint: t.idToken,
              client_id: t.clientId,
              post_logout_redirect_uri: n.redirectUri(te, !1)
            })
          });
          if (Z.redirected) {
            window.location.href = Z.url;
            return;
          }
          if (Z.ok) {
            window.location.reload();
            return;
          }
          throw new Error("Logout failed, request returned an error code.");
        },
        register: function(te) {
          return window.location.assign(t.createRegisterUrl(te)), I().promise;
        },
        accountManagement: function() {
          var te = t.createAccountUrl();
          if (typeof te < "u")
            window.location.href = te;
          else
            throw "Not supported by the OIDC server";
          return I().promise;
        },
        redirectUri: function(te, ie) {
          return te && te.redirectUri ? te.redirectUri : t.redirectUri ? t.redirectUri : location.href;
        }
      };
    if (L == "cordova") {
      s.enable = !1;
      var K = function(te, ie, ce) {
        return window.cordova && window.cordova.InAppBrowser ? window.cordova.InAppBrowser.open(te, ie, ce) : window.open(te, ie, ce);
      }, B = function(te) {
        return te && te.cordovaOptions ? Object.keys(te.cordovaOptions).reduce(function(ie, ce) {
          return ie[ce] = te.cordovaOptions[ce], ie;
        }, {}) : {};
      }, j = function(te) {
        return Object.keys(te).reduce(function(ie, ce) {
          return ie.push(ce + "=" + te[ce]), ie;
        }, []).join(",");
      }, W = function(te) {
        var ie = B(te);
        return ie.location = "no", te && te.prompt == "none" && (ie.hidden = "yes"), j(ie);
      }, Q = function() {
        return t.redirectUri || "http://localhost";
      };
      return {
        login: function(te) {
          var ie = I(), ce = W(te), Z = t.createLoginUrl(te), me = K(Z, "_blank", ce), ne = !1, Oe = !1, Pe = function() {
            Oe = !0, me.close();
          };
          return me.addEventListener("loadstart", function($e) {
            if ($e.url.indexOf(Q()) == 0) {
              var fe = O($e.url);
              x(fe, ie), Pe(), ne = !0;
            }
          }), me.addEventListener("loaderror", function($e) {
            if (!ne)
              if ($e.url.indexOf(Q()) == 0) {
                var fe = O($e.url);
                x(fe, ie), Pe(), ne = !0;
              } else
                ie.setError(), Pe();
          }), me.addEventListener("exit", function($e) {
            Oe || ie.setError({
              reason: "closed_by_user"
            });
          }), ie.promise;
        },
        logout: function(te) {
          var ie = I(), ce = t.createLogoutUrl(te), Z = K(ce, "_blank", "location=no,hidden=yes,clearcache=yes"), me;
          return Z.addEventListener("loadstart", function(ne) {
            ne.url.indexOf(Q()) == 0 && Z.close();
          }), Z.addEventListener("loaderror", function(ne) {
            ne.url.indexOf(Q()) == 0 || (me = !0), Z.close();
          }), Z.addEventListener("exit", function(ne) {
            me ? ie.setError() : (t.clearToken(), ie.setSuccess());
          }), ie.promise;
        },
        register: function(te) {
          var ie = I(), ce = t.createRegisterUrl(), Z = W(te), me = K(ce, "_blank", Z);
          return me.addEventListener("loadstart", function(ne) {
            if (ne.url.indexOf(Q()) == 0) {
              me.close();
              var Oe = O(ne.url);
              x(Oe, ie);
            }
          }), ie.promise;
        },
        accountManagement: function() {
          var te = t.createAccountUrl();
          if (typeof te < "u") {
            var ie = K(te, "_blank", "location=no");
            ie.addEventListener("loadstart", function(ce) {
              ce.url.indexOf(Q()) == 0 && ie.close();
            });
          } else
            throw "Not supported by the OIDC server";
        },
        redirectUri: function(te) {
          return Q();
        }
      };
    }
    if (L == "cordova-native")
      return s.enable = !1, {
        login: function(te) {
          var ie = I(), ce = t.createLoginUrl(te);
          return universalLinks.subscribe("keycloak", function(Z) {
            universalLinks.unsubscribe("keycloak"), window.cordova.plugins.browsertab.close();
            var me = O(Z.url);
            x(me, ie);
          }), window.cordova.plugins.browsertab.openUrl(ce), ie.promise;
        },
        logout: function(te) {
          var ie = I(), ce = t.createLogoutUrl(te);
          return universalLinks.subscribe("keycloak", function(Z) {
            universalLinks.unsubscribe("keycloak"), window.cordova.plugins.browsertab.close(), t.clearToken(), ie.setSuccess();
          }), window.cordova.plugins.browsertab.openUrl(ce), ie.promise;
        },
        register: function(te) {
          var ie = I(), ce = t.createRegisterUrl(te);
          return universalLinks.subscribe("keycloak", function(Z) {
            universalLinks.unsubscribe("keycloak"), window.cordova.plugins.browsertab.close();
            var me = O(Z.url);
            x(me, ie);
          }), window.cordova.plugins.browsertab.openUrl(ce), ie.promise;
        },
        accountManagement: function() {
          var te = t.createAccountUrl();
          if (typeof te < "u")
            window.cordova.plugins.browsertab.openUrl(te);
          else
            throw "Not supported by the OIDC server";
        },
        redirectUri: function(te) {
          return te && te.redirectUri ? te.redirectUri : t.redirectUri ? t.redirectUri : "http://localhost";
        }
      };
    throw "invalid adapter type: " + L;
  }
  var V = function() {
    if (!(this instanceof V))
      return new V();
    localStorage.setItem("kc-test", "test"), localStorage.removeItem("kc-test");
    var L = this;
    function K() {
      for (var B = (/* @__PURE__ */ new Date()).getTime(), j = 0; j < localStorage.length; j++) {
        var W = localStorage.key(j);
        if (W && W.indexOf("kc-callback-") == 0) {
          var Q = localStorage.getItem(W);
          if (Q)
            try {
              var te = JSON.parse(Q).expires;
              (!te || te < B) && localStorage.removeItem(W);
            } catch {
              localStorage.removeItem(W);
            }
        }
      }
    }
    L.get = function(B) {
      if (B) {
        var j = "kc-callback-" + B, W = localStorage.getItem(j);
        return W && (localStorage.removeItem(j), W = JSON.parse(W)), K(), W;
      }
    }, L.add = function(B) {
      K();
      var j = "kc-callback-" + B.state;
      B.expires = (/* @__PURE__ */ new Date()).getTime() + 60 * 60 * 1e3, localStorage.setItem(j, JSON.stringify(B));
    };
  }, U = function() {
    if (!(this instanceof U))
      return new U();
    var L = this;
    L.get = function(W) {
      if (W) {
        var Q = B("kc-callback-" + W);
        if (j("kc-callback-" + W, "", K(-100)), Q)
          return JSON.parse(Q);
      }
    }, L.add = function(W) {
      j("kc-callback-" + W.state, JSON.stringify(W), K(60));
    }, L.removeItem = function(W) {
      j(W, "", K(-100));
    };
    var K = function(W) {
      var Q = /* @__PURE__ */ new Date();
      return Q.setTime(Q.getTime() + W * 60 * 1e3), Q;
    }, B = function(W) {
      for (var Q = W + "=", te = document.cookie.split(";"), ie = 0; ie < te.length; ie++) {
        for (var ce = te[ie]; ce.charAt(0) == " "; )
          ce = ce.substring(1);
        if (ce.indexOf(Q) == 0)
          return ce.substring(Q.length, ce.length);
      }
      return "";
    }, j = function(W, Q, te) {
      var ie = W + "=" + Q + "; expires=" + te.toUTCString() + "; ";
      document.cookie = ie;
    };
  };
  function G() {
    try {
      return new V();
    } catch {
    }
    return new U();
  }
  function q(L) {
    return function() {
      t.enableLogging && L.apply(console, Array.prototype.slice.call(arguments));
    };
  }
}
function eL(e) {
  const t = String.fromCodePoint(...e);
  return btoa(t);
}
const tL = {
  name: "ArrowsAltVIcon",
  height: 512,
  width: 256,
  svgPath: "M214.059 377.941H168V134.059h46.059c21.382 0 32.09-25.851 16.971-40.971L144.971 7.029c-9.373-9.373-24.568-9.373-33.941 0L24.971 93.088c-15.119 15.119-4.411 40.971 16.971 40.971H88v243.882H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.568 9.373 33.941 0l86.059-86.059c15.12-15.119 4.412-40.971-16.97-40.971z",
  yOffset: 0,
  xOffset: 0
}, nL = Qe(tL), aL = {
  name: "BarsIcon",
  height: 512,
  width: 448,
  svgPath: "M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z",
  yOffset: 0,
  xOffset: 0
}, rL = Qe(aL), iL = {
  name: "BitbucketIcon",
  height: 512,
  width: 512,
  svgPath: "M22.2 32A16 16 0 0 0 6 47.8a26.35 26.35 0 0 0 .2 2.8l67.9 412.1a21.77 21.77 0 0 0 21.3 18.2h325.7a16 16 0 0 0 16-13.4L505 50.7a16 16 0 0 0-13.2-18.3 24.58 24.58 0 0 0-2.8-.2L22.2 32zm285.9 297.8h-104l-28.1-147h157.3l-25.2 147z",
  yOffset: 0,
  xOffset: 0
}, sL = Qe(iL), oL = {
  name: "CaretUpIcon",
  height: 512,
  width: 320,
  svgPath: "M288.662 352H31.338c-17.818 0-26.741-21.543-14.142-34.142l128.662-128.662c7.81-7.81 20.474-7.81 28.284 0l128.662 128.662c12.6 12.599 3.676 34.142-14.142 34.142z",
  yOffset: 0,
  xOffset: 0
}, lL = Qe(oL), cL = {
  name: "CodeIcon",
  height: 512,
  width: 640,
  svgPath: "M278.9 511.5l-61-17.7c-6.4-1.8-10-8.5-8.2-14.9L346.2 8.7c1.8-6.4 8.5-10 14.9-8.2l61 17.7c6.4 1.8 10 8.5 8.2 14.9L293.8 503.3c-1.9 6.4-8.5 10.1-14.9 8.2zm-114-112.2l43.5-46.4c4.6-4.9 4.3-12.7-.8-17.2L117 256l90.6-79.7c5.1-4.5 5.5-12.3.8-17.2l-43.5-46.4c-4.5-4.8-12.1-5.1-17-.5L3.8 247.2c-5.1 4.7-5.1 12.8 0 17.5l144.1 135.1c4.9 4.6 12.5 4.4 17-.5zm327.2.6l144.1-135.1c5.1-4.7 5.1-12.8 0-17.5L492.1 112.1c-4.8-4.5-12.4-4.3-17 .5L431.6 159c-4.6 4.9-4.3 12.7.8 17.2L523 256l-90.6 79.7c-5.1 4.5-5.5 12.3-.8 17.2l43.5 46.4c4.5 4.9 12.1 5.1 17 .6z",
  yOffset: 0,
  xOffset: 0
}, cm = Qe(cL), dL = {
  name: "CogIcon",
  height: 512,
  width: 512,
  svgPath: "M487.4 315.7l-42.6-24.6c4.3-23.2 4.3-47 0-70.2l42.6-24.6c4.9-2.8 7.1-8.6 5.5-14-11.1-35.6-30-67.8-54.7-94.6-3.8-4.1-10-5.1-14.8-2.3L380.8 110c-17.9-15.4-38.5-27.3-60.8-35.1V25.8c0-5.6-3.9-10.5-9.4-11.7-36.7-8.2-74.3-7.8-109.2 0-5.5 1.2-9.4 6.1-9.4 11.7V75c-22.2 7.9-42.8 19.8-60.8 35.1L88.7 85.5c-4.9-2.8-11-1.9-14.8 2.3-24.7 26.7-43.6 58.9-54.7 94.6-1.7 5.4.6 11.2 5.5 14L67.3 221c-4.3 23.2-4.3 47 0 70.2l-42.6 24.6c-4.9 2.8-7.1 8.6-5.5 14 11.1 35.6 30 67.8 54.7 94.6 3.8 4.1 10 5.1 14.8 2.3l42.6-24.6c17.9 15.4 38.5 27.3 60.8 35.1v49.2c0 5.6 3.9 10.5 9.4 11.7 36.7 8.2 74.3 7.8 109.2 0 5.5-1.2 9.4-6.1 9.4-11.7v-49.2c22.2-7.9 42.8-19.8 60.8-35.1l42.6 24.6c4.9 2.8 11 1.9 14.8-2.3 24.7-26.7 43.6-58.9 54.7-94.6 1.5-5.5-.7-11.3-5.6-14.1zM256 336c-44.1 0-80-35.9-80-80s35.9-80 80-80 80 35.9 80 80-35.9 80-80 80z",
  yOffset: 0,
  xOffset: 0
}, uL = Qe(dL), pL = {
  name: "CubeIcon",
  height: 512,
  width: 512,
  svgPath: "M239.1 6.3l-208 78c-18.7 7-31.1 25-31.1 45v225.1c0 18.2 10.3 34.8 26.5 42.9l208 104c13.5 6.8 29.4 6.8 42.9 0l208-104c16.3-8.1 26.5-24.8 26.5-42.9V129.3c0-20-12.4-37.9-31.1-44.9l-208-78C262 2.2 250 2.2 239.1 6.3zM256 68.4l192 72v1.1l-192 78-192-78v-1.1l192-72zm32 356V275.5l160-65v133.9l-160 80z",
  yOffset: 0,
  xOffset: 0
}, mL = Qe(pL), fL = {
  name: "CubesIcon",
  height: 512,
  width: 512,
  svgPath: "M488.6 250.2L392 214V105.5c0-15-9.3-28.4-23.4-33.7l-100-37.5c-8.1-3.1-17.1-3.1-25.3 0l-100 37.5c-14.1 5.3-23.4 18.7-23.4 33.7V214l-96.6 36.2C9.3 255.5 0 268.9 0 283.9V394c0 13.6 7.7 26.1 19.9 32.2l100 50c10.1 5.1 22.1 5.1 32.2 0l103.9-52 103.9 52c10.1 5.1 22.1 5.1 32.2 0l100-50c12.2-6.1 19.9-18.6 19.9-32.2V283.9c0-15-9.3-28.4-23.4-33.7zM358 214.8l-85 31.9v-68.2l85-37v73.3zM154 104.1l102-38.2 102 38.2v.6l-102 41.4-102-41.4v-.6zm84 291.1l-85 42.5v-79.1l85-38.8v75.4zm0-112l-102 41.4-102-41.4v-.6l102-38.2 102 38.2v.6zm240 112l-85 42.5v-79.1l85-38.8v75.4zm0-112l-102 41.4-102-41.4v-.6l102-38.2 102 38.2v.6z",
  yOffset: 0,
  xOffset: 0
}, dS = Qe(fL), hL = {
  name: "DatabaseIcon",
  height: 512,
  width: 448,
  svgPath: "M448 73.143v45.714C448 159.143 347.667 192 224 192S0 159.143 0 118.857V73.143C0 32.857 100.333 0 224 0s224 32.857 224 73.143zM448 176v102.857C448 319.143 347.667 352 224 352S0 319.143 0 278.857V176c48.125 33.143 136.208 48.572 224 48.572S399.874 209.143 448 176zm0 160v102.857C448 479.143 347.667 512 224 512S0 479.143 0 438.857V336c48.125 33.143 136.208 48.572 224 48.572S399.874 369.143 448 336z",
  yOffset: 0,
  xOffset: 0
}, gL = Qe(hL), bL = {
  name: "DownloadIcon",
  height: 512,
  width: 512,
  svgPath: "M216 0h80c13.3 0 24 10.7 24 24v168h87.7c17.8 0 26.7 21.5 14.1 34.1L269.7 378.3c-7.5 7.5-19.8 7.5-27.3 0L90.1 226.1c-12.6-12.6-3.7-34.1 14.1-34.1H192V24c0-13.3 10.7-24 24-24zm296 376v112c0 13.3-10.7 24-24 24H24c-13.3 0-24-10.7-24-24V376c0-13.3 10.7-24 24-24h146.7l49 49c20.1 20.1 52.5 20.1 72.6 0l49-49H488c13.3 0 24 10.7 24 24zm-124 88c0-11-9-20-20-20s-20 9-20 20 9 20 20 20 20-9 20-20zm64 0c0-11-9-20-20-20s-20 9-20 20 9 20 20 20 20-9 20-20z",
  yOffset: 0,
  xOffset: 0
}, vL = Qe(bL), yL = {
  name: "EllipsisHIcon",
  height: 512,
  width: 512,
  svgPath: "M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z",
  yOffset: 0,
  xOffset: 0
}, CL = Qe(yL), xL = {
  name: "EllipsisVIcon",
  height: 512,
  width: 192,
  svgPath: "M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z",
  yOffset: 0,
  xOffset: 0
}, dr = Qe(xL), SL = {
  name: "FacebookSquareIcon",
  height: 512,
  width: 448,
  svgPath: "M400 32H48A48 48 0 0 0 0 80v352a48 48 0 0 0 48 48h137.25V327.69h-63V256h63v-54.64c0-62.15 37-96.48 93.67-96.48 27.14 0 55.52 4.84 55.52 4.84v61h-31.27c-30.81 0-40.42 19.12-40.42 38.73V256h68.78l-11 71.69h-57.78V480H400a48 48 0 0 0 48-48V80a48 48 0 0 0-48-48z",
  yOffset: 0,
  xOffset: 0
}, wL = Qe(SL), kL = {
  name: "FilterIcon",
  height: 512,
  width: 512,
  svgPath: "M487.976 0H24.028C2.71 0-8.047 25.866 7.058 40.971L192 225.941V432c0 7.831 3.821 15.17 10.237 19.662l80 55.98C298.02 518.69 320 507.493 320 487.98V225.941l184.947-184.97C520.021 25.896 509.338 0 487.976 0z",
  yOffset: 0,
  xOffset: 0
}, ss = Qe(kL), OL = {
  name: "GithubIcon",
  height: 512,
  width: 496,
  svgPath: "M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z",
  yOffset: 0,
  xOffset: 0
}, TL = Qe(OL), EL = {
  name: "GitlabIcon",
  height: 512,
  width: 512,
  svgPath: "M105.2 24.9c-3.1-8.9-15.7-8.9-18.9 0L29.8 199.7h132c-.1 0-56.6-174.8-56.6-174.8zM.9 287.7c-2.6 8 .3 16.9 7.1 22l247.9 184-226.2-294zm160.8-88l94.3 294 94.3-294zm349.4 88l-28.8-88-226.3 294 247.9-184c6.9-5.1 9.7-14 7.2-22zM425.7 24.9c-3.1-8.9-15.7-8.9-18.9 0l-56.6 174.8h132z",
  yOffset: 0,
  xOffset: 0
}, IL = Qe(EL), PL = {
  name: "GlobeRouteIcon",
  height: 1024,
  width: 1306,
  svgPath: "M1300.9,363.7 L1179,485.8 C1169,495.9 1151.7,488.8 1151.7,474.5 L1151.7,416 L816.4,416 C812.4,416 809,413.8 808.5,409.8 C805.3,386 801,362.733333 795.6,340 C792.3,326 788.5,312.4 784.4,299.2 C782.8,294 786.6,288 792,288 L1151.5,288 L1151.5,230.6 C1151.5,216.4 1168.7,209.2 1178.8,219.3 L1300.8,341 C1303.9,344.1 1306,348.2 1306,352.3 C1306,356.4 1303.9,360.5 1300.9,363.7 Z M469.2,746.7 L347.3,868.8 C337.3,878.9 320,871.8 320,857.5 L320,800 L16,800 C7.2,800 0,792.3 0,783.5 L0,687.5 C0,678.7 7.2,672 16,672 L320,672 L320,613.8 C320,599.6 337.2,592.4 347.3,602.5 L469.2,724.1 C475.430133,730.34524 475.430133,740.45476 469.2,746.7 Z M1087.6,495.6 C1087.38293,486.920039 1080.28267,479.997286 1071.6,480 L640,480 L640,352 L722.2,352 C727.4,352 731.3,346.5 729.9,341.5 C725.605596,325.013205 720.465463,308.75837 714.5,292.8 C713.258024,289.782121 710.260604,287.863772 707,288 L640,288 L640,101.7 C652.442178,106.259896 664.111225,112.70148 674.6,120.8 C699.3,139.4 723,168.1 743.1,203.9 C746.5,210 751.7,218.7 761.1,218.7 L809.4,218.7 C812.128705,218.672447 814.65964,217.271114 816.131205,214.973053 C817.602771,212.674992 817.816638,209.789922 816.7,207.3 C804.114384,179.721505 788.769504,153.487791 770.9,129 C818.290474,149.304728 861.543068,178.15109 898.5,214.1 C901.47783,216.980555 905.45693,218.593703 909.6,218.6 L971.4,218.6 C974.505675,218.614157 977.338903,216.829582 978.667492,214.022401 C979.996082,211.21522 979.579921,207.892766 977.6,205.5 C889.8,100 757.8,32.6 609.9,32 L605.5,32 C342.5,33.4 128,251.4 128,514.8 L128,528 C128,538.8 132.7,582.4 136.2,601 C136.9,604.8 140.2,608 144.1,608 L193,608 C198.1,608 201.9,602.8 200.8,597.8 C197.100285,580.050867 194.561569,562.079428 193.2,544 L576,544 L576,672 L533.4,672 C530.21925,671.879321 527.2913,673.725708 526.029429,676.647935 C524.767558,679.570163 525.43119,682.96746 527.7,685.2 L566.6,724.2 C572.610093,730.186212 575.992058,738.317319 576,746.8 L576,922.3 C563.557822,917.740104 551.888775,911.29852 541.4,903.2 C521.8,888.5 502.9,867.3 485.8,841.4 C484.483494,839.398843 482.339547,838.092908 479.95744,837.84114 C477.575334,837.589373 475.205755,838.418269 473.5,840.1 L438.9,874.7 C436.17839,877.437565 435.799809,881.728158 438,884.9 C440.4,888.3 442.8,891.7 445.2,895 C440.7,893.1 436.3,891.1 431.9,889.1 C428.86068,887.698101 425.269908,888.336461 422.9,890.7 L387,926.5 C385.206339,928.31874 384.380991,930.880062 384.775333,933.403854 C385.169676,935.927646 386.737022,938.11511 389,939.3 C456.763878,974.049946 531.84563,992.117563 608,992.00057 C862.3,992.00057 1070.5,794.3 1087,544.1 C1087.7,533.5 1088,522.9 1088,512.1 L1087.6,495.6 Z M338.6,480 L193.2,480 C196.476568,435.937781 206.913411,392.704253 224.1,352 L353.5,352 C345.141453,394.203188 340.159019,437.005305 338.6,480 L338.6,480 Z M257.8,288 C273.983601,262.695367 292.787318,239.165581 313.9,217.8 C351.55,180.03315 396.130875,149.88249 445.2,129 C413.9,171.2 387.8,225.9 369.3,288 L257.8,288 Z M576,480 L402.6,480 C404.246384,436.941681 409.667166,394.110815 418.8,352 L576,352 L576,480 Z M576,288 L436.4,288 C446.6,257.5 458.8,229.1 472.9,204 C493,168.2 516.7,139.5 541.4,120.9 C551.888775,112.80148 563.557822,106.359896 576,101.8 L576,288 Z M575.8,87.6 L576.7,87.6 L576.7,86.7 L575.8,86.7 L575.8,87.6 Z M640,544 L813.4,544 C811.819116,587.052386 806.465269,629.883162 797.4,672 L640,672 L640,544 Z M674.6,903.1 C664.111225,911.19852 652.442178,917.640104 640,922.2 L640,736 L779.9,736 C770.41424,765.137744 758.088355,793.272917 743.1,820 C723,855.8 699.3,884.6 674.6,903.1 L674.6,903.1 Z M902.2,806.2 C864.55,843.96685 819.969125,874.11751 770.9,895 C802.3,852.5 828.4,798.1 847,735.5 L959,735.5 C942.666041,761.042003 923.622375,784.746003 902.2,806.2 L902.2,806.2 Z M992.3,671.5 L862.7,671.5 C870.9358,629.451226 875.850963,586.819718 877.4,544 L1022.8,544 C1019.55195,587.863016 1009.25313,630.915455 992.3,671.5 L992.3,671.5 Z",
  yOffset: 0,
  xOffset: 0
}, Of = Qe(PL), _L = {
  name: "GoogleIcon",
  height: 512,
  width: 488,
  svgPath: "M488 261.8C488 403.3 391.1 504 248 504 110.8 504 0 393.2 0 256S110.8 8 248 8c66.8 0 123 24.5 166.3 64.9l-67.5 64.9C258.5 52.6 94.3 116.6 94.3 256c0 86.5 69.1 156.6 153.7 156.6 98.2 0 135-70.4 140.8-106.9H248v-85.3h236.1c2.3 12.7 3.9 24.9 3.9 41.4z",
  yOffset: 0,
  xOffset: 0
}, RL = Qe(_L), AL = {
  name: "HelpIcon",
  height: 1024,
  width: 1024,
  svgPath: "M521.3,576 C627.5,576 713.7,502 713.7,413.7 C713.7,325.4 627.6,253.6 521.3,253.6 C366,253.6 334.5,337.7 329.2,407.2 C329.2,414.3 335.2,416 343.5,416 L445,416 C450.5,416 458,415.5 460.8,406.5 C460.8,362.6 582.9,357.1 582.9,413.6 C582.9,441.9 556.2,470.9 521.3,473 C486.4,475.1 447.3,479.8 447.3,521.7 L447.3,553.8 C447.3,570.8 456.1,576 472,576 C487.9,576 521.3,576 521.3,576 M575.3,751.3 L575.3,655.3 C575.313862,651.055109 573.620137,646.982962 570.6,644 C567.638831,640.947672 563.552355,639.247987 559.3,639.29884 L463.3,639.29884 C459.055109,639.286138 454.982962,640.979863 452,644 C448.947672,646.961169 447.247987,651.047645 447.29884,655.3 L447.29884,751.3 C447.286138,755.544891 448.979863,759.617038 452,762.6 C454.961169,765.652328 459.047645,767.352013 463.3,767.30116 L559.3,767.30116 C563.544891,767.313862 567.617038,765.620137 570.6,762.6 C573.659349,759.643612 575.360354,755.553963 575.3,751.3 M512,896 C300.2,896 128,723.9 128,512 C128,300.3 300.2,128 512,128 C723.8,128 896,300.2 896,512 C896,723.8 723.7,896 512,896 M512.1,0 C229.7,0 0,229.8 0,512 C0,794.2 229.8,1024 512.1,1024 C794.4,1024 1024,794.3 1024,512 C1024,229.7 794.4,0 512.1,0",
  yOffset: 0,
  xOffset: 0
}, yc = Qe(AL), Tf = yc, LL = {
  name: "InstagramIcon",
  height: 512,
  width: 448,
  svgPath: "M224.1 141c-63.6 0-114.9 51.3-114.9 114.9s51.3 114.9 114.9 114.9S339 319.5 339 255.9 287.7 141 224.1 141zm0 189.6c-41.1 0-74.7-33.5-74.7-74.7s33.5-74.7 74.7-74.7 74.7 33.5 74.7 74.7-33.6 74.7-74.7 74.7zm146.4-194.3c0 14.9-12 26.8-26.8 26.8-14.9 0-26.8-12-26.8-26.8s12-26.8 26.8-26.8 26.8 12 26.8 26.8zm76.1 27.2c-1.7-35.9-9.9-67.7-36.2-93.9-26.2-26.2-58-34.4-93.9-36.2-37-2.1-147.9-2.1-184.9 0-35.8 1.7-67.6 9.9-93.9 36.1s-34.4 58-36.2 93.9c-2.1 37-2.1 147.9 0 184.9 1.7 35.9 9.9 67.7 36.2 93.9s58 34.4 93.9 36.2c37 2.1 147.9 2.1 184.9 0 35.9-1.7 67.7-9.9 93.9-36.2 26.2-26.2 34.4-58 36.2-93.9 2.1-37 2.1-147.8 0-184.8zM398.8 388c-7.8 19.6-22.9 34.7-42.6 42.6-29.5 11.7-99.5 9-132.1 9s-102.7 2.6-132.1-9c-19.6-7.8-34.7-22.9-42.6-42.6-11.7-29.5-9-99.5-9-132.1s-2.6-102.7 9-132.1c7.8-19.6 22.9-34.7 42.6-42.6 29.5-11.7 99.5-9 132.1-9s102.7-2.6 132.1 9c19.6 7.8 34.7 22.9 42.6 42.6 11.7 29.5 9 99.5 9 132.1s2.7 102.7-9 132.1z",
  yOffset: 0,
  xOffset: 0
}, NL = Qe(LL), DL = {
  name: "LinkedinIcon",
  height: 512,
  width: 448,
  svgPath: "M416 32H31.9C14.3 32 0 46.5 0 64.3v383.4C0 465.5 14.3 480 31.9 480H416c17.6 0 32-14.5 32-32.3V64.3c0-17.8-14.4-32.3-32-32.3zM135.4 416H69V202.2h66.5V416zm-33.2-243c-21.3 0-38.5-17.3-38.5-38.5S80.9 96 102.2 96c21.2 0 38.5 17.3 38.5 38.5 0 21.3-17.2 38.5-38.5 38.5zm282.1 243h-66.4V312c0-24.8-.5-56.7-34.5-56.7-34.6 0-39.9 27-39.9 54.9V416h-66.4V202.2h63.7v29.2h.9c8.9-16.8 30.6-34.5 62.9-34.5 67.2 0 79.7 44.3 79.7 101.9V416z",
  yOffset: 0,
  xOffset: 0
}, ML = Qe(DL), FL = {
  name: "LongArrowAltDownIcon",
  height: 512,
  width: 256,
  svgPath: "M168 345.941V44c0-6.627-5.373-12-12-12h-56c-6.627 0-12 5.373-12 12v301.941H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.569 9.373 33.941 0l86.059-86.059c15.119-15.119 4.411-40.971-16.971-40.971H168z",
  yOffset: 0,
  xOffset: 0
}, $L = Qe(FL), jL = {
  name: "LongArrowAltUpIcon",
  height: 512,
  width: 256,
  svgPath: "M88 166.059V468c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12V166.059h46.059c21.382 0 32.09-25.851 16.971-40.971l-86.059-86.059c-9.373-9.373-24.569-9.373-33.941 0l-86.059 86.059c-15.119 15.119-4.411 40.971 16.971 40.971H88z",
  yOffset: 0,
  xOffset: 0
}, BL = Qe(jL), UL = {
  name: "MicrosoftIcon",
  height: 512,
  width: 448,
  svgPath: "M0 32h214.6v214.6H0V32zm233.4 0H448v214.6H233.4V32zM0 265.4h214.6V480H0V265.4zm233.4 0H448V480H233.4V265.4z",
  yOffset: 0,
  xOffset: 0
}, VL = Qe(UL), KL = {
  name: "MinusCircleIcon",
  height: 512,
  width: 512,
  svgPath: "M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zM124 296c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h264c6.6 0 12 5.4 12 12v56c0 6.6-5.4 12-12 12H124z",
  yOffset: 0,
  xOffset: 0
}, Ni = Qe(KL), HL = {
  name: "OpenshiftIcon",
  height: 100,
  width: 100,
  svgPath: "M145.7,45.3l-16.1,5.8c0.2,2.6,0.6,5.1,1.3,7.6l15.3-5.6C145.7,50.6,145.5,47.9,145.7,45.3M216.7,27.5c-1.1-2.3-2.4-4.5-3.9-6.6l-16.1,5.8c1.9,1.9,3.4,4.1,4.7,6.4L216.7,27.5zM181.4,23c3.3,1.6,6.2,3.7,8.7,6.2l16.1-5.8c-4.4-6.2-10.5-11.5-17.9-14.9c-22.9-10.7-50.3-0.7-61,22.2c-3.5,7.4-4.8,15.3-4.1,23l16.1-5.8c0.3-3.5,1.1-7,2.7-10.3C148.7,22.5,166.4,16,181.4,23M131.9,58.4l-15.3,5.6c1.4,5.6,3.8,10.8,7.2,15.5l16-5.8C135.8,69.4,133,64.1,131.9,58.4M198.5,52.3c-0.3,3.5-1.1,7-2.7,10.3C188.8,77.5,171,84,156.1,77c-3.3-1.6-6.3-3.7-8.7-6.2l-16,5.8c4.4,6.2,10.5,11.5,17.9,14.9c22.9,10.7,50.3,0.7,61-22.2c3.5-7.4,4.7-15.3,4.1-22.9L198.5,52.3zM202.4,32.7l-15.3,5.6c2.8,5.1,4.2,10.9,3.7,16.8l16-5.8C206.5,43.5,204.9,37.9,202.4,32.7",
  yOffset: 0,
  xOffset: 116
}, zL = Qe(HL), qL = {
  name: "PaypalIcon",
  height: 512,
  width: 384,
  svgPath: "M111.4 295.9c-3.5 19.2-17.4 108.7-21.5 134-.3 1.8-1 2.5-3 2.5H12.3c-7.6 0-13.1-6.6-12.1-13.9L58.8 46.6c1.5-9.6 10.1-16.9 20-16.9 152.3 0 165.1-3.7 204 11.4 60.1 23.3 65.6 79.5 44 140.3-21.5 62.6-72.5 89.5-140.1 90.3-43.4.7-69.5-7-75.3 24.2zM357.1 152c-1.8-1.3-2.5-1.8-3 1.3-2 11.4-5.1 22.5-8.8 33.6-39.9 113.8-150.5 103.9-204.5 103.9-6.1 0-10.1 3.3-10.9 9.4-22.6 140.4-27.1 169.7-27.1 169.7-1 7.1 3.5 12.9 10.6 12.9h63.5c8.6 0 15.7-6.3 17.4-14.9.7-5.4-1.1 6.1 14.4-91.3 4.6-22 14.3-19.7 29.3-19.7 71 0 126.4-28.8 142.9-112.3 6.5-34.8 4.6-71.4-23.8-92.6z",
  yOffset: 0,
  xOffset: 0
}, GL = Qe(qL), WL = {
  name: "PencilAltIcon",
  height: 512,
  width: 512,
  svgPath: "M497.9 142.1l-46.1 46.1c-4.7 4.7-12.3 4.7-17 0l-111-111c-4.7-4.7-4.7-12.3 0-17l46.1-46.1c18.7-18.7 49.1-18.7 67.9 0l60.1 60.1c18.8 18.7 18.8 49.1 0 67.9zM284.2 99.8L21.6 362.4.4 483.9c-2.9 16.4 11.4 30.6 27.8 27.8l121.5-21.3 262.6-262.6c4.7-4.7 4.7-12.3 0-17l-111-111c-4.8-4.7-12.4-4.7-17.1 0zM124.1 339.9c-5.5-5.5-5.5-14.3 0-19.8l154-154c5.5-5.5 14.3-5.5 19.8 0s5.5 14.3 0 19.8l-154 154c-5.5 5.5-14.3 5.5-19.8 0zM88 424h48v36.3l-64.5 11.3-31.1-31.1L51.7 376H88v48z",
  yOffset: 0,
  xOffset: 0
}, uS = Qe(WL), XL = {
  name: "PlusCircleIcon",
  height: 512,
  width: 512,
  svgPath: "M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm144 276c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92h-92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z",
  yOffset: 0,
  xOffset: 0
}, Ea = Qe(XL), YL = {
  name: "QuestionCircleIcon",
  height: 512,
  width: 512,
  svgPath: "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
  yOffset: 0,
  xOffset: 0
}, Yc = Qe(YL), JL = {
  name: "StackOverflowIcon",
  height: 512,
  width: 384,
  svgPath: "M290.7 311L95 269.7 86.8 309l195.7 41zm51-87L188.2 95.7l-25.5 30.8 153.5 128.3zm-31.2 39.7L129.2 179l-16.7 36.5L293.7 300zM262 32l-32 24 119.3 160.3 32-24zm20.5 328h-200v39.7h200zm39.7 80H42.7V320h-40v160h359.5V320h-40z",
  yOffset: 0,
  xOffset: 0
}, ZL = Qe(JL), QL = {
  name: "SyncAltIcon",
  height: 512,
  width: 512,
  svgPath: "M370.72 133.28C339.458 104.008 298.888 87.962 255.848 88c-77.458.068-144.328 53.178-162.791 126.85-1.344 5.363-6.122 9.15-11.651 9.15H24.103c-7.498 0-13.194-6.807-11.807-14.176C33.933 94.924 134.813 8 256 8c66.448 0 126.791 26.136 171.315 68.685L463.03 40.97C478.149 25.851 504 36.559 504 57.941V192c0 13.255-10.745 24-24 24H345.941c-21.382 0-32.09-25.851-16.971-40.971l41.75-41.749zM32 296h134.059c21.382 0 32.09 25.851 16.971 40.971l-41.75 41.75c31.262 29.273 71.835 45.319 114.876 45.28 77.418-.07 144.315-53.144 162.787-126.849 1.344-5.363 6.122-9.15 11.651-9.15h57.304c7.498 0 13.194 6.807 11.807 14.176C478.067 417.076 377.187 504 256 504c-66.448 0-126.791-26.136-171.315-68.685L48.97 471.03C33.851 486.149 8 475.441 8 454.059V320c0-13.255 10.745-24 24-24z",
  yOffset: 0,
  xOffset: 0
}, eN = Qe(QL), tN = {
  name: "TrashIcon",
  height: 512,
  width: 448,
  svgPath: "M432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zM53.2 467a48 48 0 0 0 47.9 45h245.8a48 48 0 0 0 47.9-45L416 128H32z",
  yOffset: 0,
  xOffset: 0
}, mu = Qe(tN), nN = {
  name: "TreeIcon",
  height: 512,
  width: 384,
  svgPath: "M378.31 378.49L298.42 288h30.63c9.01 0 16.98-5 20.78-13.06 3.8-8.04 2.55-17.26-3.28-24.05L268.42 160h28.89c9.1 0 17.3-5.35 20.86-13.61 3.52-8.13 1.86-17.59-4.24-24.08L203.66 4.83c-6.03-6.45-17.28-6.45-23.32 0L70.06 122.31c-6.1 6.49-7.75 15.95-4.24 24.08C69.38 154.65 77.59 160 86.69 160h28.89l-78.14 90.91c-5.81 6.78-7.06 15.99-3.27 24.04C37.97 283 45.93 288 54.95 288h30.63L5.69 378.49c-6 6.79-7.36 16.09-3.56 24.26 3.75 8.05 12 13.25 21.01 13.25H160v24.45l-30.29 48.4c-5.32 10.64 2.42 23.16 14.31 23.16h95.96c11.89 0 19.63-12.52 14.31-23.16L224 440.45V416h136.86c9.01 0 17.26-5.2 21.01-13.25 3.8-8.17 2.44-17.47-3.56-24.26z",
  yOffset: 0,
  xOffset: 0
}, aN = Qe(nN), rN = {
  name: "TwitterIcon",
  height: 512,
  width: 512,
  svgPath: "M459.37 151.716c.325 4.548.325 9.097.325 13.645 0 138.72-105.583 298.558-298.558 298.558-59.452 0-114.68-17.219-161.137-47.106 8.447.974 16.568 1.299 25.34 1.299 49.055 0 94.213-16.568 130.274-44.832-46.132-.975-84.792-31.188-98.112-72.772 6.498.974 12.995 1.624 19.818 1.624 9.421 0 18.843-1.3 27.614-3.573-48.081-9.747-84.143-51.98-84.143-102.985v-1.299c13.969 7.797 30.214 12.67 47.431 13.319-28.264-18.843-46.781-51.005-46.781-87.391 0-19.492 5.197-37.36 14.294-52.954 51.655 63.675 129.3 105.258 216.365 109.807-1.624-7.797-2.599-15.918-2.599-24.04 0-57.828 46.782-104.934 104.934-104.934 30.213 0 57.502 12.67 76.67 33.137 23.715-4.548 46.456-13.32 66.599-25.34-7.798 24.366-24.366 44.833-46.132 57.827 21.117-2.273 41.584-8.122 60.426-16.243-14.292 20.791-32.161 39.308-52.628 54.253z",
  yOffset: 0,
  xOffset: 0
}, iN = Qe(rN), sN = {
  name: "UploadIcon",
  height: 512,
  width: 512,
  svgPath: "M296 384h-80c-13.3 0-24-10.7-24-24V192h-87.7c-17.8 0-26.7-21.5-14.1-34.1L242.3 5.7c7.5-7.5 19.8-7.5 27.3 0l152.2 152.2c12.6 12.6 3.7 34.1-14.1 34.1H320v168c0 13.3-10.7 24-24 24zm216-8v112c0 13.3-10.7 24-24 24H24c-13.3 0-24-10.7-24-24V376c0-13.3 10.7-24 24-24h136v8c0 30.9 25.1 56 56 56h80c30.9 0 56-25.1 56-56v-8h136c13.3 0 24 10.7 24 24zm-124 88c0-11-9-20-20-20s-20 9-20 20 9 20 20 20 20-9 20-20zm64 0c0-11-9-20-20-20s-20 9-20 20 9 20 20 20 20-9 20-20z",
  yOffset: 0,
  xOffset: 0
}, oN = Qe(sN), lN = {
  name: "WarningTriangleIcon",
  height: 1024,
  width: 1088,
  svgPath: "M1057.10141,663.5 L845.101405,215.4 C787.101405,71.8 665.401405,0 542.901405,0 C420.201405,0 296.701405,71.9 235.001405,215.6 L31.7014051,648.5 C10.4014051,700 -0.0985948775,752.3 0.000697596367,800.8 C0.301405123,924.8 70.2014051,1024 209.101405,1024 L868.401405,1024 C1005.80141,1024 1087.70141,918.6 1088.00215,795.5 C1088.10141,752.4 1078.20141,707.2 1057.10141,663.5 Z M959.401405,800.3 C958.701405,822.9 952.901405,843.5 942.601405,859.7 C926.801405,884.6 902.601405,896.7 868.301405,896.7 L209.101405,896.7 C191.201405,896.7 176.601405,893.8 165.401405,888.2 C157.301405,884 150.801405,878.4 145.401405,870.3 C135.101405,855 129.101405,832 128.401405,805.6 C127.601405,772.8 134.901405,736.5 149.401405,700.5 L353.001405,266.7 C363.201405,242.9 376.101405,221.5 391.101405,203.2 C404.801405,186.6 420.301405,172.4 437.401405,161.1 C469.201405,139.9 505.701405,128.8 542.901405,128.8 C579.701405,128.8 615.401405,139.8 646.001405,160.5 C662.401405,171.6 677.101405,185.4 690.101405,201.6 C704.501405,219.6 716.401405,240.6 725.901405,264 L940.901405,718.9 L941.101405,719.3 L941.301405,719.7 C953.901405,746 960.201405,773.9 959.401405,800.3 Z M586.601405,832 L501.301405,832 C489.501405,831.8 480.201405,821.5 480.001405,808.7 L480.001405,727.3 C480.201405,714.5 489.601405,704.3 501.301405,704 L586.601405,704 C598.401405,704.2 607.701405,714.5 607.901405,727.3 L607.901405,808.7 L608.001405,808.7 C607.701405,821.5 598.301405,831.8 586.601405,832 M639.901405,290.7 L613.201405,610.4 C611.801405,626.9 598.001405,640 581.301405,640 L506.601405,640 C490.001405,640 476.101405,627.2 474.701405,610.7 L448.101405,291 C446.501405,272.3 461.301405,256.3 480.001405,256.3 L608.001405,256 C626.701405,256 641.401405,272 639.901405,290.7",
  yOffset: 0,
  xOffset: 0
}, pS = Qe(lN);
var Jc = (e) => e.type === "checkbox", bo = (e) => e instanceof Date, la = (e) => e == null;
const mS = (e) => typeof e == "object";
var Un = (e) => !la(e) && !Array.isArray(e) && mS(e) && !bo(e), fS = (e) => Un(e) && e.target ? Jc(e.target) ? e.target.checked : e.target.value : e, cN = (e) => e.substring(0, e.search(/\.\d+(\.|$)/)) || e, hS = (e, t) => e.has(cN(t)), dN = (e) => {
  const t = e.constructor && e.constructor.prototype;
  return Un(t) && t.hasOwnProperty("isPrototypeOf");
}, ng = typeof window < "u" && typeof window.HTMLElement < "u" && typeof document < "u";
function Mn(e) {
  let t;
  const n = Array.isArray(e);
  if (e instanceof Date)
    t = new Date(e);
  else if (e instanceof Set)
    t = new Set(e);
  else if (!(ng && (e instanceof Blob || e instanceof FileList)) && (n || Un(e)))
    if (t = n ? [] : {}, !n && !dN(e))
      t = e;
    else
      for (const r in e)
        e.hasOwnProperty(r) && (t[r] = Mn(e[r]));
  else
    return e;
  return t;
}
var Zc = (e) => Array.isArray(e) ? e.filter(Boolean) : [], un = (e) => e === void 0, Me = (e, t, n) => {
  if (!t || !Un(e))
    return n;
  const r = Zc(t.split(/[,[\].]+?/)).reduce((i, s) => la(i) ? i : i[s], e);
  return un(r) || r === e ? un(e[t]) ? n : e[t] : r;
}, jr = (e) => typeof e == "boolean", ag = (e) => /^\w*$/.test(e), gS = (e) => Zc(e.replace(/["|']|\]/g, "").split(/\.|\[/)), Jt = (e, t, n) => {
  let r = -1;
  const i = ag(t) ? [t] : gS(t), s = i.length, o = s - 1;
  for (; ++r < s; ) {
    const l = i[r];
    let c = n;
    if (r !== o) {
      const d = e[l];
      c = Un(d) || Array.isArray(d) ? d : isNaN(+i[r + 1]) ? {} : [];
    }
    if (l === "__proto__")
      return;
    e[l] = c, e = e[l];
  }
  return e;
};
const fu = {
  BLUR: "blur",
  FOCUS_OUT: "focusout",
  CHANGE: "change"
}, Qa = {
  onBlur: "onBlur",
  onChange: "onChange",
  onSubmit: "onSubmit",
  onTouched: "onTouched",
  all: "all"
}, ci = {
  max: "max",
  min: "min",
  maxLength: "maxLength",
  minLength: "minLength",
  pattern: "pattern",
  required: "required",
  validate: "validate"
}, bS = re.createContext(null), Le = () => re.useContext(bS), Ve = (e) => {
  const { children: t, ...n } = e;
  return re.createElement(bS.Provider, { value: n }, t);
};
var vS = (e, t, n, r = !0) => {
  const i = {
    defaultValues: t._defaultValues
  };
  for (const s in e)
    Object.defineProperty(i, s, {
      get: () => {
        const o = s;
        return t._proxyFormState[o] !== Qa.all && (t._proxyFormState[o] = !r || Qa.all), n && (n[o] = !0), e[o];
      }
    });
  return i;
}, ha = (e) => Un(e) && !Object.keys(e).length, yS = (e, t, n, r) => {
  n(e);
  const { name: i, ...s } = e;
  return ha(s) || Object.keys(s).length >= Object.keys(t).length || Object.keys(s).find((o) => t[o] === (!r || Qa.all));
}, Ca = (e) => Array.isArray(e) ? e : [e], CS = (e, t, n) => !e || !t || e === t || Ca(e).some((r) => r && (n ? r === t : r.startsWith(t) || t.startsWith(r)));
function tp(e) {
  const t = re.useRef(e);
  t.current = e, re.useEffect(() => {
    const n = !e.disabled && t.current.subject && t.current.subject.subscribe({
      next: t.current.next
    });
    return () => {
      n && n.unsubscribe();
    };
  }, [e.disabled]);
}
function uN(e) {
  const t = Le(), { control: n = t.control, disabled: r, name: i, exact: s } = e || {}, [o, l] = re.useState(n._formState), c = re.useRef(!0), d = re.useRef({
    isDirty: !1,
    isLoading: !1,
    dirtyFields: !1,
    touchedFields: !1,
    validatingFields: !1,
    isValidating: !1,
    isValid: !1,
    errors: !1
  }), u = re.useRef(i);
  return u.current = i, tp({
    disabled: r,
    next: (p) => c.current && CS(u.current, p.name, s) && yS(p, d.current, n._updateFormState) && l({
      ...n._formState,
      ...p
    }),
    subject: n._subjects.state
  }), re.useEffect(() => (c.current = !0, d.current.isValid && n._updateValid(!0), () => {
    c.current = !1;
  }), [n]), vS(o, n, d.current, !1);
}
var Br = (e) => typeof e == "string", xS = (e, t, n, r, i) => Br(e) ? (r && t.watch.add(e), Me(n, e, i)) : Array.isArray(e) ? e.map((s) => (r && t.watch.add(s), Me(n, s))) : (r && (t.watchAll = !0), n);
function nt(e) {
  const t = Le(), { control: n = t.control, name: r, defaultValue: i, disabled: s, exact: o } = e || {}, l = re.useRef(r);
  l.current = r, tp({
    disabled: s,
    subject: n._subjects.values,
    next: (u) => {
      CS(l.current, u.name, o) && d(Mn(xS(l.current, n._names, u.values || n._formValues, !1, i)));
    }
  });
  const [c, d] = re.useState(n._getWatch(r, i));
  return re.useEffect(() => n._removeUnmounted()), c;
}
function qs(e) {
  const t = Le(), { name: n, disabled: r, control: i = t.control, shouldUnregister: s } = e, o = hS(i._names.array, n), l = nt({
    control: i,
    name: n,
    defaultValue: Me(i._formValues, n, Me(i._defaultValues, n, e.defaultValue)),
    exact: !0
  }), c = uN({
    control: i,
    name: n
  }), d = re.useRef(i.register(n, {
    ...e.rules,
    value: l,
    ...jr(e.disabled) ? { disabled: e.disabled } : {}
  }));
  return re.useEffect(() => {
    const u = i._options.shouldUnregister || s, p = (m, f) => {
      const g = Me(i._fields, m);
      g && g._f && (g._f.mount = f);
    };
    if (p(n, !0), u) {
      const m = Mn(Me(i._options.defaultValues, n));
      Jt(i._defaultValues, n, m), un(Me(i._formValues, n)) && Jt(i._formValues, n, m);
    }
    return () => {
      (o ? u && !i._state.action : u) ? i.unregister(n) : p(n, !1);
    };
  }, [n, i, o, s]), re.useEffect(() => {
    Me(i._fields, n) && i._updateDisabledField({
      disabled: r,
      fields: i._fields,
      name: n,
      value: Me(i._fields, n)._f.value
    });
  }, [r, n, i]), {
    field: {
      name: n,
      value: l,
      ...jr(r) || c.disabled ? { disabled: c.disabled || r } : {},
      onChange: re.useCallback((u) => d.current.onChange({
        target: {
          value: fS(u),
          name: n
        },
        type: fu.CHANGE
      }), [n]),
      onBlur: re.useCallback(() => d.current.onBlur({
        target: {
          value: Me(i._formValues, n),
          name: n
        },
        type: fu.BLUR
      }), [n, i]),
      ref: (u) => {
        const p = Me(i._fields, n);
        p && u && (p._f.ref = {
          focus: () => u.focus(),
          select: () => u.select(),
          setCustomValidity: (m) => u.setCustomValidity(m),
          reportValidity: () => u.reportValidity()
        });
      }
    },
    formState: c,
    fieldState: Object.defineProperties({}, {
      invalid: {
        enumerable: !0,
        get: () => !!Me(c.errors, n)
      },
      isDirty: {
        enumerable: !0,
        get: () => !!Me(c.dirtyFields, n)
      },
      isTouched: {
        enumerable: !0,
        get: () => !!Me(c.touchedFields, n)
      },
      isValidating: {
        enumerable: !0,
        get: () => !!Me(c.validatingFields, n)
      },
      error: {
        enumerable: !0,
        get: () => Me(c.errors, n)
      }
    })
  };
}
const ge = (e) => e.render(qs(e));
var pN = (e, t, n, r, i) => t ? {
  ...n[e],
  types: {
    ...n[e] && n[e].types ? n[e].types : {},
    [r]: i || !0
  }
} : {}, Ki = () => {
  const e = typeof performance > "u" ? Date.now() : performance.now() * 1e3;
  return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, (t) => {
    const n = (Math.random() * 16 + e) % 16 | 0;
    return (t == "x" ? n : n & 3 | 8).toString(16);
  });
}, dm = (e, t, n = {}) => n.shouldFocus || un(n.shouldFocus) ? n.focusName || `${e}.${un(n.focusIndex) ? t : n.focusIndex}.` : "", Yl = (e) => ({
  isOnSubmit: !e || e === Qa.onSubmit,
  isOnBlur: e === Qa.onBlur,
  isOnChange: e === Qa.onChange,
  isOnAll: e === Qa.all,
  isOnTouch: e === Qa.onTouched
}), Ef = (e, t, n) => !n && (t.watchAll || t.watch.has(e) || [...t.watch].some((r) => e.startsWith(r) && /^\.\w+/.test(e.slice(r.length))));
const So = (e, t, n, r) => {
  for (const i of n || Object.keys(e)) {
    const s = Me(e, i);
    if (s) {
      const { _f: o, ...l } = s;
      if (o) {
        if (o.refs && o.refs[0] && t(o.refs[0], i) && !r)
          break;
        if (o.ref && t(o.ref, o.name) && !r)
          break;
        So(l, t);
      } else Un(l) && So(l, t);
    }
  }
};
var SS = (e, t, n) => {
  const r = Ca(Me(e, n));
  return Jt(r, "root", t[n]), Jt(e, n, r), e;
}, rg = (e) => e.type === "file", Gi = (e) => typeof e == "function", hu = (e) => {
  if (!ng)
    return !1;
  const t = e ? e.ownerDocument : 0;
  return e instanceof (t && t.defaultView ? t.defaultView.HTMLElement : HTMLElement);
}, Vd = (e) => Br(e), ig = (e) => e.type === "radio", gu = (e) => e instanceof RegExp;
const Bv = {
  value: !1,
  isValid: !1
}, Uv = { value: !0, isValid: !0 };
var wS = (e) => {
  if (Array.isArray(e)) {
    if (e.length > 1) {
      const t = e.filter((n) => n && n.checked && !n.disabled).map((n) => n.value);
      return { value: t, isValid: !!t.length };
    }
    return e[0].checked && !e[0].disabled ? (
      // @ts-expect-error expected to work in the browser
      e[0].attributes && !un(e[0].attributes.value) ? un(e[0].value) || e[0].value === "" ? Uv : { value: e[0].value, isValid: !0 } : Uv
    ) : Bv;
  }
  return Bv;
};
const Vv = {
  isValid: !1,
  value: null
};
var kS = (e) => Array.isArray(e) ? e.reduce((t, n) => n && n.checked && !n.disabled ? {
  isValid: !0,
  value: n.value
} : t, Vv) : Vv;
function Kv(e, t, n = "validate") {
  if (Vd(e) || Array.isArray(e) && e.every(Vd) || jr(e) && !e)
    return {
      type: n,
      message: Vd(e) ? e : "",
      ref: t
    };
}
var oo = (e) => Un(e) && !gu(e) ? e : {
  value: e,
  message: ""
}, If = async (e, t, n, r, i) => {
  const { ref: s, refs: o, required: l, maxLength: c, minLength: d, min: u, max: p, pattern: m, validate: f, name: g, valueAsNumber: b, mount: v, disabled: y } = e._f, x = Me(t, g);
  if (!v || y)
    return {};
  const w = o ? o[0] : s, R = (P) => {
    r && w.reportValidity && (w.setCustomValidity(jr(P) ? "" : P || ""), w.reportValidity());
  }, S = {}, _ = ig(s), O = Jc(s), E = _ || O, T = (b || rg(s)) && un(s.value) && un(x) || hu(s) && s.value === "" || x === "" || Array.isArray(x) && !x.length, I = pN.bind(null, g, n, S), k = (P, D, F, A = ci.maxLength, M = ci.minLength) => {
    const V = P ? D : F;
    S[g] = {
      type: P ? A : M,
      message: V,
      ref: s,
      ...I(P ? A : M, V)
    };
  };
  if (i ? !Array.isArray(x) || !x.length : l && (!E && (T || la(x)) || jr(x) && !x || O && !wS(o).isValid || _ && !kS(o).isValid)) {
    const { value: P, message: D } = Vd(l) ? { value: !!l, message: l } : oo(l);
    if (P && (S[g] = {
      type: ci.required,
      message: D,
      ref: w,
      ...I(ci.required, D)
    }, !n))
      return R(D), S;
  }
  if (!T && (!la(u) || !la(p))) {
    let P, D;
    const F = oo(p), A = oo(u);
    if (!la(x) && !isNaN(x)) {
      const M = s.valueAsNumber || x && +x;
      la(F.value) || (P = M > F.value), la(A.value) || (D = M < A.value);
    } else {
      const M = s.valueAsDate || new Date(x), V = (q) => /* @__PURE__ */ new Date((/* @__PURE__ */ new Date()).toDateString() + " " + q), U = s.type == "time", G = s.type == "week";
      Br(F.value) && x && (P = U ? V(x) > V(F.value) : G ? x > F.value : M > new Date(F.value)), Br(A.value) && x && (D = U ? V(x) < V(A.value) : G ? x < A.value : M < new Date(A.value));
    }
    if ((P || D) && (k(!!P, F.message, A.message, ci.max, ci.min), !n))
      return R(S[g].message), S;
  }
  if ((c || d) && !T && (Br(x) || i && Array.isArray(x))) {
    const P = oo(c), D = oo(d), F = !la(P.value) && x.length > +P.value, A = !la(D.value) && x.length < +D.value;
    if ((F || A) && (k(F, P.message, D.message), !n))
      return R(S[g].message), S;
  }
  if (m && !T && Br(x)) {
    const { value: P, message: D } = oo(m);
    if (gu(P) && !x.match(P) && (S[g] = {
      type: ci.pattern,
      message: D,
      ref: s,
      ...I(ci.pattern, D)
    }, !n))
      return R(D), S;
  }
  if (f) {
    if (Gi(f)) {
      const P = await f(x, t), D = Kv(P, w);
      if (D && (S[g] = {
        ...D,
        ...I(ci.validate, D.message)
      }, !n))
        return R(D.message), S;
    } else if (Un(f)) {
      let P = {};
      for (const D in f) {
        if (!ha(P) && !n)
          break;
        const F = Kv(await f[D](x, t), w, D);
        F && (P = {
          ...F,
          ...I(D, F.message)
        }, R(F.message), n && (S[g] = P));
      }
      if (!ha(P) && (S[g] = {
        ref: w,
        ...P
      }, !n))
        return S;
    }
  }
  return R(!0), S;
}, um = (e, t) => [
  ...e,
  ...Ca(t)
], pm = (e) => Array.isArray(e) ? e.map(() => {
}) : void 0;
function mm(e, t, n) {
  return [
    ...e.slice(0, t),
    ...Ca(n),
    ...e.slice(t)
  ];
}
var fm = (e, t, n) => Array.isArray(e) ? (un(e[n]) && (e[n] = void 0), e.splice(n, 0, e.splice(t, 1)[0]), e) : [], hm = (e, t) => [
  ...Ca(t),
  ...Ca(e)
];
function mN(e, t) {
  let n = 0;
  const r = [...e];
  for (const i of t)
    r.splice(i - n, 1), n++;
  return Zc(r).length ? r : [];
}
var gm = (e, t) => un(t) ? [] : mN(e, Ca(t).sort((n, r) => n - r)), bm = (e, t, n) => {
  [e[t], e[n]] = [e[n], e[t]];
};
function fN(e, t) {
  const n = t.slice(0, -1).length;
  let r = 0;
  for (; r < n; )
    e = un(e) ? r++ : e[t[r++]];
  return e;
}
function hN(e) {
  for (const t in e)
    if (e.hasOwnProperty(t) && !un(e[t]))
      return !1;
  return !0;
}
function Rn(e, t) {
  const n = Array.isArray(t) ? t : ag(t) ? [t] : gS(t), r = n.length === 1 ? e : fN(e, n), i = n.length - 1, s = n[i];
  return r && delete r[s], i !== 0 && (Un(r) && ha(r) || Array.isArray(r) && hN(r)) && Rn(e, n.slice(0, -1)), e;
}
var Hv = (e, t, n) => (e[t] = n, e);
function sg(e) {
  const t = Le(), { control: n = t.control, name: r, keyName: i = "id", shouldUnregister: s } = e, [o, l] = re.useState(n._getFieldArray(r)), c = re.useRef(n._getFieldArray(r).map(Ki)), d = re.useRef(o), u = re.useRef(r), p = re.useRef(!1);
  u.current = r, d.current = o, n._names.array.add(r), e.rules && n.register(r, e.rules), tp({
    next: ({ values: S, name: _ }) => {
      if (_ === u.current || !_) {
        const O = Me(S, u.current);
        Array.isArray(O) && (l(O), c.current = O.map(Ki));
      }
    },
    subject: n._subjects.array
  });
  const m = re.useCallback((S) => {
    p.current = !0, n._updateFieldArray(r, S);
  }, [n, r]), f = (S, _) => {
    const O = Ca(Mn(S)), E = um(n._getFieldArray(r), O);
    n._names.focus = dm(r, E.length - 1, _), c.current = um(c.current, O.map(Ki)), m(E), l(E), n._updateFieldArray(r, E, um, {
      argA: pm(S)
    });
  }, g = (S, _) => {
    const O = Ca(Mn(S)), E = hm(n._getFieldArray(r), O);
    n._names.focus = dm(r, 0, _), c.current = hm(c.current, O.map(Ki)), m(E), l(E), n._updateFieldArray(r, E, hm, {
      argA: pm(S)
    });
  }, b = (S) => {
    const _ = gm(n._getFieldArray(r), S);
    c.current = gm(c.current, S), m(_), l(_), n._updateFieldArray(r, _, gm, {
      argA: S
    });
  }, v = (S, _, O) => {
    const E = Ca(Mn(_)), T = mm(n._getFieldArray(r), S, E);
    n._names.focus = dm(r, S, O), c.current = mm(c.current, S, E.map(Ki)), m(T), l(T), n._updateFieldArray(r, T, mm, {
      argA: S,
      argB: pm(_)
    });
  }, y = (S, _) => {
    const O = n._getFieldArray(r);
    bm(O, S, _), bm(c.current, S, _), m(O), l(O), n._updateFieldArray(r, O, bm, {
      argA: S,
      argB: _
    }, !1);
  }, x = (S, _) => {
    const O = n._getFieldArray(r);
    fm(O, S, _), fm(c.current, S, _), m(O), l(O), n._updateFieldArray(r, O, fm, {
      argA: S,
      argB: _
    }, !1);
  }, w = (S, _) => {
    const O = Mn(_), E = Hv(n._getFieldArray(r), S, O);
    c.current = [...E].map((T, I) => !T || I === S ? Ki() : c.current[I]), m(E), l([...E]), n._updateFieldArray(r, E, Hv, {
      argA: S,
      argB: O
    }, !0, !1);
  }, R = (S) => {
    const _ = Ca(Mn(S));
    c.current = _.map(Ki), m([..._]), l([..._]), n._updateFieldArray(r, [..._], (O) => O, {}, !0, !1);
  };
  return re.useEffect(() => {
    if (n._state.action = !1, Ef(r, n._names) && n._subjects.state.next({
      ...n._formState
    }), p.current && (!Yl(n._options.mode).isOnSubmit || n._formState.isSubmitted))
      if (n._options.resolver)
        n._executeSchema([r]).then((S) => {
          const _ = Me(S.errors, r), O = Me(n._formState.errors, r);
          (O ? !_ && O.type || _ && (O.type !== _.type || O.message !== _.message) : _ && _.type) && (_ ? Jt(n._formState.errors, r, _) : Rn(n._formState.errors, r), n._subjects.state.next({
            errors: n._formState.errors
          }));
        });
      else {
        const S = Me(n._fields, r);
        S && S._f && !(Yl(n._options.reValidateMode).isOnSubmit && Yl(n._options.mode).isOnSubmit) && If(S, n._formValues, n._options.criteriaMode === Qa.all, n._options.shouldUseNativeValidation, !0).then((_) => !ha(_) && n._subjects.state.next({
          errors: SS(n._formState.errors, _, r)
        }));
      }
    n._subjects.values.next({
      name: r,
      values: { ...n._formValues }
    }), n._names.focus && So(n._fields, (S, _) => {
      if (n._names.focus && _.startsWith(n._names.focus) && S.focus)
        return S.focus(), 1;
    }), n._names.focus = "", n._updateValid(), p.current = !1;
  }, [o, r, n]), re.useEffect(() => (!Me(n._formValues, r) && n._updateFieldArray(r), () => {
    (n._options.shouldUnregister || s) && n.unregister(r);
  }), [r, n, i, s]), {
    swap: re.useCallback(y, [m, r, n]),
    move: re.useCallback(x, [m, r, n]),
    prepend: re.useCallback(g, [m, r, n]),
    append: re.useCallback(f, [m, r, n]),
    remove: re.useCallback(b, [m, r, n]),
    insert: re.useCallback(v, [m, r, n]),
    update: re.useCallback(w, [m, r, n]),
    replace: re.useCallback(R, [m, r, n]),
    fields: re.useMemo(() => o.map((S, _) => ({
      ...S,
      [i]: c.current[_] || Ki()
    })), [o, i])
  };
}
var vm = () => {
  let e = [];
  return {
    get observers() {
      return e;
    },
    next: (i) => {
      for (const s of e)
        s.next && s.next(i);
    },
    subscribe: (i) => (e.push(i), {
      unsubscribe: () => {
        e = e.filter((s) => s !== i);
      }
    }),
    unsubscribe: () => {
      e = [];
    }
  };
}, bu = (e) => la(e) || !mS(e);
function Os(e, t) {
  if (bu(e) || bu(t))
    return e === t;
  if (bo(e) && bo(t))
    return e.getTime() === t.getTime();
  const n = Object.keys(e), r = Object.keys(t);
  if (n.length !== r.length)
    return !1;
  for (const i of n) {
    const s = e[i];
    if (!r.includes(i))
      return !1;
    if (i !== "ref") {
      const o = t[i];
      if (bo(s) && bo(o) || Un(s) && Un(o) || Array.isArray(s) && Array.isArray(o) ? !Os(s, o) : s !== o)
        return !1;
    }
  }
  return !0;
}
var OS = (e) => e.type === "select-multiple", gN = (e) => ig(e) || Jc(e), ym = (e) => hu(e) && e.isConnected, TS = (e) => {
  for (const t in e)
    if (Gi(e[t]))
      return !0;
  return !1;
};
function vu(e, t = {}) {
  const n = Array.isArray(e);
  if (Un(e) || n)
    for (const r in e)
      Array.isArray(e[r]) || Un(e[r]) && !TS(e[r]) ? (t[r] = Array.isArray(e[r]) ? [] : {}, vu(e[r], t[r])) : la(e[r]) || (t[r] = !0);
  return t;
}
function ES(e, t, n) {
  const r = Array.isArray(e);
  if (Un(e) || r)
    for (const i in e)
      Array.isArray(e[i]) || Un(e[i]) && !TS(e[i]) ? un(t) || bu(n[i]) ? n[i] = Array.isArray(e[i]) ? vu(e[i], []) : { ...vu(e[i]) } : ES(e[i], la(t) ? {} : t[i], n[i]) : n[i] = !Os(e[i], t[i]);
  return n;
}
var Sd = (e, t) => ES(e, t, vu(t)), IS = (e, { valueAsNumber: t, valueAsDate: n, setValueAs: r }) => un(e) ? e : t ? e === "" ? NaN : e && +e : n && Br(e) ? new Date(e) : r ? r(e) : e;
function Cm(e) {
  const t = e.ref;
  if (!(e.refs ? e.refs.every((n) => n.disabled) : t.disabled))
    return rg(t) ? t.files : ig(t) ? kS(e.refs).value : OS(t) ? [...t.selectedOptions].map(({ value: n }) => n) : Jc(t) ? wS(e.refs).value : IS(un(t.value) ? e.ref.value : t.value, e);
}
var bN = (e, t, n, r) => {
  const i = {};
  for (const s of e) {
    const o = Me(t, s);
    o && Jt(i, s, o._f);
  }
  return {
    criteriaMode: n,
    names: [...e],
    fields: i,
    shouldUseNativeValidation: r
  };
}, Il = (e) => un(e) ? e : gu(e) ? e.source : Un(e) ? gu(e.value) ? e.value.source : e.value : e, vN = (e) => e.mount && (e.required || e.min || e.max || e.maxLength || e.minLength || e.pattern || e.validate);
function zv(e, t, n) {
  const r = Me(e, n);
  if (r || ag(n))
    return {
      error: r,
      name: n
    };
  const i = n.split(".");
  for (; i.length; ) {
    const s = i.join("."), o = Me(t, s), l = Me(e, s);
    if (o && !Array.isArray(o) && n !== s)
      return { name: n };
    if (l && l.type)
      return {
        name: s,
        error: l
      };
    i.pop();
  }
  return {
    name: n
  };
}
var yN = (e, t, n, r, i) => i.isOnAll ? !1 : !n && i.isOnTouch ? !(t || e) : (n ? r.isOnBlur : i.isOnBlur) ? !e : (n ? r.isOnChange : i.isOnChange) ? e : !0, CN = (e, t) => !Zc(Me(e, t)).length && Rn(e, t);
const xN = {
  mode: Qa.onSubmit,
  reValidateMode: Qa.onChange,
  shouldFocusError: !0
};
function SN(e = {}) {
  let t = {
    ...xN,
    ...e
  }, n = {
    submitCount: 0,
    isDirty: !1,
    isLoading: Gi(t.defaultValues),
    isValidating: !1,
    isSubmitted: !1,
    isSubmitting: !1,
    isSubmitSuccessful: !1,
    isValid: !1,
    touchedFields: {},
    dirtyFields: {},
    validatingFields: {},
    errors: t.errors || {},
    disabled: t.disabled || !1
  }, r = {}, i = Un(t.defaultValues) || Un(t.values) ? Mn(t.defaultValues || t.values) || {} : {}, s = t.shouldUnregister ? {} : Mn(i), o = {
    action: !1,
    mount: !1,
    watch: !1
  }, l = {
    mount: /* @__PURE__ */ new Set(),
    unMount: /* @__PURE__ */ new Set(),
    array: /* @__PURE__ */ new Set(),
    watch: /* @__PURE__ */ new Set()
  }, c, d = 0;
  const u = {
    isDirty: !1,
    dirtyFields: !1,
    validatingFields: !1,
    touchedFields: !1,
    isValidating: !1,
    isValid: !1,
    errors: !1
  }, p = {
    values: vm(),
    array: vm(),
    state: vm()
  }, m = Yl(t.mode), f = Yl(t.reValidateMode), g = t.criteriaMode === Qa.all, b = (J) => (X) => {
    clearTimeout(d), d = setTimeout(J, X);
  }, v = async (J) => {
    if (u.isValid || J) {
      const X = t.resolver ? ha((await E()).errors) : await I(r, !0);
      X !== n.isValid && p.state.next({
        isValid: X
      });
    }
  }, y = (J, X) => {
    (u.isValidating || u.validatingFields) && ((J || Array.from(l.mount)).forEach((Y) => {
      Y && (X ? Jt(n.validatingFields, Y, X) : Rn(n.validatingFields, Y));
    }), p.state.next({
      validatingFields: n.validatingFields,
      isValidating: !ha(n.validatingFields)
    }));
  }, x = (J, X = [], Y, ae, de = !0, ye = !0) => {
    if (ae && Y) {
      if (o.action = !0, ye && Array.isArray(Me(r, J))) {
        const he = Y(Me(r, J), ae.argA, ae.argB);
        de && Jt(r, J, he);
      }
      if (ye && Array.isArray(Me(n.errors, J))) {
        const he = Y(Me(n.errors, J), ae.argA, ae.argB);
        de && Jt(n.errors, J, he), CN(n.errors, J);
      }
      if (u.touchedFields && ye && Array.isArray(Me(n.touchedFields, J))) {
        const he = Y(Me(n.touchedFields, J), ae.argA, ae.argB);
        de && Jt(n.touchedFields, J, he);
      }
      u.dirtyFields && (n.dirtyFields = Sd(i, s)), p.state.next({
        name: J,
        isDirty: P(J, X),
        dirtyFields: n.dirtyFields,
        errors: n.errors,
        isValid: n.isValid
      });
    } else
      Jt(s, J, X);
  }, w = (J, X) => {
    Jt(n.errors, J, X), p.state.next({
      errors: n.errors
    });
  }, R = (J) => {
    n.errors = J, p.state.next({
      errors: n.errors,
      isValid: !1
    });
  }, S = (J, X, Y, ae) => {
    const de = Me(r, J);
    if (de) {
      const ye = Me(s, J, un(Y) ? Me(i, J) : Y);
      un(ye) || ae && ae.defaultChecked || X ? Jt(s, J, X ? ye : Cm(de._f)) : A(J, ye), o.mount && v();
    }
  }, _ = (J, X, Y, ae, de) => {
    let ye = !1, he = !1;
    const Ce = {
      name: J
    }, Ge = !!(Me(r, J) && Me(r, J)._f && Me(r, J)._f.disabled);
    if (!Y || ae) {
      u.isDirty && (he = n.isDirty, n.isDirty = Ce.isDirty = P(), ye = he !== Ce.isDirty);
      const it = Ge || Os(Me(i, J), X);
      he = !!(!Ge && Me(n.dirtyFields, J)), it || Ge ? Rn(n.dirtyFields, J) : Jt(n.dirtyFields, J, !0), Ce.dirtyFields = n.dirtyFields, ye = ye || u.dirtyFields && he !== !it;
    }
    if (Y) {
      const it = Me(n.touchedFields, J);
      it || (Jt(n.touchedFields, J, Y), Ce.touchedFields = n.touchedFields, ye = ye || u.touchedFields && it !== Y);
    }
    return ye && de && p.state.next(Ce), ye ? Ce : {};
  }, O = (J, X, Y, ae) => {
    const de = Me(n.errors, J), ye = u.isValid && jr(X) && n.isValid !== X;
    if (e.delayError && Y ? (c = b(() => w(J, Y)), c(e.delayError)) : (clearTimeout(d), c = null, Y ? Jt(n.errors, J, Y) : Rn(n.errors, J)), (Y ? !Os(de, Y) : de) || !ha(ae) || ye) {
      const he = {
        ...ae,
        ...ye && jr(X) ? { isValid: X } : {},
        errors: n.errors,
        name: J
      };
      n = {
        ...n,
        ...he
      }, p.state.next(he);
    }
  }, E = async (J) => {
    y(J, !0);
    const X = await t.resolver(s, t.context, bN(J || l.mount, r, t.criteriaMode, t.shouldUseNativeValidation));
    return y(J), X;
  }, T = async (J) => {
    const { errors: X } = await E(J);
    if (J)
      for (const Y of J) {
        const ae = Me(X, Y);
        ae ? Jt(n.errors, Y, ae) : Rn(n.errors, Y);
      }
    else
      n.errors = X;
    return X;
  }, I = async (J, X, Y = {
    valid: !0
  }) => {
    for (const ae in J) {
      const de = J[ae];
      if (de) {
        const { _f: ye, ...he } = de;
        if (ye) {
          const Ce = l.array.has(ye.name);
          y([ae], !0);
          const Ge = await If(de, s, g, t.shouldUseNativeValidation && !X, Ce);
          if (y([ae]), Ge[ye.name] && (Y.valid = !1, X))
            break;
          !X && (Me(Ge, ye.name) ? Ce ? SS(n.errors, Ge, ye.name) : Jt(n.errors, ye.name, Ge[ye.name]) : Rn(n.errors, ye.name));
        }
        he && await I(he, X, Y);
      }
    }
    return Y.valid;
  }, k = () => {
    for (const J of l.unMount) {
      const X = Me(r, J);
      X && (X._f.refs ? X._f.refs.every((Y) => !ym(Y)) : !ym(X._f.ref)) && Q(J);
    }
    l.unMount = /* @__PURE__ */ new Set();
  }, P = (J, X) => (J && X && Jt(s, J, X), !Os(L(), i)), D = (J, X, Y) => xS(J, l, {
    ...o.mount ? s : un(X) ? i : Br(J) ? { [J]: X } : X
  }, Y, X), F = (J) => Zc(Me(o.mount ? s : i, J, e.shouldUnregister ? Me(i, J, []) : [])), A = (J, X, Y = {}) => {
    const ae = Me(r, J);
    let de = X;
    if (ae) {
      const ye = ae._f;
      ye && (!ye.disabled && Jt(s, J, IS(X, ye)), de = hu(ye.ref) && la(X) ? "" : X, OS(ye.ref) ? [...ye.ref.options].forEach((he) => he.selected = de.includes(he.value)) : ye.refs ? Jc(ye.ref) ? ye.refs.length > 1 ? ye.refs.forEach((he) => (!he.defaultChecked || !he.disabled) && (he.checked = Array.isArray(de) ? !!de.find((Ce) => Ce === he.value) : de === he.value)) : ye.refs[0] && (ye.refs[0].checked = !!de) : ye.refs.forEach((he) => he.checked = he.value === de) : rg(ye.ref) ? ye.ref.value = "" : (ye.ref.value = de, ye.ref.type || p.values.next({
        name: J,
        values: { ...s }
      })));
    }
    (Y.shouldDirty || Y.shouldTouch) && _(J, de, Y.shouldTouch, Y.shouldDirty, !0), Y.shouldValidate && q(J);
  }, M = (J, X, Y) => {
    for (const ae in X) {
      const de = X[ae], ye = `${J}.${ae}`, he = Me(r, ye);
      (l.array.has(J) || !bu(de) || he && !he._f) && !bo(de) ? M(ye, de, Y) : A(ye, de, Y);
    }
  }, V = (J, X, Y = {}) => {
    const ae = Me(r, J), de = l.array.has(J), ye = Mn(X);
    Jt(s, J, ye), de ? (p.array.next({
      name: J,
      values: { ...s }
    }), (u.isDirty || u.dirtyFields) && Y.shouldDirty && p.state.next({
      name: J,
      dirtyFields: Sd(i, s),
      isDirty: P(J, ye)
    })) : ae && !ae._f && !la(ye) ? M(J, ye, Y) : A(J, ye, Y), Ef(J, l) && p.state.next({ ...n }), p.values.next({
      name: o.mount ? J : void 0,
      values: { ...s }
    });
  }, U = async (J) => {
    o.mount = !0;
    const X = J.target;
    let Y = X.name, ae = !0;
    const de = Me(r, Y), ye = () => X.type ? Cm(de._f) : fS(J), he = (Ce) => {
      ae = Number.isNaN(Ce) || Ce === Me(s, Y, Ce);
    };
    if (de) {
      let Ce, Ge;
      const it = ye(), qe = J.type === fu.BLUR || J.type === fu.FOCUS_OUT, kt = !vN(de._f) && !t.resolver && !Me(n.errors, Y) && !de._f.deps || yN(qe, Me(n.touchedFields, Y), n.isSubmitted, f, m), jt = Ef(Y, l, qe);
      Jt(s, Y, it), qe ? (de._f.onBlur && de._f.onBlur(J), c && c(0)) : de._f.onChange && de._f.onChange(J);
      const Xe = _(Y, it, qe, !1), It = !ha(Xe) || jt;
      if (!qe && p.values.next({
        name: Y,
        type: J.type,
        values: { ...s }
      }), kt)
        return u.isValid && v(), It && p.state.next({ name: Y, ...jt ? {} : Xe });
      if (!qe && jt && p.state.next({ ...n }), t.resolver) {
        const { errors: en } = await E([Y]);
        if (he(it), ae) {
          const qn = zv(n.errors, r, Y), Ra = zv(en, r, qn.name || Y);
          Ce = Ra.error, Y = Ra.name, Ge = ha(en);
        }
      } else
        y([Y], !0), Ce = (await If(de, s, g, t.shouldUseNativeValidation))[Y], y([Y]), he(it), ae && (Ce ? Ge = !1 : u.isValid && (Ge = await I(r, !0)));
      ae && (de._f.deps && q(de._f.deps), O(Y, Ge, Ce, Xe));
    }
  }, G = (J, X) => {
    if (Me(n.errors, X) && J.focus)
      return J.focus(), 1;
  }, q = async (J, X = {}) => {
    let Y, ae;
    const de = Ca(J);
    if (t.resolver) {
      const ye = await T(un(J) ? J : de);
      Y = ha(ye), ae = J ? !de.some((he) => Me(ye, he)) : Y;
    } else J ? (ae = (await Promise.all(de.map(async (ye) => {
      const he = Me(r, ye);
      return await I(he && he._f ? { [ye]: he } : he);
    }))).every(Boolean), !(!ae && !n.isValid) && v()) : ae = Y = await I(r);
    return p.state.next({
      ...!Br(J) || u.isValid && Y !== n.isValid ? {} : { name: J },
      ...t.resolver || !J ? { isValid: Y } : {},
      errors: n.errors
    }), X.shouldFocus && !ae && So(r, G, J ? de : l.mount), ae;
  }, L = (J) => {
    const X = {
      ...o.mount ? s : i
    };
    return un(J) ? X : Br(J) ? Me(X, J) : J.map((Y) => Me(X, Y));
  }, K = (J, X) => ({
    invalid: !!Me((X || n).errors, J),
    isDirty: !!Me((X || n).dirtyFields, J),
    error: Me((X || n).errors, J),
    isValidating: !!Me(n.validatingFields, J),
    isTouched: !!Me((X || n).touchedFields, J)
  }), B = (J) => {
    J && Ca(J).forEach((X) => Rn(n.errors, X)), p.state.next({
      errors: J ? n.errors : {}
    });
  }, j = (J, X, Y) => {
    const ae = (Me(r, J, { _f: {} })._f || {}).ref, de = Me(n.errors, J) || {}, { ref: ye, message: he, type: Ce, ...Ge } = de;
    Jt(n.errors, J, {
      ...Ge,
      ...X,
      ref: ae
    }), p.state.next({
      name: J,
      errors: n.errors,
      isValid: !1
    }), Y && Y.shouldFocus && ae && ae.focus && ae.focus();
  }, W = (J, X) => Gi(J) ? p.values.subscribe({
    next: (Y) => J(D(void 0, X), Y)
  }) : D(J, X, !0), Q = (J, X = {}) => {
    for (const Y of J ? Ca(J) : l.mount)
      l.mount.delete(Y), l.array.delete(Y), X.keepValue || (Rn(r, Y), Rn(s, Y)), !X.keepError && Rn(n.errors, Y), !X.keepDirty && Rn(n.dirtyFields, Y), !X.keepTouched && Rn(n.touchedFields, Y), !X.keepIsValidating && Rn(n.validatingFields, Y), !t.shouldUnregister && !X.keepDefaultValue && Rn(i, Y);
    p.values.next({
      values: { ...s }
    }), p.state.next({
      ...n,
      ...X.keepDirty ? { isDirty: P() } : {}
    }), !X.keepIsValid && v();
  }, te = ({ disabled: J, name: X, field: Y, fields: ae, value: de }) => {
    if (jr(J) && o.mount || J) {
      const ye = J ? void 0 : un(de) ? Cm(Y ? Y._f : Me(ae, X)._f) : de;
      Jt(s, X, ye), _(X, ye, !1, !1, !0);
    }
  }, ie = (J, X = {}) => {
    let Y = Me(r, J);
    const ae = jr(X.disabled);
    return Jt(r, J, {
      ...Y || {},
      _f: {
        ...Y && Y._f ? Y._f : { ref: { name: J } },
        name: J,
        mount: !0,
        ...X
      }
    }), l.mount.add(J), Y ? te({
      field: Y,
      disabled: X.disabled,
      name: J,
      value: X.value
    }) : S(J, !0, X.value), {
      ...ae ? { disabled: X.disabled } : {},
      ...t.progressive ? {
        required: !!X.required,
        min: Il(X.min),
        max: Il(X.max),
        minLength: Il(X.minLength),
        maxLength: Il(X.maxLength),
        pattern: Il(X.pattern)
      } : {},
      name: J,
      onChange: U,
      onBlur: U,
      ref: (de) => {
        if (de) {
          ie(J, X), Y = Me(r, J);
          const ye = un(de.value) && de.querySelectorAll && de.querySelectorAll("input,select,textarea")[0] || de, he = gN(ye), Ce = Y._f.refs || [];
          if (he ? Ce.find((Ge) => Ge === ye) : ye === Y._f.ref)
            return;
          Jt(r, J, {
            _f: {
              ...Y._f,
              ...he ? {
                refs: [
                  ...Ce.filter(ym),
                  ye,
                  ...Array.isArray(Me(i, J)) ? [{}] : []
                ],
                ref: { type: ye.type, name: J }
              } : { ref: ye }
            }
          }), S(J, !1, void 0, ye);
        } else
          Y = Me(r, J, {}), Y._f && (Y._f.mount = !1), (t.shouldUnregister || X.shouldUnregister) && !(hS(l.array, J) && o.action) && l.unMount.add(J);
      }
    };
  }, ce = () => t.shouldFocusError && So(r, G, l.mount), Z = (J) => {
    jr(J) && (p.state.next({ disabled: J }), So(r, (X, Y) => {
      const ae = Me(r, Y);
      ae && (X.disabled = ae._f.disabled || J, Array.isArray(ae._f.refs) && ae._f.refs.forEach((de) => {
        de.disabled = ae._f.disabled || J;
      }));
    }, 0, !1));
  }, me = (J, X) => async (Y) => {
    let ae;
    Y && (Y.preventDefault && Y.preventDefault(), Y.persist && Y.persist());
    let de = Mn(s);
    if (p.state.next({
      isSubmitting: !0
    }), t.resolver) {
      const { errors: ye, values: he } = await E();
      n.errors = ye, de = he;
    } else
      await I(r);
    if (Rn(n.errors, "root"), ha(n.errors)) {
      p.state.next({
        errors: {}
      });
      try {
        await J(de, Y);
      } catch (ye) {
        ae = ye;
      }
    } else
      X && await X({ ...n.errors }, Y), ce(), setTimeout(ce);
    if (p.state.next({
      isSubmitted: !0,
      isSubmitting: !1,
      isSubmitSuccessful: ha(n.errors) && !ae,
      submitCount: n.submitCount + 1,
      errors: n.errors
    }), ae)
      throw ae;
  }, ne = (J, X = {}) => {
    Me(r, J) && (un(X.defaultValue) ? V(J, Mn(Me(i, J))) : (V(J, X.defaultValue), Jt(i, J, Mn(X.defaultValue))), X.keepTouched || Rn(n.touchedFields, J), X.keepDirty || (Rn(n.dirtyFields, J), n.isDirty = X.defaultValue ? P(J, Mn(Me(i, J))) : P()), X.keepError || (Rn(n.errors, J), u.isValid && v()), p.state.next({ ...n }));
  }, Oe = (J, X = {}) => {
    const Y = J ? Mn(J) : i, ae = Mn(Y), de = ha(J), ye = de ? i : ae;
    if (X.keepDefaultValues || (i = Y), !X.keepValues) {
      if (X.keepDirtyValues)
        for (const he of l.mount)
          Me(n.dirtyFields, he) ? Jt(ye, he, Me(s, he)) : V(he, Me(ye, he));
      else {
        if (ng && un(J))
          for (const he of l.mount) {
            const Ce = Me(r, he);
            if (Ce && Ce._f) {
              const Ge = Array.isArray(Ce._f.refs) ? Ce._f.refs[0] : Ce._f.ref;
              if (hu(Ge)) {
                const it = Ge.closest("form");
                if (it) {
                  it.reset();
                  break;
                }
              }
            }
          }
        r = {};
      }
      s = e.shouldUnregister ? X.keepDefaultValues ? Mn(i) : {} : Mn(ye), p.array.next({
        values: { ...ye }
      }), p.values.next({
        values: { ...ye }
      });
    }
    l = {
      mount: X.keepDirtyValues ? l.mount : /* @__PURE__ */ new Set(),
      unMount: /* @__PURE__ */ new Set(),
      array: /* @__PURE__ */ new Set(),
      watch: /* @__PURE__ */ new Set(),
      watchAll: !1,
      focus: ""
    }, o.mount = !u.isValid || !!X.keepIsValid || !!X.keepDirtyValues, o.watch = !!e.shouldUnregister, p.state.next({
      submitCount: X.keepSubmitCount ? n.submitCount : 0,
      isDirty: de ? !1 : X.keepDirty ? n.isDirty : !!(X.keepDefaultValues && !Os(J, i)),
      isSubmitted: X.keepIsSubmitted ? n.isSubmitted : !1,
      dirtyFields: de ? {} : X.keepDirtyValues ? X.keepDefaultValues && s ? Sd(i, s) : n.dirtyFields : X.keepDefaultValues && J ? Sd(i, J) : X.keepDirty ? n.dirtyFields : {},
      touchedFields: X.keepTouched ? n.touchedFields : {},
      errors: X.keepErrors ? n.errors : {},
      isSubmitSuccessful: X.keepIsSubmitSuccessful ? n.isSubmitSuccessful : !1,
      isSubmitting: !1
    });
  }, Pe = (J, X) => Oe(Gi(J) ? J(s) : J, X);
  return {
    control: {
      register: ie,
      unregister: Q,
      getFieldState: K,
      handleSubmit: me,
      setError: j,
      _executeSchema: E,
      _getWatch: D,
      _getDirty: P,
      _updateValid: v,
      _removeUnmounted: k,
      _updateFieldArray: x,
      _updateDisabledField: te,
      _getFieldArray: F,
      _reset: Oe,
      _resetDefaultValues: () => Gi(t.defaultValues) && t.defaultValues().then((J) => {
        Pe(J, t.resetOptions), p.state.next({
          isLoading: !1
        });
      }),
      _updateFormState: (J) => {
        n = {
          ...n,
          ...J
        };
      },
      _disableForm: Z,
      _subjects: p,
      _proxyFormState: u,
      _setErrors: R,
      get _fields() {
        return r;
      },
      get _formValues() {
        return s;
      },
      get _state() {
        return o;
      },
      set _state(J) {
        o = J;
      },
      get _defaultValues() {
        return i;
      },
      get _names() {
        return l;
      },
      set _names(J) {
        l = J;
      },
      get _formState() {
        return n;
      },
      set _formState(J) {
        n = J;
      },
      get _options() {
        return t;
      },
      set _options(J) {
        t = {
          ...t,
          ...J
        };
      }
    },
    trigger: q,
    register: ie,
    handleSubmit: me,
    watch: W,
    setValue: V,
    getValues: L,
    reset: Pe,
    resetField: ne,
    clearErrors: B,
    unregister: Q,
    setError: j,
    setFocus: (J, X = {}) => {
      const Y = Me(r, J), ae = Y && Y._f;
      if (ae) {
        const de = ae.refs ? ae.refs[0] : ae.ref;
        de.focus && (de.focus(), X.shouldSelect && de.select());
      }
    },
    getFieldState: K
  };
}
function Ue(e = {}) {
  const t = re.useRef(), n = re.useRef(), [r, i] = re.useState({
    isDirty: !1,
    isValidating: !1,
    isLoading: Gi(e.defaultValues),
    isSubmitted: !1,
    isSubmitting: !1,
    isSubmitSuccessful: !1,
    isValid: !1,
    submitCount: 0,
    dirtyFields: {},
    touchedFields: {},
    validatingFields: {},
    errors: e.errors || {},
    disabled: e.disabled || !1,
    defaultValues: Gi(e.defaultValues) ? void 0 : e.defaultValues
  });
  t.current || (t.current = {
    ...SN(e),
    formState: r
  });
  const s = t.current.control;
  return s._options = e, tp({
    subject: s._subjects.state,
    next: (o) => {
      yS(o, s._proxyFormState, s._updateFormState, !0) && i({ ...s._formState });
    }
  }), re.useEffect(() => s._disableForm(e.disabled), [s, e.disabled]), re.useEffect(() => {
    if (s._proxyFormState.isDirty) {
      const o = s._getDirty();
      o !== r.isDirty && s._subjects.state.next({
        isDirty: o
      });
    }
  }, [s, r.isDirty]), re.useEffect(() => {
    e.values && !Os(e.values, n.current) ? (s._reset(e.values, s._options.resetOptions), n.current = e.values, i((o) => ({ ...o }))) : s._resetDefaultValues();
  }, [e.values, s]), re.useEffect(() => {
    e.errors && s._setErrors(e.errors);
  }, [e.errors, s]), re.useEffect(() => {
    s._state.mount || (s._updateValid(), s._state.mount = !0), s._state.watch && (s._state.watch = !1, s._subjects.state.next({ ...s._formState })), s._removeUnmounted();
  }), re.useEffect(() => {
    e.shouldUnregister && s._subjects.values.next({
      values: s._getWatch()
    });
  }, [e.shouldUnregister, s]), t.current.formState = vS(r, s), t.current;
}
var PS = typeof global == "object" && global && global.Object === Object && global, wN = typeof self == "object" && self && self.Object === Object && self, Tr = PS || wN || Function("return this")(), ir = Tr.Symbol, _S = Object.prototype, kN = _S.hasOwnProperty, ON = _S.toString, Pl = ir ? ir.toStringTag : void 0;
function TN(e) {
  var t = kN.call(e, Pl), n = e[Pl];
  try {
    e[Pl] = void 0;
    var r = !0;
  } catch {
  }
  var i = ON.call(e);
  return r && (t ? e[Pl] = n : delete e[Pl]), i;
}
var EN = Object.prototype, IN = EN.toString;
function PN(e) {
  return IN.call(e);
}
var _N = "[object Null]", RN = "[object Undefined]", qv = ir ? ir.toStringTag : void 0;
function Gs(e) {
  return e == null ? e === void 0 ? RN : _N : qv && qv in Object(e) ? TN(e) : PN(e);
}
function Jr(e) {
  return e != null && typeof e == "object";
}
var AN = "[object Symbol]";
function Fo(e) {
  return typeof e == "symbol" || Jr(e) && Gs(e) == AN;
}
function Ci(e, t) {
  for (var n = -1, r = e == null ? 0 : e.length, i = Array(r); ++n < r; )
    i[n] = t(e[n], n, e);
  return i;
}
var Ia = Array.isArray, LN = 1 / 0, Gv = ir ? ir.prototype : void 0, Wv = Gv ? Gv.toString : void 0;
function RS(e) {
  if (typeof e == "string")
    return e;
  if (Ia(e))
    return Ci(e, RS) + "";
  if (Fo(e))
    return Wv ? Wv.call(e) : "";
  var t = e + "";
  return t == "0" && 1 / e == -LN ? "-0" : t;
}
var NN = /\s/;
function DN(e) {
  for (var t = e.length; t-- && NN.test(e.charAt(t)); )
    ;
  return t;
}
var MN = /^\s+/;
function FN(e) {
  return e && e.slice(0, DN(e) + 1).replace(MN, "");
}
function sr(e) {
  var t = typeof e;
  return e != null && (t == "object" || t == "function");
}
var Xv = NaN, $N = /^[-+]0x[0-9a-f]+$/i, jN = /^0b[01]+$/i, BN = /^0o[0-7]+$/i, UN = parseInt;
function Yv(e) {
  if (typeof e == "number")
    return e;
  if (Fo(e))
    return Xv;
  if (sr(e)) {
    var t = typeof e.valueOf == "function" ? e.valueOf() : e;
    e = sr(t) ? t + "" : t;
  }
  if (typeof e != "string")
    return e === 0 ? e : +e;
  e = FN(e);
  var n = jN.test(e);
  return n || BN.test(e) ? UN(e.slice(2), n ? 2 : 8) : $N.test(e) ? Xv : +e;
}
function np(e) {
  return e;
}
var VN = "[object AsyncFunction]", KN = "[object Function]", HN = "[object GeneratorFunction]", zN = "[object Proxy]";
function AS(e) {
  if (!sr(e))
    return !1;
  var t = Gs(e);
  return t == KN || t == HN || t == VN || t == zN;
}
var xm = Tr["__core-js_shared__"], Jv = function() {
  var e = /[^.]+$/.exec(xm && xm.keys && xm.keys.IE_PROTO || "");
  return e ? "Symbol(src)_1." + e : "";
}();
function qN(e) {
  return !!Jv && Jv in e;
}
var GN = Function.prototype, WN = GN.toString;
function Ws(e) {
  if (e != null) {
    try {
      return WN.call(e);
    } catch {
    }
    try {
      return e + "";
    } catch {
    }
  }
  return "";
}
var XN = /[\\^$.*+?()[\]{}|]/g, YN = /^\[object .+?Constructor\]$/, JN = Function.prototype, ZN = Object.prototype, QN = JN.toString, e5 = ZN.hasOwnProperty, t5 = RegExp(
  "^" + QN.call(e5).replace(XN, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
);
function n5(e) {
  if (!sr(e) || qN(e))
    return !1;
  var t = AS(e) ? t5 : YN;
  return t.test(Ws(e));
}
function a5(e, t) {
  return e?.[t];
}
function Xs(e, t) {
  var n = a5(e, t);
  return n5(n) ? n : void 0;
}
var Pf = Xs(Tr, "WeakMap"), Zv = Object.create, r5 = /* @__PURE__ */ function() {
  function e() {
  }
  return function(t) {
    if (!sr(t))
      return {};
    if (Zv)
      return Zv(t);
    e.prototype = t;
    var n = new e();
    return e.prototype = void 0, n;
  };
}();
function i5(e, t, n) {
  switch (n.length) {
    case 0:
      return e.call(t);
    case 1:
      return e.call(t, n[0]);
    case 2:
      return e.call(t, n[0], n[1]);
    case 3:
      return e.call(t, n[0], n[1], n[2]);
  }
  return e.apply(t, n);
}
function s5() {
}
function o5(e, t) {
  var n = -1, r = e.length;
  for (t || (t = Array(r)); ++n < r; )
    t[n] = e[n];
  return t;
}
var l5 = 800, c5 = 16, d5 = Date.now;
function u5(e) {
  var t = 0, n = 0;
  return function() {
    var r = d5(), i = c5 - (r - n);
    if (n = r, i > 0) {
      if (++t >= l5)
        return arguments[0];
    } else
      t = 0;
    return e.apply(void 0, arguments);
  };
}
function p5(e) {
  return function() {
    return e;
  };
}
var yu = function() {
  try {
    var e = Xs(Object, "defineProperty");
    return e({}, "", {}), e;
  } catch {
  }
}(), m5 = yu ? function(e, t) {
  return yu(e, "toString", {
    configurable: !0,
    enumerable: !1,
    value: p5(t),
    writable: !0
  });
} : np, LS = u5(m5);
function f5(e, t) {
  for (var n = -1, r = e == null ? 0 : e.length; ++n < r && t(e[n], n, e) !== !1; )
    ;
  return e;
}
function h5(e, t, n, r) {
  for (var i = e.length, s = n + -1; ++s < i; )
    if (t(e[s], s, e))
      return s;
  return -1;
}
function g5(e) {
  return e !== e;
}
function b5(e, t, n) {
  for (var r = n - 1, i = e.length; ++r < i; )
    if (e[r] === t)
      return r;
  return -1;
}
function v5(e, t, n) {
  return t === t ? b5(e, t, n) : h5(e, g5, n);
}
function og(e, t) {
  var n = e == null ? 0 : e.length;
  return !!n && v5(e, t, 0) > -1;
}
var y5 = 9007199254740991, C5 = /^(?:0|[1-9]\d*)$/;
function ap(e, t) {
  var n = typeof e;
  return t = t ?? y5, !!t && (n == "number" || n != "symbol" && C5.test(e)) && e > -1 && e % 1 == 0 && e < t;
}
function lg(e, t, n) {
  t == "__proto__" && yu ? yu(e, t, {
    configurable: !0,
    enumerable: !0,
    value: n,
    writable: !0
  }) : e[t] = n;
}
function rp(e, t) {
  return e === t || e !== e && t !== t;
}
var x5 = Object.prototype, S5 = x5.hasOwnProperty;
function cg(e, t, n) {
  var r = e[t];
  (!(S5.call(e, t) && rp(r, n)) || n === void 0 && !(t in e)) && lg(e, t, n);
}
function Qc(e, t, n, r) {
  var i = !n;
  n || (n = {});
  for (var s = -1, o = t.length; ++s < o; ) {
    var l = t[s], c = void 0;
    c === void 0 && (c = e[l]), i ? lg(n, l, c) : cg(n, l, c);
  }
  return n;
}
var Qv = Math.max;
function NS(e, t, n) {
  return t = Qv(t === void 0 ? e.length - 1 : t, 0), function() {
    for (var r = arguments, i = -1, s = Qv(r.length - t, 0), o = Array(s); ++i < s; )
      o[i] = r[t + i];
    i = -1;
    for (var l = Array(t + 1); ++i < t; )
      l[i] = r[i];
    return l[t] = n(o), i5(e, this, l);
  };
}
function ip(e, t) {
  return LS(NS(e, t, np), e + "");
}
var w5 = 9007199254740991;
function dg(e) {
  return typeof e == "number" && e > -1 && e % 1 == 0 && e <= w5;
}
function Ys(e) {
  return e != null && dg(e.length) && !AS(e);
}
function ey(e, t, n) {
  if (!sr(n))
    return !1;
  var r = typeof t;
  return (r == "number" ? Ys(n) && ap(t, n.length) : r == "string" && t in n) ? rp(n[t], e) : !1;
}
var k5 = Object.prototype;
function sp(e) {
  var t = e && e.constructor, n = typeof t == "function" && t.prototype || k5;
  return e === n;
}
function O5(e, t) {
  for (var n = -1, r = Array(e); ++n < e; )
    r[n] = t(n);
  return r;
}
var T5 = "[object Arguments]";
function ty(e) {
  return Jr(e) && Gs(e) == T5;
}
var DS = Object.prototype, E5 = DS.hasOwnProperty, I5 = DS.propertyIsEnumerable, op = ty(/* @__PURE__ */ function() {
  return arguments;
}()) ? ty : function(e) {
  return Jr(e) && E5.call(e, "callee") && !I5.call(e, "callee");
};
function P5() {
  return !1;
}
var MS = typeof exports == "object" && exports && !exports.nodeType && exports, ny = MS && typeof module == "object" && module && !module.nodeType && module, _5 = ny && ny.exports === MS, ay = _5 ? Tr.Buffer : void 0, R5 = ay ? ay.isBuffer : void 0, Cc = R5 || P5, A5 = "[object Arguments]", L5 = "[object Array]", N5 = "[object Boolean]", D5 = "[object Date]", M5 = "[object Error]", F5 = "[object Function]", $5 = "[object Map]", j5 = "[object Number]", B5 = "[object Object]", U5 = "[object RegExp]", V5 = "[object Set]", K5 = "[object String]", H5 = "[object WeakMap]", z5 = "[object ArrayBuffer]", q5 = "[object DataView]", G5 = "[object Float32Array]", W5 = "[object Float64Array]", X5 = "[object Int8Array]", Y5 = "[object Int16Array]", J5 = "[object Int32Array]", Z5 = "[object Uint8Array]", Q5 = "[object Uint8ClampedArray]", eD = "[object Uint16Array]", tD = "[object Uint32Array]", fn = {};
fn[G5] = fn[W5] = fn[X5] = fn[Y5] = fn[J5] = fn[Z5] = fn[Q5] = fn[eD] = fn[tD] = !0;
fn[A5] = fn[L5] = fn[z5] = fn[N5] = fn[q5] = fn[D5] = fn[M5] = fn[F5] = fn[$5] = fn[j5] = fn[B5] = fn[U5] = fn[V5] = fn[K5] = fn[H5] = !1;
function nD(e) {
  return Jr(e) && dg(e.length) && !!fn[Gs(e)];
}
function il(e) {
  return function(t) {
    return e(t);
  };
}
var FS = typeof exports == "object" && exports && !exports.nodeType && exports, Jl = FS && typeof module == "object" && module && !module.nodeType && module, aD = Jl && Jl.exports === FS, Sm = aD && PS.process, $o = function() {
  try {
    var e = Jl && Jl.require && Jl.require("util").types;
    return e || Sm && Sm.binding && Sm.binding("util");
  } catch {
  }
}(), ry = $o && $o.isTypedArray, ug = ry ? il(ry) : nD, rD = Object.prototype, iD = rD.hasOwnProperty;
function $S(e, t) {
  var n = Ia(e), r = !n && op(e), i = !n && !r && Cc(e), s = !n && !r && !i && ug(e), o = n || r || i || s, l = o ? O5(e.length, String) : [], c = l.length;
  for (var d in e)
    (t || iD.call(e, d)) && !(o && // Safari 9 has enumerable `arguments.length` in strict mode.
    (d == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
    i && (d == "offset" || d == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
    s && (d == "buffer" || d == "byteLength" || d == "byteOffset") || // Skip index properties.
    ap(d, c))) && l.push(d);
  return l;
}
function jS(e, t) {
  return function(n) {
    return e(t(n));
  };
}
var sD = jS(Object.keys, Object), oD = Object.prototype, lD = oD.hasOwnProperty;
function BS(e) {
  if (!sp(e))
    return sD(e);
  var t = [];
  for (var n in Object(e))
    lD.call(e, n) && n != "constructor" && t.push(n);
  return t;
}
function ed(e) {
  return Ys(e) ? $S(e) : BS(e);
}
function cD(e) {
  var t = [];
  if (e != null)
    for (var n in Object(e))
      t.push(n);
  return t;
}
var dD = Object.prototype, uD = dD.hasOwnProperty;
function pD(e) {
  if (!sr(e))
    return cD(e);
  var t = sp(e), n = [];
  for (var r in e)
    r == "constructor" && (t || !uD.call(e, r)) || n.push(r);
  return n;
}
function pg(e) {
  return Ys(e) ? $S(e, !0) : pD(e);
}
var mD = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, fD = /^\w*$/;
function mg(e, t) {
  if (Ia(e))
    return !1;
  var n = typeof e;
  return n == "number" || n == "symbol" || n == "boolean" || e == null || Fo(e) ? !0 : fD.test(e) || !mD.test(e) || t != null && e in Object(t);
}
var xc = Xs(Object, "create");
function hD() {
  this.__data__ = xc ? xc(null) : {}, this.size = 0;
}
function gD(e) {
  var t = this.has(e) && delete this.__data__[e];
  return this.size -= t ? 1 : 0, t;
}
var bD = "__lodash_hash_undefined__", vD = Object.prototype, yD = vD.hasOwnProperty;
function CD(e) {
  var t = this.__data__;
  if (xc) {
    var n = t[e];
    return n === bD ? void 0 : n;
  }
  return yD.call(t, e) ? t[e] : void 0;
}
var xD = Object.prototype, SD = xD.hasOwnProperty;
function wD(e) {
  var t = this.__data__;
  return xc ? t[e] !== void 0 : SD.call(t, e);
}
var kD = "__lodash_hash_undefined__";
function OD(e, t) {
  var n = this.__data__;
  return this.size += this.has(e) ? 0 : 1, n[e] = xc && t === void 0 ? kD : t, this;
}
function Ds(e) {
  var t = -1, n = e == null ? 0 : e.length;
  for (this.clear(); ++t < n; ) {
    var r = e[t];
    this.set(r[0], r[1]);
  }
}
Ds.prototype.clear = hD;
Ds.prototype.delete = gD;
Ds.prototype.get = CD;
Ds.prototype.has = wD;
Ds.prototype.set = OD;
function TD() {
  this.__data__ = [], this.size = 0;
}
function lp(e, t) {
  for (var n = e.length; n--; )
    if (rp(e[n][0], t))
      return n;
  return -1;
}
var ED = Array.prototype, ID = ED.splice;
function PD(e) {
  var t = this.__data__, n = lp(t, e);
  if (n < 0)
    return !1;
  var r = t.length - 1;
  return n == r ? t.pop() : ID.call(t, n, 1), --this.size, !0;
}
function _D(e) {
  var t = this.__data__, n = lp(t, e);
  return n < 0 ? void 0 : t[n][1];
}
function RD(e) {
  return lp(this.__data__, e) > -1;
}
function AD(e, t) {
  var n = this.__data__, r = lp(n, e);
  return r < 0 ? (++this.size, n.push([e, t])) : n[r][1] = t, this;
}
function Di(e) {
  var t = -1, n = e == null ? 0 : e.length;
  for (this.clear(); ++t < n; ) {
    var r = e[t];
    this.set(r[0], r[1]);
  }
}
Di.prototype.clear = TD;
Di.prototype.delete = PD;
Di.prototype.get = _D;
Di.prototype.has = RD;
Di.prototype.set = AD;
var Sc = Xs(Tr, "Map");
function LD() {
  this.size = 0, this.__data__ = {
    hash: new Ds(),
    map: new (Sc || Di)(),
    string: new Ds()
  };
}
function ND(e) {
  var t = typeof e;
  return t == "string" || t == "number" || t == "symbol" || t == "boolean" ? e !== "__proto__" : e === null;
}
function cp(e, t) {
  var n = e.__data__;
  return ND(t) ? n[typeof t == "string" ? "string" : "hash"] : n.map;
}
function DD(e) {
  var t = cp(this, e).delete(e);
  return this.size -= t ? 1 : 0, t;
}
function MD(e) {
  return cp(this, e).get(e);
}
function FD(e) {
  return cp(this, e).has(e);
}
function $D(e, t) {
  var n = cp(this, e), r = n.size;
  return n.set(e, t), this.size += n.size == r ? 0 : 1, this;
}
function Mi(e) {
  var t = -1, n = e == null ? 0 : e.length;
  for (this.clear(); ++t < n; ) {
    var r = e[t];
    this.set(r[0], r[1]);
  }
}
Mi.prototype.clear = LD;
Mi.prototype.delete = DD;
Mi.prototype.get = MD;
Mi.prototype.has = FD;
Mi.prototype.set = $D;
var jD = "Expected a function";
function fg(e, t) {
  if (typeof e != "function" || t != null && typeof t != "function")
    throw new TypeError(jD);
  var n = function() {
    var r = arguments, i = t ? t.apply(this, r) : r[0], s = n.cache;
    if (s.has(i))
      return s.get(i);
    var o = e.apply(this, r);
    return n.cache = s.set(i, o) || s, o;
  };
  return n.cache = new (fg.Cache || Mi)(), n;
}
fg.Cache = Mi;
var BD = 500;
function UD(e) {
  var t = fg(e, function(r) {
    return n.size === BD && n.clear(), r;
  }), n = t.cache;
  return t;
}
var VD = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g, KD = /\\(\\)?/g, HD = UD(function(e) {
  var t = [];
  return e.charCodeAt(0) === 46 && t.push(""), e.replace(VD, function(n, r, i, s) {
    t.push(i ? s.replace(KD, "$1") : r || n);
  }), t;
});
function td(e) {
  return e == null ? "" : RS(e);
}
function sl(e, t) {
  return Ia(e) ? e : mg(e, t) ? [e] : HD(td(e));
}
var zD = 1 / 0;
function ol(e) {
  if (typeof e == "string" || Fo(e))
    return e;
  var t = e + "";
  return t == "0" && 1 / e == -zD ? "-0" : t;
}
function nd(e, t) {
  t = sl(t, e);
  for (var n = 0, r = t.length; e != null && n < r; )
    e = e[ol(t[n++])];
  return n && n == r ? e : void 0;
}
function Wn(e, t, n) {
  var r = e == null ? void 0 : nd(e, t);
  return r === void 0 ? n : r;
}
function hg(e, t) {
  for (var n = -1, r = t.length, i = e.length; ++n < r; )
    e[i + n] = t[n];
  return e;
}
var iy = ir ? ir.isConcatSpreadable : void 0;
function qD(e) {
  return Ia(e) || op(e) || !!(iy && e && e[iy]);
}
function dp(e, t, n, r, i) {
  var s = -1, o = e.length;
  for (n || (n = qD), i || (i = []); ++s < o; ) {
    var l = e[s];
    n(l) ? hg(i, l) : r || (i[i.length] = l);
  }
  return i;
}
function GD(e) {
  var t = e == null ? 0 : e.length;
  return t ? dp(e) : [];
}
function WD(e) {
  return LS(NS(e, void 0, GD), e + "");
}
var gg = jS(Object.getPrototypeOf, Object), XD = "[object Object]", YD = Function.prototype, JD = Object.prototype, US = YD.toString, ZD = JD.hasOwnProperty, QD = US.call(Object);
function e3(e) {
  if (!Jr(e) || Gs(e) != XD)
    return !1;
  var t = gg(e);
  if (t === null)
    return !0;
  var n = ZD.call(t, "constructor") && t.constructor;
  return typeof n == "function" && n instanceof n && US.call(n) == QD;
}
function VS(e, t, n) {
  var r = -1, i = e.length;
  t < 0 && (t = -t > i ? 0 : i + t), n = n > i ? i : n, n < 0 && (n += i), i = t > n ? 0 : n - t >>> 0, t >>>= 0;
  for (var s = Array(i); ++r < i; )
    s[r] = e[r + t];
  return s;
}
function t3(e, t, n) {
  var r = e.length;
  return n = n === void 0 ? r : n, !t && n >= r ? e : VS(e, t, n);
}
var n3 = "\\ud800-\\udfff", a3 = "\\u0300-\\u036f", r3 = "\\ufe20-\\ufe2f", i3 = "\\u20d0-\\u20ff", s3 = a3 + r3 + i3, o3 = "\\ufe0e\\ufe0f", l3 = "\\u200d", c3 = RegExp("[" + l3 + n3 + s3 + o3 + "]");
function KS(e) {
  return c3.test(e);
}
function d3(e) {
  return e.split("");
}
var HS = "\\ud800-\\udfff", u3 = "\\u0300-\\u036f", p3 = "\\ufe20-\\ufe2f", m3 = "\\u20d0-\\u20ff", f3 = u3 + p3 + m3, h3 = "\\ufe0e\\ufe0f", g3 = "[" + HS + "]", _f = "[" + f3 + "]", Rf = "\\ud83c[\\udffb-\\udfff]", b3 = "(?:" + _f + "|" + Rf + ")", zS = "[^" + HS + "]", qS = "(?:\\ud83c[\\udde6-\\uddff]){2}", GS = "[\\ud800-\\udbff][\\udc00-\\udfff]", v3 = "\\u200d", WS = b3 + "?", XS = "[" + h3 + "]?", y3 = "(?:" + v3 + "(?:" + [zS, qS, GS].join("|") + ")" + XS + WS + ")*", C3 = XS + WS + y3, x3 = "(?:" + [zS + _f + "?", _f, qS, GS, g3].join("|") + ")", S3 = RegExp(Rf + "(?=" + Rf + ")|" + x3 + C3, "g");
function w3(e) {
  return e.match(S3) || [];
}
function k3(e) {
  return KS(e) ? w3(e) : d3(e);
}
function O3(e) {
  return function(t) {
    t = td(t);
    var n = KS(t) ? k3(t) : void 0, r = n ? n[0] : t.charAt(0), i = n ? t3(n, 1).join("") : t.slice(1);
    return r[e]() + i;
  };
}
var T3 = O3("toUpperCase");
function Ts(e) {
  return T3(td(e).toLowerCase());
}
function E3(e, t, n, r) {
  for (var i = -1, s = e == null ? 0 : e.length; ++i < s; )
    n = t(n, e[i], i, e);
  return n;
}
function I3(e) {
  return function(t) {
    return e?.[t];
  };
}
var P3 = {
  // Latin-1 Supplement block.
  À: "A",
  Á: "A",
  Â: "A",
  Ã: "A",
  Ä: "A",
  Å: "A",
  à: "a",
  á: "a",
  â: "a",
  ã: "a",
  ä: "a",
  å: "a",
  Ç: "C",
  ç: "c",
  Ð: "D",
  ð: "d",
  È: "E",
  É: "E",
  Ê: "E",
  Ë: "E",
  è: "e",
  é: "e",
  ê: "e",
  ë: "e",
  Ì: "I",
  Í: "I",
  Î: "I",
  Ï: "I",
  ì: "i",
  í: "i",
  î: "i",
  ï: "i",
  Ñ: "N",
  ñ: "n",
  Ò: "O",
  Ó: "O",
  Ô: "O",
  Õ: "O",
  Ö: "O",
  Ø: "O",
  ò: "o",
  ó: "o",
  ô: "o",
  õ: "o",
  ö: "o",
  ø: "o",
  Ù: "U",
  Ú: "U",
  Û: "U",
  Ü: "U",
  ù: "u",
  ú: "u",
  û: "u",
  ü: "u",
  Ý: "Y",
  ý: "y",
  ÿ: "y",
  Æ: "Ae",
  æ: "ae",
  Þ: "Th",
  þ: "th",
  ß: "ss",
  // Latin Extended-A block.
  Ā: "A",
  Ă: "A",
  Ą: "A",
  ā: "a",
  ă: "a",
  ą: "a",
  Ć: "C",
  Ĉ: "C",
  Ċ: "C",
  Č: "C",
  ć: "c",
  ĉ: "c",
  ċ: "c",
  č: "c",
  Ď: "D",
  Đ: "D",
  ď: "d",
  đ: "d",
  Ē: "E",
  Ĕ: "E",
  Ė: "E",
  Ę: "E",
  Ě: "E",
  ē: "e",
  ĕ: "e",
  ė: "e",
  ę: "e",
  ě: "e",
  Ĝ: "G",
  Ğ: "G",
  Ġ: "G",
  Ģ: "G",
  ĝ: "g",
  ğ: "g",
  ġ: "g",
  ģ: "g",
  Ĥ: "H",
  Ħ: "H",
  ĥ: "h",
  ħ: "h",
  Ĩ: "I",
  Ī: "I",
  Ĭ: "I",
  Į: "I",
  İ: "I",
  ĩ: "i",
  ī: "i",
  ĭ: "i",
  į: "i",
  ı: "i",
  Ĵ: "J",
  ĵ: "j",
  Ķ: "K",
  ķ: "k",
  ĸ: "k",
  Ĺ: "L",
  Ļ: "L",
  Ľ: "L",
  Ŀ: "L",
  Ł: "L",
  ĺ: "l",
  ļ: "l",
  ľ: "l",
  ŀ: "l",
  ł: "l",
  Ń: "N",
  Ņ: "N",
  Ň: "N",
  Ŋ: "N",
  ń: "n",
  ņ: "n",
  ň: "n",
  ŋ: "n",
  Ō: "O",
  Ŏ: "O",
  Ő: "O",
  ō: "o",
  ŏ: "o",
  ő: "o",
  Ŕ: "R",
  Ŗ: "R",
  Ř: "R",
  ŕ: "r",
  ŗ: "r",
  ř: "r",
  Ś: "S",
  Ŝ: "S",
  Ş: "S",
  Š: "S",
  ś: "s",
  ŝ: "s",
  ş: "s",
  š: "s",
  Ţ: "T",
  Ť: "T",
  Ŧ: "T",
  ţ: "t",
  ť: "t",
  ŧ: "t",
  Ũ: "U",
  Ū: "U",
  Ŭ: "U",
  Ů: "U",
  Ű: "U",
  Ų: "U",
  ũ: "u",
  ū: "u",
  ŭ: "u",
  ů: "u",
  ű: "u",
  ų: "u",
  Ŵ: "W",
  ŵ: "w",
  Ŷ: "Y",
  ŷ: "y",
  Ÿ: "Y",
  Ź: "Z",
  Ż: "Z",
  Ž: "Z",
  ź: "z",
  ż: "z",
  ž: "z",
  Ĳ: "IJ",
  ĳ: "ij",
  Œ: "Oe",
  œ: "oe",
  ŉ: "'n",
  ſ: "s"
}, _3 = I3(P3), R3 = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g, A3 = "\\u0300-\\u036f", L3 = "\\ufe20-\\ufe2f", N3 = "\\u20d0-\\u20ff", D3 = A3 + L3 + N3, M3 = "[" + D3 + "]", F3 = RegExp(M3, "g");
function $3(e) {
  return e = td(e), e && e.replace(R3, _3).replace(F3, "");
}
var j3 = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
function B3(e) {
  return e.match(j3) || [];
}
var U3 = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
function V3(e) {
  return U3.test(e);
}
var YS = "\\ud800-\\udfff", K3 = "\\u0300-\\u036f", H3 = "\\ufe20-\\ufe2f", z3 = "\\u20d0-\\u20ff", q3 = K3 + H3 + z3, JS = "\\u2700-\\u27bf", ZS = "a-z\\xdf-\\xf6\\xf8-\\xff", G3 = "\\xac\\xb1\\xd7\\xf7", W3 = "\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf", X3 = "\\u2000-\\u206f", Y3 = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000", QS = "A-Z\\xc0-\\xd6\\xd8-\\xde", J3 = "\\ufe0e\\ufe0f", ew = G3 + W3 + X3 + Y3, tw = "['’]", sy = "[" + ew + "]", Z3 = "[" + q3 + "]", nw = "\\d+", Q3 = "[" + JS + "]", aw = "[" + ZS + "]", rw = "[^" + YS + ew + nw + JS + ZS + QS + "]", e4 = "\\ud83c[\\udffb-\\udfff]", t4 = "(?:" + Z3 + "|" + e4 + ")", n4 = "[^" + YS + "]", iw = "(?:\\ud83c[\\udde6-\\uddff]){2}", sw = "[\\ud800-\\udbff][\\udc00-\\udfff]", ho = "[" + QS + "]", a4 = "\\u200d", oy = "(?:" + aw + "|" + rw + ")", r4 = "(?:" + ho + "|" + rw + ")", ly = "(?:" + tw + "(?:d|ll|m|re|s|t|ve))?", cy = "(?:" + tw + "(?:D|LL|M|RE|S|T|VE))?", ow = t4 + "?", lw = "[" + J3 + "]?", i4 = "(?:" + a4 + "(?:" + [n4, iw, sw].join("|") + ")" + lw + ow + ")*", s4 = "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])", o4 = "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])", l4 = lw + ow + i4, c4 = "(?:" + [Q3, iw, sw].join("|") + ")" + l4, d4 = RegExp([
  ho + "?" + aw + "+" + ly + "(?=" + [sy, ho, "$"].join("|") + ")",
  r4 + "+" + cy + "(?=" + [sy, ho + oy, "$"].join("|") + ")",
  ho + "?" + oy + "+" + ly,
  ho + "+" + cy,
  o4,
  s4,
  nw,
  c4
].join("|"), "g");
function u4(e) {
  return e.match(d4) || [];
}
function p4(e, t, n) {
  return e = td(e), t = t, t === void 0 ? V3(e) ? u4(e) : B3(e) : e.match(t) || [];
}
var m4 = "['’]", f4 = RegExp(m4, "g");
function h4(e) {
  return function(t) {
    return E3(p4($3(t).replace(f4, "")), e, "");
  };
}
var Af = h4(function(e, t, n) {
  return t = t.toLowerCase(), e + (n ? Ts(t) : t);
});
function g4() {
  this.__data__ = new Di(), this.size = 0;
}
function b4(e) {
  var t = this.__data__, n = t.delete(e);
  return this.size = t.size, n;
}
function v4(e) {
  return this.__data__.get(e);
}
function y4(e) {
  return this.__data__.has(e);
}
var C4 = 200;
function x4(e, t) {
  var n = this.__data__;
  if (n instanceof Di) {
    var r = n.__data__;
    if (!Sc || r.length < C4 - 1)
      return r.push([e, t]), this.size = ++n.size, this;
    n = this.__data__ = new Mi(r);
  }
  return n.set(e, t), this.size = n.size, this;
}
function Hr(e) {
  var t = this.__data__ = new Di(e);
  this.size = t.size;
}
Hr.prototype.clear = g4;
Hr.prototype.delete = b4;
Hr.prototype.get = v4;
Hr.prototype.has = y4;
Hr.prototype.set = x4;
function S4(e, t) {
  return e && Qc(t, ed(t), e);
}
function w4(e, t) {
  return e && Qc(t, pg(t), e);
}
var cw = typeof exports == "object" && exports && !exports.nodeType && exports, dy = cw && typeof module == "object" && module && !module.nodeType && module, k4 = dy && dy.exports === cw, uy = k4 ? Tr.Buffer : void 0, py = uy ? uy.allocUnsafe : void 0;
function O4(e, t) {
  if (t)
    return e.slice();
  var n = e.length, r = py ? py(n) : new e.constructor(n);
  return e.copy(r), r;
}
function T4(e, t) {
  for (var n = -1, r = e == null ? 0 : e.length, i = 0, s = []; ++n < r; ) {
    var o = e[n];
    t(o, n, e) && (s[i++] = o);
  }
  return s;
}
function dw() {
  return [];
}
var E4 = Object.prototype, I4 = E4.propertyIsEnumerable, my = Object.getOwnPropertySymbols, bg = my ? function(e) {
  return e == null ? [] : (e = Object(e), T4(my(e), function(t) {
    return I4.call(e, t);
  }));
} : dw;
function P4(e, t) {
  return Qc(e, bg(e), t);
}
var _4 = Object.getOwnPropertySymbols, uw = _4 ? function(e) {
  for (var t = []; e; )
    hg(t, bg(e)), e = gg(e);
  return t;
} : dw;
function R4(e, t) {
  return Qc(e, uw(e), t);
}
function pw(e, t, n) {
  var r = t(e);
  return Ia(e) ? r : hg(r, n(e));
}
function Lf(e) {
  return pw(e, ed, bg);
}
function vg(e) {
  return pw(e, pg, uw);
}
var Nf = Xs(Tr, "DataView"), Df = Xs(Tr, "Promise"), wo = Xs(Tr, "Set"), fy = "[object Map]", A4 = "[object Object]", hy = "[object Promise]", gy = "[object Set]", by = "[object WeakMap]", vy = "[object DataView]", L4 = Ws(Nf), N4 = Ws(Sc), D4 = Ws(Df), M4 = Ws(wo), F4 = Ws(Pf), Za = Gs;
(Nf && Za(new Nf(new ArrayBuffer(1))) != vy || Sc && Za(new Sc()) != fy || Df && Za(Df.resolve()) != hy || wo && Za(new wo()) != gy || Pf && Za(new Pf()) != by) && (Za = function(e) {
  var t = Gs(e), n = t == A4 ? e.constructor : void 0, r = n ? Ws(n) : "";
  if (r)
    switch (r) {
      case L4:
        return vy;
      case N4:
        return fy;
      case D4:
        return hy;
      case M4:
        return gy;
      case F4:
        return by;
    }
  return t;
});
var $4 = Object.prototype, j4 = $4.hasOwnProperty;
function B4(e) {
  var t = e.length, n = new e.constructor(t);
  return t && typeof e[0] == "string" && j4.call(e, "index") && (n.index = e.index, n.input = e.input), n;
}
var Cu = Tr.Uint8Array;
function yg(e) {
  var t = new e.constructor(e.byteLength);
  return new Cu(t).set(new Cu(e)), t;
}
function U4(e, t) {
  var n = t ? yg(e.buffer) : e.buffer;
  return new e.constructor(n, e.byteOffset, e.byteLength);
}
var V4 = /\w*$/;
function K4(e) {
  var t = new e.constructor(e.source, V4.exec(e));
  return t.lastIndex = e.lastIndex, t;
}
var yy = ir ? ir.prototype : void 0, Cy = yy ? yy.valueOf : void 0;
function H4(e) {
  return Cy ? Object(Cy.call(e)) : {};
}
function z4(e, t) {
  var n = t ? yg(e.buffer) : e.buffer;
  return new e.constructor(n, e.byteOffset, e.length);
}
var q4 = "[object Boolean]", G4 = "[object Date]", W4 = "[object Map]", X4 = "[object Number]", Y4 = "[object RegExp]", J4 = "[object Set]", Z4 = "[object String]", Q4 = "[object Symbol]", eM = "[object ArrayBuffer]", tM = "[object DataView]", nM = "[object Float32Array]", aM = "[object Float64Array]", rM = "[object Int8Array]", iM = "[object Int16Array]", sM = "[object Int32Array]", oM = "[object Uint8Array]", lM = "[object Uint8ClampedArray]", cM = "[object Uint16Array]", dM = "[object Uint32Array]";
function uM(e, t, n) {
  var r = e.constructor;
  switch (t) {
    case eM:
      return yg(e);
    case q4:
    case G4:
      return new r(+e);
    case tM:
      return U4(e, n);
    case nM:
    case aM:
    case rM:
    case iM:
    case sM:
    case oM:
    case lM:
    case cM:
    case dM:
      return z4(e, n);
    case W4:
      return new r();
    case X4:
    case Z4:
      return new r(e);
    case Y4:
      return K4(e);
    case J4:
      return new r();
    case Q4:
      return H4(e);
  }
}
function pM(e) {
  return typeof e.constructor == "function" && !sp(e) ? r5(gg(e)) : {};
}
var mM = "[object Map]";
function fM(e) {
  return Jr(e) && Za(e) == mM;
}
var xy = $o && $o.isMap, hM = xy ? il(xy) : fM, gM = "[object Set]";
function bM(e) {
  return Jr(e) && Za(e) == gM;
}
var Sy = $o && $o.isSet, vM = Sy ? il(Sy) : bM, yM = 1, CM = 2, xM = 4, mw = "[object Arguments]", SM = "[object Array]", wM = "[object Boolean]", kM = "[object Date]", OM = "[object Error]", fw = "[object Function]", TM = "[object GeneratorFunction]", EM = "[object Map]", IM = "[object Number]", hw = "[object Object]", PM = "[object RegExp]", _M = "[object Set]", RM = "[object String]", AM = "[object Symbol]", LM = "[object WeakMap]", NM = "[object ArrayBuffer]", DM = "[object DataView]", MM = "[object Float32Array]", FM = "[object Float64Array]", $M = "[object Int8Array]", jM = "[object Int16Array]", BM = "[object Int32Array]", UM = "[object Uint8Array]", VM = "[object Uint8ClampedArray]", KM = "[object Uint16Array]", HM = "[object Uint32Array]", ln = {};
ln[mw] = ln[SM] = ln[NM] = ln[DM] = ln[wM] = ln[kM] = ln[MM] = ln[FM] = ln[$M] = ln[jM] = ln[BM] = ln[EM] = ln[IM] = ln[hw] = ln[PM] = ln[_M] = ln[RM] = ln[AM] = ln[UM] = ln[VM] = ln[KM] = ln[HM] = !0;
ln[OM] = ln[fw] = ln[LM] = !1;
function Zl(e, t, n, r, i, s) {
  var o, l = t & yM, c = t & CM, d = t & xM;
  if (n && (o = i ? n(e, r, i, s) : n(e)), o !== void 0)
    return o;
  if (!sr(e))
    return e;
  var u = Ia(e);
  if (u) {
    if (o = B4(e), !l)
      return o5(e, o);
  } else {
    var p = Za(e), m = p == fw || p == TM;
    if (Cc(e))
      return O4(e, l);
    if (p == hw || p == mw || m && !i) {
      if (o = c || m ? {} : pM(e), !l)
        return c ? R4(e, w4(o, e)) : P4(e, S4(o, e));
    } else {
      if (!ln[p])
        return i ? e : {};
      o = uM(e, p, l);
    }
  }
  s || (s = new Hr());
  var f = s.get(e);
  if (f)
    return f;
  s.set(e, o), vM(e) ? e.forEach(function(v) {
    o.add(Zl(v, t, n, v, e, s));
  }) : hM(e) && e.forEach(function(v, y) {
    o.set(y, Zl(v, t, n, y, e, s));
  });
  var g = d ? c ? vg : Lf : c ? pg : ed, b = u ? void 0 : g(e);
  return f5(b || e, function(v, y) {
    b && (y = v, v = e[y]), cg(o, y, Zl(v, t, n, y, e, s));
  }), o;
}
var zM = 1, qM = 4;
function wc(e) {
  return Zl(e, zM | qM);
}
var GM = "__lodash_hash_undefined__";
function WM(e) {
  return this.__data__.set(e, GM), this;
}
function XM(e) {
  return this.__data__.has(e);
}
function Ms(e) {
  var t = -1, n = e == null ? 0 : e.length;
  for (this.__data__ = new Mi(); ++t < n; )
    this.add(e[t]);
}
Ms.prototype.add = Ms.prototype.push = WM;
Ms.prototype.has = XM;
function YM(e, t) {
  for (var n = -1, r = e == null ? 0 : e.length; ++n < r; )
    if (t(e[n], n, e))
      return !0;
  return !1;
}
function kc(e, t) {
  return e.has(t);
}
var JM = 1, ZM = 2;
function gw(e, t, n, r, i, s) {
  var o = n & JM, l = e.length, c = t.length;
  if (l != c && !(o && c > l))
    return !1;
  var d = s.get(e), u = s.get(t);
  if (d && u)
    return d == t && u == e;
  var p = -1, m = !0, f = n & ZM ? new Ms() : void 0;
  for (s.set(e, t), s.set(t, e); ++p < l; ) {
    var g = e[p], b = t[p];
    if (r)
      var v = o ? r(b, g, p, t, e, s) : r(g, b, p, e, t, s);
    if (v !== void 0) {
      if (v)
        continue;
      m = !1;
      break;
    }
    if (f) {
      if (!YM(t, function(y, x) {
        if (!kc(f, x) && (g === y || i(g, y, n, r, s)))
          return f.push(x);
      })) {
        m = !1;
        break;
      }
    } else if (!(g === b || i(g, b, n, r, s))) {
      m = !1;
      break;
    }
  }
  return s.delete(e), s.delete(t), m;
}
function QM(e) {
  var t = -1, n = Array(e.size);
  return e.forEach(function(r, i) {
    n[++t] = [i, r];
  }), n;
}
function Cg(e) {
  var t = -1, n = Array(e.size);
  return e.forEach(function(r) {
    n[++t] = r;
  }), n;
}
var e6 = 1, t6 = 2, n6 = "[object Boolean]", a6 = "[object Date]", r6 = "[object Error]", i6 = "[object Map]", s6 = "[object Number]", o6 = "[object RegExp]", l6 = "[object Set]", c6 = "[object String]", d6 = "[object Symbol]", u6 = "[object ArrayBuffer]", p6 = "[object DataView]", wy = ir ? ir.prototype : void 0, wm = wy ? wy.valueOf : void 0;
function m6(e, t, n, r, i, s, o) {
  switch (n) {
    case p6:
      if (e.byteLength != t.byteLength || e.byteOffset != t.byteOffset)
        return !1;
      e = e.buffer, t = t.buffer;
    case u6:
      return !(e.byteLength != t.byteLength || !s(new Cu(e), new Cu(t)));
    case n6:
    case a6:
    case s6:
      return rp(+e, +t);
    case r6:
      return e.name == t.name && e.message == t.message;
    case o6:
    case c6:
      return e == t + "";
    case i6:
      var l = QM;
    case l6:
      var c = r & e6;
      if (l || (l = Cg), e.size != t.size && !c)
        return !1;
      var d = o.get(e);
      if (d)
        return d == t;
      r |= t6, o.set(e, t);
      var u = gw(l(e), l(t), r, i, s, o);
      return o.delete(e), u;
    case d6:
      if (wm)
        return wm.call(e) == wm.call(t);
  }
  return !1;
}
var f6 = 1, h6 = Object.prototype, g6 = h6.hasOwnProperty;
function b6(e, t, n, r, i, s) {
  var o = n & f6, l = Lf(e), c = l.length, d = Lf(t), u = d.length;
  if (c != u && !o)
    return !1;
  for (var p = c; p--; ) {
    var m = l[p];
    if (!(o ? m in t : g6.call(t, m)))
      return !1;
  }
  var f = s.get(e), g = s.get(t);
  if (f && g)
    return f == t && g == e;
  var b = !0;
  s.set(e, t), s.set(t, e);
  for (var v = o; ++p < c; ) {
    m = l[p];
    var y = e[m], x = t[m];
    if (r)
      var w = o ? r(x, y, m, t, e, s) : r(y, x, m, e, t, s);
    if (!(w === void 0 ? y === x || i(y, x, n, r, s) : w)) {
      b = !1;
      break;
    }
    v || (v = m == "constructor");
  }
  if (b && !v) {
    var R = e.constructor, S = t.constructor;
    R != S && "constructor" in e && "constructor" in t && !(typeof R == "function" && R instanceof R && typeof S == "function" && S instanceof S) && (b = !1);
  }
  return s.delete(e), s.delete(t), b;
}
var v6 = 1, ky = "[object Arguments]", Oy = "[object Array]", wd = "[object Object]", y6 = Object.prototype, Ty = y6.hasOwnProperty;
function C6(e, t, n, r, i, s) {
  var o = Ia(e), l = Ia(t), c = o ? Oy : Za(e), d = l ? Oy : Za(t);
  c = c == ky ? wd : c, d = d == ky ? wd : d;
  var u = c == wd, p = d == wd, m = c == d;
  if (m && Cc(e)) {
    if (!Cc(t))
      return !1;
    o = !0, u = !1;
  }
  if (m && !u)
    return s || (s = new Hr()), o || ug(e) ? gw(e, t, n, r, i, s) : m6(e, t, c, n, r, i, s);
  if (!(n & v6)) {
    var f = u && Ty.call(e, "__wrapped__"), g = p && Ty.call(t, "__wrapped__");
    if (f || g) {
      var b = f ? e.value() : e, v = g ? t.value() : t;
      return s || (s = new Hr()), i(b, v, n, r, s);
    }
  }
  return m ? (s || (s = new Hr()), b6(e, t, n, r, i, s)) : !1;
}
function up(e, t, n, r, i) {
  return e === t ? !0 : e == null || t == null || !Jr(e) && !Jr(t) ? e !== e && t !== t : C6(e, t, n, r, up, i);
}
var x6 = 1, S6 = 2;
function w6(e, t, n, r) {
  var i = n.length, s = i;
  if (e == null)
    return !s;
  for (e = Object(e); i--; ) {
    var o = n[i];
    if (o[2] ? o[1] !== e[o[0]] : !(o[0] in e))
      return !1;
  }
  for (; ++i < s; ) {
    o = n[i];
    var l = o[0], c = e[l], d = o[1];
    if (o[2]) {
      if (c === void 0 && !(l in e))
        return !1;
    } else {
      var u = new Hr(), p;
      if (!(p === void 0 ? up(d, c, x6 | S6, r, u) : p))
        return !1;
    }
  }
  return !0;
}
function bw(e) {
  return e === e && !sr(e);
}
function k6(e) {
  for (var t = ed(e), n = t.length; n--; ) {
    var r = t[n], i = e[r];
    t[n] = [r, i, bw(i)];
  }
  return t;
}
function vw(e, t) {
  return function(n) {
    return n == null ? !1 : n[e] === t && (t !== void 0 || e in Object(n));
  };
}
function O6(e) {
  var t = k6(e);
  return t.length == 1 && t[0][2] ? vw(t[0][0], t[0][1]) : function(n) {
    return n === e || w6(n, e, t);
  };
}
function T6(e, t) {
  return e != null && t in Object(e);
}
function E6(e, t, n) {
  t = sl(t, e);
  for (var r = -1, i = t.length, s = !1; ++r < i; ) {
    var o = ol(t[r]);
    if (!(s = e != null && n(e, o)))
      break;
    e = e[o];
  }
  return s || ++r != i ? s : (i = e == null ? 0 : e.length, !!i && dg(i) && ap(o, i) && (Ia(e) || op(e)));
}
function I6(e, t) {
  return e != null && E6(e, t, T6);
}
var P6 = 1, _6 = 2;
function R6(e, t) {
  return mg(e) && bw(t) ? vw(ol(e), t) : function(n) {
    var r = Wn(n, e);
    return r === void 0 && r === t ? I6(n, e) : up(t, r, P6 | _6);
  };
}
function A6(e) {
  return function(t) {
    return t?.[e];
  };
}
function L6(e) {
  return function(t) {
    return nd(t, e);
  };
}
function N6(e) {
  return mg(e) ? A6(ol(e)) : L6(e);
}
function Js(e) {
  return typeof e == "function" ? e : e == null ? np : typeof e == "object" ? Ia(e) ? R6(e[0], e[1]) : O6(e) : N6(e);
}
function D6(e, t, n, r) {
  for (var i = -1, s = e == null ? 0 : e.length; ++i < s; ) {
    var o = e[i];
    t(r, o, n(o), e);
  }
  return r;
}
function M6(e) {
  return function(t, n, r) {
    for (var i = -1, s = Object(t), o = r(t), l = o.length; l--; ) {
      var c = o[++i];
      if (n(s[c], c, s) === !1)
        break;
    }
    return t;
  };
}
var F6 = M6();
function $6(e, t) {
  return e && F6(e, t, ed);
}
function j6(e, t) {
  return function(n, r) {
    if (n == null)
      return n;
    if (!Ys(n))
      return e(n, r);
    for (var i = n.length, s = -1, o = Object(n); ++s < i && r(o[s], s, o) !== !1; )
      ;
    return n;
  };
}
var yw = j6($6);
function B6(e, t, n, r) {
  return yw(e, function(i, s, o) {
    t(r, i, n(i), o);
  }), r;
}
function U6(e, t) {
  return function(n, r) {
    var i = Ia(n) ? D6 : B6, s = {};
    return i(n, e, Js(r), s);
  };
}
var km = function() {
  return Tr.Date.now();
}, V6 = "Expected a function", K6 = Math.max, H6 = Math.min;
function xg(e, t, n) {
  var r, i, s, o, l, c, d = 0, u = !1, p = !1, m = !0;
  if (typeof e != "function")
    throw new TypeError(V6);
  t = Yv(t) || 0, sr(n) && (u = !!n.leading, p = "maxWait" in n, s = p ? K6(Yv(n.maxWait) || 0, t) : s, m = "trailing" in n ? !!n.trailing : m);
  function f(_) {
    var O = r, E = i;
    return r = i = void 0, d = _, o = e.apply(E, O), o;
  }
  function g(_) {
    return d = _, l = setTimeout(y, t), u ? f(_) : o;
  }
  function b(_) {
    var O = _ - c, E = _ - d, T = t - O;
    return p ? H6(T, s - E) : T;
  }
  function v(_) {
    var O = _ - c, E = _ - d;
    return c === void 0 || O >= t || O < 0 || p && E >= s;
  }
  function y() {
    var _ = km();
    if (v(_))
      return x(_);
    l = setTimeout(y, b(_));
  }
  function x(_) {
    return l = void 0, m && r ? f(_) : (r = i = void 0, o);
  }
  function w() {
    l !== void 0 && clearTimeout(l), d = 0, r = c = i = l = void 0;
  }
  function R() {
    return l === void 0 ? o : x(km());
  }
  function S() {
    var _ = km(), O = v(_);
    if (r = arguments, i = this, c = _, O) {
      if (l === void 0)
        return g(c);
      if (p)
        return clearTimeout(l), l = setTimeout(y, t), f(c);
    }
    return l === void 0 && (l = setTimeout(y, t)), o;
  }
  return S.cancel = w, S.flush = R, S;
}
function ko(e) {
  return Jr(e) && Ys(e);
}
function z6(e, t, n) {
  for (var r = -1, i = e == null ? 0 : e.length; ++r < i; )
    if (n(t, e[r]))
      return !0;
  return !1;
}
var q6 = 200;
function G6(e, t, n, r) {
  var i = -1, s = og, o = !0, l = e.length, c = [], d = t.length;
  if (!l)
    return c;
  n && (t = Ci(t, il(n))), t.length >= q6 && (s = kc, o = !1, t = new Ms(t));
  e:
    for (; ++i < l; ) {
      var u = e[i], p = n == null ? u : n(u);
      if (u = u !== 0 ? u : 0, o && p === p) {
        for (var m = d; m--; )
          if (t[m] === p)
            continue e;
        c.push(u);
      } else s(t, p, r) || c.push(u);
    }
  return c;
}
function Oc(e) {
  var t = e == null ? 0 : e.length;
  return t ? e[t - 1] : void 0;
}
var Cw = ip(function(e, t) {
  var n = Oc(t);
  return ko(n) && (n = void 0), ko(e) ? G6(e, dp(t, 1, ko, !0), Js(n)) : [];
});
function W6(e, t) {
  var n = -1, r = Ys(e) ? Array(e.length) : [];
  return yw(e, function(i, s, o) {
    r[++n] = t(i, s, o);
  }), r;
}
var X6 = Object.prototype, Y6 = X6.hasOwnProperty, J6 = U6(function(e, t, n) {
  Y6.call(e, n) ? e[n].push(t) : lg(e, n, [t]);
}), Z6 = Math.min;
function Q6(e, t, n) {
  for (var r = og, i = e[0].length, s = e.length, o = s, l = Array(s), c = 1 / 0, d = []; o--; ) {
    var u = e[o];
    o && t && (u = Ci(u, il(t))), c = Z6(u.length, c), l[o] = t || i >= 120 && u.length >= 120 ? new Ms(o && u) : void 0;
  }
  u = e[0];
  var p = -1, m = l[0];
  e:
    for (; ++p < i && d.length < c; ) {
      var f = u[p], g = t ? t(f) : f;
      if (f = f !== 0 ? f : 0, !(m ? kc(m, g) : r(d, g))) {
        for (o = s; --o; ) {
          var b = l[o];
          if (!(b ? kc(b, g) : r(e[o], g)))
            continue e;
        }
        m && m.push(g), d.push(f);
      }
    }
  return d;
}
function eF(e) {
  return ko(e) ? e : [];
}
var tF = ip(function(e) {
  var t = Oc(e), n = Ci(e, eF);
  return t === Oc(n) ? t = void 0 : n.pop(), n.length && n[0] === e[0] ? Q6(n, Js(t)) : [];
});
function nF(e, t) {
  return t.length < 2 ? e : nd(e, VS(t, 0, -1));
}
var aF = "[object Map]", rF = "[object Set]", iF = Object.prototype, sF = iF.hasOwnProperty;
function Ey(e) {
  if (e == null)
    return !0;
  if (Ys(e) && (Ia(e) || typeof e == "string" || typeof e.splice == "function" || Cc(e) || ug(e) || op(e)))
    return !e.length;
  var t = Za(e);
  if (t == aF || t == rF)
    return !e.size;
  if (sp(e))
    return !BS(e).length;
  for (var n in e)
    if (sF.call(e, n))
      return !1;
  return !0;
}
function bi(e, t) {
  return up(e, t);
}
function oF(e, t) {
  return t = sl(t, e), e = nF(e, t), e == null || delete e[ol(Oc(t))];
}
function lF(e) {
  return e3(e) ? void 0 : e;
}
var cF = 1, dF = 2, uF = 4, xw = WD(function(e, t) {
  var n = {};
  if (e == null)
    return n;
  var r = !1;
  t = Ci(t, function(s) {
    return s = sl(s, e), r || (r = s.length > 1), s;
  }), Qc(e, vg(e), n), r && (n = Zl(n, cF | dF | uF, lF));
  for (var i = t.length; i--; )
    oF(n, t[i]);
  return n;
});
function pF(e, t, n, r) {
  if (!sr(e))
    return e;
  t = sl(t, e);
  for (var i = -1, s = t.length, o = s - 1, l = e; l != null && ++i < s; ) {
    var c = ol(t[i]), d = n;
    if (c === "__proto__" || c === "constructor" || c === "prototype")
      return e;
    if (i != o) {
      var u = l[c];
      d = void 0, d === void 0 && (d = sr(u) ? u : ap(t[i + 1]) ? [] : {});
    }
    cg(l, c, d), l = l[c];
  }
  return e;
}
function mF(e, t, n) {
  for (var r = -1, i = t.length, s = {}; ++r < i; ) {
    var o = t[r], l = nd(e, o);
    n(l, o) && pF(s, sl(o, e), l);
  }
  return s;
}
function Sg(e, t) {
  if (e == null)
    return {};
  var n = Ci(vg(e), function(r) {
    return [r];
  });
  return t = Js(t), mF(e, n, function(r, i) {
    return t(r, i[0]);
  });
}
function fF(e, t) {
  var n = e.length;
  for (e.sort(t); n--; )
    e[n] = e[n].value;
  return e;
}
function hF(e, t) {
  if (e !== t) {
    var n = e !== void 0, r = e === null, i = e === e, s = Fo(e), o = t !== void 0, l = t === null, c = t === t, d = Fo(t);
    if (!l && !d && !s && e > t || s && o && c && !l && !d || r && o && c || !n && c || !i)
      return 1;
    if (!r && !s && !d && e < t || d && n && i && !r && !s || l && n && i || !o && i || !c)
      return -1;
  }
  return 0;
}
function gF(e, t, n) {
  for (var r = -1, i = e.criteria, s = t.criteria, o = i.length, l = n.length; ++r < o; ) {
    var c = hF(i[r], s[r]);
    if (c) {
      if (r >= l)
        return c;
      var d = n[r];
      return c * (d == "desc" ? -1 : 1);
    }
  }
  return e.index - t.index;
}
function bF(e, t, n) {
  t.length ? t = Ci(t, function(s) {
    return Ia(s) ? function(o) {
      return nd(o, s.length === 1 ? s[0] : s);
    } : s;
  }) : t = [np];
  var r = -1;
  t = Ci(t, il(Js));
  var i = W6(e, function(s, o, l) {
    var c = Ci(t, function(d) {
      return d(s);
    });
    return { criteria: c, index: ++r, value: s };
  });
  return fF(i, function(s, o) {
    return gF(s, o, n);
  });
}
var zr = ip(function(e, t) {
  if (e == null)
    return [];
  var n = t.length;
  return n > 1 && ey(e, t[0], t[1]) ? t = [] : n > 2 && ey(t[0], t[1], t[2]) && (t = [t[0]]), bF(e, dp(t), []);
}), vF = 1 / 0, yF = wo && 1 / Cg(new wo([, -0]))[1] == vF ? function(e) {
  return new wo(e);
} : s5, CF = 200;
function wg(e, t, n) {
  var r = -1, i = og, s = e.length, o = !0, l = [], c = l;
  if (n)
    o = !1, i = z6;
  else if (s >= CF) {
    var d = t ? null : yF(e);
    if (d)
      return Cg(d);
    o = !1, i = kc, c = new Ms();
  } else
    c = t ? [] : l;
  e:
    for (; ++r < s; ) {
      var u = e[r], p = t ? t(u) : u;
      if (u = n || u !== 0 ? u : 0, o && p === p) {
        for (var m = c.length; m--; )
          if (c[m] === p)
            continue e;
        t && c.push(p), l.push(u);
      } else i(c, p, n) || (c !== l && c.push(p), l.push(u));
    }
  return l;
}
var Iy = ip(function(e) {
  var t = Oc(e);
  return ko(t) && (t = void 0), wg(dp(e, 1, ko, !0), Js(t));
});
function pp(e, t) {
  return e && e.length ? wg(e, Js(t)) : [];
}
function xF(e, t) {
  return t = typeof t == "function" ? t : void 0, e && e.length ? wg(e, void 0, t) : [];
}
function Er(e, t) {
  const n = q0(t);
  return n.displayName = e, n;
}
const SF = ["error", "errorMessage"], Om = "error_description";
function wF(e) {
  if (typeof e == "string")
    return e;
  if (e instanceof Go)
    return TF(e.responseData);
  if (e instanceof Error)
    return e.message;
  throw new Error("Unable to determine error message.");
}
function kF(e) {
  if (!(e instanceof Go))
    return;
  const t = e.responseData;
  return OF(t);
}
function OF(e) {
  if (typeof e == "object" && e !== null && Om in e && typeof e[Om] == "string")
    return e[Om];
}
function TF(e) {
  if (!(typeof e != "object" || e === null))
    for (const t of SF) {
      const n = e[t];
      if (typeof n == "string")
        return n;
    }
}
const Mf = () => Math.floor(Math.random() * 1e3);
function EF(e) {
  return e != null;
}
function Ir(e) {
  const t = G0(e);
  if (EF(t))
    return t;
  throw new Error(
    `No provider found for ${e.displayName ? `the '${e.displayName}'` : "an unknown"} context, make sure it is included in your component hierarchy.`
  );
}
function Sw() {
  const e = Ct(!1), t = Ct(/* @__PURE__ */ new Set());
  He(() => (e.current = !1, () => {
    e.current = !0, n();
  }), []);
  function n() {
    t.current.forEach((r) => clearTimeout(r)), t.current.clear();
  }
  return bn((r, i) => {
    if (e.current)
      throw new Error("Can't schedule a timeout on an unmounted component.");
    const s = Number(setTimeout(o, i));
    t.current.add(s);
    function o() {
      t.current.delete(s), r();
    }
    return function() {
      clearTimeout(s), t.current.delete(s);
    };
  }, []);
}
function IF({ alerts: e, onCloseAlert: t }) {
  return /* @__PURE__ */ a(
    _1,
    {
      "data-testid": "global-alerts",
      isToast: !0,
      style: { whiteSpace: "pre-wrap" },
      children: e.map(({ id: n, variant: r, message: i, description: s }, o) => /* @__PURE__ */ a(
        _n,
        {
          "data-testid": o === 0 ? "last-alert" : void 0,
          isLiveRegion: !0,
          variant: ue[r],
          component: "p",
          variantLabel: "",
          title: i,
          actionClose: /* @__PURE__ */ a(
            wh,
            {
              title: i,
              onClose: () => t(n)
            }
          ),
          children: s && /* @__PURE__ */ a("p", { children: s })
        },
        n
      ))
    }
  );
}
const PF = 8e3, ww = Er(
  "AlertContext",
  void 0
), Se = () => Ir(ww), _F = ({ children: e }) => {
  const { t } = H(), n = Sw(), [r, i] = N([]), s = (d) => i((u) => u.filter((p) => p.id !== d)), o = bn(
    (d, u = ue.success, p) => {
      const m = {
        id: Mf(),
        message: d,
        variant: u,
        description: p
      };
      i((f) => [m, ...f]), n(() => s(m.id), PF);
    },
    [n]
  ), l = bn(
    (d, u) => {
      const p = t(d, { error: wF(u) }), m = kF(u);
      o(p, ue.danger, m);
    },
    [o, t]
  ), c = et(() => ({ addAlert: o, addError: l }), [o, l]);
  return /* @__PURE__ */ C(ww.Provider, { value: c, children: [
    /* @__PURE__ */ a(IF, { alerts: r, onCloseAlert: s }),
    e
  ] });
}, RF = (e) => {
  const { t } = H(), n = e.error, r = AF(n);
  function i() {
    location.href = location.origin + location.pathname;
  }
  return /* @__PURE__ */ a(Yu, { children: /* @__PURE__ */ a(
    ht,
    {
      variant: Rt.small,
      title: t("somethingWentWrong"),
      titleIconVariant: "danger",
      showClose: !1,
      isOpen: !0,
      actions: [
        /* @__PURE__ */ a(z, { variant: "primary", onClick: i, children: t("tryAgain") }, "tryAgain")
      ],
      children: /* @__PURE__ */ C(Pt, { children: [
        /* @__PURE__ */ a(tt, { children: t("somethingWentWrongDescription") }),
        r && /* @__PURE__ */ a(tt, { component: Wt.small, children: r })
      ] })
    }
  ) });
};
function AF(e) {
  return typeof e == "string" ? e : e instanceof Error ? e.message : null;
}
function LF(e, t, n) {
  const [r, i] = N(
    () => e.getItem(t) ?? n
  ), s = bn((o) => {
    i(o), e.setItem(t, o);
  }, []);
  return He(() => {
    i(e.getItem(t) ?? n), window.addEventListener("storage", o);
    function o(l) {
      l.storageArea === e && (l.key === null || l.key === t) && i(l.newValue ?? n);
    }
    return () => window.removeEventListener("storage", o);
  }, [e, t]), [r, s];
}
function kg(e, t, n) {
  const r = et(
    () => JSON.stringify(n),
    [n]
  ), [i, s] = LF(
    e,
    t,
    r
  ), o = et(() => JSON.parse(i), [i]), l = bn(
    (c) => s(JSON.stringify(c)),
    []
  );
  return [o, l];
}
const kw = Er(
  "HelpContext",
  void 0
), Pr = () => Ir(kw), NF = ({ children: e }) => {
  const [t, n] = kg(localStorage, "helpEnabled", !0);
  function r() {
    n(!t);
  }
  return /* @__PURE__ */ a(kw.Provider, { value: { enabled: t, toggleHelp: r }, children: e });
}, DF = () => q0(void 0);
let Ff;
const Ha = () => {
  const e = G0(Ff);
  if (!e)
    throw Error(
      "no environment provider in the hierarchy make sure to add the provider"
    );
  return e;
}, oee = ({
  environment: e,
  children: t
}) => {
  Ff = DF();
  const n = Ct(!1), [r, i] = N(!1), [s, o] = N(), l = et(() => {
    const c = new cS({
      url: e.serverBaseUrl,
      realm: e.realm,
      clientId: e.clientId
    });
    return c.onAuthLogout = () => c.login(), c;
  }, [e]);
  return He(() => {
    n.current || (l.init({
      onLoad: "check-sso",
      pkceMethod: "S256",
      responseMode: "query"
    }).then(() => i(!0)).catch((c) => o(c)), n.current = !0);
  }, [l]), s ? /* @__PURE__ */ a(RF, { error: s }) : r ? /* @__PURE__ */ a(Ff.Provider, { value: { environment: e, keycloak: l }, children: /* @__PURE__ */ a(_F, { children: /* @__PURE__ */ a(NF, { children: t }) }) }) : /* @__PURE__ */ a(ei, {});
};
function MF() {
  const e = document.getElementById("environment")?.textContent;
  if (typeof e != "string")
    throw new Error("Environment variables not found in the document.");
  try {
    return JSON.parse(e);
  } catch {
    throw new Error("Unable to parse environment variables as JSON.");
  }
}
const En = ({ message: e, ...t }) => /* @__PURE__ */ a(Zo, { ...t, children: /* @__PURE__ */ a(Xr, { children: /* @__PURE__ */ a(Yr, { icon: /* @__PURE__ */ a(ds, {}), variant: "error", children: e }) }) }), le = ({
  helpText: e,
  fieldLabelId: t,
  noVerticalAlign: n = !0,
  unWrap: r = !1
}) => {
  const { enabled: i } = Pr();
  return i ? /* @__PURE__ */ a(Or, { bodyContent: e, children: /* @__PURE__ */ C(ee, { children: [
    !r && /* @__PURE__ */ a(
      "button",
      {
        "data-testid": `help-label-${t}`,
        "aria-label": t,
        onClick: (s) => s.preventDefault(),
        className: "pf-v5-c-form__group-label-help",
        children: /* @__PURE__ */ a(wi, { isInline: n, children: /* @__PURE__ */ a(yc, {}) })
      }
    ),
    r && /* @__PURE__ */ a(wi, { isInline: n, children: /* @__PURE__ */ a(yc, {}) })
  ] }) }) : null;
}, Zs = ({
  name: e,
  label: t,
  labelIcon: n,
  error: r,
  children: i,
  ...s
}) => /* @__PURE__ */ C(
  se,
  {
    label: t || e,
    fieldId: e,
    labelIcon: n ? /* @__PURE__ */ a(le, { helpText: n, fieldLabelId: e }) : void 0,
    ...s,
    children: [
      i,
      r && /* @__PURE__ */ a(En, { "data-testid": `${e}-helper`, message: r.message })
    ]
  }
), es = ({
  name: e,
  label: t,
  controller: n,
  labelIcon: r,
  ...i
}) => {
  const {
    control: s,
    formState: { errors: o }
  } = Le();
  return /* @__PURE__ */ a(
    Zs,
    {
      name: e,
      label: t,
      isRequired: n.rules?.required === !0,
      error: o[e],
      labelIcon: r,
      children: /* @__PURE__ */ a(
        ge,
        {
          ...n,
          name: e,
          control: s,
          render: ({ field: l }) => {
            const c = !!n.rules?.required, d = n.rules?.min, u = l.value === 0 ? n.defaultValue : l.value, p = (m) => l.onChange(d ? Math.max(m, Number(d)) : m);
            return /* @__PURE__ */ a(
              is,
              {
                ...i,
                id: e,
                value: u,
                validated: o[e] ? Pn.error : Pn.default,
                required: c,
                min: Number(d),
                max: Number(n.rules?.max),
                onPlus: () => p(u + 1),
                onMinus: () => p(u - 1),
                onChange: (m) => {
                  const f = Number(m.currentTarget.value);
                  p(isNaN(f) ? n.defaultValue : f);
                }
              }
            );
          }
        }
      )
    }
  );
}, FF = ({
  hasReveal: e = !0,
  innerRef: t,
  ...n
}) => {
  const { t: r } = H(), [i, s] = N(!0);
  return /* @__PURE__ */ C(Qt, { children: [
    /* @__PURE__ */ a(dt, { isFill: !0, children: /* @__PURE__ */ a(
      mt,
      {
        ...n,
        type: i ? "password" : "text",
        ref: t
      }
    ) }),
    e && /* @__PURE__ */ a(
      z,
      {
        variant: "control",
        "aria-label": r("showPassword"),
        onClick: () => s(!i),
        children: i ? /* @__PURE__ */ a(nA, {}) : /* @__PURE__ */ a(eA, {})
      }
    )
  ] });
}, Tc = rh(
  (e, t) => /* @__PURE__ */ a(FF, { ...e, innerRef: t })
);
Tc.displayName = "PasswordInput";
const jo = (e) => {
  const { labelIcon: t, ...n } = e, r = !!e.rules?.required, i = e.defaultValue ?? "", { field: s, fieldState: o } = qs({
    ...e,
    defaultValue: i
  });
  return /* @__PURE__ */ C(
    Zs,
    {
      name: e.name,
      label: e.label,
      labelIcon: t,
      isRequired: r,
      error: o.error,
      children: [
        /* @__PURE__ */ a(
          Tc,
          {
            isRequired: r,
            id: e.name,
            "data-testid": e.name,
            validated: o.error ? Pn.error : Pn.default,
            isDisabled: e.isDisabled,
            ...n,
            ...s
          }
        ),
        e.helperText && /* @__PURE__ */ a(Zo, { children: /* @__PURE__ */ a(Xr, { children: /* @__PURE__ */ a(Yr, { children: e.helperText }) }) })
      ]
    }
  );
}, $F = ({
  id: e,
  name: t,
  label: n,
  options: r,
  controller: i,
  labelIcon: s,
  ...o
}) => {
  const {
    control: l,
    formState: { errors: c }
  } = Le(), [d, u] = N(!1);
  return /* @__PURE__ */ a(
    Zs,
    {
      name: t,
      label: n,
      isRequired: !!i.rules?.required,
      error: Wn(c, t),
      labelIcon: s,
      children: /* @__PURE__ */ a(
        ge,
        {
          ...i,
          name: t,
          control: l,
          render: ({ field: { onChange: p, value: m } }) => /* @__PURE__ */ a(
            Bn,
            {
              ...o,
              onClick: () => u(!d),
              onOpenChange: () => u(!1),
              selected: Ql(r) ? r.filter(
                (f) => Array.isArray(m) ? m.includes(f.key) : m === f.key
              ).map((f) => f.value) : m,
              toggle: (f) => /* @__PURE__ */ a(
                yt,
                {
                  id: e || t.slice(t.lastIndexOf(".") + 1),
                  ref: f,
                  onClick: () => u(!d),
                  isExpanded: d,
                  isFullWidth: !0,
                  status: Wn(c, t) ? Zi.danger : void 0,
                  "aria-label": "toggle",
                  children: Ql(r) ? r.find(
                    (g) => g.key === (Array.isArray(m) ? m[0] : m)
                  )?.value : m
                }
              ),
              onSelect: (f, g) => {
                const b = g?.toString();
                p(Array.isArray(m) ? [b] : b), u(!1);
              },
              isOpen: d,
              children: /* @__PURE__ */ a(ia, { children: r.map((f) => /* @__PURE__ */ a(_e, { value: ws(f), children: Og(f) ? f : f.value }, ws(f))) })
            }
          )
        }
      )
    }
  );
}, kd = (e) => Og(e) ? e : e.value, jF = ({
  id: e,
  name: t,
  label: n,
  options: r,
  controller: i,
  labelIcon: s,
  placeholderText: o,
  onFilter: l,
  variant: c,
  ...d
}) => {
  const {
    control: u,
    formState: { errors: p }
  } = Le(), [m, f] = N(!1), [g, b] = N(""), [v, y] = N(0), x = Ct(), w = r.filter(
    (_) => kd(_).toLowerCase().startsWith(g.toLowerCase())
  ), R = et(
    () => w.map((_, O) => /* @__PURE__ */ a(
      _e,
      {
        value: ws(_),
        isFocused: v === O,
        children: kd(_)
      },
      ws(_)
    )),
    [v, w]
  ), S = (_, O) => {
    const E = w[v];
    switch (f(!0), _.key) {
      case "Enter": {
        _.preventDefault(), c !== pt.typeaheadMulti ? b(kd(E)) : b(""), O.onChange(
          Array.isArray(O.value) ? [...O.value, ws(E)] : ws(E)
        ), f(!1), y(0);
        break;
      }
      case "Tab":
      case "Escape": {
        f(!1), O.onChange(void 0);
        break;
      }
      case "Backspace": {
        c === pt.typeahead && O.onChange("");
        break;
      }
      case "ArrowUp":
      case "ArrowDown": {
        _.preventDefault();
        let T = 0;
        _.key === "ArrowUp" && (v === 0 ? T = r.length - 1 : T = v - 1), _.key === "ArrowDown" && (v === r.length - 1 ? T = 0 : T = v + 1), y(T);
        break;
      }
    }
  };
  return /* @__PURE__ */ a(
    Zs,
    {
      name: t,
      label: n,
      isRequired: !!i.rules?.required,
      error: Wn(p, t),
      labelIcon: s,
      children: /* @__PURE__ */ a(
        ge,
        {
          ...i,
          name: t,
          control: u,
          render: ({ field: _ }) => /* @__PURE__ */ a(
            Bn,
            {
              ...d,
              onClick: () => f(!m),
              onOpenChange: () => f(!1),
              selected: Ql(r) ? r.filter(
                (O) => Array.isArray(_.value) ? _.value.includes(O.key) : _.value === O.key
              ).map((O) => O.value) : _.value,
              toggle: (O) => /* @__PURE__ */ a(
                yt,
                {
                  ref: O,
                  id: e || t.slice(t.lastIndexOf(".") + 1),
                  variant: "typeahead",
                  onClick: () => f(!m),
                  isExpanded: m,
                  isFullWidth: !0,
                  status: Wn(p, t) ? Zi.danger : void 0,
                  children: /* @__PURE__ */ C(Qo, { isPlain: !0, children: [
                    /* @__PURE__ */ a(
                      el,
                      {
                        placeholder: o,
                        value: c === pt.typeahead && _.value ? Ql(r) ? r.find(
                          (E) => E.key === (Array.isArray(_.value) ? _.value[0] : _.value)
                        )?.value : _.value : g,
                        onClick: () => f(!m),
                        onChange: (E, T) => {
                          b(T), l?.(T);
                        },
                        onKeyDown: (E) => S(E, _),
                        autoComplete: "off",
                        innerRef: x,
                        role: "combobox",
                        isExpanded: m,
                        "aria-controls": "select-typeahead-listbox",
                        children: c === pt.typeaheadMulti && Array.isArray(_.value) && /* @__PURE__ */ a(vn, { "aria-label": "Current selections", children: _.value.map(
                          (E, T) => /* @__PURE__ */ a(
                            Ut,
                            {
                              onClick: (I) => {
                                I.stopPropagation(), _.onChange(
                                  _.value.filter(
                                    (k) => k !== ws(E)
                                  )
                                );
                              },
                              children: Ql(r) ? r.find((I) => E === I.key)?.value : kd(E)
                            },
                            T
                          )
                        ) })
                      }
                    ),
                    /* @__PURE__ */ a(tl, { children: !!g && /* @__PURE__ */ a(
                      z,
                      {
                        variant: "plain",
                        onClick: () => {
                          _.onChange(void 0), b(""), x?.current?.focus();
                        },
                        "aria-label": "Clear input value",
                        children: /* @__PURE__ */ a(Oa, { "aria-hidden": !0 })
                      }
                    ) })
                  ] })
                }
              ),
              onSelect: (O, E) => {
                O?.stopPropagation();
                const T = E?.toString();
                c === pt.typeaheadMulti && Array.isArray(_.value) ? _.value.includes(T) ? _.onChange(
                  _.value.filter((I) => I !== T)
                ) : _.onChange([..._.value, T]) : (_.onChange(Array.isArray(_.value) ? [T] : T), f(!1));
              },
              isOpen: m,
              children: /* @__PURE__ */ a(ia, { children: R })
            }
          )
        }
      )
    }
  );
};
var pt = /* @__PURE__ */ ((e) => (e.single = "single", e.typeahead = "typeahead", e.typeaheadMulti = "typeaheadMulti", e))(pt || {});
const Ql = (e) => typeof e[0] != "string", Og = (e) => typeof e == "string", ws = (e) => Og(e) ? e : e.key, at = ({
  variant: e = "single",
  ...t
}) => e === "single" ? /* @__PURE__ */ a($F, { ...t }) : /* @__PURE__ */ a(jF, { ...t, variant: e }), Qs = ({
  labelOn: e,
  stringify: t,
  defaultValue: n,
  labelIcon: r,
  ...i
}) => {
  const s = n ?? (t ? "false" : !1), { control: o } = Le();
  return /* @__PURE__ */ a(
    Zs,
    {
      hasNoPaddingTop: !0,
      name: i.name,
      isRequired: i.rules?.required === !0,
      label: i.label,
      labelIcon: r,
      children: /* @__PURE__ */ a(
        ge,
        {
          control: o,
          name: i.name,
          defaultValue: s,
          render: ({ field: { onChange: l, value: c } }) => /* @__PURE__ */ a(
            Ye,
            {
              ...i,
              id: i.name,
              "data-testid": i.name,
              label: e,
              isChecked: t ? c === "true" : c,
              onChange: (d, u) => {
                const p = t ? u.toString() : u;
                i.onChange?.(d, u), l(p);
              }
            }
          )
        }
      )
    }
  );
}, wr = (e) => {
  const t = !!e.rules?.required, n = e.defaultValue ?? "", { field: r, fieldState: i } = qs({
    ...e,
    defaultValue: n
  });
  return /* @__PURE__ */ a(
    Zs,
    {
      isRequired: t,
      label: e.label,
      labelIcon: e.labelIcon,
      name: e.name,
      error: i.error,
      children: /* @__PURE__ */ a(
        Ai,
        {
          isRequired: t,
          id: e.name,
          "data-testid": e.name,
          validated: i.error ? Pn.error : Pn.default,
          isDisabled: e.isDisabled,
          ...r
        }
      )
    }
  );
}, ve = (e) => {
  const { labelIcon: t, ...n } = e, r = !!e.rules?.required, i = e.defaultValue ?? "", { field: s, fieldState: o } = qs({
    ...e,
    defaultValue: i
  });
  return /* @__PURE__ */ C(
    Zs,
    {
      name: e.name,
      label: e.label,
      labelIcon: t,
      isRequired: r,
      error: o.error,
      children: [
        /* @__PURE__ */ a(
          mt,
          {
            isRequired: r,
            id: e.name,
            "data-testid": e.name,
            validated: o.error ? Pn.error : Pn.default,
            isDisabled: e.isDisabled,
            ...n,
            ...s
          }
        ),
        e.helperText && /* @__PURE__ */ a(Zo, { children: /* @__PURE__ */ a(Xr, { children: /* @__PURE__ */ a(Yr, { children: e.helperText }) }) })
      ]
    }
  );
}, Tg = Ai, BF = ({ icon: e }) => {
  const t = UF(e);
  return /* @__PURE__ */ a(wi, { size: "lg", children: /* @__PURE__ */ a(t, { alt: e }) });
};
function UF(e) {
  switch (e) {
    case "github":
      return TL;
    case "facebook":
      return wL;
    case "gitlab":
      return IL;
    case "google":
      return RL;
    case "linkedin":
    case "linkedin-openid-connect":
      return ML;
    case "openshift-v3":
    case "openshift-v4":
      return zL;
    case "stackoverflow":
      return ZL;
    case "twitter":
      return iN;
    case "microsoft":
      return VL;
    case "bitbucket":
      return sL;
    case "instagram":
      return NL;
    case "paypal":
      return GL;
    default:
      return mL;
  }
}
const VF = "_title_180i0_2", KF = {
  title: VF
}, Ow = ({
  id: e,
  title: t,
  headingLevel: n = "h1",
  size: r = "xl",
  ...i
}) => /* @__PURE__ */ a(
  nr,
  {
    headingLevel: n,
    size: r,
    className: KF.title,
    id: e,
    tabIndex: 0,
    ...i,
    children: t
  }
), Xn = ({
  title: e,
  children: t,
  scrollId: n,
  className: r
}) => {
  const i = Vu();
  return /* @__PURE__ */ C(xa, { id: i, className: r, isFlat: !0, children: [
    /* @__PURE__ */ a(qc, { className: "kc-form-panel__header", children: /* @__PURE__ */ a(br, { tabIndex: 0, children: /* @__PURE__ */ a(Ow, { id: n, title: e }) }) }),
    /* @__PURE__ */ a(da, { className: "kc-form-panel__body", children: t })
  ] });
}, HF = (e) => {
  const { title: t, children: n, scrollId: r, ...i } = e;
  return /* @__PURE__ */ a("section", { ...i, style: { marginTop: "var(--pf-v5-global--spacer--lg)" }, children: /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(Ow, { id: r, title: t }),
    n
  ] }) });
}, zF = "_panel_1cdve_1", qF = "_sticky_1cdve_5", Py = {
  panel: zF,
  sticky: qF
}, Tw = "kc-main-content-page-container", _y = (e) => e.replace(/\s+/g, "-"), ll = ({
  label: e,
  sections: t,
  borders: n = !1,
  ...r
}) => {
  const i = et(
    () => t.filter(({ isHidden: s }) => !s),
    [t]
  );
  return /* @__PURE__ */ C(Va, { hasGutter: !0, ...r, children: [
    /* @__PURE__ */ a(zt, { md: 8, sm: 12, children: i.map(({ title: s, panel: o }) => {
      const l = _y(s.toLowerCase());
      return /* @__PURE__ */ a(ka, { children: n ? /* @__PURE__ */ a(
        Xn,
        {
          scrollId: l,
          title: s,
          className: Py.panel,
          children: o
        }
      ) : /* @__PURE__ */ a(HF, { scrollId: l, title: s, children: o }) }, s);
    }) }),
    /* @__PURE__ */ a(zt, { md: 4, sm: 12, order: { default: "-1", md: "1" }, children: /* @__PURE__ */ a(Te, { className: Py.sticky, children: /* @__PURE__ */ a(
      Lx,
      {
        isVertical: !0,
        scrollableSelector: `#${Tw}`,
        label: e,
        offset: 100,
        children: i.map(({ title: s }) => {
          const o = _y(s.toLowerCase());
          return (
            // note that JumpLinks currently does not work with spaces in the href
            /* @__PURE__ */ a(
              fc,
              {
                href: `#${o}`,
                "data-testid": `jump-link-${o}`,
                children: s
              },
              s
            )
          );
        })
      }
    ) }) })
  ] });
}, GF = (e, t, n) => (e.isValid || n) && (e.isDirty || t) && !e.isLoading && !e.isValidating && !e.isSubmitting, eo = ({
  formState: e,
  isDisabled: t = !1,
  allowInvalid: n = !1,
  allowNonDirty: r = !1,
  children: i,
  ...s
}) => /* @__PURE__ */ a(
  z,
  {
    variant: "primary",
    isDisabled: e && !GF(e, r, n) || t,
    ...s,
    type: "submit",
    children: i
  }
), WF = (e) => {
  try {
    return new Intl.DisplayNames([e], { type: "language" }).of(e);
  } catch {
    return e;
  }
}, XF = ({
  t: e,
  form: t,
  supportedLocales: n,
  currentLocale: r
}) => {
  const i = et(
    () => n.map((s) => ({
      key: s,
      value: e(`locale_${s}`, WF(s) ?? s)
    })).sort((s, o) => s.value.localeCompare(o.value, r)),
    [n, r, e]
  );
  return i.length ? /* @__PURE__ */ a(Ve, { ...t, children: /* @__PURE__ */ a(
    at,
    {
      "data-testid": "locale-select",
      name: "attributes.locale",
      label: e("selectALocale"),
      controller: { defaultValue: "" },
      options: i,
      variant: i.length >= 10 ? "typeahead" : "single"
    }
  ) }) : null;
}, $f = (e) => e?.includes("${"), jf = (e) => e.substring(2, e.length - 1), Pa = (e, t, n) => ($f(t) ? e(jf(t)) : t) || n, Bf = (e, t) => Pa(e, t.displayName, t.name), YF = ["username", "firstName", "lastName", "email"], Ew = (e) => e && YF.includes(e), ps = (e) => `${Ew(e) ? "" : "attributes."}${e?.replaceAll(
  ".",
  "🍺"
)}`;
function Uf(e, t, n) {
  (e.responseData.errors !== void 0 ? e.responseData.errors : [e.responseData]).forEach((r) => {
    const i = Object.assign(
      {},
      r.params?.map((s) => $f(s.toString()) ? n(jf(s)) : s)
    );
    t(ps(r.field), {
      message: n(
        $f(r.errorMessage) ? jf(r.errorMessage) : r.errorMessage,
        {
          ...i,
          defaultValue: r.errorMessage || r.field
        }
      ),
      type: "server"
    });
  });
}
function mp({
  required: e,
  validators: t
}) {
  return e || JF(t);
}
function JF(e) {
  return e && "length" in e && "min" in e.length && typeof e.length.min == "number" ? e.length.min > 0 : !1;
}
function Iw(e) {
  if (typeof e != "object" || e === null || !("responseData" in e))
    return !1;
  const { responseData: t } = e;
  return Ry(t) ? !0 : typeof t != "object" || t === null || !("errors" in t) || !Array.isArray(t.errors) ? !1 : t.errors.every(Ry);
}
function Ry(e) {
  return !(typeof e != "object" || e === null || !("field" in e) || typeof e.field != "string" || !("errorMessage" in e) || typeof e.errorMessage != "string");
}
const ad = ({
  t: e,
  form: t,
  attribute: n,
  renderer: r,
  children: i
}) => {
  const s = Pa(
    e,
    n.annotations?.inputHelperTextBefore
  ), {
    formState: { errors: o }
  } = t, l = r?.(n), c = Wn(o, ps(n.name));
  return /* @__PURE__ */ C(
    se,
    {
      label: Bf(e, n) || "",
      fieldId: n.name,
      isRequired: mp(n),
      labelIcon: s ? /* @__PURE__ */ a(le, { helpText: s, fieldLabelId: n.name }) : void 0,
      children: [
        l ? /* @__PURE__ */ C(Qt, { children: [
          i,
          l
        ] }) : i,
        c && /* @__PURE__ */ a(
          En,
          {
            "data-testid": `${n.name}-helper`,
            message: c.message
          }
        )
      ]
    },
    n.name
  );
}, ZF = ({
  t: e,
  form: t,
  attribute: n,
  renderer: r,
  ...i
}) => /* @__PURE__ */ a(ad, { t: e, form: t, attribute: n, renderer: r, children: /* @__PURE__ */ a(
  QF,
  {
    t: e,
    form: t,
    "aria-label": Bf(e, n),
    name: ps(n.name),
    addButtonLabel: e("addMultivaluedLabel", {
      fieldLabel: Bf(e, n)
    }),
    ...i
  }
) }), QF = ({
  t: e,
  name: t,
  inputType: n,
  form: r,
  addButtonLabel: i,
  isDisabled: s = !1,
  defaultValue: o,
  id: l,
  ...c
}) => {
  const { register: d, setValue: u, control: p } = r, m = nt({
    name: t,
    control: p,
    defaultValue: o || ""
  }), f = et(() => Array.isArray(m) && m.length !== 0 ? m : o || [""], [m]), g = (w) => {
    y([...f.slice(0, w), ...f.slice(w + 1)]);
  }, b = () => {
    y([...f, ""]);
  }, v = (w, R) => {
    y([...f.slice(0, w), R, ...f.slice(w + 1)]);
  }, y = (w) => {
    const R = w.flatMap((S) => S);
    u(t, R, {
      shouldDirty: !0
    });
  }, x = n.startsWith("html") ? n.substring(6) : "text";
  return He(() => {
    d(t);
  }, [d]), /* @__PURE__ */ a("div", { id: l, children: f.map((w, R) => /* @__PURE__ */ C(ka, { children: [
    /* @__PURE__ */ C(Qt, { children: [
      /* @__PURE__ */ a(dt, { isFill: !0, children: /* @__PURE__ */ a(
        mt,
        {
          "data-testid": t + R,
          onChange: (S, _) => v(R, _),
          name: `${t}.${R}.value`,
          value: w,
          isDisabled: s,
          type: x,
          ...c
        }
      ) }),
      /* @__PURE__ */ a(dt, { children: /* @__PURE__ */ a(
        z,
        {
          "data-testid": "remove" + R,
          variant: xe.link,
          onClick: () => g(R),
          tabIndex: -1,
          "aria-label": e("remove"),
          isDisabled: f.length === 1 || s,
          children: /* @__PURE__ */ a(Ni, {})
        }
      ) })
    ] }),
    R === f.length - 1 && /* @__PURE__ */ C(
      z,
      {
        variant: xe.link,
        onClick: b,
        tabIndex: -1,
        "aria-label": e("add"),
        "data-testid": "addValue",
        isDisabled: !w || s,
        children: [
          /* @__PURE__ */ a(Ea, {}),
          " ",
          e(i || "add")
        ]
      }
    )
  ] }, R)) });
}, Ay = (e) => {
  const { form: t, inputType: n, attribute: r } = e, i = mp(r), s = n.startsWith("multiselect"), o = s ? rn : sn, l = r.validators?.options?.options || [], c = r.annotations?.inputOptionLabels || {};
  return /* @__PURE__ */ a(ad, { ...e, children: /* @__PURE__ */ a(
    ge,
    {
      name: ps(r.name),
      control: t.control,
      defaultValue: "",
      render: ({ field: d }) => /* @__PURE__ */ a(ee, { children: l.map((u) => /* @__PURE__ */ a(
        o,
        {
          id: u,
          "data-testid": u,
          label: Pa(e.t, c[u], u),
          value: u,
          isChecked: d.value.includes(u),
          onChange: () => {
            s ? d.value.includes(u) ? d.onChange(
              d.value.filter((p) => p !== u)
            ) : d.onChange([...d.value, u]) : d.onChange([u]);
          },
          readOnly: r.readOnly,
          isRequired: i
        },
        u
      )) })
    }
  ) });
}, e8 = ({
  toggleId: e,
  onToggle: t,
  onSelect: n,
  selections: r,
  isOpen: i,
  menuAppendTo: s,
  direction: o,
  width: l,
  maxHeight: c,
  toggleIcon: d,
  className: u,
  children: p,
  ...m
}) => {
  const [f, g] = N(!1), b = Ct(), v = () => {
    g(!f), t(!f);
  }, y = () => s === "parent" && b.current?.parentElement || "inline", x = Ku.toArray(
    p
  );
  return /* @__PURE__ */ a(
    Bn,
    {
      ref: b,
      maxMenuHeight: xu(c),
      isScrollable: !0,
      popperProps: {
        appendTo: y(),
        direction: o,
        width: xu(l)
      },
      ...m,
      onClick: v,
      onOpenChange: () => g(!1),
      selected: r,
      onSelect: (w, R) => {
        n?.(R || ""), v();
      },
      toggle: (w) => /* @__PURE__ */ a(
        yt,
        {
          id: e,
          ref: w,
          className: u,
          onClick: v,
          isExpanded: i,
          "aria-label": m["aria-label"],
          icon: d,
          isFullWidth: !0,
          children: x.find((R) => R.props.value === r)?.props.children || r || m["aria-label"]
        }
      ),
      isOpen: i,
      children: /* @__PURE__ */ a(ia, { children: p })
    }
  );
}, t8 = ({
  toggleId: e,
  onSelect: t,
  onToggle: n,
  onFilter: r,
  variant: i,
  validated: s,
  placeholderText: o,
  maxHeight: l,
  width: c,
  toggleIcon: d,
  direction: u,
  selections: p,
  typeAheadAriaLabel: m,
  chipGroupComponent: f,
  chipGroupProps: g,
  footer: b,
  children: v,
  ...y
}) => {
  const [x, w] = N(""), [R, S] = N(0), _ = Ct(), O = Ku.toArray(
    v
  ), E = () => {
    n?.(!y.isOpen);
  }, T = (I) => {
    const k = O[R];
    switch (n?.(!0), I.key) {
      case "Enter": {
        I.preventDefault(), i !== Wi.typeaheadMulti ? w(k.props.value) : w(""), t?.(k.props.value), n?.(!1), S(0);
        break;
      }
      case "Escape": {
        n?.(!1);
        break;
      }
      case "Backspace": {
        i === Wi.typeahead && t?.("");
        break;
      }
      case "ArrowUp":
      case "ArrowDown": {
        I.preventDefault();
        let P = 0;
        I.key === "ArrowUp" && (R === 0 ? P = O.length - 1 : P = R - 1), I.key === "ArrowDown" && (R === O.length - 1 ? P = 0 : P = R + 1), S(P);
        break;
      }
    }
  };
  return /* @__PURE__ */ C(
    Bn,
    {
      ...y,
      onClick: E,
      onOpenChange: () => n?.(!1),
      onSelect: (I, k) => t?.(k || ""),
      maxMenuHeight: xu(l),
      popperProps: { direction: u, width: xu(c) },
      toggle: (I) => /* @__PURE__ */ a(
        yt,
        {
          ref: I,
          id: e,
          variant: "typeahead",
          onClick: () => n?.(!0),
          icon: d,
          isExpanded: y.isOpen,
          isFullWidth: !0,
          status: s === "error" ? Zi.danger : void 0,
          children: /* @__PURE__ */ C(Qo, { isPlain: !0, children: [
            /* @__PURE__ */ a(
              el,
              {
                placeholder: o,
                value: i === Wi.typeahead && p ? p : x,
                onClick: E,
                onChange: (k, P) => {
                  w(P), r?.(P);
                },
                onKeyDown: (k) => T(k),
                autoComplete: "off",
                innerRef: _,
                role: "combobox",
                isExpanded: y.isOpen,
                "aria-controls": "select-typeahead-listbox",
                "aria-label": m,
                children: i === Wi.typeaheadMulti && Array.isArray(p) && (f || /* @__PURE__ */ a(vn, { ...g, children: p.map((k, P) => /* @__PURE__ */ a(
                  Ut,
                  {
                    onClick: (D) => {
                      D.stopPropagation(), t?.(k);
                    },
                    children: k
                  },
                  P
                )) }))
              }
            ),
            /* @__PURE__ */ a(tl, { children: !!x && /* @__PURE__ */ a(
              z,
              {
                variant: "plain",
                onClick: () => {
                  t?.(""), w(""), r?.(""), _?.current?.focus();
                },
                "aria-label": "Clear input value",
                children: /* @__PURE__ */ a(Oa, { "aria-hidden": !0 })
              }
            ) })
          ] })
        }
      ),
      children: [
        /* @__PURE__ */ a(ia, { children: v }),
        b && /* @__PURE__ */ a(N1, { children: b })
      ]
    }
  );
};
var Wi = /* @__PURE__ */ ((e) => (e.single = "single", e.typeahead = "typeahead", e.typeaheadMulti = "typeaheadMulti", e))(Wi || {});
const xu = (e) => typeof e == "number" ? e + "px" : e, ft = ({
  variant: e = "single",
  ...t
}) => e === "single" ? /* @__PURE__ */ a(e8, { ...t }) : /* @__PURE__ */ a(t8, { ...t, variant: e }), Ly = (e) => {
  const { t, form: n, inputType: r, attribute: i } = e, [s, o] = N(!1), [l, c] = N(""), d = r === "multiselect", u = (b, v) => {
    d ? v.value.includes(b) ? v.onChange(v.value.filter((y) => y !== b)) : Array.isArray(v.value) ? v.onChange([...v.value, b]) : v.onChange([b]) : v.onChange(b === v.value ? "" : b);
  }, p = i.validators?.options?.options || [], m = i.annotations?.inputOptionLabels || {}, f = (b) => Pa(e.t, m[b], b), g = (b) => p.filter(
    (v) => f(v).toLowerCase().includes(l.toLowerCase())
  ).map((v) => /* @__PURE__ */ a(
    _e,
    {
      selected: b === v,
      value: v,
      children: f(v)
    },
    v
  ));
  return /* @__PURE__ */ a(ad, { ...e, children: /* @__PURE__ */ a(
    ge,
    {
      name: ps(i.name),
      defaultValue: "",
      control: n.control,
      render: ({ field: b }) => /* @__PURE__ */ a(
        ft,
        {
          toggleId: i.name,
          onToggle: (v) => o(v),
          onClear: () => u("", b),
          onSelect: (v) => {
            const y = v.toString();
            u(y, b), Array.isArray(b.value) || o(!1);
          },
          selections: d && Array.isArray(b.value) ? b.value : f(b.value),
          variant: d ? Wi.typeaheadMulti : p.length >= 10 ? Wi.typeahead : Wi.single,
          "aria-label": t("selectOne"),
          isOpen: s,
          isDisabled: i.readOnly,
          onFilter: (v) => (c(v), g(b.value)),
          children: g(b.value)
        }
      )
    }
  ) });
}, n8 = (e) => {
  const { form: t, attribute: n } = e, r = mp(n);
  return /* @__PURE__ */ a(ad, { ...e, children: /* @__PURE__ */ a(
    Tg,
    {
      id: n.name,
      "data-testid": n.name,
      ...t.register(ps(n.name)),
      cols: n.annotations?.inputTypeCols,
      rows: n.annotations?.inputTypeRows,
      readOnly: n.readOnly,
      isRequired: r
    }
  ) });
}, Lr = (e) => {
  const { form: t, inputType: n, attribute: r } = e, i = mp(r), s = n.startsWith("html") ? n.substring(6) : "text";
  return /* @__PURE__ */ a(ad, { ...e, children: /* @__PURE__ */ a(
    mt,
    {
      id: r.name,
      "data-testid": r.name,
      type: s,
      placeholder: Pa(
        e.t,
        r.annotations?.inputTypePlaceholder
      ),
      readOnly: r.readOnly,
      isRequired: i,
      ...t.register(ps(r.name))
    }
  ) });
}, Vf = {
  text: Lr,
  textarea: n8,
  select: Ly,
  "select-radiobuttons": Ay,
  multiselect: Ly,
  "multiselect-checkboxes": Ay,
  "html5-email": Lr,
  "html5-tel": Lr,
  "html5-url": Lr,
  "html5-number": Lr,
  "html5-range": Lr,
  "html5-datetime-local": Lr,
  "html5-date": Lr,
  "html5-month": Lr,
  "html5-time": Lr,
  "multi-input": ZF
}, a8 = ({
  t: e,
  form: t,
  userProfileMetadata: n,
  supportedLocales: r,
  currentLocale: i,
  hideReadOnly: s = !1,
  renderer: o
}) => {
  const l = et(() => {
    if (!n.attributes)
      return [];
    const c = s ? n.attributes.filter(({ readOnly: d }) => !d) : n.attributes;
    return [
      // Insert an empty group for attributes without a group.
      { name: void 0 },
      ...n.groups ?? []
    ].map((d) => ({
      group: d,
      attributes: c.filter(
        (u) => u.group === d.name
      )
    }));
  }, [
    s,
    n.groups,
    n.attributes
  ]);
  return l.length === 0 ? null : /* @__PURE__ */ a(
    ll,
    {
      label: e("jumpToSection"),
      sections: l.filter((c) => c.attributes.length > 0).map(({ group: c, attributes: d }) => ({
        title: Pa(e, c.displayHeader, c.name) || e("general"),
        panel: /* @__PURE__ */ C("div", { className: "pf-v5-c-form", children: [
          c.displayDescription && /* @__PURE__ */ a(tt, { className: "pf-v5-u-pb-lg", children: Pa(e, c.displayDescription, "") }),
          d.map((u) => /* @__PURE__ */ a(
            r8,
            {
              t: e,
              form: t,
              supportedLocales: r,
              currentLocale: i,
              renderer: o,
              attribute: u
            },
            u.name
          ))
        ] })
      }))
    }
  );
}, r8 = ({
  t: e,
  form: t,
  renderer: n,
  supportedLocales: r,
  currentLocale: i,
  attribute: s
}) => {
  const o = t.watch(
    ps(s.name)
  ), l = et(() => s8(s), [s]), c = s.multivalued || l8(o) && s.annotations?.inputType === void 0 ? Vf["multi-input"] : Vf[l];
  return s.name === "locale" ? /* @__PURE__ */ a(
    XF,
    {
      form: t,
      supportedLocales: r,
      currentLocale: i,
      t: e,
      attribute: s
    }
  ) : /* @__PURE__ */ a(
    c,
    {
      t: e,
      form: t,
      inputType: l,
      attribute: s,
      renderer: n
    }
  );
}, i8 = "text";
function s8(e) {
  if (Ew(e.name))
    return "text";
  const t = e.annotations?.inputType;
  return o8(t) ? t : i8;
}
const o8 = (e) => typeof e == "string" && e in Vf, l8 = (e) => Array.isArray(e) && e.length > 1, Pw = Er("AdminClientContext", void 0), pe = () => Ir(Pw);
async function c8(e, t) {
  const n = new OI();
  return n.setConfig({ realmName: t.realm }), n.baseUrl = t.adminBaseUrl, n.registerTokenProvider({
    async getAccessToken() {
      try {
        await e.updateToken(5);
      } catch {
        e.login();
      }
      return e.token;
    }
  }), n;
}
const ze = (e) => {
  const [t, n] = N(!1);
  function r() {
    n((s) => !s);
  }
  return [r, () => /* @__PURE__ */ a(
    ms,
    {
      ...e,
      open: t,
      toggleDialog: r
    },
    "confirmDialog"
  )];
}, ms = ({
  titleKey: e,
  messageKey: t,
  noCancelButton: n,
  cancelButtonLabel: r,
  continueButtonLabel: i,
  continueButtonVariant: s,
  onConfirm: o,
  onCancel: l,
  children: c,
  open: d = !0,
  variant: u = Rt.small,
  toggleDialog: p,
  confirmButtonDisabled: m
}) => {
  const { t: f } = H();
  return /* @__PURE__ */ C(
    ht,
    {
      title: f(e),
      isOpen: d,
      onClose: p,
      variant: u,
      actions: [
        /* @__PURE__ */ a(
          z,
          {
            id: "modal-confirm",
            "data-testid": "confirm",
            isDisabled: m,
            variant: s || xe.primary,
            onClick: () => {
              o(), p();
            },
            children: f(i || "continue")
          },
          "confirm"
        ),
        !n && /* @__PURE__ */ a(
          z,
          {
            id: "modal-cancel",
            "data-testid": "cancel",
            variant: xe.link,
            onClick: () => {
              l && l(), p();
            },
            children: f(r || "cancel")
          },
          "cancel"
        )
      ],
      children: [
        !t && c,
        t && f(t)
      ]
    }
  );
}, gt = () => {
  const { t: e } = H();
  return /* @__PURE__ */ a(aS, { children: /* @__PURE__ */ a(ei, { "aria-label": e("spinnerLoading") }) });
}, ct = ({
  message: e,
  instructions: t,
  onPrimaryAction: n,
  hasIcon: r = !0,
  isSearchVariant: i,
  primaryActionText: s,
  secondaryActions: o,
  icon: l,
  isDisabled: c = !1
}) => /* @__PURE__ */ C(Sr, { "data-testid": "empty-state", variant: "lg", children: [
  r && i ? /* @__PURE__ */ a(Ns, { icon: Ls }) : r && /* @__PURE__ */ a(Ns, { icon: l || Ea }),
  /* @__PURE__ */ a(ki, { titleText: e, headingLevel: "h1" }),
  /* @__PURE__ */ a(Ri, { children: t }),
  /* @__PURE__ */ C(rs, { children: [
    s && /* @__PURE__ */ a(
      z,
      {
        "data-testid": `${e.replace(/\W+/g, "-").toLowerCase()}-empty-action`,
        variant: "primary",
        onClick: n,
        isDisabled: c,
        children: s
      }
    ),
    o && /* @__PURE__ */ a(xo, { children: o.map((d) => /* @__PURE__ */ a(
      z,
      {
        "data-testid": `${d.text.replace(/\W+/g, "-").toLowerCase()}-empty-action`,
        variant: d.type || xe.secondary,
        onClick: d.onClick,
        isDisabled: c,
        children: d.text
      },
      d.text
    )) })
  ] })
] });
var _w = { exports: {} };
(function(e, t) {
  (function(n, r) {
    r();
  })(ya, function() {
    function n(d, u) {
      return typeof u > "u" ? u = { autoBom: !1 } : typeof u != "object" && (console.warn("Deprecated: Expected third argument to be a object"), u = { autoBom: !u }), u.autoBom && /^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(d.type) ? new Blob(["\uFEFF", d], { type: d.type }) : d;
    }
    function r(d, u, p) {
      var m = new XMLHttpRequest();
      m.open("GET", d), m.responseType = "blob", m.onload = function() {
        c(m.response, u, p);
      }, m.onerror = function() {
        console.error("could not download file");
      }, m.send();
    }
    function i(d) {
      var u = new XMLHttpRequest();
      u.open("HEAD", d, !1);
      try {
        u.send();
      } catch {
      }
      return 200 <= u.status && 299 >= u.status;
    }
    function s(d) {
      try {
        d.dispatchEvent(new MouseEvent("click"));
      } catch {
        var u = document.createEvent("MouseEvents");
        u.initMouseEvent("click", !0, !0, window, 0, 0, 0, 80, 20, !1, !1, !1, !1, 0, null), d.dispatchEvent(u);
      }
    }
    var o = typeof window == "object" && window.window === window ? window : typeof self == "object" && self.self === self ? self : typeof ya == "object" && ya.global === ya ? ya : void 0, l = o.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent), c = o.saveAs || (typeof window != "object" || window !== o ? function() {
    } : "download" in HTMLAnchorElement.prototype && !l ? function(d, u, p) {
      var m = o.URL || o.webkitURL, f = document.createElement("a");
      u = u || d.name || "download", f.download = u, f.rel = "noopener", typeof d == "string" ? (f.href = d, f.origin === location.origin ? s(f) : i(f.href) ? r(d, u, p) : s(f, f.target = "_blank")) : (f.href = m.createObjectURL(d), setTimeout(function() {
        m.revokeObjectURL(f.href);
      }, 4e4), setTimeout(function() {
        s(f);
      }, 0));
    } : "msSaveOrOpenBlob" in navigator ? function(d, u, p) {
      if (u = u || d.name || "download", typeof d != "string") navigator.msSaveOrOpenBlob(n(d, p), u);
      else if (i(d)) r(d, u, p);
      else {
        var m = document.createElement("a");
        m.href = d, m.target = "_blank", setTimeout(function() {
          s(m);
        });
      }
    } : function(d, u, p, m) {
      if (m = m || open("", "_blank"), m && (m.document.title = m.document.body.innerText = "downloading..."), typeof d == "string") return r(d, u, p);
      var f = d.type === "application/octet-stream", g = /constructor/i.test(o.HTMLElement) || o.safari, b = /CriOS\/[\d]+/.test(navigator.userAgent);
      if ((b || f && g || l) && typeof FileReader < "u") {
        var v = new FileReader();
        v.onloadend = function() {
          var w = v.result;
          w = b ? w : w.replace(/^data:[^;]*;/, "data:attachment/file;"), m ? m.location.href = w : location = w, m = null;
        }, v.readAsDataURL(d);
      } else {
        var y = o.URL || o.webkitURL, x = y.createObjectURL(d);
        m ? m.location = x : location.href = x, m = null, setTimeout(function() {
          y.revokeObjectURL(x);
        }, 4e4);
      }
    });
    o.saveAs = c.saveAs = c, e.exports = c;
  });
})(_w);
var fs = _w.exports;
function d8(e) {
  return e && e.constructor && typeof e.constructor.isBuffer == "function" && e.constructor.isBuffer(e);
}
function u8(e) {
  return e;
}
function Rw(e, t) {
  t = t || {};
  const n = t.delimiter || ".", r = t.maxDepth, i = t.transformKey || u8, s = {};
  function o(l, c, d) {
    d = d || 1, Object.keys(l).forEach(function(u) {
      const p = l[u], m = t.safe && Array.isArray(p), f = Object.prototype.toString.call(p), g = d8(p), b = f === "[object Object]" || f === "[object Array]", v = c ? c + n + i(u) : i(u);
      if (!m && !g && b && Object.keys(p).length && (!t.maxDepth || d < r))
        return o(p, v, d + 1);
      s[v] = p;
    });
  }
  return o(e), s;
}
function Bo(e = []) {
  const t = e.filter(({ key: r }) => r !== ""), n = {};
  for (const { key: r, value: i } of t)
    r in n ? n[r].push(i) : n[r] = [i];
  return n;
}
function Ec(e = {}) {
  return Object.entries(e).flatMap(
    ([n, r]) => r.map((i) => ({ key: n, value: i }))
  );
}
const fp = (e) => [...new Map(Object.entries(e).sort(p8)).keys()], p8 = (e, t) => {
  let n, r;
  return e[1].order !== t[1].order ? (n = t[1].order, r = e[1].order) : (n = e[0], r = t[0]), n < r ? -1 : n > r ? 1 : 0;
}, Od = (e) => e.replace(/\s/g, "-"), Aw = (e) => {
  const t = wc(e);
  if (delete t.id, t.protocolMappers)
    for (let n = 0; n < t.protocolMappers.length; n++)
      delete t.protocolMappers[n].id;
  fs.saveAs(
    new Blob([Fa(t)], {
      type: "application/json"
    }),
    t.clientId + ".json"
  );
}, wa = (e) => e.charAt(0).toUpperCase() + e.slice(1), m8 = (e) => Object.values(e).filter(
  (t) => Array.isArray(t) && t.length >= 1
).length !== 0, f8 = (e) => Array.isArray(e) ? e.some(
  (t) => Object.hasOwn(t, "key") && Object.hasOwn(t, "value")
) : !1, h8 = (e) => Object.keys(e).length === 0;
function Ne(e) {
  const t = e.indexOf(".");
  return `${e.substring(0, t)}.${Es(e.substring(t + 1))}`;
}
const Es = (e) => e.replaceAll(".", "🍺"), Lw = (e) => e.replaceAll("🍺", ".");
function In(e, t) {
  Object.entries(e).map((n) => {
    const [r, i] = n;
    if (r === "attributes" && m8(i))
      t(r, Ec(i));
    else if (r === "config" || r === "attributes")
      if (h8(i))
        t(r, void 0);
      else {
        const s = Rw(i, { safe: !0 });
        Object.entries(s).map(
          ([l, c]) => Array.isArray(c) && c.length === 1 ? [l, c[0]] : [l, c]
        ).forEach(
          ([l, c]) => t(`${r}.${Es(l)}`, c)
        );
      }
    else
      t(r, i);
  });
}
function Zn(e) {
  const t = {};
  return Object.entries(e).map(([n, r]) => {
    f8(r) ? t[n] = Bo(r) : n === "config" || n === "attributes" ? t[n] = Object.fromEntries(
      Object.entries(
        r || {}
      ).map(([i, s]) => [Lw(i), s])
    ) : t[n] = r;
  }), t;
}
const on = () => (e) => e || "—", rd = () => (e) => {
  const t = e?.toString();
  return t ? wa(t) : void 0;
}, Kd = /^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/, Oo = "org.keycloak.keys.KeyProvider", Fa = (e) => JSON.stringify(e, null, 2), os = (e) => e.endsWith("/") ? e : e + "/", gr = (e, t) => {
  try {
    return new Intl.DisplayNames([t], { type: "language" }).of(
      // This is mapping old locale codes to the new locale codes for Simplified and Traditional Chinese.
      // Once the existing locales have been moved, this code can be removed.
      e === "zh-CN" ? "zh-HANS" : e === "zh-TW" ? "zh-HANT" : e
    );
  } catch {
    return e;
  }
}, Ny = "pf-v5-theme-dark", Eg = window.matchMedia && window.matchMedia("(prefers-color-scheme: dark)");
Nw(Eg?.matches);
Eg?.addEventListener(
  "change",
  (e) => Nw(e.matches)
);
function Nw(e = !1) {
  const { classList: t } = document.documentElement;
  e ? t.add(Ny) : t.remove(Ny);
}
const Dw = Er("ErrorBoundaryContext", void 0), Mw = () => Ir(Dw);
class g8 extends BE {
  state = {};
  static getDerivedStateFromError = (t) => ({ error: t });
  showBoundary = (t) => {
    this.setState({ error: t });
  };
  render() {
    return /* @__PURE__ */ a(
      Dw.Provider,
      {
        value: { error: this.state.error, showBoundary: this.showBoundary },
        children: this.props.children
      }
    );
  }
}
const b8 = ({ children: e, fallback: t }) => {
  const { error: n } = Mw();
  return n ? /* @__PURE__ */ a(t, { error: n }) : e;
};
function Re(e, t, n) {
  const { showBoundary: r } = Mw();
  He(() => {
    const i = new AbortController(), { signal: s } = i;
    return e().then((o) => {
      s.aborted || t(o);
    }).catch((o) => {
      s.aborted || r(o);
    }), () => i.abort();
  }, n);
}
const Fw = Er("ServerInfoContext", void 0), Tt = () => Ir(Fw), $w = () => fp(Tt().providers["login-protocol"].providers), v8 = ({ children: e }) => {
  const { adminClient: t } = pe(), [n, r] = N(), i = bn(async () => {
    try {
      return await t.serverInfo.find();
    } catch (s) {
      if (s instanceof Go && s.response?.status === 403)
        return {};
      throw s;
    }
  }, []);
  return Re(i, r, []), n ? /* @__PURE__ */ a(Fw.Provider, { value: n, children: e }) : /* @__PURE__ */ a(gt, {});
}, y8 = ({
  name: e,
  label: t,
  helpText: n,
  isDisabled: r = !1,
  defaultValue: i,
  isNew: s = !0
}) => {
  const { t: o } = H(), { control: l } = Le();
  return /* @__PURE__ */ a(
    se,
    {
      hasNoPaddingTop: !0,
      label: o(t),
      fieldId: e,
      labelIcon: /* @__PURE__ */ a(le, { helpText: o(n), fieldLabelId: `${t}` }),
      children: /* @__PURE__ */ a(
        ge,
        {
          name: ma(e),
          "data-testid": e,
          defaultValue: s ? i : !1,
          control: l,
          render: ({ field: c }) => /* @__PURE__ */ a(
            Ye,
            {
              id: e,
              isDisabled: r,
              label: o("on"),
              labelOff: o("off"),
              isChecked: c.value === "true" || c.value === !0 || c.value?.[0] === "true",
              onChange: (d, u) => c.onChange("" + u),
              "data-testid": e,
              "aria-label": o(t)
            }
          )
        }
      )
    }
  );
}, Ig = ({
  name: e,
  label: t,
  helpText: n,
  defaultValue: r,
  isDisabled: i = !1,
  required: s = !1,
  variant: o = "typeahead"
}) => {
  const { adminClient: l } = pe(), { t: c } = H(), [d, u] = N([]), [p, m] = N("");
  return Re(
    () => {
      const f = {
        max: 20
      };
      return p && (f.clientId = p, f.search = !0), l.clients.find(f);
    },
    (f) => u(f),
    [p]
  ), /* @__PURE__ */ a(
    at,
    {
      name: e,
      label: c(t),
      labelIcon: c(n),
      controller: {
        defaultValue: r || "",
        rules: {
          required: {
            value: s,
            message: c("required")
          }
        }
      },
      onFilter: (f) => m(f),
      variant: o,
      isDisabled: i,
      options: d.map(({ clientId: f }) => f)
    }
  );
}, C8 = (e) => /* @__PURE__ */ a(Ig, { ...e, name: ma(e.name) });
var vo = /* @__PURE__ */ ((e) => (e.text = "text", e.dataURL = "dataURL", e))(vo || {});
function x8(e, t) {
  return new Promise((n, r) => {
    const i = new FileReader();
    switch (i.onload = () => n(i.result), i.onerror = () => r(i.error), t) {
      case "text":
        i.readAsText(e);
        break;
      case "dataURL":
        i.readAsDataURL(e);
        break;
      default:
        r("unknown type");
    }
  });
}
const jw = ({
  id: e,
  type: t,
  value: n = "",
  filename: r = "",
  onChange: i,
  onBrowseButtonClick: s,
  onClearButtonClick: o,
  onTextAreaClick: l,
  onTextChange: c,
  className: d = "",
  isDisabled: u = !1,
  isReadOnly: p = !1,
  isLoading: m = !1,
  spinnerAriaValueText: f,
  isRequired: g = !1,
  isDragActive: b = !1,
  validated: v = "default",
  "aria-label": y = "File upload",
  filenamePlaceholder: x = "Drag a file here or browse to upload",
  filenameAriaLabel: w = r ? "Read only filename" : x,
  browseButtonText: R = "Browse...",
  clearButtonText: S = "Clear",
  isClearButtonDisabled: _ = !r && !n,
  containerRef: O = null,
  allowEditingUploadedText: E = !1,
  hideDefaultPreview: T = !1,
  children: I = null,
  ...k
}) => {
  const P = (D, F) => {
    i?.(D, r, F), c?.(D);
  };
  return /* @__PURE__ */ C(
    "div",
    {
      className: $(
        pi.fileUpload,
        b && pi.modifiers.dragHover,
        m && pi.modifiers.loading,
        d
      ),
      ref: O,
      ...k,
      children: [
        /* @__PURE__ */ a("div", { className: pi.fileUploadFileSelect, children: /* @__PURE__ */ C(Qt, { children: [
          /* @__PURE__ */ a(dt, { isFill: !0, children: /* @__PURE__ */ a(
            mt,
            {
              isDisabled: u,
              id: `${e}-filename`,
              name: `${e}-filename`,
              "aria-label": w,
              placeholder: x,
              "aria-describedby": `${e}-browse-button`,
              value: r,
              readOnlyVariant: "default"
            }
          ) }),
          /* @__PURE__ */ a(dt, { children: /* @__PURE__ */ a(
            z,
            {
              id: `${e}-browse-button`,
              variant: xe.control,
              onClick: s,
              isDisabled: u,
              children: R
            }
          ) }),
          /* @__PURE__ */ a(dt, { children: /* @__PURE__ */ a(
            z,
            {
              variant: xe.control,
              isDisabled: u || _,
              onClick: o,
              children: S
            }
          ) })
        ] }) }),
        /* @__PURE__ */ C("div", { className: pi.fileUploadFileDetails, children: [
          !T && t === vo.text && /* @__PURE__ */ a(
            Ai,
            {
              readOnly: p || !!r && !E,
              disabled: u,
              isRequired: g,
              resizeOrientation: df.vertical,
              validated: v,
              id: e,
              name: e,
              "aria-label": y,
              value: n,
              onChange: (D, F) => P(F, D),
              onClick: l
            }
          ),
          m && /* @__PURE__ */ a("div", { className: pi.fileUploadFileDetailsSpinner, children: /* @__PURE__ */ a(
            ei,
            {
              size: Qd.lg,
              "aria-valuetext": f
            }
          ) })
        ] }),
        I
      ]
    }
  );
};
jw.displayName = "FileUploadField";
const Uo = ({
  id: e,
  type: t,
  value: n = t === vo.text || t === vo.dataURL ? "" : void 0,
  filename: r = "",
  children: i = null,
  onChange: s,
  onFileInputChange: o,
  onReadStarted: l,
  onReadFinished: c,
  onReadFailed: d,
  onClearClick: u,
  onClick: p = (v) => v.preventDefault(),
  onTextChange: m,
  onDataChange: f,
  dropzoneProps: g = {},
  ...b
}) => {
  const v = (k, P) => {
    if (k.length > 0) {
      const D = k[0];
      P?.type === "drop" && o?.(P, D), t === vo.text || t === vo.dataURL ? (s?.("", D.name, P), l?.(D), x8(D, t).then((F) => {
        c?.(D), s?.(F, D.name, P), f?.(F);
      }).catch((F) => {
        d?.(F, D), c?.(D), s?.("", "", P), f?.("");
      })) : s?.(D, D.name, P);
    }
    g.onDropAccepted?.(k, P);
  }, y = (k, P) => {
    k.length > 0 && s?.("", k[0].file.name, P), g.onDropRejected?.(k, P);
  }, x = (k) => {
    s?.("", "", k), u?.(k), E("");
  }, { getRootProps: w, getInputProps: R, isDragActive: S, open: _, inputRef: O } = Ax({
    multiple: !1,
    ...g,
    onDropAccepted: v,
    onDropRejected: y
  }), E = (k) => {
    O.current && (O.current.value = k);
  }, T = R(), I = {
    ...T,
    onChange: async (k) => {
      T.onChange?.(k);
      const P = await xx(k.nativeEvent);
      P.length === 1 && o?.(k, P[0]);
    }
  };
  return /* @__PURE__ */ C(
    jw,
    {
      ...w({
        ...b,
        refKey: "containerRef",
        onClick: (k) => k.preventDefault()
      }),
      tabIndex: void 0,
      id: e,
      type: t,
      filename: r,
      value: n,
      onChange: s,
      isDragActive: S,
      onBrowseButtonClick: _,
      onClearButtonClick: x,
      onTextAreaClick: p,
      onTextChange: m,
      onClick: (k) => k.stopPropagation(),
      children: [
        /* @__PURE__ */ a(
          "input",
          {
            ...I,
            ref: O
          }
        ),
        i
      ]
    }
  );
};
Uo.displayName = "FileUpload";
const S8 = ({
  name: e,
  label: t,
  helpText: n,
  defaultValue: r,
  isDisabled: i = !1
}) => {
  const { t: s } = H(), { control: o } = Le(), [l, c] = N(""), [d, u] = N(!1);
  return /* @__PURE__ */ a(
    se,
    {
      label: s(t),
      labelIcon: /* @__PURE__ */ a(le, { helpText: s(n), fieldLabelId: `${t}` }),
      fieldId: e,
      children: /* @__PURE__ */ a(
        ge,
        {
          name: ma(e),
          control: o,
          defaultValue: r || "",
          render: ({ field: p }) => /* @__PURE__ */ a(
            Uo,
            {
              id: e,
              value: p.value,
              type: "text",
              filename: l,
              isDisabled: i,
              onFileInputChange: (m, f) => c(f.name),
              onReadStarted: () => u(!0),
              onReadFinished: () => u(!1),
              onClearClick: () => {
                p.onChange(""), c("");
              },
              isLoading: d,
              allowEditingUploadedText: !1,
              onChange: (m, f) => {
                p.onChange(m), c(f);
              }
            }
          )
        }
      )
    }
  );
}, Bw = ({
  toolbarItem: e,
  subToolbar: t,
  toolbarItemFooter: n,
  children: r,
  searchTypeComponent: i,
  inputGroupName: s,
  inputGroupPlaceholder: o,
  inputGroupOnEnter: l
}) => {
  const { t: c } = H(), [d, u] = N(""), p = () => {
    d !== "" ? (u(d), l?.(d)) : (u(""), l?.(""));
  }, m = (f) => {
    f.key === "Enter" && p();
  };
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(Sa, { children: /* @__PURE__ */ C(rr, { children: [
      s && /* @__PURE__ */ a(je, { children: /* @__PURE__ */ C(Qt, { "data-testid": s, children: [
        i,
        o && /* @__PURE__ */ a(
          Gc,
          {
            "data-testid": "table-search-input",
            placeholder: o,
            "aria-label": c("search"),
            value: d,
            onChange: (f, g) => {
              u(g);
            },
            onSearch: p,
            onKeyDown: m,
            onClear: () => {
              u(""), l?.("");
            }
          }
        )
      ] }) }),
      e
    ] }) }),
    t && /* @__PURE__ */ a(Sa, { children: /* @__PURE__ */ a(rr, { children: t }) }),
    /* @__PURE__ */ a(_t, {}),
    r,
    /* @__PURE__ */ a(Sa, { children: n })
  ] });
}, Dy = ({
  id: e,
  variant: t = "top",
  count: n,
  first: r,
  max: i,
  onNextClick: s,
  onPreviousClick: o,
  onPerPageSelect: l
}) => {
  const { t: c } = H(), d = Math.round(r / i);
  return /* @__PURE__ */ a(
    Xh,
    {
      widgetId: e,
      titles: {
        paginationAriaLabel: `${c("pagination")} ${t} `
      },
      isCompact: !0,
      toggleTemplate: ({
        firstIndex: u,
        lastIndex: p
      }) => /* @__PURE__ */ C("b", { children: [
        u,
        " - ",
        p
      ] }),
      itemCount: n + d * i,
      page: d + 1,
      perPage: i,
      onNextClick: (u, p) => s((p - 1) * i),
      onPreviousClick: (u, p) => o((p - 1) * i),
      onPerPageSelect: (u, p, m) => l(m - 1, p),
      variant: t
    }
  );
}, Fi = ({
  count: e,
  searchTypeComponent: t,
  toolbarItem: n,
  subToolbar: r,
  children: i,
  inputGroupName: s,
  inputGroupPlaceholder: o,
  inputGroupOnEnter: l,
  ...c
}) => /* @__PURE__ */ a(
  Bw,
  {
    searchTypeComponent: t,
    toolbarItem: /* @__PURE__ */ C(ee, { children: [
      n,
      /* @__PURE__ */ a(je, { variant: "pagination", children: /* @__PURE__ */ a(Dy, { count: e, ...c }) })
    ] }),
    subToolbar: r,
    toolbarItemFooter: e !== 0 ? /* @__PURE__ */ a(je, { variant: "pagination", children: /* @__PURE__ */ a(Dy, { count: e, variant: "bottom", ...c }) }) : null,
    inputGroupName: s,
    inputGroupPlaceholder: o,
    inputGroupOnEnter: l,
    children: i
  }
), Pg = ({
  group: { path: e },
  onMouseEnter: t,
  ...n
}) => {
  const [r, i] = N(""), o = /* @__PURE__ */ a("span", { onMouseEnter: (l) => {
    i(e), t?.(l);
  }, ...n, children: e });
  return r !== "" ? /* @__PURE__ */ a(Yt, { content: r, isVisible: !0, children: o }) : o;
}, cl = ({
  id: e,
  type: t,
  filterGroups: n,
  text: r,
  canBrowse: i = !0,
  isMove: s = !1,
  onClose: o,
  onConfirm: l
}) => {
  const { adminClient: c } = pe(), { t: d } = H(), [u, p] = N([]), [m, f] = N([]), [g, b] = N([]), [v, y] = N(""), [x, w] = N([]), [R, S] = N(), [_, O] = N(!1), [E, T] = N(10), [I, k] = N(0), [P, D] = N(0), F = () => m[m.length - 1];
  Re(
    async () => {
      let M, V, U;
      if (R) {
        if (!m.map(({ id: q }) => q).includes(R) && (M = await c.groups.findOne({ id: R }), !M))
          throw new Error(d("notFound"));
        const G = {
          first: I,
          max: E,
          parentId: R
        };
        V = await c.groups.listSubGroups(G);
      } else {
        const G = {
          first: I,
          max: E + 1
        };
        _ && (G.search = v), V = await c.groups.find(G);
      }
      return e && (U = await c.users.listGroups({
        id: e
      })), { group: M, groups: V, existingUserGroups: U };
    },
    async ({ group: M, groups: V, existingUserGroups: U }) => {
      w(U || []), M && (f([...m, M]), D(M.subGroupCount)), V.forEach((G) => {
        G.checked = !!u.find((q) => q.id === G.id);
      }), b(V), (_ || !R) && D(V.length);
    },
    [R, v, I, E]
  );
  const A = (M) => [
    ...x.map((V) => V.id),
    ...(n || []).map((V) => V.id)
  ].some((V) => V === M?.id);
  return /* @__PURE__ */ a(
    ht,
    {
      variant: _ ? Rt.medium : Rt.small,
      title: d(r.title, {
        group1: n?.[0]?.name,
        group2: m.length ? F().name : d("root")
      }),
      isOpen: !0,
      onClose: o,
      actions: [
        /* @__PURE__ */ a(
          z,
          {
            "data-testid": `${r.ok}-button`,
            variant: "primary",
            form: "group-form",
            onClick: () => {
              l(
                t === "selectMany" ? u : m.length ? [F()] : void 0
              );
            },
            isDisabled: t === "selectMany" && u.length === 0,
            children: d(r.ok)
          },
          "confirm"
        )
      ],
      children: /* @__PURE__ */ C(
        Fi,
        {
          count: P,
          first: I,
          max: E,
          onNextClick: k,
          onPreviousClick: k,
          onPerPageSelect: (M, V) => {
            k(M), T(V);
          },
          inputGroupName: "search",
          inputGroupOnEnter: (M) => {
            y(M), O(M !== ""), k(0), T(10), f([]), S(void 0);
          },
          inputGroupPlaceholder: d("searchForGroups"),
          children: [
            /* @__PURE__ */ C(Hc, { children: [
              m.length > 0 && /* @__PURE__ */ a(Ao, { children: /* @__PURE__ */ a(
                z,
                {
                  variant: "link",
                  onClick: () => {
                    S(void 0), f([]), k(0), T(10);
                  },
                  children: d("groups")
                }
              ) }, "home"),
              m.map((M, V) => /* @__PURE__ */ C(Ao, { children: [
                m.length - 1 !== V && /* @__PURE__ */ a(
                  z,
                  {
                    variant: "link",
                    onClick: () => {
                      S(M.id), f([...m].slice(0, V)), k(0), T(10);
                    },
                    children: M.name
                  }
                ),
                m.length - 1 === V && M.name
              ] }, V))
            ] }),
            /* @__PURE__ */ a(ar, { "aria-label": d("groups"), isCompact: !0, children: g.slice(0, E).map((M) => /* @__PURE__ */ C(ka, { children: [
              (!_ || M.name?.includes(v)) && /* @__PURE__ */ a(
                My,
                {
                  group: M,
                  isRowDisabled: A,
                  onSelect: S,
                  type: t,
                  isSearching: _,
                  setIsSearching: O,
                  selectedRows: u,
                  setSelectedRows: p,
                  canBrowse: i
                },
                M.id
              ),
              _ && M.subGroups?.map((V) => /* @__PURE__ */ a(
                My,
                {
                  group: V,
                  isRowDisabled: A,
                  onSelect: S,
                  type: t,
                  isSearching: _,
                  setIsSearching: O,
                  selectedRows: u,
                  setSelectedRows: p,
                  canBrowse: i
                },
                V.id
              ))
            ] }, M.id)) }),
            g.length === 0 && !_ && /* @__PURE__ */ a(
              ct,
              {
                hasIcon: !1,
                message: d("moveGroupEmpty"),
                instructions: s ? d("moveGroupEmptyInstructions") : void 0
              }
            ),
            g.length === 0 && _ && /* @__PURE__ */ a(
              ct,
              {
                message: d("noSearchResults"),
                instructions: d("noSearchResultsInstructions")
              }
            )
          ]
        }
      )
    }
  );
}, My = ({
  group: e,
  type: t,
  isRowDisabled: n,
  isSearching: r,
  setIsSearching: i,
  onSelect: s,
  selectedRows: o,
  setSelectedRows: l,
  canBrowse: c
}) => {
  const { t: d } = H();
  return /* @__PURE__ */ a(
    Ta,
    {
      "aria-labelledby": e.name,
      id: e.id,
      onClick: (u) => {
        t === "selectOne" ? s(e.id) : u.target.type !== "checkbox" && e.subGroupCount !== 0 && (s(e.id), i(!1));
      },
      children: /* @__PURE__ */ C(
        Ba,
        {
          className: `join-group-dialog-row${n(e) ? "-m-disabled" : ""}`,
          "data-testid": e.name,
          children: [
            t === "selectMany" && /* @__PURE__ */ a(
              Y1,
              {
                className: "kc-join-group-modal-check",
                "data-testid": `${e.name}-check`,
                "aria-label": e.name,
                checked: e.checked,
                isDisabled: n(e),
                onChange: (u, p) => {
                  e.checked = p;
                  let m = [];
                  e.checked ? m = [...o, e] : m = o.filter((f) => f.id !== e.id), l(m);
                },
                "aria-labelledby": `select-${e.name}`
              }
            ),
            /* @__PURE__ */ a(
              ja,
              {
                dataListCells: [
                  /* @__PURE__ */ a(
                    aa,
                    {
                      className: "keycloak-groups-group-path",
                      children: r ? /* @__PURE__ */ a(Pg, { id: `select-${e.name}`, group: e }) : /* @__PURE__ */ a("span", { id: `select-${e.name}`, children: e.name })
                    },
                    `name-${e.id}`
                  )
                ]
              }
            ),
            /* @__PURE__ */ a(
              X1,
              {
                id: "actions",
                "aria-labelledby": `select-${e.name}`,
                "aria-label": d("groupName"),
                isPlainButtonAction: !0,
                children: (c || t === "selectOne") && e.subGroupCount !== 0 && /* @__PURE__ */ a(z, { variant: "link", "aria-label": d("select"), children: /* @__PURE__ */ a(Nn, {}) })
              }
            )
          ]
        }
      )
    },
    e.id
  );
}, w8 = ({
  name: e,
  label: t,
  helpText: n,
  required: r
}) => {
  const { t: i } = H(), [s, o] = N(!1), [l, c] = N(), { control: d } = Le();
  return /* @__PURE__ */ a(
    ge,
    {
      name: ma(e),
      defaultValue: "",
      control: d,
      render: ({ field: u }) => /* @__PURE__ */ C(ee, { children: [
        s && /* @__PURE__ */ a(
          cl,
          {
            type: "selectOne",
            text: {
              title: "selectGroup",
              ok: "select"
            },
            onConfirm: (p) => {
              u.onChange(p?.[0].path), c(p), o(!1);
            },
            onClose: () => o(!1),
            filterGroups: l
          }
        ),
        /* @__PURE__ */ a(
          se,
          {
            label: i(t),
            labelIcon: /* @__PURE__ */ a(le, { helpText: i(n), fieldLabelId: `${t}` }),
            fieldId: e,
            isRequired: r,
            children: /* @__PURE__ */ C(Qt, { children: [
              /* @__PURE__ */ a(dt, { children: /* @__PURE__ */ a(vn, { children: u.value && /* @__PURE__ */ a(Ut, { onClick: () => u.onChange(void 0), children: u.value }) }) }),
              /* @__PURE__ */ a(dt, { children: /* @__PURE__ */ a(
                z,
                {
                  id: "kc-join-groups-button",
                  onClick: () => o(!s),
                  variant: "secondary",
                  "data-testid": "join-groups-button",
                  children: i("selectGroup")
                }
              ) })
            ] })
          }
        )
      ] })
    }
  );
}, k8 = ({
  name: e,
  label: t,
  helpText: n,
  defaultValue: r,
  options: i,
  required: s,
  isDisabled: o = !1
}) => {
  const { t: l } = H(), { control: c } = Le(), [d, u] = N(!1);
  return /* @__PURE__ */ a(
    se,
    {
      label: l(t),
      labelIcon: /* @__PURE__ */ a(le, { helpText: l(n), fieldLabelId: `${t}` }),
      fieldId: e,
      isRequired: s,
      children: /* @__PURE__ */ a(
        ge,
        {
          name: ma(e),
          "data-testid": e,
          defaultValue: r || i?.[0] || "",
          control: c,
          render: ({ field: p }) => /* @__PURE__ */ a(
            ft,
            {
              toggleId: e,
              isDisabled: o,
              onToggle: (m) => u(m),
              onSelect: (m) => {
                p.onChange(m), u(!1);
              },
              selections: p.value,
              variant: pt.single,
              "aria-label": l(t),
              isOpen: d,
              children: i?.map((m) => /* @__PURE__ */ a(
                _e,
                {
                  selected: m === p.value,
                  value: m,
                  children: m
                },
                m
              ))
            }
          )
        }
      )
    }
  );
}, O8 = ({
  name: e,
  label: t,
  helpText: n,
  required: r,
  isDisabled: i
}) => {
  const { t: s } = H(), { getValues: o, setValue: l, register: c } = Le(), [d, u] = N([]), p = ma(e);
  He(() => {
    c(p);
    const x = JSON.parse(o(p) || "[]");
    u(x.map((w) => ({ ...w, id: Mf() })));
  }, []);
  const m = () => u([...d, { key: "", value: "", id: Mf() }]), f = (x = d) => {
    l(
      p,
      JSON.stringify(
        // eslint-disable-next-line @typescript-eslint/no-unused-vars
        x.filter((w) => w.key !== "").map(({ id: w, ...R }) => R)
      )
    );
  }, g = (x, w) => {
    v(x, { ...d[x], key: w });
  }, b = (x, w) => {
    v(x, { ...d[x], value: w });
  }, v = (x, w) => u([...d.slice(0, x), w, ...d.slice(x + 1)]), y = (x) => {
    const w = [...d.slice(0, x), ...d.slice(x + 1)];
    u(w), f(w);
  };
  return d.length !== 0 ? /* @__PURE__ */ C(
    se,
    {
      label: s(t),
      labelIcon: /* @__PURE__ */ a(le, { helpText: s(n), fieldLabelId: `${t}` }),
      fieldId: e,
      isRequired: r,
      children: [
        /* @__PURE__ */ C(ra, { direction: { default: "column" }, children: [
          /* @__PURE__ */ C(ra, { children: [
            /* @__PURE__ */ a(
              Nt,
              {
                grow: { default: "grow" },
                spacer: { default: "spacerNone" },
                children: /* @__PURE__ */ a("strong", { children: s("key") })
              }
            ),
            /* @__PURE__ */ a(Nt, { grow: { default: "grow" }, children: /* @__PURE__ */ a("strong", { children: s("value") }) })
          ] }),
          d.map((x, w) => /* @__PURE__ */ C(ra, { "data-testid": "row", children: [
            /* @__PURE__ */ a(Nt, { grow: { default: "grow" }, children: /* @__PURE__ */ a(
              mt,
              {
                name: `${p}.${w}.key`,
                placeholder: s("keyPlaceholder"),
                "aria-label": s("key"),
                defaultValue: x.key,
                "data-testid": `${p}.${w}.key`,
                onChange: (R, S) => g(w, S),
                onBlur: () => f()
              }
            ) }),
            /* @__PURE__ */ a(
              Nt,
              {
                grow: { default: "grow" },
                spacer: { default: "spacerNone" },
                children: /* @__PURE__ */ a(
                  mt,
                  {
                    name: `${p}.${w}.value`,
                    placeholder: s("valuePlaceholder"),
                    "aria-label": s("value"),
                    defaultValue: x.value,
                    "data-testid": `${p}.${w}.value`,
                    onChange: (R, S) => b(w, S),
                    onBlur: () => f()
                  }
                )
              }
            ),
            /* @__PURE__ */ a(Nt, { children: /* @__PURE__ */ a(
              z,
              {
                variant: "link",
                title: s("removeAttribute"),
                isDisabled: i,
                onClick: () => y(w),
                "data-testid": `${p}.${w}.remove`,
                children: /* @__PURE__ */ a(Ni, {})
              }
            ) })
          ] }, x.id))
        ] }),
        /* @__PURE__ */ a(qu, { children: /* @__PURE__ */ a(yi, { children: /* @__PURE__ */ a(
          z,
          {
            "data-testid": `${p}-add-row`,
            className: "pf-v5-u-px-0 pf-v5-u-mt-sm",
            variant: "link",
            icon: /* @__PURE__ */ a(Ea, {}),
            onClick: () => m(),
            children: s("addAttribute", { label: t })
          }
        ) }) })
      ]
    }
  ) : /* @__PURE__ */ C(
    Sr,
    {
      "data-testid": `${e}-empty-state`,
      className: "pf-v5-u-p-0",
      variant: "xs",
      children: [
        /* @__PURE__ */ a(Ri, { children: s("missingAttributes", { label: t }) }),
        /* @__PURE__ */ a(rs, { children: /* @__PURE__ */ a(
          z,
          {
            "data-testid": `${e}-add-row`,
            variant: "link",
            icon: /* @__PURE__ */ a(Ea, {}),
            size: "sm",
            onClick: m,
            isDisabled: i,
            children: s("addAttribute", { label: t })
          }
        ) })
      ]
    }
  );
};
function Fy(e) {
  return typeof e == "string" && e.length > 0 ? e.split("##") : [];
}
function T8(e) {
  return e.join("##");
}
const E8 = ({
  name: e,
  label: t,
  helpText: n,
  defaultValue: r,
  options: i,
  isDisabled: s = !1,
  stringify: o,
  required: l
}) => {
  const { t: c } = H(), { control: d } = Le(), [u, p] = N(!1);
  return /* @__PURE__ */ a(
    se,
    {
      label: c(t),
      labelIcon: /* @__PURE__ */ a(le, { helpText: c(n), fieldLabelId: `${t}` }),
      fieldId: e,
      isRequired: l,
      children: /* @__PURE__ */ a(
        ge,
        {
          name: ma(e),
          control: d,
          defaultValue: r ? [r] : [],
          render: ({ field: m }) => /* @__PURE__ */ a(
            ft,
            {
              toggleId: e,
              "data-testid": e,
              isDisabled: s,
              chipGroupProps: {
                numChips: 3,
                expandedText: c("hide"),
                collapsedText: c("showRemaining")
              },
              variant: pt.typeaheadMulti,
              typeAheadAriaLabel: "Select",
              onToggle: (f) => p(f),
              selections: o ? Fy(m.value) : m.value,
              onSelect: (f) => {
                const g = f.toString(), b = o ? Fy(m.value) : m.value;
                let v;
                b.includes(g) ? v = b.filter((y) => y !== g) : v = [...b, g], m.onChange(o ? T8(v) : v);
              },
              onClear: () => {
                m.onChange(o ? "" : []);
              },
              isOpen: u,
              "aria-label": c(t),
              children: i?.map((f) => /* @__PURE__ */ a(_e, { value: f, children: f }, f))
            }
          )
        }
      )
    }
  );
};
function $y(e) {
  return typeof e == "string" ? e.split("##") : [e || ""];
}
function I8(e) {
  return e.join("##");
}
const yr = ({
  name: e,
  addButtonLabel: t,
  isDisabled: n = !1,
  defaultValue: r,
  stringify: i = !1,
  id: s,
  ...o
}) => {
  const { t: l } = H(), { register: c, setValue: d, control: u } = Le(), p = nt({
    name: e,
    control: u,
    defaultValue: r || ""
  }), m = et(() => {
    let y = i ? $y(
      Array.isArray(p) && p.length === 1 ? p[0] : p
    ) : Array.isArray(p) ? p : [p];
    return (!Array.isArray(y) || y.length === 0) && (y = (i ? $y(r) : r) || [""]), y;
  }, [p]), f = (y) => {
    v([...m.slice(0, y), ...m.slice(y + 1)]);
  }, g = () => {
    v([...m, ""]);
  }, b = (y, x) => {
    v([...m.slice(0, y), x, ...m.slice(y + 1)]);
  }, v = (y) => {
    const x = y.flatMap((w) => w);
    d(e, i ? I8(x) : x, {
      shouldDirty: !0
    });
  };
  return He(() => {
    c(e);
  }, [c]), /* @__PURE__ */ a("div", { id: s, children: m.map((y, x) => /* @__PURE__ */ C(ka, { children: [
    /* @__PURE__ */ C(Qt, { children: [
      /* @__PURE__ */ a(dt, { isFill: !0, children: /* @__PURE__ */ a(
        mt,
        {
          "data-testid": e + x,
          onChange: (w, R) => b(x, R),
          name: `${e}.${x}.value`,
          value: y,
          isDisabled: n,
          ...o
        }
      ) }),
      /* @__PURE__ */ a(dt, { children: /* @__PURE__ */ a(
        z,
        {
          "data-testid": "remove" + x,
          variant: xe.link,
          onClick: () => f(x),
          tabIndex: -1,
          "aria-label": l("remove"),
          isDisabled: m.length === 1 || n,
          children: /* @__PURE__ */ a(Ni, {})
        }
      ) })
    ] }),
    x === m.length - 1 && /* @__PURE__ */ C(
      z,
      {
        variant: xe.link,
        onClick: g,
        tabIndex: -1,
        "aria-label": l("add"),
        "data-testid": "addValue",
        isDisabled: !y || n,
        children: [
          /* @__PURE__ */ a(Ea, {}),
          " ",
          l(t || "add")
        ]
      }
    )
  ] }, x)) });
};
function P8(e) {
  return e && Array.isArray(e) ? e : [e];
}
const _8 = ({
  name: e,
  label: t,
  defaultValue: n,
  helpText: r,
  stringify: i,
  required: s,
  isDisabled: o = !1
}) => {
  const { t: l } = H(), c = ma(e);
  return /* @__PURE__ */ a(
    se,
    {
      label: l(t),
      labelIcon: /* @__PURE__ */ a(le, { helpText: l(r), fieldLabelId: `${t}` }),
      fieldId: e,
      isRequired: s,
      children: /* @__PURE__ */ a(
        yr,
        {
          "aria-label": l(t),
          name: c,
          isDisabled: o,
          defaultValue: P8(n),
          addButtonLabel: l("addMultivaluedLabel", {
            fieldLabel: l(t).toLowerCase()
          }),
          stringify: i
        }
      )
    }
  );
}, R8 = ({
  name: e,
  label: t,
  helpText: n,
  defaultValue: r,
  required: i,
  isDisabled: s = !1
}) => {
  const { t: o } = H();
  return /* @__PURE__ */ a(
    jo,
    {
      name: ma(e),
      label: o(t),
      labelIcon: o(n),
      isDisabled: s,
      defaultValue: r?.toString(),
      rules: {
        required: { value: !!i, message: o("required") }
      }
    }
  );
};
function ot(e = !1) {
  const [t, n] = N(e), r = bn(() => n((i) => !i), []);
  return [t, r, n];
}
function We(e, t) {
  const n = structuredClone(t);
  for (const r in n) {
    const i = r;
    n[i] = encodeURIComponent(n[i]);
  }
  return Bc(e, n);
}
const A8 = Be(() => Promise.resolve().then(() => BY)), hp = {
  path: "/",
  element: /* @__PURE__ */ a(A8, {}),
  breadcrumb: (e) => e("home"),
  handle: {
    access: "anyone"
  }
}, _g = {
  ...hp,
  path: "/:realm"
}, Uw = {
  ...hp,
  path: "/:realm/:tab"
}, Fs = (e) => {
  const t = e.realm ? e.tab ? Uw.path : _g.path : hp.path;
  return {
    pathname: We(t, e)
  };
}, L8 = {
  type: "logger",
  log(e) {
    this.output("log", e);
  },
  warn(e) {
    this.output("warn", e);
  },
  error(e) {
    this.output("error", e);
  },
  output(e, t) {
    console && console[e] && console[e].apply(console, t);
  }
};
class Su {
  constructor(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    this.init(t, n);
  }
  init(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    this.prefix = n.prefix || "i18next:", this.logger = t || L8, this.options = n, this.debug = n.debug;
  }
  log() {
    for (var t = arguments.length, n = new Array(t), r = 0; r < t; r++)
      n[r] = arguments[r];
    return this.forward(n, "log", "", !0);
  }
  warn() {
    for (var t = arguments.length, n = new Array(t), r = 0; r < t; r++)
      n[r] = arguments[r];
    return this.forward(n, "warn", "", !0);
  }
  error() {
    for (var t = arguments.length, n = new Array(t), r = 0; r < t; r++)
      n[r] = arguments[r];
    return this.forward(n, "error", "");
  }
  deprecate() {
    for (var t = arguments.length, n = new Array(t), r = 0; r < t; r++)
      n[r] = arguments[r];
    return this.forward(n, "warn", "WARNING DEPRECATED: ", !0);
  }
  forward(t, n, r, i) {
    return i && !this.debug ? null : (typeof t[0] == "string" && (t[0] = `${r}${this.prefix} ${t[0]}`), this.logger[n](t));
  }
  create(t) {
    return new Su(this.logger, {
      prefix: `${this.prefix}:${t}:`,
      ...this.options
    });
  }
  clone(t) {
    return t = t || this.options, t.prefix = t.prefix || this.prefix, new Su(this.logger, t);
  }
}
var Ur = new Su();
class gp {
  constructor() {
    this.observers = {};
  }
  on(t, n) {
    return t.split(" ").forEach((r) => {
      this.observers[r] || (this.observers[r] = /* @__PURE__ */ new Map());
      const i = this.observers[r].get(n) || 0;
      this.observers[r].set(n, i + 1);
    }), this;
  }
  off(t, n) {
    if (this.observers[t]) {
      if (!n) {
        delete this.observers[t];
        return;
      }
      this.observers[t].delete(n);
    }
  }
  emit(t) {
    for (var n = arguments.length, r = new Array(n > 1 ? n - 1 : 0), i = 1; i < n; i++)
      r[i - 1] = arguments[i];
    this.observers[t] && Array.from(this.observers[t].entries()).forEach((o) => {
      let [l, c] = o;
      for (let d = 0; d < c; d++)
        l(...r);
    }), this.observers["*"] && Array.from(this.observers["*"].entries()).forEach((o) => {
      let [l, c] = o;
      for (let d = 0; d < c; d++)
        l.apply(l, [t, ...r]);
    });
  }
}
function _l() {
  let e, t;
  const n = new Promise((r, i) => {
    e = r, t = i;
  });
  return n.resolve = e, n.reject = t, n;
}
function jy(e) {
  return e == null ? "" : "" + e;
}
function N8(e, t, n) {
  e.forEach((r) => {
    t[r] && (n[r] = t[r]);
  });
}
const D8 = /###/g;
function ec(e, t, n) {
  function r(l) {
    return l && l.indexOf("###") > -1 ? l.replace(D8, ".") : l;
  }
  function i() {
    return !e || typeof e == "string";
  }
  const s = typeof t != "string" ? t : t.split(".");
  let o = 0;
  for (; o < s.length - 1; ) {
    if (i()) return {};
    const l = r(s[o]);
    !e[l] && n && (e[l] = new n()), Object.prototype.hasOwnProperty.call(e, l) ? e = e[l] : e = {}, ++o;
  }
  return i() ? {} : {
    obj: e,
    k: r(s[o])
  };
}
function By(e, t, n) {
  const {
    obj: r,
    k: i
  } = ec(e, t, Object);
  if (r !== void 0 || t.length === 1) {
    r[i] = n;
    return;
  }
  let s = t[t.length - 1], o = t.slice(0, t.length - 1), l = ec(e, o, Object);
  for (; l.obj === void 0 && o.length; )
    s = `${o[o.length - 1]}.${s}`, o = o.slice(0, o.length - 1), l = ec(e, o, Object), l && l.obj && typeof l.obj[`${l.k}.${s}`] < "u" && (l.obj = void 0);
  l.obj[`${l.k}.${s}`] = n;
}
function M8(e, t, n, r) {
  const {
    obj: i,
    k: s
  } = ec(e, t, Object);
  i[s] = i[s] || [], i[s].push(n);
}
function wu(e, t) {
  const {
    obj: n,
    k: r
  } = ec(e, t);
  if (n)
    return n[r];
}
function F8(e, t, n) {
  const r = wu(e, n);
  return r !== void 0 ? r : wu(t, n);
}
function Vw(e, t, n) {
  for (const r in t)
    r !== "__proto__" && r !== "constructor" && (r in e ? typeof e[r] == "string" || e[r] instanceof String || typeof t[r] == "string" || t[r] instanceof String ? n && (e[r] = t[r]) : Vw(e[r], t[r], n) : e[r] = t[r]);
  return e;
}
function lo(e) {
  return e.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
}
var $8 = {
  "&": "&amp;",
  "<": "&lt;",
  ">": "&gt;",
  '"': "&quot;",
  "'": "&#39;",
  "/": "&#x2F;"
};
function j8(e) {
  return typeof e == "string" ? e.replace(/[&<>"'\/]/g, (t) => $8[t]) : e;
}
class B8 {
  constructor(t) {
    this.capacity = t, this.regExpMap = /* @__PURE__ */ new Map(), this.regExpQueue = [];
  }
  getRegExp(t) {
    const n = this.regExpMap.get(t);
    if (n !== void 0)
      return n;
    const r = new RegExp(t);
    return this.regExpQueue.length === this.capacity && this.regExpMap.delete(this.regExpQueue.shift()), this.regExpMap.set(t, r), this.regExpQueue.push(t), r;
  }
}
const U8 = [" ", ",", "?", "!", ";"], V8 = new B8(20);
function K8(e, t, n) {
  t = t || "", n = n || "";
  const r = U8.filter((o) => t.indexOf(o) < 0 && n.indexOf(o) < 0);
  if (r.length === 0) return !0;
  const i = V8.getRegExp(`(${r.map((o) => o === "?" ? "\\?" : o).join("|")})`);
  let s = !i.test(e);
  if (!s) {
    const o = e.indexOf(n);
    o > 0 && !i.test(e.substring(0, o)) && (s = !0);
  }
  return s;
}
function Kf(e, t) {
  let n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : ".";
  if (!e) return;
  if (e[t]) return e[t];
  const r = t.split(n);
  let i = e;
  for (let s = 0; s < r.length; ) {
    if (!i || typeof i != "object")
      return;
    let o, l = "";
    for (let c = s; c < r.length; ++c)
      if (c !== s && (l += n), l += r[c], o = i[l], o !== void 0) {
        if (["string", "number", "boolean"].indexOf(typeof o) > -1 && c < r.length - 1)
          continue;
        s += c - s + 1;
        break;
      }
    i = o;
  }
  return i;
}
function ku(e) {
  return e && e.indexOf("_") > 0 ? e.replace("_", "-") : e;
}
class Uy extends gp {
  constructor(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {
      ns: ["translation"],
      defaultNS: "translation"
    };
    super(), this.data = t || {}, this.options = n, this.options.keySeparator === void 0 && (this.options.keySeparator = "."), this.options.ignoreJSONStructure === void 0 && (this.options.ignoreJSONStructure = !0);
  }
  addNamespaces(t) {
    this.options.ns.indexOf(t) < 0 && this.options.ns.push(t);
  }
  removeNamespaces(t) {
    const n = this.options.ns.indexOf(t);
    n > -1 && this.options.ns.splice(n, 1);
  }
  getResource(t, n, r) {
    let i = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
    const s = i.keySeparator !== void 0 ? i.keySeparator : this.options.keySeparator, o = i.ignoreJSONStructure !== void 0 ? i.ignoreJSONStructure : this.options.ignoreJSONStructure;
    let l;
    t.indexOf(".") > -1 ? l = t.split(".") : (l = [t, n], r && (Array.isArray(r) ? l.push(...r) : typeof r == "string" && s ? l.push(...r.split(s)) : l.push(r)));
    const c = wu(this.data, l);
    return !c && !n && !r && t.indexOf(".") > -1 && (t = l[0], n = l[1], r = l.slice(2).join(".")), c || !o || typeof r != "string" ? c : Kf(this.data && this.data[t] && this.data[t][n], r, s);
  }
  addResource(t, n, r, i) {
    let s = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : {
      silent: !1
    };
    const o = s.keySeparator !== void 0 ? s.keySeparator : this.options.keySeparator;
    let l = [t, n];
    r && (l = l.concat(o ? r.split(o) : r)), t.indexOf(".") > -1 && (l = t.split("."), i = n, n = l[1]), this.addNamespaces(n), By(this.data, l, i), s.silent || this.emit("added", t, n, r, i);
  }
  addResources(t, n, r) {
    let i = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {
      silent: !1
    };
    for (const s in r)
      (typeof r[s] == "string" || Array.isArray(r[s])) && this.addResource(t, n, s, r[s], {
        silent: !0
      });
    i.silent || this.emit("added", t, n, r);
  }
  addResourceBundle(t, n, r, i, s) {
    let o = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {
      silent: !1,
      skipCopy: !1
    }, l = [t, n];
    t.indexOf(".") > -1 && (l = t.split("."), i = r, r = n, n = l[1]), this.addNamespaces(n);
    let c = wu(this.data, l) || {};
    o.skipCopy || (r = JSON.parse(JSON.stringify(r))), i ? Vw(c, r, s) : c = {
      ...c,
      ...r
    }, By(this.data, l, c), o.silent || this.emit("added", t, n, r);
  }
  removeResourceBundle(t, n) {
    this.hasResourceBundle(t, n) && delete this.data[t][n], this.removeNamespaces(n), this.emit("removed", t, n);
  }
  hasResourceBundle(t, n) {
    return this.getResource(t, n) !== void 0;
  }
  getResourceBundle(t, n) {
    return n || (n = this.options.defaultNS), this.options.compatibilityAPI === "v1" ? {
      ...this.getResource(t, n)
    } : this.getResource(t, n);
  }
  getDataByLanguage(t) {
    return this.data[t];
  }
  hasLanguageSomeTranslations(t) {
    const n = this.getDataByLanguage(t);
    return !!(n && Object.keys(n) || []).find((i) => n[i] && Object.keys(n[i]).length > 0);
  }
  toJSON() {
    return this.data;
  }
}
var Kw = {
  processors: {},
  addPostProcessor(e) {
    this.processors[e.name] = e;
  },
  handle(e, t, n, r, i) {
    return e.forEach((s) => {
      this.processors[s] && (t = this.processors[s].process(t, n, r, i));
    }), t;
  }
};
const Vy = {};
class Ou extends gp {
  constructor(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    super(), N8(["resourceStore", "languageUtils", "pluralResolver", "interpolator", "backendConnector", "i18nFormat", "utils"], t, this), this.options = n, this.options.keySeparator === void 0 && (this.options.keySeparator = "."), this.logger = Ur.create("translator");
  }
  changeLanguage(t) {
    t && (this.language = t);
  }
  exists(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {
      interpolation: {}
    };
    if (t == null)
      return !1;
    const r = this.resolve(t, n);
    return r && r.res !== void 0;
  }
  extractFromKey(t, n) {
    let r = n.nsSeparator !== void 0 ? n.nsSeparator : this.options.nsSeparator;
    r === void 0 && (r = ":");
    const i = n.keySeparator !== void 0 ? n.keySeparator : this.options.keySeparator;
    let s = n.ns || this.options.defaultNS || [];
    const o = r && t.indexOf(r) > -1, l = !this.options.userDefinedKeySeparator && !n.keySeparator && !this.options.userDefinedNsSeparator && !n.nsSeparator && !K8(t, r, i);
    if (o && !l) {
      const c = t.match(this.interpolator.nestingRegexp);
      if (c && c.length > 0)
        return {
          key: t,
          namespaces: s
        };
      const d = t.split(r);
      (r !== i || r === i && this.options.ns.indexOf(d[0]) > -1) && (s = d.shift()), t = d.join(i);
    }
    return typeof s == "string" && (s = [s]), {
      key: t,
      namespaces: s
    };
  }
  translate(t, n, r) {
    if (typeof n != "object" && this.options.overloadTranslationOptionHandler && (n = this.options.overloadTranslationOptionHandler(arguments)), typeof n == "object" && (n = {
      ...n
    }), n || (n = {}), t == null) return "";
    Array.isArray(t) || (t = [String(t)]);
    const i = n.returnDetails !== void 0 ? n.returnDetails : this.options.returnDetails, s = n.keySeparator !== void 0 ? n.keySeparator : this.options.keySeparator, {
      key: o,
      namespaces: l
    } = this.extractFromKey(t[t.length - 1], n), c = l[l.length - 1], d = n.lng || this.language, u = n.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;
    if (d && d.toLowerCase() === "cimode") {
      if (u) {
        const R = n.nsSeparator || this.options.nsSeparator;
        return i ? {
          res: `${c}${R}${o}`,
          usedKey: o,
          exactUsedKey: o,
          usedLng: d,
          usedNS: c,
          usedParams: this.getUsedParamsDetails(n)
        } : `${c}${R}${o}`;
      }
      return i ? {
        res: o,
        usedKey: o,
        exactUsedKey: o,
        usedLng: d,
        usedNS: c,
        usedParams: this.getUsedParamsDetails(n)
      } : o;
    }
    const p = this.resolve(t, n);
    let m = p && p.res;
    const f = p && p.usedKey || o, g = p && p.exactUsedKey || o, b = Object.prototype.toString.apply(m), v = ["[object Number]", "[object Function]", "[object RegExp]"], y = n.joinArrays !== void 0 ? n.joinArrays : this.options.joinArrays, x = !this.i18nFormat || this.i18nFormat.handleAsObject;
    if (x && m && (typeof m != "string" && typeof m != "boolean" && typeof m != "number") && v.indexOf(b) < 0 && !(typeof y == "string" && Array.isArray(m))) {
      if (!n.returnObjects && !this.options.returnObjects) {
        this.options.returnedObjectHandler || this.logger.warn("accessing an object - but returnObjects options is not enabled!");
        const R = this.options.returnedObjectHandler ? this.options.returnedObjectHandler(f, m, {
          ...n,
          ns: l
        }) : `key '${o} (${this.language})' returned an object instead of string.`;
        return i ? (p.res = R, p.usedParams = this.getUsedParamsDetails(n), p) : R;
      }
      if (s) {
        const R = Array.isArray(m), S = R ? [] : {}, _ = R ? g : f;
        for (const O in m)
          if (Object.prototype.hasOwnProperty.call(m, O)) {
            const E = `${_}${s}${O}`;
            S[O] = this.translate(E, {
              ...n,
              joinArrays: !1,
              ns: l
            }), S[O] === E && (S[O] = m[O]);
          }
        m = S;
      }
    } else if (x && typeof y == "string" && Array.isArray(m))
      m = m.join(y), m && (m = this.extendTranslation(m, t, n, r));
    else {
      let R = !1, S = !1;
      const _ = n.count !== void 0 && typeof n.count != "string", O = Ou.hasDefaultValue(n), E = _ ? this.pluralResolver.getSuffix(d, n.count, n) : "", T = n.ordinal && _ ? this.pluralResolver.getSuffix(d, n.count, {
        ordinal: !1
      }) : "", I = _ && !n.ordinal && n.count === 0 && this.pluralResolver.shouldUseIntlApi(), k = I && n[`defaultValue${this.options.pluralSeparator}zero`] || n[`defaultValue${E}`] || n[`defaultValue${T}`] || n.defaultValue;
      !this.isValidLookup(m) && O && (R = !0, m = k), this.isValidLookup(m) || (S = !0, m = o);
      const D = (n.missingKeyNoValueFallbackToKey || this.options.missingKeyNoValueFallbackToKey) && S ? void 0 : m, F = O && k !== m && this.options.updateMissing;
      if (S || R || F) {
        if (this.logger.log(F ? "updateKey" : "missingKey", d, c, o, F ? k : m), s) {
          const U = this.resolve(o, {
            ...n,
            keySeparator: !1
          });
          U && U.res && this.logger.warn("Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.");
        }
        let A = [];
        const M = this.languageUtils.getFallbackCodes(this.options.fallbackLng, n.lng || this.language);
        if (this.options.saveMissingTo === "fallback" && M && M[0])
          for (let U = 0; U < M.length; U++)
            A.push(M[U]);
        else this.options.saveMissingTo === "all" ? A = this.languageUtils.toResolveHierarchy(n.lng || this.language) : A.push(n.lng || this.language);
        const V = (U, G, q) => {
          const L = O && q !== m ? q : D;
          this.options.missingKeyHandler ? this.options.missingKeyHandler(U, c, G, L, F, n) : this.backendConnector && this.backendConnector.saveMissing && this.backendConnector.saveMissing(U, c, G, L, F, n), this.emit("missingKey", U, c, G, m);
        };
        this.options.saveMissing && (this.options.saveMissingPlurals && _ ? A.forEach((U) => {
          const G = this.pluralResolver.getSuffixes(U, n);
          I && n[`defaultValue${this.options.pluralSeparator}zero`] && G.indexOf(`${this.options.pluralSeparator}zero`) < 0 && G.push(`${this.options.pluralSeparator}zero`), G.forEach((q) => {
            V([U], o + q, n[`defaultValue${q}`] || k);
          });
        }) : V(A, o, k));
      }
      m = this.extendTranslation(m, t, n, p, r), S && m === o && this.options.appendNamespaceToMissingKey && (m = `${c}:${o}`), (S || R) && this.options.parseMissingKeyHandler && (this.options.compatibilityAPI !== "v1" ? m = this.options.parseMissingKeyHandler(this.options.appendNamespaceToMissingKey ? `${c}:${o}` : o, R ? m : void 0) : m = this.options.parseMissingKeyHandler(m));
    }
    return i ? (p.res = m, p.usedParams = this.getUsedParamsDetails(n), p) : m;
  }
  extendTranslation(t, n, r, i, s) {
    var o = this;
    if (this.i18nFormat && this.i18nFormat.parse)
      t = this.i18nFormat.parse(t, {
        ...this.options.interpolation.defaultVariables,
        ...r
      }, r.lng || this.language || i.usedLng, i.usedNS, i.usedKey, {
        resolved: i
      });
    else if (!r.skipInterpolation) {
      r.interpolation && this.interpolator.init({
        ...r,
        interpolation: {
          ...this.options.interpolation,
          ...r.interpolation
        }
      });
      const d = typeof t == "string" && (r && r.interpolation && r.interpolation.skipOnVariables !== void 0 ? r.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables);
      let u;
      if (d) {
        const m = t.match(this.interpolator.nestingRegexp);
        u = m && m.length;
      }
      let p = r.replace && typeof r.replace != "string" ? r.replace : r;
      if (this.options.interpolation.defaultVariables && (p = {
        ...this.options.interpolation.defaultVariables,
        ...p
      }), t = this.interpolator.interpolate(t, p, r.lng || this.language || i.usedLng, r), d) {
        const m = t.match(this.interpolator.nestingRegexp), f = m && m.length;
        u < f && (r.nest = !1);
      }
      !r.lng && this.options.compatibilityAPI !== "v1" && i && i.res && (r.lng = this.language || i.usedLng), r.nest !== !1 && (t = this.interpolator.nest(t, function() {
        for (var m = arguments.length, f = new Array(m), g = 0; g < m; g++)
          f[g] = arguments[g];
        return s && s[0] === f[0] && !r.context ? (o.logger.warn(`It seems you are nesting recursively key: ${f[0]} in key: ${n[0]}`), null) : o.translate(...f, n);
      }, r)), r.interpolation && this.interpolator.reset();
    }
    const l = r.postProcess || this.options.postProcess, c = typeof l == "string" ? [l] : l;
    return t != null && c && c.length && r.applyPostProcessor !== !1 && (t = Kw.handle(c, t, n, this.options && this.options.postProcessPassResolved ? {
      i18nResolved: {
        ...i,
        usedParams: this.getUsedParamsDetails(r)
      },
      ...r
    } : r, this)), t;
  }
  resolve(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, r, i, s, o, l;
    return typeof t == "string" && (t = [t]), t.forEach((c) => {
      if (this.isValidLookup(r)) return;
      const d = this.extractFromKey(c, n), u = d.key;
      i = u;
      let p = d.namespaces;
      this.options.fallbackNS && (p = p.concat(this.options.fallbackNS));
      const m = n.count !== void 0 && typeof n.count != "string", f = m && !n.ordinal && n.count === 0 && this.pluralResolver.shouldUseIntlApi(), g = n.context !== void 0 && (typeof n.context == "string" || typeof n.context == "number") && n.context !== "", b = n.lngs ? n.lngs : this.languageUtils.toResolveHierarchy(n.lng || this.language, n.fallbackLng);
      p.forEach((v) => {
        this.isValidLookup(r) || (l = v, !Vy[`${b[0]}-${v}`] && this.utils && this.utils.hasLoadedNamespace && !this.utils.hasLoadedNamespace(l) && (Vy[`${b[0]}-${v}`] = !0, this.logger.warn(`key "${i}" for languages "${b.join(", ")}" won't get resolved as namespace "${l}" was not yet loaded`, "This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!")), b.forEach((y) => {
          if (this.isValidLookup(r)) return;
          o = y;
          const x = [u];
          if (this.i18nFormat && this.i18nFormat.addLookupKeys)
            this.i18nFormat.addLookupKeys(x, u, y, v, n);
          else {
            let R;
            m && (R = this.pluralResolver.getSuffix(y, n.count, n));
            const S = `${this.options.pluralSeparator}zero`, _ = `${this.options.pluralSeparator}ordinal${this.options.pluralSeparator}`;
            if (m && (x.push(u + R), n.ordinal && R.indexOf(_) === 0 && x.push(u + R.replace(_, this.options.pluralSeparator)), f && x.push(u + S)), g) {
              const O = `${u}${this.options.contextSeparator}${n.context}`;
              x.push(O), m && (x.push(O + R), n.ordinal && R.indexOf(_) === 0 && x.push(O + R.replace(_, this.options.pluralSeparator)), f && x.push(O + S));
            }
          }
          let w;
          for (; w = x.pop(); )
            this.isValidLookup(r) || (s = w, r = this.getResource(y, v, w, n));
        }));
      });
    }), {
      res: r,
      usedKey: i,
      exactUsedKey: s,
      usedLng: o,
      usedNS: l
    };
  }
  isValidLookup(t) {
    return t !== void 0 && !(!this.options.returnNull && t === null) && !(!this.options.returnEmptyString && t === "");
  }
  getResource(t, n, r) {
    let i = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
    return this.i18nFormat && this.i18nFormat.getResource ? this.i18nFormat.getResource(t, n, r, i) : this.resourceStore.getResource(t, n, r, i);
  }
  getUsedParamsDetails() {
    let t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    const n = ["defaultValue", "ordinal", "context", "replace", "lng", "lngs", "fallbackLng", "ns", "keySeparator", "nsSeparator", "returnObjects", "returnDetails", "joinArrays", "postProcess", "interpolation"], r = t.replace && typeof t.replace != "string";
    let i = r ? t.replace : t;
    if (r && typeof t.count < "u" && (i.count = t.count), this.options.interpolation.defaultVariables && (i = {
      ...this.options.interpolation.defaultVariables,
      ...i
    }), !r) {
      i = {
        ...i
      };
      for (const s of n)
        delete i[s];
    }
    return i;
  }
  static hasDefaultValue(t) {
    const n = "defaultValue";
    for (const r in t)
      if (Object.prototype.hasOwnProperty.call(t, r) && n === r.substring(0, n.length) && t[r] !== void 0)
        return !0;
    return !1;
  }
}
function Tm(e) {
  return e.charAt(0).toUpperCase() + e.slice(1);
}
class Ky {
  constructor(t) {
    this.options = t, this.supportedLngs = this.options.supportedLngs || !1, this.logger = Ur.create("languageUtils");
  }
  getScriptPartFromCode(t) {
    if (t = ku(t), !t || t.indexOf("-") < 0) return null;
    const n = t.split("-");
    return n.length === 2 || (n.pop(), n[n.length - 1].toLowerCase() === "x") ? null : this.formatLanguageCode(n.join("-"));
  }
  getLanguagePartFromCode(t) {
    if (t = ku(t), !t || t.indexOf("-") < 0) return t;
    const n = t.split("-");
    return this.formatLanguageCode(n[0]);
  }
  formatLanguageCode(t) {
    if (typeof t == "string" && t.indexOf("-") > -1) {
      const n = ["hans", "hant", "latn", "cyrl", "cans", "mong", "arab"];
      let r = t.split("-");
      return this.options.lowerCaseLng ? r = r.map((i) => i.toLowerCase()) : r.length === 2 ? (r[0] = r[0].toLowerCase(), r[1] = r[1].toUpperCase(), n.indexOf(r[1].toLowerCase()) > -1 && (r[1] = Tm(r[1].toLowerCase()))) : r.length === 3 && (r[0] = r[0].toLowerCase(), r[1].length === 2 && (r[1] = r[1].toUpperCase()), r[0] !== "sgn" && r[2].length === 2 && (r[2] = r[2].toUpperCase()), n.indexOf(r[1].toLowerCase()) > -1 && (r[1] = Tm(r[1].toLowerCase())), n.indexOf(r[2].toLowerCase()) > -1 && (r[2] = Tm(r[2].toLowerCase()))), r.join("-");
    }
    return this.options.cleanCode || this.options.lowerCaseLng ? t.toLowerCase() : t;
  }
  isSupportedCode(t) {
    return (this.options.load === "languageOnly" || this.options.nonExplicitSupportedLngs) && (t = this.getLanguagePartFromCode(t)), !this.supportedLngs || !this.supportedLngs.length || this.supportedLngs.indexOf(t) > -1;
  }
  getBestMatchFromCodes(t) {
    if (!t) return null;
    let n;
    return t.forEach((r) => {
      if (n) return;
      const i = this.formatLanguageCode(r);
      (!this.options.supportedLngs || this.isSupportedCode(i)) && (n = i);
    }), !n && this.options.supportedLngs && t.forEach((r) => {
      if (n) return;
      const i = this.getLanguagePartFromCode(r);
      if (this.isSupportedCode(i)) return n = i;
      n = this.options.supportedLngs.find((s) => {
        if (s === i) return s;
        if (!(s.indexOf("-") < 0 && i.indexOf("-") < 0) && (s.indexOf("-") > 0 && i.indexOf("-") < 0 && s.substring(0, s.indexOf("-")) === i || s.indexOf(i) === 0 && i.length > 1))
          return s;
      });
    }), n || (n = this.getFallbackCodes(this.options.fallbackLng)[0]), n;
  }
  getFallbackCodes(t, n) {
    if (!t) return [];
    if (typeof t == "function" && (t = t(n)), typeof t == "string" && (t = [t]), Array.isArray(t)) return t;
    if (!n) return t.default || [];
    let r = t[n];
    return r || (r = t[this.getScriptPartFromCode(n)]), r || (r = t[this.formatLanguageCode(n)]), r || (r = t[this.getLanguagePartFromCode(n)]), r || (r = t.default), r || [];
  }
  toResolveHierarchy(t, n) {
    const r = this.getFallbackCodes(n || this.options.fallbackLng || [], t), i = [], s = (o) => {
      o && (this.isSupportedCode(o) ? i.push(o) : this.logger.warn(`rejecting language code not found in supportedLngs: ${o}`));
    };
    return typeof t == "string" && (t.indexOf("-") > -1 || t.indexOf("_") > -1) ? (this.options.load !== "languageOnly" && s(this.formatLanguageCode(t)), this.options.load !== "languageOnly" && this.options.load !== "currentOnly" && s(this.getScriptPartFromCode(t)), this.options.load !== "currentOnly" && s(this.getLanguagePartFromCode(t))) : typeof t == "string" && s(this.formatLanguageCode(t)), r.forEach((o) => {
      i.indexOf(o) < 0 && s(this.formatLanguageCode(o));
    }), i;
  }
}
let H8 = [{
  lngs: ["ach", "ak", "am", "arn", "br", "fil", "gun", "ln", "mfe", "mg", "mi", "oc", "pt", "pt-BR", "tg", "tl", "ti", "tr", "uz", "wa"],
  nr: [1, 2],
  fc: 1
}, {
  lngs: ["af", "an", "ast", "az", "bg", "bn", "ca", "da", "de", "dev", "el", "en", "eo", "es", "et", "eu", "fi", "fo", "fur", "fy", "gl", "gu", "ha", "hi", "hu", "hy", "ia", "it", "kk", "kn", "ku", "lb", "mai", "ml", "mn", "mr", "nah", "nap", "nb", "ne", "nl", "nn", "no", "nso", "pa", "pap", "pms", "ps", "pt-PT", "rm", "sco", "se", "si", "so", "son", "sq", "sv", "sw", "ta", "te", "tk", "ur", "yo"],
  nr: [1, 2],
  fc: 2
}, {
  lngs: ["ay", "bo", "cgg", "fa", "ht", "id", "ja", "jbo", "ka", "km", "ko", "ky", "lo", "ms", "sah", "su", "th", "tt", "ug", "vi", "wo", "zh"],
  nr: [1],
  fc: 3
}, {
  lngs: ["be", "bs", "cnr", "dz", "hr", "ru", "sr", "uk"],
  nr: [1, 2, 5],
  fc: 4
}, {
  lngs: ["ar"],
  nr: [0, 1, 2, 3, 11, 100],
  fc: 5
}, {
  lngs: ["cs", "sk"],
  nr: [1, 2, 5],
  fc: 6
}, {
  lngs: ["csb", "pl"],
  nr: [1, 2, 5],
  fc: 7
}, {
  lngs: ["cy"],
  nr: [1, 2, 3, 8],
  fc: 8
}, {
  lngs: ["fr"],
  nr: [1, 2],
  fc: 9
}, {
  lngs: ["ga"],
  nr: [1, 2, 3, 7, 11],
  fc: 10
}, {
  lngs: ["gd"],
  nr: [1, 2, 3, 20],
  fc: 11
}, {
  lngs: ["is"],
  nr: [1, 2],
  fc: 12
}, {
  lngs: ["jv"],
  nr: [0, 1],
  fc: 13
}, {
  lngs: ["kw"],
  nr: [1, 2, 3, 4],
  fc: 14
}, {
  lngs: ["lt"],
  nr: [1, 2, 10],
  fc: 15
}, {
  lngs: ["lv"],
  nr: [1, 2, 0],
  fc: 16
}, {
  lngs: ["mk"],
  nr: [1, 2],
  fc: 17
}, {
  lngs: ["mnk"],
  nr: [0, 1, 2],
  fc: 18
}, {
  lngs: ["mt"],
  nr: [1, 2, 11, 20],
  fc: 19
}, {
  lngs: ["or"],
  nr: [2, 1],
  fc: 2
}, {
  lngs: ["ro"],
  nr: [1, 2, 20],
  fc: 20
}, {
  lngs: ["sl"],
  nr: [5, 1, 2, 3],
  fc: 21
}, {
  lngs: ["he", "iw"],
  nr: [1, 2, 20, 21],
  fc: 22
}], z8 = {
  1: function(e) {
    return +(e > 1);
  },
  2: function(e) {
    return +(e != 1);
  },
  3: function(e) {
    return 0;
  },
  4: function(e) {
    return e % 10 == 1 && e % 100 != 11 ? 0 : e % 10 >= 2 && e % 10 <= 4 && (e % 100 < 10 || e % 100 >= 20) ? 1 : 2;
  },
  5: function(e) {
    return e == 0 ? 0 : e == 1 ? 1 : e == 2 ? 2 : e % 100 >= 3 && e % 100 <= 10 ? 3 : e % 100 >= 11 ? 4 : 5;
  },
  6: function(e) {
    return e == 1 ? 0 : e >= 2 && e <= 4 ? 1 : 2;
  },
  7: function(e) {
    return e == 1 ? 0 : e % 10 >= 2 && e % 10 <= 4 && (e % 100 < 10 || e % 100 >= 20) ? 1 : 2;
  },
  8: function(e) {
    return e == 1 ? 0 : e == 2 ? 1 : e != 8 && e != 11 ? 2 : 3;
  },
  9: function(e) {
    return +(e >= 2);
  },
  10: function(e) {
    return e == 1 ? 0 : e == 2 ? 1 : e < 7 ? 2 : e < 11 ? 3 : 4;
  },
  11: function(e) {
    return e == 1 || e == 11 ? 0 : e == 2 || e == 12 ? 1 : e > 2 && e < 20 ? 2 : 3;
  },
  12: function(e) {
    return +(e % 10 != 1 || e % 100 == 11);
  },
  13: function(e) {
    return +(e !== 0);
  },
  14: function(e) {
    return e == 1 ? 0 : e == 2 ? 1 : e == 3 ? 2 : 3;
  },
  15: function(e) {
    return e % 10 == 1 && e % 100 != 11 ? 0 : e % 10 >= 2 && (e % 100 < 10 || e % 100 >= 20) ? 1 : 2;
  },
  16: function(e) {
    return e % 10 == 1 && e % 100 != 11 ? 0 : e !== 0 ? 1 : 2;
  },
  17: function(e) {
    return e == 1 || e % 10 == 1 && e % 100 != 11 ? 0 : 1;
  },
  18: function(e) {
    return e == 0 ? 0 : e == 1 ? 1 : 2;
  },
  19: function(e) {
    return e == 1 ? 0 : e == 0 || e % 100 > 1 && e % 100 < 11 ? 1 : e % 100 > 10 && e % 100 < 20 ? 2 : 3;
  },
  20: function(e) {
    return e == 1 ? 0 : e == 0 || e % 100 > 0 && e % 100 < 20 ? 1 : 2;
  },
  21: function(e) {
    return e % 100 == 1 ? 1 : e % 100 == 2 ? 2 : e % 100 == 3 || e % 100 == 4 ? 3 : 0;
  },
  22: function(e) {
    return e == 1 ? 0 : e == 2 ? 1 : (e < 0 || e > 10) && e % 10 == 0 ? 2 : 3;
  }
};
const q8 = ["v1", "v2", "v3"], G8 = ["v4"], Hy = {
  zero: 0,
  one: 1,
  two: 2,
  few: 3,
  many: 4,
  other: 5
};
function W8() {
  const e = {};
  return H8.forEach((t) => {
    t.lngs.forEach((n) => {
      e[n] = {
        numbers: t.nr,
        plurals: z8[t.fc]
      };
    });
  }), e;
}
class X8 {
  constructor(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    this.languageUtils = t, this.options = n, this.logger = Ur.create("pluralResolver"), (!this.options.compatibilityJSON || G8.includes(this.options.compatibilityJSON)) && (typeof Intl > "u" || !Intl.PluralRules) && (this.options.compatibilityJSON = "v3", this.logger.error("Your environment seems not to be Intl API compatible, use an Intl.PluralRules polyfill. Will fallback to the compatibilityJSON v3 format handling.")), this.rules = W8();
  }
  addRule(t, n) {
    this.rules[t] = n;
  }
  getRule(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    if (this.shouldUseIntlApi())
      try {
        return new Intl.PluralRules(ku(t === "dev" ? "en" : t), {
          type: n.ordinal ? "ordinal" : "cardinal"
        });
      } catch {
        return;
      }
    return this.rules[t] || this.rules[this.languageUtils.getLanguagePartFromCode(t)];
  }
  needsPlural(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    const r = this.getRule(t, n);
    return this.shouldUseIntlApi() ? r && r.resolvedOptions().pluralCategories.length > 1 : r && r.numbers.length > 1;
  }
  getPluralFormsOfKey(t, n) {
    let r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
    return this.getSuffixes(t, r).map((i) => `${n}${i}`);
  }
  getSuffixes(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    const r = this.getRule(t, n);
    return r ? this.shouldUseIntlApi() ? r.resolvedOptions().pluralCategories.sort((i, s) => Hy[i] - Hy[s]).map((i) => `${this.options.prepend}${n.ordinal ? `ordinal${this.options.prepend}` : ""}${i}`) : r.numbers.map((i) => this.getSuffix(t, i, n)) : [];
  }
  getSuffix(t, n) {
    let r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
    const i = this.getRule(t, r);
    return i ? this.shouldUseIntlApi() ? `${this.options.prepend}${r.ordinal ? `ordinal${this.options.prepend}` : ""}${i.select(n)}` : this.getSuffixRetroCompatible(i, n) : (this.logger.warn(`no plural rule found for: ${t}`), "");
  }
  getSuffixRetroCompatible(t, n) {
    const r = t.noAbs ? t.plurals(n) : t.plurals(Math.abs(n));
    let i = t.numbers[r];
    this.options.simplifyPluralSuffix && t.numbers.length === 2 && t.numbers[0] === 1 && (i === 2 ? i = "plural" : i === 1 && (i = ""));
    const s = () => this.options.prepend && i.toString() ? this.options.prepend + i.toString() : i.toString();
    return this.options.compatibilityJSON === "v1" ? i === 1 ? "" : typeof i == "number" ? `_plural_${i.toString()}` : s() : this.options.compatibilityJSON === "v2" || this.options.simplifyPluralSuffix && t.numbers.length === 2 && t.numbers[0] === 1 ? s() : this.options.prepend && r.toString() ? this.options.prepend + r.toString() : r.toString();
  }
  shouldUseIntlApi() {
    return !q8.includes(this.options.compatibilityJSON);
  }
}
function zy(e, t, n) {
  let r = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : ".", i = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : !0, s = F8(e, t, n);
  return !s && i && typeof n == "string" && (s = Kf(e, n, r), s === void 0 && (s = Kf(t, n, r))), s;
}
class Y8 {
  constructor() {
    let t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    this.logger = Ur.create("interpolator"), this.options = t, this.format = t.interpolation && t.interpolation.format || ((n) => n), this.init(t);
  }
  init() {
    let t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    t.interpolation || (t.interpolation = {
      escapeValue: !0
    });
    const {
      escape: n,
      escapeValue: r,
      useRawValueToEscape: i,
      prefix: s,
      prefixEscaped: o,
      suffix: l,
      suffixEscaped: c,
      formatSeparator: d,
      unescapeSuffix: u,
      unescapePrefix: p,
      nestingPrefix: m,
      nestingPrefixEscaped: f,
      nestingSuffix: g,
      nestingSuffixEscaped: b,
      nestingOptionsSeparator: v,
      maxReplaces: y,
      alwaysFormat: x
    } = t.interpolation;
    this.escape = n !== void 0 ? n : j8, this.escapeValue = r !== void 0 ? r : !0, this.useRawValueToEscape = i !== void 0 ? i : !1, this.prefix = s ? lo(s) : o || "{{", this.suffix = l ? lo(l) : c || "}}", this.formatSeparator = d || ",", this.unescapePrefix = u ? "" : p || "-", this.unescapeSuffix = this.unescapePrefix ? "" : u || "", this.nestingPrefix = m ? lo(m) : f || lo("$t("), this.nestingSuffix = g ? lo(g) : b || lo(")"), this.nestingOptionsSeparator = v || ",", this.maxReplaces = y || 1e3, this.alwaysFormat = x !== void 0 ? x : !1, this.resetRegExp();
  }
  reset() {
    this.options && this.init(this.options);
  }
  resetRegExp() {
    const t = (n, r) => n && n.source === r ? (n.lastIndex = 0, n) : new RegExp(r, "g");
    this.regexp = t(this.regexp, `${this.prefix}(.+?)${this.suffix}`), this.regexpUnescape = t(this.regexpUnescape, `${this.prefix}${this.unescapePrefix}(.+?)${this.unescapeSuffix}${this.suffix}`), this.nestingRegexp = t(this.nestingRegexp, `${this.nestingPrefix}(.+?)${this.nestingSuffix}`);
  }
  interpolate(t, n, r, i) {
    let s, o, l;
    const c = this.options && this.options.interpolation && this.options.interpolation.defaultVariables || {};
    function d(g) {
      return g.replace(/\$/g, "$$$$");
    }
    const u = (g) => {
      if (g.indexOf(this.formatSeparator) < 0) {
        const x = zy(n, c, g, this.options.keySeparator, this.options.ignoreJSONStructure);
        return this.alwaysFormat ? this.format(x, void 0, r, {
          ...i,
          ...n,
          interpolationkey: g
        }) : x;
      }
      const b = g.split(this.formatSeparator), v = b.shift().trim(), y = b.join(this.formatSeparator).trim();
      return this.format(zy(n, c, v, this.options.keySeparator, this.options.ignoreJSONStructure), y, r, {
        ...i,
        ...n,
        interpolationkey: v
      });
    };
    this.resetRegExp();
    const p = i && i.missingInterpolationHandler || this.options.missingInterpolationHandler, m = i && i.interpolation && i.interpolation.skipOnVariables !== void 0 ? i.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables;
    return [{
      regex: this.regexpUnescape,
      safeValue: (g) => d(g)
    }, {
      regex: this.regexp,
      safeValue: (g) => this.escapeValue ? d(this.escape(g)) : d(g)
    }].forEach((g) => {
      for (l = 0; s = g.regex.exec(t); ) {
        const b = s[1].trim();
        if (o = u(b), o === void 0)
          if (typeof p == "function") {
            const y = p(t, s, i);
            o = typeof y == "string" ? y : "";
          } else if (i && Object.prototype.hasOwnProperty.call(i, b))
            o = "";
          else if (m) {
            o = s[0];
            continue;
          } else
            this.logger.warn(`missed to pass in variable ${b} for interpolating ${t}`), o = "";
        else typeof o != "string" && !this.useRawValueToEscape && (o = jy(o));
        const v = g.safeValue(o);
        if (t = t.replace(s[0], v), m ? (g.regex.lastIndex += o.length, g.regex.lastIndex -= s[0].length) : g.regex.lastIndex = 0, l++, l >= this.maxReplaces)
          break;
      }
    }), t;
  }
  nest(t, n) {
    let r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, i, s, o;
    function l(c, d) {
      const u = this.nestingOptionsSeparator;
      if (c.indexOf(u) < 0) return c;
      const p = c.split(new RegExp(`${u}[ ]*{`));
      let m = `{${p[1]}`;
      c = p[0], m = this.interpolate(m, o);
      const f = m.match(/'/g), g = m.match(/"/g);
      (f && f.length % 2 === 0 && !g || g.length % 2 !== 0) && (m = m.replace(/'/g, '"'));
      try {
        o = JSON.parse(m), d && (o = {
          ...d,
          ...o
        });
      } catch (b) {
        return this.logger.warn(`failed parsing options string in nesting for key ${c}`, b), `${c}${u}${m}`;
      }
      return o.defaultValue && o.defaultValue.indexOf(this.prefix) > -1 && delete o.defaultValue, c;
    }
    for (; i = this.nestingRegexp.exec(t); ) {
      let c = [];
      o = {
        ...r
      }, o = o.replace && typeof o.replace != "string" ? o.replace : o, o.applyPostProcessor = !1, delete o.defaultValue;
      let d = !1;
      if (i[0].indexOf(this.formatSeparator) !== -1 && !/{.*}/.test(i[1])) {
        const u = i[1].split(this.formatSeparator).map((p) => p.trim());
        i[1] = u.shift(), c = u, d = !0;
      }
      if (s = n(l.call(this, i[1].trim(), o), o), s && i[0] === t && typeof s != "string") return s;
      typeof s != "string" && (s = jy(s)), s || (this.logger.warn(`missed to resolve ${i[1]} for nesting ${t}`), s = ""), d && (s = c.reduce((u, p) => this.format(u, p, r.lng, {
        ...r,
        interpolationkey: i[1].trim()
      }), s.trim())), t = t.replace(i[0], s), this.regexp.lastIndex = 0;
    }
    return t;
  }
}
function J8(e) {
  let t = e.toLowerCase().trim();
  const n = {};
  if (e.indexOf("(") > -1) {
    const r = e.split("(");
    t = r[0].toLowerCase().trim();
    const i = r[1].substring(0, r[1].length - 1);
    t === "currency" && i.indexOf(":") < 0 ? n.currency || (n.currency = i.trim()) : t === "relativetime" && i.indexOf(":") < 0 ? n.range || (n.range = i.trim()) : i.split(";").forEach((o) => {
      if (o) {
        const [l, ...c] = o.split(":"), d = c.join(":").trim().replace(/^'+|'+$/g, ""), u = l.trim();
        n[u] || (n[u] = d), d === "false" && (n[u] = !1), d === "true" && (n[u] = !0), isNaN(d) || (n[u] = parseInt(d, 10));
      }
    });
  }
  return {
    formatName: t,
    formatOptions: n
  };
}
function co(e) {
  const t = {};
  return function(r, i, s) {
    const o = i + JSON.stringify(s);
    let l = t[o];
    return l || (l = e(ku(i), s), t[o] = l), l(r);
  };
}
class Z8 {
  constructor() {
    let t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    this.logger = Ur.create("formatter"), this.options = t, this.formats = {
      number: co((n, r) => {
        const i = new Intl.NumberFormat(n, {
          ...r
        });
        return (s) => i.format(s);
      }),
      currency: co((n, r) => {
        const i = new Intl.NumberFormat(n, {
          ...r,
          style: "currency"
        });
        return (s) => i.format(s);
      }),
      datetime: co((n, r) => {
        const i = new Intl.DateTimeFormat(n, {
          ...r
        });
        return (s) => i.format(s);
      }),
      relativetime: co((n, r) => {
        const i = new Intl.RelativeTimeFormat(n, {
          ...r
        });
        return (s) => i.format(s, r.range || "day");
      }),
      list: co((n, r) => {
        const i = new Intl.ListFormat(n, {
          ...r
        });
        return (s) => i.format(s);
      })
    }, this.init(t);
  }
  init(t) {
    const r = (arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {
      interpolation: {}
    }).interpolation;
    this.formatSeparator = r.formatSeparator ? r.formatSeparator : r.formatSeparator || ",";
  }
  add(t, n) {
    this.formats[t.toLowerCase().trim()] = n;
  }
  addCached(t, n) {
    this.formats[t.toLowerCase().trim()] = co(n);
  }
  format(t, n, r) {
    let i = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
    return n.split(this.formatSeparator).reduce((l, c) => {
      const {
        formatName: d,
        formatOptions: u
      } = J8(c);
      if (this.formats[d]) {
        let p = l;
        try {
          const m = i && i.formatParams && i.formatParams[i.interpolationkey] || {}, f = m.locale || m.lng || i.locale || i.lng || r;
          p = this.formats[d](l, f, {
            ...u,
            ...i,
            ...m
          });
        } catch (m) {
          this.logger.warn(m);
        }
        return p;
      } else
        this.logger.warn(`there was no format function for ${d}`);
      return l;
    }, t);
  }
}
function Q8(e, t) {
  e.pending[t] !== void 0 && (delete e.pending[t], e.pendingCount--);
}
class e$ extends gp {
  constructor(t, n, r) {
    let i = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
    super(), this.backend = t, this.store = n, this.services = r, this.languageUtils = r.languageUtils, this.options = i, this.logger = Ur.create("backendConnector"), this.waitingReads = [], this.maxParallelReads = i.maxParallelReads || 10, this.readingCalls = 0, this.maxRetries = i.maxRetries >= 0 ? i.maxRetries : 5, this.retryTimeout = i.retryTimeout >= 1 ? i.retryTimeout : 350, this.state = {}, this.queue = [], this.backend && this.backend.init && this.backend.init(r, i.backend, i);
  }
  queueLoad(t, n, r, i) {
    const s = {}, o = {}, l = {}, c = {};
    return t.forEach((d) => {
      let u = !0;
      n.forEach((p) => {
        const m = `${d}|${p}`;
        !r.reload && this.store.hasResourceBundle(d, p) ? this.state[m] = 2 : this.state[m] < 0 || (this.state[m] === 1 ? o[m] === void 0 && (o[m] = !0) : (this.state[m] = 1, u = !1, o[m] === void 0 && (o[m] = !0), s[m] === void 0 && (s[m] = !0), c[p] === void 0 && (c[p] = !0)));
      }), u || (l[d] = !0);
    }), (Object.keys(s).length || Object.keys(o).length) && this.queue.push({
      pending: o,
      pendingCount: Object.keys(o).length,
      loaded: {},
      errors: [],
      callback: i
    }), {
      toLoad: Object.keys(s),
      pending: Object.keys(o),
      toLoadLanguages: Object.keys(l),
      toLoadNamespaces: Object.keys(c)
    };
  }
  loaded(t, n, r) {
    const i = t.split("|"), s = i[0], o = i[1];
    n && this.emit("failedLoading", s, o, n), r && this.store.addResourceBundle(s, o, r, void 0, void 0, {
      skipCopy: !0
    }), this.state[t] = n ? -1 : 2;
    const l = {};
    this.queue.forEach((c) => {
      M8(c.loaded, [s], o), Q8(c, t), n && c.errors.push(n), c.pendingCount === 0 && !c.done && (Object.keys(c.loaded).forEach((d) => {
        l[d] || (l[d] = {});
        const u = c.loaded[d];
        u.length && u.forEach((p) => {
          l[d][p] === void 0 && (l[d][p] = !0);
        });
      }), c.done = !0, c.errors.length ? c.callback(c.errors) : c.callback());
    }), this.emit("loaded", l), this.queue = this.queue.filter((c) => !c.done);
  }
  read(t, n, r) {
    let i = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0, s = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : this.retryTimeout, o = arguments.length > 5 ? arguments[5] : void 0;
    if (!t.length) return o(null, {});
    if (this.readingCalls >= this.maxParallelReads) {
      this.waitingReads.push({
        lng: t,
        ns: n,
        fcName: r,
        tried: i,
        wait: s,
        callback: o
      });
      return;
    }
    this.readingCalls++;
    const l = (d, u) => {
      if (this.readingCalls--, this.waitingReads.length > 0) {
        const p = this.waitingReads.shift();
        this.read(p.lng, p.ns, p.fcName, p.tried, p.wait, p.callback);
      }
      if (d && u && i < this.maxRetries) {
        setTimeout(() => {
          this.read.call(this, t, n, r, i + 1, s * 2, o);
        }, s);
        return;
      }
      o(d, u);
    }, c = this.backend[r].bind(this.backend);
    if (c.length === 2) {
      try {
        const d = c(t, n);
        d && typeof d.then == "function" ? d.then((u) => l(null, u)).catch(l) : l(null, d);
      } catch (d) {
        l(d);
      }
      return;
    }
    return c(t, n, l);
  }
  prepareLoading(t, n) {
    let r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, i = arguments.length > 3 ? arguments[3] : void 0;
    if (!this.backend)
      return this.logger.warn("No backend was added via i18next.use. Will not load resources."), i && i();
    typeof t == "string" && (t = this.languageUtils.toResolveHierarchy(t)), typeof n == "string" && (n = [n]);
    const s = this.queueLoad(t, n, r, i);
    if (!s.toLoad.length)
      return s.pending.length || i(), null;
    s.toLoad.forEach((o) => {
      this.loadOne(o);
    });
  }
  load(t, n, r) {
    this.prepareLoading(t, n, {}, r);
  }
  reload(t, n, r) {
    this.prepareLoading(t, n, {
      reload: !0
    }, r);
  }
  loadOne(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "";
    const r = t.split("|"), i = r[0], s = r[1];
    this.read(i, s, "read", void 0, void 0, (o, l) => {
      o && this.logger.warn(`${n}loading namespace ${s} for language ${i} failed`, o), !o && l && this.logger.log(`${n}loaded namespace ${s} for language ${i}`, l), this.loaded(t, o, l);
    });
  }
  saveMissing(t, n, r, i, s) {
    let o = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {}, l = arguments.length > 6 && arguments[6] !== void 0 ? arguments[6] : () => {
    };
    if (this.services.utils && this.services.utils.hasLoadedNamespace && !this.services.utils.hasLoadedNamespace(n)) {
      this.logger.warn(`did not save key "${r}" as the namespace "${n}" was not yet loaded`, "This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!");
      return;
    }
    if (!(r == null || r === "")) {
      if (this.backend && this.backend.create) {
        const c = {
          ...o,
          isUpdate: s
        }, d = this.backend.create.bind(this.backend);
        if (d.length < 6)
          try {
            let u;
            d.length === 5 ? u = d(t, n, r, i, c) : u = d(t, n, r, i), u && typeof u.then == "function" ? u.then((p) => l(null, p)).catch(l) : l(null, u);
          } catch (u) {
            l(u);
          }
        else
          d(t, n, r, i, l, c);
      }
      !t || !t[0] || this.store.addResource(t[0], n, r, i);
    }
  }
}
function qy() {
  return {
    debug: !1,
    initImmediate: !0,
    ns: ["translation"],
    defaultNS: ["translation"],
    fallbackLng: ["dev"],
    fallbackNS: !1,
    supportedLngs: !1,
    nonExplicitSupportedLngs: !1,
    load: "all",
    preload: !1,
    simplifyPluralSuffix: !0,
    keySeparator: ".",
    nsSeparator: ":",
    pluralSeparator: "_",
    contextSeparator: "_",
    partialBundledLanguages: !1,
    saveMissing: !1,
    updateMissing: !1,
    saveMissingTo: "fallback",
    saveMissingPlurals: !0,
    missingKeyHandler: !1,
    missingInterpolationHandler: !1,
    postProcess: !1,
    postProcessPassResolved: !1,
    returnNull: !1,
    returnEmptyString: !0,
    returnObjects: !1,
    joinArrays: !1,
    returnedObjectHandler: !1,
    parseMissingKeyHandler: !1,
    appendNamespaceToMissingKey: !1,
    appendNamespaceToCIMode: !1,
    overloadTranslationOptionHandler: function(t) {
      let n = {};
      if (typeof t[1] == "object" && (n = t[1]), typeof t[1] == "string" && (n.defaultValue = t[1]), typeof t[2] == "string" && (n.tDescription = t[2]), typeof t[2] == "object" || typeof t[3] == "object") {
        const r = t[3] || t[2];
        Object.keys(r).forEach((i) => {
          n[i] = r[i];
        });
      }
      return n;
    },
    interpolation: {
      escapeValue: !0,
      format: (e) => e,
      prefix: "{{",
      suffix: "}}",
      formatSeparator: ",",
      unescapePrefix: "-",
      nestingPrefix: "$t(",
      nestingSuffix: ")",
      nestingOptionsSeparator: ",",
      maxReplaces: 1e3,
      skipOnVariables: !0
    }
  };
}
function Gy(e) {
  return typeof e.ns == "string" && (e.ns = [e.ns]), typeof e.fallbackLng == "string" && (e.fallbackLng = [e.fallbackLng]), typeof e.fallbackNS == "string" && (e.fallbackNS = [e.fallbackNS]), e.supportedLngs && e.supportedLngs.indexOf("cimode") < 0 && (e.supportedLngs = e.supportedLngs.concat(["cimode"])), e;
}
function Td() {
}
function t$(e) {
  Object.getOwnPropertyNames(Object.getPrototypeOf(e)).forEach((n) => {
    typeof e[n] == "function" && (e[n] = e[n].bind(e));
  });
}
class Ic extends gp {
  constructor() {
    let t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, n = arguments.length > 1 ? arguments[1] : void 0;
    if (super(), this.options = Gy(t), this.services = {}, this.logger = Ur, this.modules = {
      external: []
    }, t$(this), n && !this.isInitialized && !t.isClone) {
      if (!this.options.initImmediate)
        return this.init(t, n), this;
      setTimeout(() => {
        this.init(t, n);
      }, 0);
    }
  }
  init() {
    var t = this;
    let n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, r = arguments.length > 1 ? arguments[1] : void 0;
    this.isInitializing = !0, typeof n == "function" && (r = n, n = {}), !n.defaultNS && n.defaultNS !== !1 && n.ns && (typeof n.ns == "string" ? n.defaultNS = n.ns : n.ns.indexOf("translation") < 0 && (n.defaultNS = n.ns[0]));
    const i = qy();
    this.options = {
      ...i,
      ...this.options,
      ...Gy(n)
    }, this.options.compatibilityAPI !== "v1" && (this.options.interpolation = {
      ...i.interpolation,
      ...this.options.interpolation
    }), n.keySeparator !== void 0 && (this.options.userDefinedKeySeparator = n.keySeparator), n.nsSeparator !== void 0 && (this.options.userDefinedNsSeparator = n.nsSeparator);
    function s(u) {
      return u ? typeof u == "function" ? new u() : u : null;
    }
    if (!this.options.isClone) {
      this.modules.logger ? Ur.init(s(this.modules.logger), this.options) : Ur.init(null, this.options);
      let u;
      this.modules.formatter ? u = this.modules.formatter : typeof Intl < "u" && (u = Z8);
      const p = new Ky(this.options);
      this.store = new Uy(this.options.resources, this.options);
      const m = this.services;
      m.logger = Ur, m.resourceStore = this.store, m.languageUtils = p, m.pluralResolver = new X8(p, {
        prepend: this.options.pluralSeparator,
        compatibilityJSON: this.options.compatibilityJSON,
        simplifyPluralSuffix: this.options.simplifyPluralSuffix
      }), u && (!this.options.interpolation.format || this.options.interpolation.format === i.interpolation.format) && (m.formatter = s(u), m.formatter.init(m, this.options), this.options.interpolation.format = m.formatter.format.bind(m.formatter)), m.interpolator = new Y8(this.options), m.utils = {
        hasLoadedNamespace: this.hasLoadedNamespace.bind(this)
      }, m.backendConnector = new e$(s(this.modules.backend), m.resourceStore, m, this.options), m.backendConnector.on("*", function(f) {
        for (var g = arguments.length, b = new Array(g > 1 ? g - 1 : 0), v = 1; v < g; v++)
          b[v - 1] = arguments[v];
        t.emit(f, ...b);
      }), this.modules.languageDetector && (m.languageDetector = s(this.modules.languageDetector), m.languageDetector.init && m.languageDetector.init(m, this.options.detection, this.options)), this.modules.i18nFormat && (m.i18nFormat = s(this.modules.i18nFormat), m.i18nFormat.init && m.i18nFormat.init(this)), this.translator = new Ou(this.services, this.options), this.translator.on("*", function(f) {
        for (var g = arguments.length, b = new Array(g > 1 ? g - 1 : 0), v = 1; v < g; v++)
          b[v - 1] = arguments[v];
        t.emit(f, ...b);
      }), this.modules.external.forEach((f) => {
        f.init && f.init(this);
      });
    }
    if (this.format = this.options.interpolation.format, r || (r = Td), this.options.fallbackLng && !this.services.languageDetector && !this.options.lng) {
      const u = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);
      u.length > 0 && u[0] !== "dev" && (this.options.lng = u[0]);
    }
    !this.services.languageDetector && !this.options.lng && this.logger.warn("init: no languageDetector is used and no lng is defined"), ["getResource", "hasResourceBundle", "getResourceBundle", "getDataByLanguage"].forEach((u) => {
      this[u] = function() {
        return t.store[u](...arguments);
      };
    }), ["addResource", "addResources", "addResourceBundle", "removeResourceBundle"].forEach((u) => {
      this[u] = function() {
        return t.store[u](...arguments), t;
      };
    });
    const c = _l(), d = () => {
      const u = (p, m) => {
        this.isInitializing = !1, this.isInitialized && !this.initializedStoreOnce && this.logger.warn("init: i18next is already initialized. You should call init just once!"), this.isInitialized = !0, this.options.isClone || this.logger.log("initialized", this.options), this.emit("initialized", this.options), c.resolve(m), r(p, m);
      };
      if (this.languages && this.options.compatibilityAPI !== "v1" && !this.isInitialized) return u(null, this.t.bind(this));
      this.changeLanguage(this.options.lng, u);
    };
    return this.options.resources || !this.options.initImmediate ? d() : setTimeout(d, 0), c;
  }
  loadResources(t) {
    let r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Td;
    const i = typeof t == "string" ? t : this.language;
    if (typeof t == "function" && (r = t), !this.options.resources || this.options.partialBundledLanguages) {
      if (i && i.toLowerCase() === "cimode" && (!this.options.preload || this.options.preload.length === 0)) return r();
      const s = [], o = (l) => {
        if (!l || l === "cimode") return;
        this.services.languageUtils.toResolveHierarchy(l).forEach((d) => {
          d !== "cimode" && s.indexOf(d) < 0 && s.push(d);
        });
      };
      i ? o(i) : this.services.languageUtils.getFallbackCodes(this.options.fallbackLng).forEach((c) => o(c)), this.options.preload && this.options.preload.forEach((l) => o(l)), this.services.backendConnector.load(s, this.options.ns, (l) => {
        !l && !this.resolvedLanguage && this.language && this.setResolvedLanguage(this.language), r(l);
      });
    } else
      r(null);
  }
  reloadResources(t, n, r) {
    const i = _l();
    return t || (t = this.languages), n || (n = this.options.ns), r || (r = Td), this.services.backendConnector.reload(t, n, (s) => {
      i.resolve(), r(s);
    }), i;
  }
  use(t) {
    if (!t) throw new Error("You are passing an undefined module! Please check the object you are passing to i18next.use()");
    if (!t.type) throw new Error("You are passing a wrong module! Please check the object you are passing to i18next.use()");
    return t.type === "backend" && (this.modules.backend = t), (t.type === "logger" || t.log && t.warn && t.error) && (this.modules.logger = t), t.type === "languageDetector" && (this.modules.languageDetector = t), t.type === "i18nFormat" && (this.modules.i18nFormat = t), t.type === "postProcessor" && Kw.addPostProcessor(t), t.type === "formatter" && (this.modules.formatter = t), t.type === "3rdParty" && this.modules.external.push(t), this;
  }
  setResolvedLanguage(t) {
    if (!(!t || !this.languages) && !(["cimode", "dev"].indexOf(t) > -1))
      for (let n = 0; n < this.languages.length; n++) {
        const r = this.languages[n];
        if (!(["cimode", "dev"].indexOf(r) > -1) && this.store.hasLanguageSomeTranslations(r)) {
          this.resolvedLanguage = r;
          break;
        }
      }
  }
  changeLanguage(t, n) {
    var r = this;
    this.isLanguageChangingTo = t;
    const i = _l();
    this.emit("languageChanging", t);
    const s = (c) => {
      this.language = c, this.languages = this.services.languageUtils.toResolveHierarchy(c), this.resolvedLanguage = void 0, this.setResolvedLanguage(c);
    }, o = (c, d) => {
      d ? (s(d), this.translator.changeLanguage(d), this.isLanguageChangingTo = void 0, this.emit("languageChanged", d), this.logger.log("languageChanged", d)) : this.isLanguageChangingTo = void 0, i.resolve(function() {
        return r.t(...arguments);
      }), n && n(c, function() {
        return r.t(...arguments);
      });
    }, l = (c) => {
      !t && !c && this.services.languageDetector && (c = []);
      const d = typeof c == "string" ? c : this.services.languageUtils.getBestMatchFromCodes(c);
      d && (this.language || s(d), this.translator.language || this.translator.changeLanguage(d), this.services.languageDetector && this.services.languageDetector.cacheUserLanguage && this.services.languageDetector.cacheUserLanguage(d)), this.loadResources(d, (u) => {
        o(u, d);
      });
    };
    return !t && this.services.languageDetector && !this.services.languageDetector.async ? l(this.services.languageDetector.detect()) : !t && this.services.languageDetector && this.services.languageDetector.async ? this.services.languageDetector.detect.length === 0 ? this.services.languageDetector.detect().then(l) : this.services.languageDetector.detect(l) : l(t), i;
  }
  getFixedT(t, n, r) {
    var i = this;
    const s = function(o, l) {
      let c;
      if (typeof l != "object") {
        for (var d = arguments.length, u = new Array(d > 2 ? d - 2 : 0), p = 2; p < d; p++)
          u[p - 2] = arguments[p];
        c = i.options.overloadTranslationOptionHandler([o, l].concat(u));
      } else
        c = {
          ...l
        };
      c.lng = c.lng || s.lng, c.lngs = c.lngs || s.lngs, c.ns = c.ns || s.ns, c.keyPrefix !== "" && (c.keyPrefix = c.keyPrefix || r || s.keyPrefix);
      const m = i.options.keySeparator || ".";
      let f;
      return c.keyPrefix && Array.isArray(o) ? f = o.map((g) => `${c.keyPrefix}${m}${g}`) : f = c.keyPrefix ? `${c.keyPrefix}${m}${o}` : o, i.t(f, c);
    };
    return typeof t == "string" ? s.lng = t : s.lngs = t, s.ns = n, s.keyPrefix = r, s;
  }
  t() {
    return this.translator && this.translator.translate(...arguments);
  }
  exists() {
    return this.translator && this.translator.exists(...arguments);
  }
  setDefaultNamespace(t) {
    this.options.defaultNS = t;
  }
  hasLoadedNamespace(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    if (!this.isInitialized)
      return this.logger.warn("hasLoadedNamespace: i18next was not initialized", this.languages), !1;
    if (!this.languages || !this.languages.length)
      return this.logger.warn("hasLoadedNamespace: i18n.languages were undefined or empty", this.languages), !1;
    const r = n.lng || this.resolvedLanguage || this.languages[0], i = this.options ? this.options.fallbackLng : !1, s = this.languages[this.languages.length - 1];
    if (r.toLowerCase() === "cimode") return !0;
    const o = (l, c) => {
      const d = this.services.backendConnector.state[`${l}|${c}`];
      return d === -1 || d === 2;
    };
    if (n.precheck) {
      const l = n.precheck(this, o);
      if (l !== void 0) return l;
    }
    return !!(this.hasResourceBundle(r, t) || !this.services.backendConnector.backend || this.options.resources && !this.options.partialBundledLanguages || o(r, t) && (!i || o(s, t)));
  }
  loadNamespaces(t, n) {
    const r = _l();
    return this.options.ns ? (typeof t == "string" && (t = [t]), t.forEach((i) => {
      this.options.ns.indexOf(i) < 0 && this.options.ns.push(i);
    }), this.loadResources((i) => {
      r.resolve(), n && n(i);
    }), r) : (n && n(), Promise.resolve());
  }
  loadLanguages(t, n) {
    const r = _l();
    typeof t == "string" && (t = [t]);
    const i = this.options.preload || [], s = t.filter((o) => i.indexOf(o) < 0 && this.services.languageUtils.isSupportedCode(o));
    return s.length ? (this.options.preload = i.concat(s), this.loadResources((o) => {
      r.resolve(), n && n(o);
    }), r) : (n && n(), Promise.resolve());
  }
  dir(t) {
    if (t || (t = this.resolvedLanguage || (this.languages && this.languages.length > 0 ? this.languages[0] : this.language)), !t) return "rtl";
    const n = ["ar", "shu", "sqr", "ssh", "xaa", "yhd", "yud", "aao", "abh", "abv", "acm", "acq", "acw", "acx", "acy", "adf", "ads", "aeb", "aec", "afb", "ajp", "apc", "apd", "arb", "arq", "ars", "ary", "arz", "auz", "avl", "ayh", "ayl", "ayn", "ayp", "bbz", "pga", "he", "iw", "ps", "pbt", "pbu", "pst", "prp", "prd", "ug", "ur", "ydd", "yds", "yih", "ji", "yi", "hbo", "men", "xmn", "fa", "jpr", "peo", "pes", "prs", "dv", "sam", "ckb"], r = this.services && this.services.languageUtils || new Ky(qy());
    return n.indexOf(r.getLanguagePartFromCode(t)) > -1 || t.toLowerCase().indexOf("-arab") > 1 ? "rtl" : "ltr";
  }
  static createInstance() {
    let t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, n = arguments.length > 1 ? arguments[1] : void 0;
    return new Ic(t, n);
  }
  cloneInstance() {
    let t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Td;
    const r = t.forkResourceStore;
    r && delete t.forkResourceStore;
    const i = {
      ...this.options,
      ...t,
      isClone: !0
    }, s = new Ic(i);
    return (t.debug !== void 0 || t.prefix !== void 0) && (s.logger = s.logger.clone(t)), ["store", "services", "language"].forEach((l) => {
      s[l] = this[l];
    }), s.services = {
      ...this.services
    }, s.services.utils = {
      hasLoadedNamespace: s.hasLoadedNamespace.bind(s)
    }, r && (s.store = new Uy(this.store.data, i), s.services.resourceStore = s.store), s.translator = new Ou(s.services, i), s.translator.on("*", function(l) {
      for (var c = arguments.length, d = new Array(c > 1 ? c - 1 : 0), u = 1; u < c; u++)
        d[u - 1] = arguments[u];
      s.emit(l, ...d);
    }), s.init(i, n), s.translator.options = i, s.translator.backendConnector.services.utils = {
      hasLoadedNamespace: s.hasLoadedNamespace.bind(s)
    }, s;
  }
  toJSON() {
    return {
      options: this.options,
      store: this.store,
      language: this.language,
      languages: this.languages,
      resolvedLanguage: this.resolvedLanguage
    };
  }
}
const ua = Ic.createInstance();
ua.createInstance = Ic.createInstance;
const n$ = ua.createInstance;
ua.dir;
ua.init;
ua.loadResources;
ua.reloadResources;
ua.use;
ua.changeLanguage;
ua.getFixedT;
ua.t;
ua.exists;
ua.setDefaultNamespace;
ua.hasLoadedNamespace;
ua.loadNamespaces;
ua.loadLanguages;
function Hf(e) {
  "@babel/helpers - typeof";
  return Hf = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t) {
    return typeof t;
  } : function(t) {
    return t && typeof Symbol == "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
  }, Hf(e);
}
function Hw() {
  return typeof XMLHttpRequest == "function" || (typeof XMLHttpRequest > "u" ? "undefined" : Hf(XMLHttpRequest)) === "object";
}
function a$(e) {
  return !!e && typeof e.then == "function";
}
function r$(e) {
  return a$(e) ? e : Promise.resolve(e);
}
function i$(e) {
  throw new Error('Could not dynamically require "' + e + '". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.');
}
var zf = { exports: {} }, Ed = { exports: {} }, Wy;
function s$() {
  return Wy || (Wy = 1, function(e, t) {
    var n = typeof globalThis < "u" && globalThis || typeof self < "u" && self || typeof ya < "u" && ya, r = function() {
      function s() {
        this.fetch = !1, this.DOMException = n.DOMException;
      }
      return s.prototype = n, new s();
    }();
    (function(s) {
      (function(o) {
        var l = typeof s < "u" && s || typeof self < "u" && self || typeof l < "u" && l, c = {
          searchParams: "URLSearchParams" in l,
          iterable: "Symbol" in l && "iterator" in Symbol,
          blob: "FileReader" in l && "Blob" in l && function() {
            try {
              return new Blob(), !0;
            } catch {
              return !1;
            }
          }(),
          formData: "FormData" in l,
          arrayBuffer: "ArrayBuffer" in l
        };
        function d(A) {
          return A && DataView.prototype.isPrototypeOf(A);
        }
        if (c.arrayBuffer)
          var u = [
            "[object Int8Array]",
            "[object Uint8Array]",
            "[object Uint8ClampedArray]",
            "[object Int16Array]",
            "[object Uint16Array]",
            "[object Int32Array]",
            "[object Uint32Array]",
            "[object Float32Array]",
            "[object Float64Array]"
          ], p = ArrayBuffer.isView || function(A) {
            return A && u.indexOf(Object.prototype.toString.call(A)) > -1;
          };
        function m(A) {
          if (typeof A != "string" && (A = String(A)), /[^a-z0-9\-#$%&'*+.^_`|~!]/i.test(A) || A === "")
            throw new TypeError('Invalid character in header field name: "' + A + '"');
          return A.toLowerCase();
        }
        function f(A) {
          return typeof A != "string" && (A = String(A)), A;
        }
        function g(A) {
          var M = {
            next: function() {
              var V = A.shift();
              return { done: V === void 0, value: V };
            }
          };
          return c.iterable && (M[Symbol.iterator] = function() {
            return M;
          }), M;
        }
        function b(A) {
          this.map = {}, A instanceof b ? A.forEach(function(M, V) {
            this.append(V, M);
          }, this) : Array.isArray(A) ? A.forEach(function(M) {
            this.append(M[0], M[1]);
          }, this) : A && Object.getOwnPropertyNames(A).forEach(function(M) {
            this.append(M, A[M]);
          }, this);
        }
        b.prototype.append = function(A, M) {
          A = m(A), M = f(M);
          var V = this.map[A];
          this.map[A] = V ? V + ", " + M : M;
        }, b.prototype.delete = function(A) {
          delete this.map[m(A)];
        }, b.prototype.get = function(A) {
          return A = m(A), this.has(A) ? this.map[A] : null;
        }, b.prototype.has = function(A) {
          return this.map.hasOwnProperty(m(A));
        }, b.prototype.set = function(A, M) {
          this.map[m(A)] = f(M);
        }, b.prototype.forEach = function(A, M) {
          for (var V in this.map)
            this.map.hasOwnProperty(V) && A.call(M, this.map[V], V, this);
        }, b.prototype.keys = function() {
          var A = [];
          return this.forEach(function(M, V) {
            A.push(V);
          }), g(A);
        }, b.prototype.values = function() {
          var A = [];
          return this.forEach(function(M) {
            A.push(M);
          }), g(A);
        }, b.prototype.entries = function() {
          var A = [];
          return this.forEach(function(M, V) {
            A.push([V, M]);
          }), g(A);
        }, c.iterable && (b.prototype[Symbol.iterator] = b.prototype.entries);
        function v(A) {
          if (A.bodyUsed)
            return Promise.reject(new TypeError("Already read"));
          A.bodyUsed = !0;
        }
        function y(A) {
          return new Promise(function(M, V) {
            A.onload = function() {
              M(A.result);
            }, A.onerror = function() {
              V(A.error);
            };
          });
        }
        function x(A) {
          var M = new FileReader(), V = y(M);
          return M.readAsArrayBuffer(A), V;
        }
        function w(A) {
          var M = new FileReader(), V = y(M);
          return M.readAsText(A), V;
        }
        function R(A) {
          for (var M = new Uint8Array(A), V = new Array(M.length), U = 0; U < M.length; U++)
            V[U] = String.fromCharCode(M[U]);
          return V.join("");
        }
        function S(A) {
          if (A.slice)
            return A.slice(0);
          var M = new Uint8Array(A.byteLength);
          return M.set(new Uint8Array(A)), M.buffer;
        }
        function _() {
          return this.bodyUsed = !1, this._initBody = function(A) {
            this.bodyUsed = this.bodyUsed, this._bodyInit = A, A ? typeof A == "string" ? this._bodyText = A : c.blob && Blob.prototype.isPrototypeOf(A) ? this._bodyBlob = A : c.formData && FormData.prototype.isPrototypeOf(A) ? this._bodyFormData = A : c.searchParams && URLSearchParams.prototype.isPrototypeOf(A) ? this._bodyText = A.toString() : c.arrayBuffer && c.blob && d(A) ? (this._bodyArrayBuffer = S(A.buffer), this._bodyInit = new Blob([this._bodyArrayBuffer])) : c.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(A) || p(A)) ? this._bodyArrayBuffer = S(A) : this._bodyText = A = Object.prototype.toString.call(A) : this._bodyText = "", this.headers.get("content-type") || (typeof A == "string" ? this.headers.set("content-type", "text/plain;charset=UTF-8") : this._bodyBlob && this._bodyBlob.type ? this.headers.set("content-type", this._bodyBlob.type) : c.searchParams && URLSearchParams.prototype.isPrototypeOf(A) && this.headers.set("content-type", "application/x-www-form-urlencoded;charset=UTF-8"));
          }, c.blob && (this.blob = function() {
            var A = v(this);
            if (A)
              return A;
            if (this._bodyBlob)
              return Promise.resolve(this._bodyBlob);
            if (this._bodyArrayBuffer)
              return Promise.resolve(new Blob([this._bodyArrayBuffer]));
            if (this._bodyFormData)
              throw new Error("could not read FormData body as blob");
            return Promise.resolve(new Blob([this._bodyText]));
          }, this.arrayBuffer = function() {
            if (this._bodyArrayBuffer) {
              var A = v(this);
              return A || (ArrayBuffer.isView(this._bodyArrayBuffer) ? Promise.resolve(
                this._bodyArrayBuffer.buffer.slice(
                  this._bodyArrayBuffer.byteOffset,
                  this._bodyArrayBuffer.byteOffset + this._bodyArrayBuffer.byteLength
                )
              ) : Promise.resolve(this._bodyArrayBuffer));
            } else
              return this.blob().then(x);
          }), this.text = function() {
            var A = v(this);
            if (A)
              return A;
            if (this._bodyBlob)
              return w(this._bodyBlob);
            if (this._bodyArrayBuffer)
              return Promise.resolve(R(this._bodyArrayBuffer));
            if (this._bodyFormData)
              throw new Error("could not read FormData body as text");
            return Promise.resolve(this._bodyText);
          }, c.formData && (this.formData = function() {
            return this.text().then(I);
          }), this.json = function() {
            return this.text().then(JSON.parse);
          }, this;
        }
        var O = ["DELETE", "GET", "HEAD", "OPTIONS", "POST", "PUT"];
        function E(A) {
          var M = A.toUpperCase();
          return O.indexOf(M) > -1 ? M : A;
        }
        function T(A, M) {
          if (!(this instanceof T))
            throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.');
          M = M || {};
          var V = M.body;
          if (A instanceof T) {
            if (A.bodyUsed)
              throw new TypeError("Already read");
            this.url = A.url, this.credentials = A.credentials, M.headers || (this.headers = new b(A.headers)), this.method = A.method, this.mode = A.mode, this.signal = A.signal, !V && A._bodyInit != null && (V = A._bodyInit, A.bodyUsed = !0);
          } else
            this.url = String(A);
          if (this.credentials = M.credentials || this.credentials || "same-origin", (M.headers || !this.headers) && (this.headers = new b(M.headers)), this.method = E(M.method || this.method || "GET"), this.mode = M.mode || this.mode || null, this.signal = M.signal || this.signal, this.referrer = null, (this.method === "GET" || this.method === "HEAD") && V)
            throw new TypeError("Body not allowed for GET or HEAD requests");
          if (this._initBody(V), (this.method === "GET" || this.method === "HEAD") && (M.cache === "no-store" || M.cache === "no-cache")) {
            var U = /([?&])_=[^&]*/;
            if (U.test(this.url))
              this.url = this.url.replace(U, "$1_=" + (/* @__PURE__ */ new Date()).getTime());
            else {
              var G = /\?/;
              this.url += (G.test(this.url) ? "&" : "?") + "_=" + (/* @__PURE__ */ new Date()).getTime();
            }
          }
        }
        T.prototype.clone = function() {
          return new T(this, { body: this._bodyInit });
        };
        function I(A) {
          var M = new FormData();
          return A.trim().split("&").forEach(function(V) {
            if (V) {
              var U = V.split("="), G = U.shift().replace(/\+/g, " "), q = U.join("=").replace(/\+/g, " ");
              M.append(decodeURIComponent(G), decodeURIComponent(q));
            }
          }), M;
        }
        function k(A) {
          var M = new b(), V = A.replace(/\r?\n[\t ]+/g, " ");
          return V.split("\r").map(function(U) {
            return U.indexOf(`
`) === 0 ? U.substr(1, U.length) : U;
          }).forEach(function(U) {
            var G = U.split(":"), q = G.shift().trim();
            if (q) {
              var L = G.join(":").trim();
              M.append(q, L);
            }
          }), M;
        }
        _.call(T.prototype);
        function P(A, M) {
          if (!(this instanceof P))
            throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.');
          M || (M = {}), this.type = "default", this.status = M.status === void 0 ? 200 : M.status, this.ok = this.status >= 200 && this.status < 300, this.statusText = M.statusText === void 0 ? "" : "" + M.statusText, this.headers = new b(M.headers), this.url = M.url || "", this._initBody(A);
        }
        _.call(P.prototype), P.prototype.clone = function() {
          return new P(this._bodyInit, {
            status: this.status,
            statusText: this.statusText,
            headers: new b(this.headers),
            url: this.url
          });
        }, P.error = function() {
          var A = new P(null, { status: 0, statusText: "" });
          return A.type = "error", A;
        };
        var D = [301, 302, 303, 307, 308];
        P.redirect = function(A, M) {
          if (D.indexOf(M) === -1)
            throw new RangeError("Invalid status code");
          return new P(null, { status: M, headers: { location: A } });
        }, o.DOMException = l.DOMException;
        try {
          new o.DOMException();
        } catch {
          o.DOMException = function(M, V) {
            this.message = M, this.name = V;
            var U = Error(M);
            this.stack = U.stack;
          }, o.DOMException.prototype = Object.create(Error.prototype), o.DOMException.prototype.constructor = o.DOMException;
        }
        function F(A, M) {
          return new Promise(function(V, U) {
            var G = new T(A, M);
            if (G.signal && G.signal.aborted)
              return U(new o.DOMException("Aborted", "AbortError"));
            var q = new XMLHttpRequest();
            function L() {
              q.abort();
            }
            q.onload = function() {
              var B = {
                status: q.status,
                statusText: q.statusText,
                headers: k(q.getAllResponseHeaders() || "")
              };
              B.url = "responseURL" in q ? q.responseURL : B.headers.get("X-Request-URL");
              var j = "response" in q ? q.response : q.responseText;
              setTimeout(function() {
                V(new P(j, B));
              }, 0);
            }, q.onerror = function() {
              setTimeout(function() {
                U(new TypeError("Network request failed"));
              }, 0);
            }, q.ontimeout = function() {
              setTimeout(function() {
                U(new TypeError("Network request failed"));
              }, 0);
            }, q.onabort = function() {
              setTimeout(function() {
                U(new o.DOMException("Aborted", "AbortError"));
              }, 0);
            };
            function K(B) {
              try {
                return B === "" && l.location.href ? l.location.href : B;
              } catch {
                return B;
              }
            }
            q.open(G.method, K(G.url), !0), G.credentials === "include" ? q.withCredentials = !0 : G.credentials === "omit" && (q.withCredentials = !1), "responseType" in q && (c.blob ? q.responseType = "blob" : c.arrayBuffer && G.headers.get("Content-Type") && G.headers.get("Content-Type").indexOf("application/octet-stream") !== -1 && (q.responseType = "arraybuffer")), M && typeof M.headers == "object" && !(M.headers instanceof b) ? Object.getOwnPropertyNames(M.headers).forEach(function(B) {
              q.setRequestHeader(B, f(M.headers[B]));
            }) : G.headers.forEach(function(B, j) {
              q.setRequestHeader(j, B);
            }), G.signal && (G.signal.addEventListener("abort", L), q.onreadystatechange = function() {
              q.readyState === 4 && G.signal.removeEventListener("abort", L);
            }), q.send(typeof G._bodyInit > "u" ? null : G._bodyInit);
          });
        }
        return F.polyfill = !0, l.fetch || (l.fetch = F, l.Headers = b, l.Request = T, l.Response = P), o.Headers = b, o.Request = T, o.Response = P, o.fetch = F, o;
      })({});
    })(r), r.fetch.ponyfill = !0, delete r.fetch.polyfill;
    var i = n.fetch ? n : r;
    t = i.fetch, t.default = i.fetch, t.fetch = i.fetch, t.Headers = i.Headers, t.Request = i.Request, t.Response = i.Response, e.exports = t;
  }(Ed, Ed.exports)), Ed.exports;
}
(function(e, t) {
  var n;
  if (typeof fetch == "function" && (typeof ya < "u" && ya.fetch ? n = ya.fetch : typeof window < "u" && window.fetch ? n = window.fetch : n = fetch), typeof i$ < "u" && typeof window > "u") {
    var r = n || s$();
    r.default && (r = r.default), t.default = r, e.exports = t.default;
  }
})(zf, zf.exports);
var zw = zf.exports;
const qw = /* @__PURE__ */ Kh(zw), Xy = /* @__PURE__ */ WE({
  __proto__: null,
  default: qw
}, [zw]);
function Yy(e, t) {
  var n = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(e);
    t && (r = r.filter(function(i) {
      return Object.getOwnPropertyDescriptor(e, i).enumerable;
    })), n.push.apply(n, r);
  }
  return n;
}
function Jy(e) {
  for (var t = 1; t < arguments.length; t++) {
    var n = arguments[t] != null ? arguments[t] : {};
    t % 2 ? Yy(Object(n), !0).forEach(function(r) {
      o$(e, r, n[r]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Yy(Object(n)).forEach(function(r) {
      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(n, r));
    });
  }
  return e;
}
function o$(e, t, n) {
  return t = l$(t), t in e ? Object.defineProperty(e, t, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : e[t] = n, e;
}
function l$(e) {
  var t = c$(e, "string");
  return $s(t) == "symbol" ? t : t + "";
}
function c$(e, t) {
  if ($s(e) != "object" || !e) return e;
  var n = e[Symbol.toPrimitive];
  if (n !== void 0) {
    var r = n.call(e, t || "default");
    if ($s(r) != "object") return r;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (t === "string" ? String : Number)(e);
}
function $s(e) {
  "@babel/helpers - typeof";
  return $s = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t) {
    return typeof t;
  } : function(t) {
    return t && typeof Symbol == "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
  }, $s(e);
}
var xi;
typeof fetch == "function" && (typeof global < "u" && global.fetch ? xi = global.fetch : typeof window < "u" && window.fetch ? xi = window.fetch : xi = fetch);
var Pc;
Hw() && (typeof global < "u" && global.XMLHttpRequest ? Pc = global.XMLHttpRequest : typeof window < "u" && window.XMLHttpRequest && (Pc = window.XMLHttpRequest));
var Tu;
typeof ActiveXObject == "function" && (typeof global < "u" && global.ActiveXObject ? Tu = global.ActiveXObject : typeof window < "u" && window.ActiveXObject && (Tu = window.ActiveXObject));
!xi && Xy && !Pc && !Tu && (xi = qw || Xy);
typeof xi != "function" && (xi = void 0);
var qf = function(t, n) {
  if (n && $s(n) === "object") {
    var r = "";
    for (var i in n)
      r += "&" + encodeURIComponent(i) + "=" + encodeURIComponent(n[i]);
    if (!r) return t;
    t = t + (t.indexOf("?") !== -1 ? "&" : "?") + r.slice(1);
  }
  return t;
}, Zy = function(t, n, r, i) {
  var s = function(c) {
    if (!c.ok) return r(c.statusText || "Error", {
      status: c.status
    });
    c.text().then(function(d) {
      r(null, {
        status: c.status,
        data: d
      });
    }).catch(r);
  };
  if (i) {
    var o = i(t, n);
    if (o instanceof Promise) {
      o.then(s).catch(r);
      return;
    }
  }
  typeof fetch == "function" ? fetch(t, n).then(s).catch(r) : xi(t, n).then(s).catch(r);
}, Qy = !1, d$ = function(t, n, r, i) {
  t.queryStringParams && (n = qf(n, t.queryStringParams));
  var s = Jy({}, typeof t.customHeaders == "function" ? t.customHeaders() : t.customHeaders);
  typeof window > "u" && typeof global < "u" && typeof global.process < "u" && global.process.versions && global.process.versions.node && (s["User-Agent"] = "i18next-http-backend (node/".concat(global.process.version, "; ").concat(global.process.platform, " ").concat(global.process.arch, ")")), r && (s["Content-Type"] = "application/json");
  var o = typeof t.requestOptions == "function" ? t.requestOptions(r) : t.requestOptions, l = Jy({
    method: r ? "POST" : "GET",
    body: r ? t.stringify(r) : void 0,
    headers: s
  }, Qy ? {} : o), c = typeof t.alternateFetch == "function" && t.alternateFetch.length >= 1 ? t.alternateFetch : void 0;
  try {
    Zy(n, l, i, c);
  } catch (d) {
    if (!o || Object.keys(o).length === 0 || !d.message || d.message.indexOf("not implemented") < 0)
      return i(d);
    try {
      Object.keys(o).forEach(function(u) {
        delete l[u];
      }), Zy(n, l, i, c), Qy = !0;
    } catch (u) {
      i(u);
    }
  }
}, u$ = function(t, n, r, i) {
  r && $s(r) === "object" && (r = qf("", r).slice(1)), t.queryStringParams && (n = qf(n, t.queryStringParams));
  try {
    var s;
    Pc ? s = new Pc() : s = new Tu("MSXML2.XMLHTTP.3.0"), s.open(r ? "POST" : "GET", n, 1), t.crossDomain || s.setRequestHeader("X-Requested-With", "XMLHttpRequest"), s.withCredentials = !!t.withCredentials, r && s.setRequestHeader("Content-Type", "application/x-www-form-urlencoded"), s.overrideMimeType && s.overrideMimeType("application/json");
    var o = t.customHeaders;
    if (o = typeof o == "function" ? o() : o, o)
      for (var l in o)
        s.setRequestHeader(l, o[l]);
    s.onreadystatechange = function() {
      s.readyState > 3 && i(s.status >= 400 ? s.statusText : null, {
        status: s.status,
        data: s.responseText
      });
    }, s.send(r);
  } catch (c) {
    console && console.log(c);
  }
}, p$ = function(t, n, r, i) {
  if (typeof r == "function" && (i = r, r = void 0), i = i || function() {
  }, xi && n.indexOf("file:") !== 0)
    return d$(t, n, r, i);
  if (Hw() || typeof ActiveXObject == "function")
    return u$(t, n, r, i);
  i(new Error("No fetch and no xhr implementation found!"));
};
function Vo(e) {
  "@babel/helpers - typeof";
  return Vo = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t) {
    return typeof t;
  } : function(t) {
    return t && typeof Symbol == "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
  }, Vo(e);
}
function eC(e, t) {
  var n = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(e);
    t && (r = r.filter(function(i) {
      return Object.getOwnPropertyDescriptor(e, i).enumerable;
    })), n.push.apply(n, r);
  }
  return n;
}
function Em(e) {
  for (var t = 1; t < arguments.length; t++) {
    var n = arguments[t] != null ? arguments[t] : {};
    t % 2 ? eC(Object(n), !0).forEach(function(r) {
      Gw(e, r, n[r]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : eC(Object(n)).forEach(function(r) {
      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(n, r));
    });
  }
  return e;
}
function m$(e, t) {
  if (!(e instanceof t))
    throw new TypeError("Cannot call a class as a function");
}
function f$(e, t) {
  for (var n = 0; n < t.length; n++) {
    var r = t[n];
    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, Ww(r.key), r);
  }
}
function h$(e, t, n) {
  return t && f$(e.prototype, t), Object.defineProperty(e, "prototype", { writable: !1 }), e;
}
function Gw(e, t, n) {
  return t = Ww(t), t in e ? Object.defineProperty(e, t, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : e[t] = n, e;
}
function Ww(e) {
  var t = g$(e, "string");
  return Vo(t) == "symbol" ? t : t + "";
}
function g$(e, t) {
  if (Vo(e) != "object" || !e) return e;
  var n = e[Symbol.toPrimitive];
  if (n !== void 0) {
    var r = n.call(e, t || "default");
    if (Vo(r) != "object") return r;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (t === "string" ? String : Number)(e);
}
var b$ = function() {
  return {
    loadPath: "/locales/{{lng}}/{{ns}}.json",
    addPath: "/locales/add/{{lng}}/{{ns}}",
    parse: function(n) {
      return JSON.parse(n);
    },
    stringify: JSON.stringify,
    parsePayload: function(n, r, i) {
      return Gw({}, r, i || "");
    },
    parseLoadPayload: function(n, r) {
    },
    request: p$,
    reloadInterval: typeof window < "u" ? !1 : 60 * 60 * 1e3,
    customHeaders: {},
    queryStringParams: {},
    crossDomain: !1,
    withCredentials: !1,
    overrideMimeType: !1,
    requestOptions: {
      mode: "cors",
      credentials: "same-origin",
      cache: "default"
    }
  };
}, Xw = function() {
  function e(t) {
    var n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
    m$(this, e), this.services = t, this.options = n, this.allOptions = r, this.type = "backend", this.init(t, n, r);
  }
  return h$(e, [{
    key: "init",
    value: function(n) {
      var r = this, i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, s = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
      if (this.services = n, this.options = Em(Em(Em({}, b$()), this.options || {}), i), this.allOptions = s, this.services && this.options.reloadInterval) {
        var o = setInterval(function() {
          return r.reload();
        }, this.options.reloadInterval);
        Vo(o) === "object" && typeof o.unref == "function" && o.unref();
      }
    }
  }, {
    key: "readMulti",
    value: function(n, r, i) {
      this._readAny(n, n, r, r, i);
    }
  }, {
    key: "read",
    value: function(n, r, i) {
      this._readAny([n], n, [r], r, i);
    }
  }, {
    key: "_readAny",
    value: function(n, r, i, s, o) {
      var l = this, c = this.options.loadPath;
      typeof this.options.loadPath == "function" && (c = this.options.loadPath(n, i)), c = r$(c), c.then(function(d) {
        if (!d) return o(null, {});
        var u = l.services.interpolator.interpolate(d, {
          lng: n.join("+"),
          ns: i.join("+")
        });
        l.loadUrl(u, o, r, s);
      });
    }
  }, {
    key: "loadUrl",
    value: function(n, r, i, s) {
      var o = this, l = typeof i == "string" ? [i] : i, c = typeof s == "string" ? [s] : s, d = this.options.parseLoadPayload(l, c);
      this.options.request(this.options, n, d, function(u, p) {
        if (p && (p.status >= 500 && p.status < 600 || !p.status)) return r("failed loading " + n + "; status code: " + p.status, !0);
        if (p && p.status >= 400 && p.status < 500) return r("failed loading " + n + "; status code: " + p.status, !1);
        if (!p && u && u.message && u.message.indexOf("Failed to fetch") > -1) return r("failed loading " + n + ": " + u.message, !0);
        if (u) return r(u, !1);
        var m, f;
        try {
          typeof p.data == "string" ? m = o.options.parse(p.data, i, s) : m = p.data;
        } catch {
          f = "failed parsing " + n + " to json";
        }
        if (f) return r(f, !1);
        r(null, m);
      });
    }
  }, {
    key: "create",
    value: function(n, r, i, s, o) {
      var l = this;
      if (this.options.addPath) {
        typeof n == "string" && (n = [n]);
        var c = this.options.parsePayload(r, i, s), d = 0, u = [], p = [];
        n.forEach(function(m) {
          var f = l.options.addPath;
          typeof l.options.addPath == "function" && (f = l.options.addPath(m, r));
          var g = l.services.interpolator.interpolate(f, {
            lng: m,
            ns: r
          });
          l.options.request(l.options, g, c, function(b, v) {
            d += 1, u.push(b), p.push(v), d === n.length && typeof o == "function" && o(u, p);
          });
        });
      }
    }
  }, {
    key: "reload",
    value: function() {
      var n = this, r = this.services, i = r.backendConnector, s = r.languageUtils, o = r.logger, l = i.language;
      if (!(l && l.toLowerCase() === "cimode")) {
        var c = [], d = function(p) {
          var m = s.toResolveHierarchy(p);
          m.forEach(function(f) {
            c.indexOf(f) < 0 && c.push(f);
          });
        };
        d(l), this.allOptions.preload && this.allOptions.preload.forEach(function(u) {
          return d(u);
        }), c.forEach(function(u) {
          n.allOptions.ns.forEach(function(p) {
            i.read(u, p, "read", null, null, function(m, f) {
              m && o.warn("loading namespace ".concat(p, " for language ").concat(u, " failed"), m), !m && f && o.log("loaded namespace ".concat(p, " for language ").concat(u), f), i.loaded("".concat(u, "|").concat(p), m, f);
            });
          });
        });
      }
    }
  }]);
}();
Xw.type = "backend";
const Im = MF(), Pm = "/";
function _c(...e) {
  return e.map((n, r) => {
    const i = r === 0, s = r === e.length - 1;
    return !i && n.startsWith(Pm) && (n = n.slice(1)), !s && n.endsWith(Pm) && (n = n.slice(0, -1)), n;
  }, []).join(Pm);
}
const Na = "en", v$ = ".", qr = n$({
  fallbackLng: Na,
  keySeparator: v$,
  interpolation: {
    escapeValue: !1
  },
  defaultNS: [Im.realm],
  ns: [Im.realm],
  backend: {
    loadPath: _c(
      Im.adminBaseUrl,
      "resources/{{ns}}/admin/{{lng}}"
    ),
    parse: (e) => {
      const t = JSON.parse(e), n = {};
      return t.forEach((r) => n[r.key] = r.value), n;
    }
  }
});
qr.use(Xw);
qr.use(KE);
const Yw = Er(
  "RealmContext",
  void 0
), y$ = ({ children: e }) => {
  const { adminClient: t } = pe(), { environment: n } = Ha(), [r, i] = N(0), s = () => i(r + 1), [o, l] = N(), d = Po({
    path: _g.path,
    end: !1
  })?.params.realm, u = et(
    () => decodeURIComponent(d ?? n.realm),
    [d]
  );
  return He(() => {
    (async () => (t.setConfig({ realmName: u }), await qr.loadNamespaces(u), qr.setDefaultNamespace(u)))();
  }, [u]), Re(
    () => t.realms.findOne({ realm: u }),
    l,
    [u, r]
  ), /* @__PURE__ */ a(Yw.Provider, { value: { realm: u, realmRepresentation: o, refresh: s }, children: e });
}, be = () => Ir(Yw);
class tC {
  #e;
  constructor(t) {
    this.#e = t, this.#e?.locale && qr.changeLanguage(this.#e.locale, (n) => {
      n && console.warn("Error(s) loading locale", this.#e?.locale, n);
    });
  }
  getDisplayName() {
    return this.#e === void 0 ? "" : this.#e.displayName;
  }
  getLocale() {
    return this.#e?.locale ?? Na;
  }
  getRealm() {
    return this.#e?.realm ?? "";
  }
  getUserId() {
    return this.#e === void 0 ? "" : this.#e.userId;
  }
  canCreateRealm() {
    return !!this.#e?.createRealm;
  }
  getRealmAccess() {
    return this.#e === void 0 ? {} : this.#e.realm_access;
  }
}
const Jw = Er(
  "WhoAmIContext",
  void 0
), _a = () => Ir(Jw), C$ = ({ children: e }) => {
  const { adminClient: t } = pe(), { environment: n } = Ha(), [r, i] = N(new tC()), { realm: s } = be(), [o, l] = N(0);
  return Re(
    () => t.whoAmI.find({
      realm: n.realm,
      currentRealm: s
    }),
    (c) => {
      const d = new tC(c);
      i(d);
    },
    [o, s]
  ), /* @__PURE__ */ a(Jw.Provider, { value: { refresh: () => l(o + 1), whoAmI: r }, children: e });
}, Zw = Er(
  "AccessContext",
  void 0
), Mt = () => Ir(Zw), x$ = ({ children: e }) => {
  const { whoAmI: t } = _a(), { realm: n } = be(), [r, i] = N([]);
  He(() => {
    t.getRealmAccess()[n] && i(t.getRealmAccess()[n]);
  }, [t, n]);
  const s = (...l) => l.every(
    (c) => c === "anyone" || typeof c == "function" && c({ hasAll: s, hasAny: o }) || r.includes(c)
  ), o = (...l) => l.some(
    (c) => c === "anyone" || typeof c == "function" && c({ hasAll: s, hasAny: o }) || r.includes(c)
  );
  return /* @__PURE__ */ a(Zw.Provider, { value: { hasAccess: s, hasSomeAccess: o }, children: e });
};
function pa() {
  const { whoAmI: e } = _a();
  return function(n, r) {
    const i = e.getLocale();
    return [...n].sort((s, o) => {
      const l = r(s), c = r(o);
      return l === void 0 || c === void 0 ? 0 : l.localeCompare(c, i);
    });
  };
}
const or = (e) => (t) => t[e], S$ = (e) => {
  var { items: t, isDisabled: n, rowData: r, extraData: i, actionsToggle: s, popperProps: o = {
    position: "end",
    direction: "down"
  }, innerRef: l, firstActionItemRef: c, isOnOpenChangeDisabled: d = !1 } = e, u = oe(e, ["items", "isDisabled", "rowData", "extraData", "actionsToggle", "popperProps", "innerRef", "firstActionItemRef", "isOnOpenChangeDisabled"]);
  const [p, m] = h.useState(!1), f = () => {
    m(!p);
  }, g = (b, v) => {
    v && (b.preventDefault(), v(b, i && i.rowIndex, r, i));
  };
  return h.createElement(
    h.Fragment,
    null,
    t.filter((b) => b.isOutsideDropdown).map((b, v) => {
      var { title: y, itemKey: x, onClick: w, isOutsideDropdown: R } = b, S = oe(b, ["title", "itemKey", "onClick", "isOutsideDropdown"]);
      return typeof y == "string" ? h.createElement(z, Object.assign({ onClick: (_) => g(_, w) }, S, { isDisabled: n, key: x || `outside_dropdown_${v}`, "data-key": x || `outside_dropdown_${v}` }), y) : h.cloneElement(y, Object.assign({ onClick: w, isDisabled: n }, S));
    }),
    h.createElement(
      qt,
      Object.assign({ isOpen: p, onOpenChange: d ? void 0 : (b) => m(b), toggle: (b) => s ? s({ onToggle: f, isOpen: p, isDisabled: n, toggleRef: b }) : h.createElement(
        yt,
        { "aria-label": "Kebab toggle", ref: b, onClick: f, isExpanded: p, isDisabled: n, variant: "plain" },
        h.createElement(dr, null)
      ) }, r && r.actionProps, { ref: l }, u, { popperProps: o }),
      h.createElement(Xt, null, t.filter((b) => !b.isOutsideDropdown).map((b, v) => {
        var { title: y, itemKey: x, onClick: w, tooltipProps: R, isSeparator: S, shouldCloseOnClick: _ = !0 } = b, O = oe(b, ["title", "itemKey", "onClick", "tooltipProps", "isSeparator", "shouldCloseOnClick"]);
        if (S)
          return h.createElement(_t, { key: x || v, "data-key": x || v });
        const E = h.createElement(Ke, Object.assign({ onClick: (T) => {
          g(T, w), _ && f();
        } }, O, { key: x || v, "data-key": x || v, ref: v === 0 ? c : void 0 }), y);
        return R?.content ? h.createElement(Yt, Object.assign({ key: x || v }, R), E) : E;
      }))
    )
  );
}, dl = h.forwardRef((e, t) => h.createElement(S$, Object.assign({}, e, { innerRef: t })));
dl.displayName = "ActionsColumn";
const Ze = {
  button: "pf-v5-c-button",
  check: "pf-v5-c-check",
  checkInput: "pf-v5-c-check__input",
  dirRtl: "pf-v5-m-dir-rtl",
  modifiers: {
    hidden: "pf-m-hidden",
    hiddenOnSm: "pf-m-hidden-on-sm",
    visibleOnSm: "pf-m-visible-on-sm",
    hiddenOnMd: "pf-m-hidden-on-md",
    visibleOnMd: "pf-m-visible-on-md",
    hiddenOnLg: "pf-m-hidden-on-lg",
    visibleOnLg: "pf-m-visible-on-lg",
    hiddenOnXl: "pf-m-hidden-on-xl",
    visibleOnXl: "pf-m-visible-on-xl",
    hiddenOn_2xl: "pf-m-hidden-on-2xl",
    visibleOn_2xl: "pf-m-visible-on-2xl",
    fixed: "pf-m-fixed",
    stickyHeader: "pf-m-sticky-header",
    nestedColumnHeader: "pf-m-nested-column-header",
    borderRow: "pf-m-border-row",
    striped: "pf-m-striped",
    expandable: "pf-m-expandable",
    stripedEven: "pf-m-striped-even",
    ghostRow: "pf-m-ghost-row",
    center: "pf-m-center",
    help: "pf-m-help",
    favorite: "pf-m-favorite",
    borderRight: "pf-m-border-right",
    borderLeft: "pf-m-border-left",
    expanded: "pf-m-expanded",
    truncate: "pf-m-truncate",
    wrap: "pf-m-wrap",
    nowrap: "pf-m-nowrap",
    fitContent: "pf-m-fit-content",
    breakWord: "pf-m-break-word",
    noBorderRows: "pf-m-no-border-rows",
    clickable: "pf-m-clickable",
    selected: "pf-m-selected",
    firstCellOffsetReset: "pf-m-first-cell-offset-reset",
    dragOver: "pf-m-drag-over",
    standalone: "pf-m-standalone",
    favorited: "pf-m-favorited",
    noPadding: "pf-m-no-padding",
    compact: "pf-m-compact",
    width_10: "pf-m-width-10",
    width_15: "pf-m-width-15",
    width_20: "pf-m-width-20",
    width_25: "pf-m-width-25",
    width_30: "pf-m-width-30",
    width_35: "pf-m-width-35",
    width_40: "pf-m-width-40",
    width_45: "pf-m-width-45",
    width_50: "pf-m-width-50",
    width_60: "pf-m-width-60",
    width_70: "pf-m-width-70",
    width_80: "pf-m-width-80",
    width_90: "pf-m-width-90",
    width_100: "pf-m-width-100"
  },
  table: "pf-v5-c-table",
  tableAction: "pf-v5-c-table__action",
  tableButton: "pf-v5-c-table__button",
  tableButtonContent: "pf-v5-c-table__button-content",
  tableCaption: "pf-v5-c-table__caption",
  tableCheck: "pf-v5-c-table__check",
  tableColumnHelp: "pf-v5-c-table__column-help",
  tableColumnHelpAction: "pf-v5-c-table__column-help-action",
  tableCompoundExpansionToggle: "pf-v5-c-table__compound-expansion-toggle",
  tableControlRow: "pf-v5-c-table__control-row",
  tableDraggable: "pf-v5-c-table__draggable",
  tableExpandableRow: "pf-v5-c-table__expandable-row",
  tableExpandableRowContent: "pf-v5-c-table__expandable-row-content",
  tableFavorite: "pf-v5-c-table__favorite",
  tableIcon: "pf-v5-c-table__icon",
  tableIconInline: "pf-v5-c-table__icon-inline",
  tableInlineEditAction: "pf-v5-c-table__inline-edit-action",
  tableSort: "pf-v5-c-table__sort",
  tableSortIndicator: "pf-v5-c-table__sort-indicator",
  tableSubhead: "pf-v5-c-table__subhead",
  tableTbody: "pf-v5-c-table__tbody",
  tableTd: "pf-v5-c-table__td",
  tableText: "pf-v5-c-table__text",
  tableTh: "pf-v5-c-table__th",
  tableThead: "pf-v5-c-table__thead",
  tableToggle: "pf-v5-c-table__toggle",
  tableToggleIcon: "pf-v5-c-table__toggle-icon",
  tableTr: "pf-v5-c-table__tr",
  themeDark: "pf-v5-theme-dark"
}, Qw = (e) => {
  var { className: t = "", children: n = null, isOpen: r, onToggle: i } = e, s = oe(e, ["className", "children", "isOpen", "onToggle"]);
  return h.createElement(
    h.Fragment,
    null,
    r !== void 0 && h.createElement(
      z,
      Object.assign({ className: $(t, r && Ze.modifiers.expanded) }, s, { variant: "plain", "aria-label": s["aria-label"] || "Details", onClick: i, "aria-expanded": r }),
      h.createElement(
        "div",
        { className: $(Ze.tableToggleIcon) },
        h.createElement(Uh, null)
      )
    ),
    n
  );
};
Qw.displayName = "CollapseColumn";
const ek = (e) => {
  var { className: t, onClick: n, "aria-label": r, id: i } = e, s = oe(e, ["className", "onClick", "aria-label", "id"]);
  return h.createElement(
    z,
    Object.assign({ id: i, variant: "plain", className: t, type: "button", "aria-label": r || "Draggable row draggable button", onClick: n }, s),
    h.createElement(J1, { "aria-hidden": !0 })
  );
};
ek.displayName = "DraggableCell";
const w$ = {
  button: "pf-v5-c-button",
  inlineEdit: "pf-v5-c-inline-edit",
  inlineEditAction: "pf-v5-c-inline-edit__action",
  inlineEditEditableText: "pf-v5-c-inline-edit__editable-text",
  inlineEditGroup: "pf-v5-c-inline-edit__group",
  inlineEditInput: "pf-v5-c-inline-edit__input",
  inlineEditLabel: "pf-v5-c-inline-edit__label",
  inlineEditValue: "pf-v5-c-inline-edit__value",
  modifiers: {
    iconGroup: "pf-m-icon-group",
    footer: "pf-m-footer",
    column: "pf-m-column",
    valid: "pf-m-valid",
    plain: "pf-m-plain",
    actionGroup: "pf-m-action-group",
    enableEditable: "pf-m-enable-editable",
    inlineEditable: "pf-m-inline-editable",
    enable: "pf-m-enable",
    bold: "pf-m-bold"
  }
}, hs = (e) => {
  var { children: t = null } = e, n = oe(e, ["children"]);
  return h.createElement("div", Object.assign({}, n, { className: $(Ze.tableExpandableRowContent) }), t);
};
hs.displayName = "ExpandableRowContent";
var nC;
(function(e) {
  e.div = "div", e.nav = "nav";
})(nC || (nC = {}));
var aC;
(function(e) {
  e.wrap = "wrap", e.nowrap = "nowrap", e.truncate = "truncate", e.breakWord = "breakWord", e.fitContent = "fitContent";
})(aC || (aC = {}));
const gs = (e) => {
  var { children: t = null, className: n = "", variant: r = "span", wrapModifier: i = null, tooltip: s = "", tooltipProps: o = {}, onMouseEnter: l = () => {
  }, focused: c = !1, tooltipHasDefaultBehavior: d = !1 } = e, u = oe(e, ["children", "className", "variant", "wrapModifier", "tooltip", "tooltipProps", "onMouseEnter", "focused", "tooltipHasDefaultBehavior"]);
  const p = r, m = h.createRef(), [f, g] = h.useState(s), b = (x) => {
    x.target.offsetWidth < x.target.scrollWidth ? g(s || x.target.innerText) : g(""), l(x);
  }, v = (x) => {
    x.offsetWidth < x.scrollWidth ? g(s || x.innerText) : g("");
  }, y = h.createElement(p, Object.assign({ ref: m, onMouseEnter: d ? void 0 : b, className: $(n, i && Ze.modifiers[i], Ze.tableText) }, u), t);
  return h.useEffect(() => {
    d || (c ? v(m.current) : g(""));
  }, [c, d]), f !== "" ? h.createElement(Yt, Object.assign({ triggerRef: m, content: f }, !d && { isVisible: !0 }, o), y) : y;
};
gs.displayName = "TableText";
const Gf = ({ children: e, info: t, className: n, variant: r = "tooltip", popoverProps: i, tooltipProps: s, ariaLabel: o }) => h.createElement(
  "div",
  { className: $(Ze.tableColumnHelp, n) },
  typeof e == "string" ? h.createElement(gs, null, e) : e,
  h.createElement("span", { className: $(Ze.tableColumnHelpAction) }, r === "tooltip" ? h.createElement(
    Yt,
    Object.assign({ content: t }, s),
    h.createElement(
      z,
      { variant: "plain", "aria-label": o || typeof t == "string" && t || "More info" },
      h.createElement(Tf, null)
    )
  ) : h.createElement(
    Or,
    Object.assign({ bodyContent: t }, i),
    h.createElement(
      z,
      { variant: "plain", "aria-label": o || typeof t == "string" && t || "More info" },
      h.createElement(Tf, null)
    )
  ))
);
Gf.displayName = "HeaderCellInfoWrapper";
const k$ = {
  button: "pf-v5-c-button",
  modifiers: {
    grid: "pf-m-grid",
    compact: "pf-m-compact",
    expanded: "pf-m-expanded",
    selected: "pf-m-selected",
    noPadding: "pf-m-no-padding",
    hoverable: "pf-m-hoverable",
    nowrap: "pf-m-nowrap",
    fitContent: "pf-m-fit-content",
    truncate: "pf-m-truncate",
    gridMd: "pf-m-grid-md",
    gridLg: "pf-m-grid-lg",
    gridXl: "pf-m-grid-xl",
    grid_2xl: "pf-m-grid-2xl"
  },
  table: "pf-v5-c-table",
  tableAction: "pf-v5-c-table__action",
  tableButton: "pf-v5-c-table__button",
  tableCheck: "pf-v5-c-table__check",
  tableCompoundExpansionToggle: "pf-v5-c-table__compound-expansion-toggle",
  tableExpandableRow: "pf-v5-c-table__expandable-row",
  tableExpandableRowContent: "pf-v5-c-table__expandable-row-content",
  tableFavorite: "pf-v5-c-table__favorite",
  tableIcon: "pf-v5-c-table__icon",
  tableInlineEditAction: "pf-v5-c-table__inline-edit-action",
  tableTbody: "pf-v5-c-table__tbody",
  tableTd: "pf-v5-c-table__td",
  tableText: "pf-v5-c-table__text",
  tableTh: "pf-v5-c-table__th",
  tableThead: "pf-v5-c-table__thead",
  tableToggle: "pf-v5-c-table__toggle",
  tableToggleIcon: "pf-v5-c-table__toggle-icon",
  tableTr: "pf-v5-c-table__tr"
}, ga = {
  dirRtl: "pf-v5-m-dir-rtl",
  dropdown: "pf-v5-c-dropdown",
  modifiers: {
    treeView: "pf-m-tree-view",
    noInset: "pf-m-no-inset",
    treeViewGrid: "pf-m-tree-view-grid",
    treeViewDetailsExpanded: "pf-m-tree-view-details-expanded",
    treeViewGridMd: "pf-m-tree-view-grid-md",
    treeViewGridLg: "pf-m-tree-view-grid-lg",
    treeViewGridXl: "pf-m-tree-view-grid-xl",
    treeViewGrid_2xl: "pf-m-tree-view-grid-2xl"
  },
  table: "pf-v5-c-table",
  tableAction: "pf-v5-c-table__action",
  tableCheck: "pf-v5-c-table__check",
  tableTbody: "pf-v5-c-table__tbody",
  tableTd: "pf-v5-c-table__td",
  tableTh: "pf-v5-c-table__th",
  tableThead: "pf-v5-c-table__thead",
  tableToggle: "pf-v5-c-table__toggle",
  tableToggleIcon: "pf-v5-c-table__toggle-icon",
  tableTr: "pf-v5-c-table__tr",
  tableTreeViewDetailsToggle: "pf-v5-c-table__tree-view-details-toggle",
  tableTreeViewIcon: "pf-v5-c-table__tree-view-icon",
  tableTreeViewMain: "pf-v5-c-table__tree-view-main",
  tableTreeViewText: "pf-v5-c-table__tree-view-text",
  tableTreeViewTitleCell: "pf-v5-c-table__tree-view-title-cell",
  tableTreeViewTitleHeaderCell: "pf-v5-c-table__tree-view-title-header-cell"
};
var Wf;
(function(e) {
  e.radio = "radio", e.checkbox = "checkbox";
})(Wf || (Wf = {}));
const tk = (e) => {
  var {
    children: t = null,
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    className: n,
    onSelect: r = null,
    selectVariant: i,
    tooltip: s,
    tooltipProps: o
  } = e, l = oe(e, ["children", "className", "onSelect", "selectVariant", "tooltip", "tooltipProps"]);
  const c = h.createRef(), d = h.createElement(
    h.Fragment,
    null,
    h.createElement(
      "label",
      null,
      h.createElement("input", Object.assign({}, l, { ref: c, type: i, onChange: r }))
    ),
    t
  );
  return s ? h.createElement(Yt, Object.assign({ triggerRef: c, content: s }, o), d) : d;
};
tk.displayName = "SelectColumn";
const nk = (e, { rowIndex: t, columnIndex: n, rowData: r, column: i, property: s, tooltip: o }) => {
  const { extraParams: { onSelect: l, selectVariant: c, allRowsSelected: d, isHeaderSelectDisabled: u } } = i, p = {
    rowIndex: t,
    columnIndex: n,
    column: i,
    property: s
  };
  if (r && r.hasOwnProperty("parent") && !r.showSelect && !r.fullWidth)
    return {
      component: "td",
      isVisible: !0
    };
  const m = t !== void 0 ? t : -1;
  function f(v) {
    const y = t === void 0 ? v.currentTarget.checked : r && !r.selected;
    l && l(v, y, m, r, p);
  }
  const g = Object.assign(Object.assign(Object.assign({}, m !== -1 ? {
    checked: r && !!r.selected,
    "aria-label": `Select row ${t}`
  } : {
    checked: d,
    "aria-label": "Select all rows"
  }), r && (r.disableCheckbox || r.disableSelection) && {
    disabled: !0,
    className: di.checkInput
  }), !r && u && { disabled: !0 });
  let b = "check-all";
  return m !== -1 && c === Wf.checkbox ? b = `checkrow${t}` : m !== -1 && (b = "radioGroup"), {
    className: $(Ze.tableCheck),
    component: m !== -1 ? "td" : "th",
    isVisible: !r || !r.fullWidth,
    children: h.createElement(tk, Object.assign({}, g, { selectVariant: c, onSelect: f, name: b, tooltip: o }), e)
  };
};
var Is;
(function(e) {
  e.asc = "asc", e.desc = "desc";
})(Is || (Is = {}));
const ak = (e) => {
  var { children: t = null, className: n = "", isSortedBy: r = !1, onSort: i = null, sortDirection: s = "", type: o = "button", tooltip: l, tooltipProps: c, tooltipHasDefaultBehavior: d } = e, u = oe(e, ["children", "className", "isSortedBy", "onSort", "sortDirection", "type", "tooltip", "tooltipProps", "tooltipHasDefaultBehavior"]);
  let p;
  const [m, f] = h.useState(!1);
  return r ? p = s === Is.asc ? BL : $L : p = nL, h.createElement(
    "button",
    Object.assign({}, u, { type: o, className: $(n, Ze.tableButton), onClick: (g) => i && i(g), onFocus: () => f(!0), onBlur: () => f(!1) }),
    h.createElement(
      "div",
      { className: $(n, Ze.tableButtonContent) },
      h.createElement(gs, { tooltip: l, tooltipProps: c, tooltipHasDefaultBehavior: d, focused: m }, t),
      h.createElement(
        "span",
        { className: $(Ze.tableSortIndicator) },
        h.createElement(p, null)
      )
    )
  );
};
ak.displayName = "SortColumn";
const O$ = (e) => () => rk(h.createElement(Eh, { "aria-hidden": !0 }), {
  columnIndex: e.columnIndex,
  className: Ze.modifiers.favorite,
  ariaLabel: "Sort favorites",
  column: {
    extraParams: {
      sortBy: e.sortBy,
      onSort: e?.onSort
    }
  },
  tooltip: e.tooltip,
  tooltipProps: e.tooltipProps,
  tooltipHasDefaultBehavior: !0
}), rk = (e, { columnIndex: t, column: n, property: r, className: i, ariaLabel: s, tooltip: o, tooltipProps: l, tooltipHasDefaultBehavior: c }) => {
  const { extraParams: { sortBy: d, onSort: u } } = n, p = {
    columnIndex: t,
    column: n,
    property: r
  }, m = d && t === d.index;
  function f(g) {
    let b;
    m ? b = d.direction === Is.asc ? Is.desc : Is.asc : b = d.defaultDirection ? d.defaultDirection : Is.asc, u && u(g, t, b, p);
  }
  return {
    className: $(Ze.tableSort, m && Ze.modifiers.selected, i),
    "aria-sort": m ? `${d.direction}ending` : "none",
    children: h.createElement(ak, { isSortedBy: m, sortDirection: m ? d.direction : "", onSort: f, "aria-label": s, tooltip: o, tooltipProps: l, tooltipHasDefaultBehavior: c }, e)
  };
}, rC = (e, t, n, r) => t, T$ = (e, t, n) => (r, { rowData: i, column: s, rowIndex: o, columnIndex: l, column: { extraParams: { actionsToggle: c, actionsPopperProps: d } }, property: u }) => {
  const p = {
    rowIndex: o,
    columnIndex: l,
    column: s,
    property: u
  }, m = rC(t, e), f = rC(n, i && i.disableActions), g = m && m.length > 0 ? {
    children: h.createElement(dl, { items: m, isDisabled: f, rowData: i, extraData: p, actionsToggle: c, popperProps: d }, r)
  } : {};
  return Object.assign({ className: $(Ze.tableAction), style: { paddingRight: 0 }, isVisible: !0 }, g);
}, E$ = (e) => e.toUpperCase().replace("-", "").replace("_", ""), iC = (e) => e.replace(/([-_][a-z])/gi, E$);
function I$(e) {
  return e[0].toUpperCase() + e.substring(1);
}
const Ft = (e) => () => ({
  className: $(Ze.modifiers[typeof e == "number" ? `width_${e}` : `width${I$(e)}`])
}), P$ = () => ({
  className: Ze.modifiers.wrap
}), ik = (e, { rowIndex: t, columnIndex: n, rowData: r, column: i, property: s }) => {
  const { extraParams: { onCollapse: o, rowLabeledBy: l = "simple-node", expandId: c = "expand-toggle", allRowsExpanded: d, collapseAllAriaLabel: u } } = i, p = {
    rowIndex: t,
    columnIndex: n,
    column: i,
    property: s
  }, m = t !== void 0 ? t : -1, f = Object.assign({}, m !== -1 ? {
    isOpen: r?.isOpen,
    "aria-labelledby": `${l}${m} ${c}${m}`
  } : {
    isOpen: d,
    "aria-label": u || "Expand all rows"
  });
  function g(b) {
    const v = r ? !r.isOpen : !d;
    o && o(b, t, v, r, p);
  }
  return {
    className: (r?.isOpen !== void 0 || m === -1) && $(Ze.tableToggle),
    isVisible: !r?.fullWidth,
    children: h.createElement(Qw, Object.assign({ "aria-labelledby": `${l}${m} ${c}${m}`, onToggle: g, id: c + m }, f), e)
  };
}, _$ = (e, { rowIndex: t, columnIndex: n, rowData: r, column: i, property: s }) => {
  if (!e)
    return null;
  const { title: o, props: l } = e, { extraParams: { onExpand: c, expandId: d = "expand-toggle" } } = i, u = {
    rowIndex: t,
    columnIndex: n,
    column: i,
    property: s
  };
  function p(m) {
    c && c(m, t, n, l.isOpen, r, u);
  }
  return {
    className: $(Ze.tableCompoundExpansionToggle, l.isOpen && Ze.modifiers.expanded),
    children: l.isOpen !== void 0 && h.createElement(
      "button",
      { type: "button", className: $(Ze.tableButton), onClick: p, "aria-expanded": l.isOpen, "aria-controls": l.ariaControls, id: `${d}-${t}-${n}` },
      h.createElement(gs, null, o)
    )
  };
}, R$ = [
  "hidden",
  "hiddenOnSm",
  "hiddenOnMd",
  "hiddenOnLg",
  "hiddenOnXl",
  "hiddenOn_2xl",
  "visibleOnSm",
  "visibleOnMd",
  "visibleOnLg",
  "visibleOnXl",
  "visibleOn_2xl"
], sk = R$.filter((e) => Ze.modifiers[e]).reduce((e, t) => {
  const n = t.replace("_2xl", "2Xl");
  return e[n] = Ze.modifiers[t], e;
}, {}), ok = (...e) => () => ({
  className: $(...e)
}), A$ = ({ tooltip: e, tooltipProps: t, popover: n, popoverProps: r, className: i, ariaLabel: s }) => (l) => ({
  className: Ze.modifiers.help,
  children: e ? h.createElement(Gf, { variant: "tooltip", info: e, tooltipProps: t, ariaLabel: s, className: i }, l) : h.createElement(Gf, { variant: "popover", info: n, popoverProps: r, ariaLabel: s, className: i }, l)
}), lk = (e) => {
  var { className: t = "", onFavorite: n, isFavorited: r, rowIndex: i } = e, s = oe(e, ["className", "onFavorite", "isFavorited", "rowIndex"]);
  const o = i === void 0 ? {} : {
    id: `favorites-button-${i}`,
    "aria-labelledby": `favorites-button-${i}`
  };
  return h.createElement(
    z,
    Object.assign({ variant: "plain", className: t, type: "button", "aria-label": r ? "Starred" : "Not starred", onClick: n }, o, s),
    h.createElement(Eh, { "aria-hidden": !0 })
  );
};
lk.displayName = "FavoritesCell";
const L$ = (e, { rowIndex: t, columnIndex: n, rowData: r, column: i, property: s }) => {
  const { extraParams: { onFavorite: o } } = i, l = {
    rowIndex: t,
    columnIndex: n,
    column: i,
    property: s
  };
  if (r && r.hasOwnProperty("parent") && !r.fullWidth)
    return {
      component: "td",
      isVisible: !0
    };
  function c(u) {
    o && o(u, r && !r.favorited, t, r, l);
  }
  const d = r.favoritesProps || {};
  return {
    className: $(Ze.tableFavorite, r && r.favorited && Ze.modifiers.favorited),
    isVisible: !r || !r.fullWidth,
    children: h.createElement(lk, Object.assign({ rowIndex: t, onFavorite: c, isFavorited: r && r.favorited }, d))
  };
}, N$ = (e, t, n) => (r, { rowIndex: i, rowData: s }) => {
  const { isExpanded: o, isDetailsExpanded: l, "aria-level": c, "aria-setsize": d, toggleAriaLabel: u, checkAriaLabel: p, showDetailsAriaLabel: m, isChecked: f, checkboxId: g, icon: b } = s.props, v = r.title || r, y = h.createElement(
    "div",
    { className: $(ga.tableTreeViewText), key: "tree-view-text" },
    b && h.createElement("span", { className: $(ga.tableTreeViewIcon), key: "tree-view-text-icon" }, b),
    h.createElement("span", { className: Ze.tableText, key: "table-text" }, v)
  ), x = (w, R) => {
    t(R, w, i, v, s);
  };
  return {
    component: "th",
    className: ga.tableTreeViewTitleCell,
    children: c !== void 0 ? h.createElement(
      "div",
      { className: $(ga.tableTreeViewMain) },
      d > 0 && h.createElement(
        "span",
        { className: $(ga.tableToggle), key: "table-toggle" },
        h.createElement(
          z,
          { variant: "plain", onClick: (w) => e && e(w, i, v, s), className: $(o && Ze.modifiers.expanded), "aria-expanded": o, "aria-label": u || `${o ? "Collapse" : "Expand"} row ${i}` },
          h.createElement(
            "div",
            { className: $(ga.tableToggleIcon) },
            h.createElement(Uh, { "aria-hidden": "true" })
          )
        )
      ),
      !!t && h.createElement(
        "span",
        { className: $(ga.tableCheck), key: "table-check" },
        h.createElement(
          "label",
          { htmlFor: g || `checkbox_${i}` },
          h.createElement(rn, { id: g || `checkbox_${i}`, "aria-label": p || `Row ${i} checkbox`, isChecked: f, onChange: (w, R) => x(R, w) })
        )
      ),
      y,
      !!n && h.createElement(
        "span",
        { className: $(ga.tableTreeViewDetailsToggle), key: "view-details-toggle" },
        h.createElement(
          z,
          { variant: "plain", "aria-expanded": l, "aria-label": m || "Show row details", onClick: (w) => n && n(w, i, v, s) },
          h.createElement(
            "span",
            { className: `${Ze.table}__details-toggle-icon` },
            h.createElement(CL, { "aria-hidden": !0 })
          )
        )
      )
    ) : y
  };
};
var Xf;
(function(e) {
  e.none = "", e.grid = "grid", e.gridMd = "grid-md", e.gridLg = "grid-lg", e.gridXl = "grid-xl", e.grid2xl = "grid-2xl";
})(Xf || (Xf = {}));
var Rc;
(function(e) {
  e.compact = "compact";
})(Rc || (Rc = {}));
const ck = h.createContext({
  registerSelectableRow: () => {
  }
}), D$ = (e) => {
  var t, n, {
    children: r,
    className: i,
    variant: s,
    borders: o = !0,
    isStickyHeader: l = !1,
    gridBreakPoint: c = Xf.gridMd,
    "aria-label": d,
    role: u = "grid",
    innerRef: p,
    ouiaId: m,
    ouiaSafe: f = !0,
    isTreeTable: g = !1,
    isNested: b = !1,
    isStriped: v = !1,
    isExpandable: y = !1,
    hasNoInset: x = !1,
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    nestedHeaderColumnSpans: w,
    selectableRowCaptionText: R
  } = e, S = oe(e, ["children", "className", "variant", "borders", "isStickyHeader", "gridBreakPoint", "aria-label", "role", "innerRef", "ouiaId", "ouiaSafe", "isTreeTable", "isNested", "isStriped", "isExpandable", "hasNoInset", "nestedHeaderColumnSpans", "selectableRowCaptionText"]);
  const _ = h.useRef(null), O = p || _, [E, T] = h.useState(!1), [I, k] = h.useState();
  h.useEffect(() => {
    if (document.addEventListener("keydown", M), O && O.current && O.current.classList.contains("pf-m-tree-view")) {
      const U = O.current.querySelector("tbody");
      U && SP(Array.from(U.querySelectorAll("button, a, input")));
    }
    return function() {
      document.removeEventListener("keydown", M);
    };
  }, [O, O.current]), h.useEffect(() => {
    k(R ? h.createElement(
      "caption",
      null,
      R,
      h.createElement("div", { className: "pf-v5-screen-reader" }, "This table has selectable rows. It can be navigated by row using tab, and each row can be selected using space or enter.")
    ) : h.createElement("caption", { className: "pf-v5-screen-reader" }, "This table has selectable rows. It can be navigated by row using tab, and each row can be selected using space or enter."));
  }, [R]);
  const P = Ka("Table", m, f), D = (t = k$.modifiers) === null || t === void 0 ? void 0 : t[iC(c || "").replace(/-?2xl/, "_2xl")], F = `treeView${c.charAt(0).toUpperCase() + c.slice(1)}`, A = (n = ga.modifiers) === null || n === void 0 ? void 0 : n[iC(F || "").replace(/-?2xl/, "_2xl")], M = (U) => {
    if (b || !(O && O.current && O.current.classList.contains(ga.modifiers.treeView)) || // implements roving tab-index to tree tables only
    O && O.current !== U.target.closest(`.${Ze.table}:not(.pf-m-nested)`))
      return;
    const G = document.activeElement, q = U.key, L = Array.from(O.current.querySelectorAll("tbody tr")).filter((B) => !B.classList.contains("pf-m-disabled") && !B.hidden);
    (q === "Space" || q === "Enter") && (G.click(), U.preventDefault()), Zd(U, L, (B) => B === G.closest("tr"), (B) => B.querySelectorAll("button:not(:disabled), input:not(:disabled), a:not(:disabled)")[0], ["button", "input", "a"], void 0, !1, !0, !1);
  }, V = () => {
    !E && T(!0);
  };
  return h.createElement(
    ck.Provider,
    { value: { registerSelectableRow: V } },
    h.createElement(
      "table",
      Object.assign({ "aria-label": d, role: u, className: $(i, Ze.table, g ? A : D, Ze.modifiers[s], !o && Ze.modifiers.noBorderRows, l && Ze.modifiers.stickyHeader, g && ga.modifiers.treeView, v && Ze.modifiers.striped, y && Ze.modifiers.expandable, x && ga.modifiers.noInset, b && "pf-m-nested"), ref: O }, g && { role: "treegrid" }, P, S),
      E && I,
      r
    )
  );
}, Cn = h.forwardRef((e, t) => h.createElement(D$, Object.assign({}, e, { innerRef: t })));
Cn.displayName = "Table";
const M$ = (e) => {
  var { children: t, className: n, isExpanded: r, isEditable: i, isHidden: s = !1, isClickable: o = !1, isRowSelected: l = !1, isStriped: c = !1, isBorderRow: d = !1, innerRef: u, ouiaId: p, ouiaSafe: m = !0, resetOffset: f = !1, onRowClick: g, isSelectable: b, "aria-label": v } = e, y = oe(e, ["children", "className", "isExpanded", "isEditable", "isHidden", "isClickable", "isRowSelected", "isStriped", "isBorderRow", "innerRef", "ouiaId", "ouiaSafe", "resetOffset", "onRowClick", "isSelectable", "aria-label"]);
  const x = Ka("TableRow", p, m), [w, R] = h.useState("");
  let S = null;
  g && (S = (T) => {
    (T.key === "Enter" || T.key === " ") && (g(T), T.preventDefault());
  });
  const _ = s || r !== void 0 && !r, { registerSelectableRow: O } = h.useContext(ck);
  h.useEffect(() => {
    b && !_ ? (R(`${l ? "Row selected" : ""}`), O()) : R(void 0);
  }, [l, b, O, _]);
  const E = v || w;
  return h.createElement(
    h.Fragment,
    null,
    h.createElement("tr", Object.assign({ className: $(Ze.tableTr, n, r !== void 0 && Ze.tableExpandableRow, r && Ze.modifiers.expanded, i && w$.modifiers.inlineEditable, o && Ze.modifiers.clickable, l && Ze.modifiers.selected, c && Ze.modifiers.striped, d && Ze.modifiers.borderRow, f && Ze.modifiers.firstCellOffsetReset), hidden: _ }, o && { tabIndex: 0 }, { "aria-label": E, ref: u }, g && { onClick: g, onKeyDown: S }, x, y), t)
  );
}, rt = h.forwardRef((e, t) => h.createElement(M$, Object.assign({}, e, { innerRef: t })));
rt.displayName = "Tr";
const F$ = (e) => {
  var { children: t, className: n, noWrap: r = !1, innerRef: i, hasNestedHeader: s } = e, o = oe(e, ["children", "className", "noWrap", "innerRef", "hasNestedHeader"]);
  return h.createElement("thead", Object.assign({ className: $(Ze.tableThead, n, r && Ze.modifiers.nowrap, s && Ze.modifiers.nestedColumnHeader), ref: i }, o), t);
}, wn = h.forwardRef((e, t) => h.createElement(F$, Object.assign({}, e, { innerRef: t })));
wn.displayName = "Thead";
const $$ = (e) => {
  var { children: t, className: n, isExpanded: r, innerRef: i, isEvenStriped: s = !1, isOddStriped: o = !1 } = e, l = oe(e, ["children", "className", "isExpanded", "innerRef", "isEvenStriped", "isOddStriped"]);
  return h.createElement("tbody", Object.assign({ role: "rowgroup", className: $(Ze.tableTbody, n, r && Ze.modifiers.expanded, o && Ze.modifiers.striped, s && Ze.modifiers.stripedEven), ref: i }, l), t);
}, yn = h.forwardRef((e, t) => h.createElement($$, Object.assign({}, e, { innerRef: t })));
yn.displayName = "Tbody";
const To = {
  modifiers: {
    borderRight: "pf-m-border-right",
    borderLeft: "pf-m-border-left",
    right: "pf-m-right",
    inlineEnd: "pf-m-inline-end",
    left: "pf-m-left",
    inlineStart: "pf-m-inline-start"
  },
  scrollInnerWrapper: "pf-v5-c-scroll-inner-wrapper",
  scrollOuterWrapper: "pf-v5-c-scroll-outer-wrapper",
  table: "pf-v5-c-table",
  tableStickyCell: "pf-v5-c-table__sticky-cell"
};
function j$() {
  this.__data__ = [], this.size = 0;
}
var B$ = j$;
function U$(e, t) {
  return e === t || e !== e && t !== t;
}
var bp = U$, V$ = bp;
function K$(e, t) {
  for (var n = e.length; n--; )
    if (V$(e[n][0], t))
      return n;
  return -1;
}
var vp = K$, H$ = vp, z$ = Array.prototype, q$ = z$.splice;
function G$(e) {
  var t = this.__data__, n = H$(t, e);
  if (n < 0)
    return !1;
  var r = t.length - 1;
  return n == r ? t.pop() : q$.call(t, n, 1), --this.size, !0;
}
var W$ = G$, X$ = vp;
function Y$(e) {
  var t = this.__data__, n = X$(t, e);
  return n < 0 ? void 0 : t[n][1];
}
var J$ = Y$, Z$ = vp;
function Q$(e) {
  return Z$(this.__data__, e) > -1;
}
var e7 = Q$, t7 = vp;
function n7(e, t) {
  var n = this.__data__, r = t7(n, e);
  return r < 0 ? (++this.size, n.push([e, t])) : n[r][1] = t, this;
}
var a7 = n7, r7 = B$, i7 = W$, s7 = J$, o7 = e7, l7 = a7;
function ul(e) {
  var t = -1, n = e == null ? 0 : e.length;
  for (this.clear(); ++t < n; ) {
    var r = e[t];
    this.set(r[0], r[1]);
  }
}
ul.prototype.clear = r7;
ul.prototype.delete = i7;
ul.prototype.get = s7;
ul.prototype.has = o7;
ul.prototype.set = l7;
var yp = ul, c7 = yp;
function d7() {
  this.__data__ = new c7(), this.size = 0;
}
var u7 = d7;
function p7(e) {
  var t = this.__data__, n = t.delete(e);
  return this.size = t.size, n;
}
var m7 = p7;
function f7(e) {
  return this.__data__.get(e);
}
var h7 = f7;
function g7(e) {
  return this.__data__.has(e);
}
var b7 = g7, v7 = typeof ya == "object" && ya && ya.Object === Object && ya, dk = v7, y7 = dk, C7 = typeof self == "object" && self && self.Object === Object && self, x7 = y7 || C7 || Function("return this")(), pl = x7, S7 = pl, w7 = S7.Symbol, uk = w7, sC = uk, pk = Object.prototype, k7 = pk.hasOwnProperty, O7 = pk.toString, Rl = sC ? sC.toStringTag : void 0;
function T7(e) {
  var t = k7.call(e, Rl), n = e[Rl];
  try {
    e[Rl] = void 0;
    var r = !0;
  } catch {
  }
  var i = O7.call(e);
  return r && (t ? e[Rl] = n : delete e[Rl]), i;
}
var E7 = T7, I7 = Object.prototype, P7 = I7.toString;
function _7(e) {
  return P7.call(e);
}
var R7 = _7, oC = uk, A7 = E7, L7 = R7, N7 = "[object Null]", D7 = "[object Undefined]", lC = oC ? oC.toStringTag : void 0;
function M7(e) {
  return e == null ? e === void 0 ? D7 : N7 : lC && lC in Object(e) ? A7(e) : L7(e);
}
var Cp = M7;
function F7(e) {
  var t = typeof e;
  return e != null && (t == "object" || t == "function");
}
var to = F7, $7 = Cp, j7 = to, B7 = "[object AsyncFunction]", U7 = "[object Function]", V7 = "[object GeneratorFunction]", K7 = "[object Proxy]";
function H7(e) {
  if (!j7(e))
    return !1;
  var t = $7(e);
  return t == U7 || t == V7 || t == B7 || t == K7;
}
var Rg = H7, z7 = pl, q7 = z7["__core-js_shared__"], G7 = q7, _m = G7, cC = function() {
  var e = /[^.]+$/.exec(_m && _m.keys && _m.keys.IE_PROTO || "");
  return e ? "Symbol(src)_1." + e : "";
}();
function W7(e) {
  return !!cC && cC in e;
}
var X7 = W7, Rm, dC;
function Y7() {
  if (dC) return Rm;
  dC = 1;
  var e = Function.prototype, t = e.toString;
  function n(r) {
    if (r != null) {
      try {
        return t.call(r);
      } catch {
      }
      try {
        return r + "";
      } catch {
      }
    }
    return "";
  }
  return Rm = n, Rm;
}
var J7 = Rg, Z7 = X7, Q7 = to, e9 = Y7(), t9 = /[\\^$.*+?()[\]{}|]/g, n9 = /^\[object .+?Constructor\]$/, a9 = Function.prototype, r9 = Object.prototype, i9 = a9.toString, s9 = r9.hasOwnProperty, o9 = RegExp(
  "^" + i9.call(s9).replace(t9, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
);
function l9(e) {
  if (!Q7(e) || Z7(e))
    return !1;
  var t = J7(e) ? o9 : n9;
  return t.test(e9(e));
}
var c9 = l9;
function d9(e, t) {
  return e?.[t];
}
var u9 = d9, p9 = c9, m9 = u9;
function f9(e, t) {
  var n = m9(e, t);
  return p9(n) ? n : void 0;
}
var Ag = f9, h9 = Ag, g9 = pl, b9 = h9(g9, "Map"), mk = b9, v9 = Ag, y9 = v9(Object, "create"), xp = y9, uC = xp;
function C9() {
  this.__data__ = uC ? uC(null) : {}, this.size = 0;
}
var x9 = C9;
function S9(e) {
  var t = this.has(e) && delete this.__data__[e];
  return this.size -= t ? 1 : 0, t;
}
var w9 = S9, k9 = xp, O9 = "__lodash_hash_undefined__", T9 = Object.prototype, E9 = T9.hasOwnProperty;
function I9(e) {
  var t = this.__data__;
  if (k9) {
    var n = t[e];
    return n === O9 ? void 0 : n;
  }
  return E9.call(t, e) ? t[e] : void 0;
}
var P9 = I9, _9 = xp, R9 = Object.prototype, A9 = R9.hasOwnProperty;
function L9(e) {
  var t = this.__data__;
  return _9 ? t[e] !== void 0 : A9.call(t, e);
}
var N9 = L9, D9 = xp, M9 = "__lodash_hash_undefined__";
function F9(e, t) {
  var n = this.__data__;
  return this.size += this.has(e) ? 0 : 1, n[e] = D9 && t === void 0 ? M9 : t, this;
}
var $9 = F9, j9 = x9, B9 = w9, U9 = P9, V9 = N9, K9 = $9;
function ml(e) {
  var t = -1, n = e == null ? 0 : e.length;
  for (this.clear(); ++t < n; ) {
    var r = e[t];
    this.set(r[0], r[1]);
  }
}
ml.prototype.clear = j9;
ml.prototype.delete = B9;
ml.prototype.get = U9;
ml.prototype.has = V9;
ml.prototype.set = K9;
var H9 = ml, pC = H9, z9 = yp, q9 = mk;
function G9() {
  this.size = 0, this.__data__ = {
    hash: new pC(),
    map: new (q9 || z9)(),
    string: new pC()
  };
}
var W9 = G9;
function X9(e) {
  var t = typeof e;
  return t == "string" || t == "number" || t == "symbol" || t == "boolean" ? e !== "__proto__" : e === null;
}
var Y9 = X9, J9 = Y9;
function Z9(e, t) {
  var n = e.__data__;
  return J9(t) ? n[typeof t == "string" ? "string" : "hash"] : n.map;
}
var Sp = Z9, Q9 = Sp;
function ej(e) {
  var t = Q9(this, e).delete(e);
  return this.size -= t ? 1 : 0, t;
}
var tj = ej, nj = Sp;
function aj(e) {
  return nj(this, e).get(e);
}
var rj = aj, ij = Sp;
function sj(e) {
  return ij(this, e).has(e);
}
var oj = sj, lj = Sp;
function cj(e, t) {
  var n = lj(this, e), r = n.size;
  return n.set(e, t), this.size += n.size == r ? 0 : 1, this;
}
var dj = cj, uj = W9, pj = tj, mj = rj, fj = oj, hj = dj;
function fl(e) {
  var t = -1, n = e == null ? 0 : e.length;
  for (this.clear(); ++t < n; ) {
    var r = e[t];
    this.set(r[0], r[1]);
  }
}
fl.prototype.clear = uj;
fl.prototype.delete = pj;
fl.prototype.get = mj;
fl.prototype.has = fj;
fl.prototype.set = hj;
var gj = fl, bj = yp, vj = mk, yj = gj, Cj = 200;
function xj(e, t) {
  var n = this.__data__;
  if (n instanceof bj) {
    var r = n.__data__;
    if (!vj || r.length < Cj - 1)
      return r.push([e, t]), this.size = ++n.size, this;
    n = this.__data__ = new yj(r);
  }
  return n.set(e, t), this.size = n.size, this;
}
var Sj = xj, wj = yp, kj = u7, Oj = m7, Tj = h7, Ej = b7, Ij = Sj;
function hl(e) {
  var t = this.__data__ = new wj(e);
  this.size = t.size;
}
hl.prototype.clear = kj;
hl.prototype.delete = Oj;
hl.prototype.get = Tj;
hl.prototype.has = Ej;
hl.prototype.set = Ij;
var Pj = hl, _j = Ag, Rj = function() {
  try {
    var e = _j(Object, "defineProperty");
    return e({}, "", {}), e;
  } catch {
  }
}(), fk = Rj, mC = fk;
function Aj(e, t, n) {
  t == "__proto__" && mC ? mC(e, t, {
    configurable: !0,
    enumerable: !0,
    value: n,
    writable: !0
  }) : e[t] = n;
}
var Lg = Aj, Lj = Lg, Nj = bp;
function Dj(e, t, n) {
  (n !== void 0 && !Nj(e[t], n) || n === void 0 && !(t in e)) && Lj(e, t, n);
}
var hk = Dj;
function Mj(e) {
  return function(t, n, r) {
    for (var i = -1, s = Object(t), o = r(t), l = o.length; l--; ) {
      var c = o[e ? l : ++i];
      if (n(s[c], c, s) === !1)
        break;
    }
    return t;
  };
}
var Fj = Mj, $j = Fj, jj = $j(), Bj = jj, Eu = { exports: {} };
Eu.exports;
(function(e, t) {
  var n = pl, r = t && !t.nodeType && t, i = r && !0 && e && !e.nodeType && e, s = i && i.exports === r, o = s ? n.Buffer : void 0, l = o ? o.allocUnsafe : void 0;
  function c(d, u) {
    if (u)
      return d.slice();
    var p = d.length, m = l ? l(p) : new d.constructor(p);
    return d.copy(m), m;
  }
  e.exports = c;
})(Eu, Eu.exports);
var Uj = Eu.exports, Vj = pl, Kj = Vj.Uint8Array, Hj = Kj, fC = Hj;
function zj(e) {
  var t = new e.constructor(e.byteLength);
  return new fC(t).set(new fC(e)), t;
}
var qj = zj, Gj = qj;
function Wj(e, t) {
  var n = t ? Gj(e.buffer) : e.buffer;
  return new e.constructor(n, e.byteOffset, e.length);
}
var Xj = Wj;
function Yj(e, t) {
  var n = -1, r = e.length;
  for (t || (t = Array(r)); ++n < r; )
    t[n] = e[n];
  return t;
}
var Jj = Yj, Zj = to, hC = Object.create, Qj = /* @__PURE__ */ function() {
  function e() {
  }
  return function(t) {
    if (!Zj(t))
      return {};
    if (hC)
      return hC(t);
    e.prototype = t;
    var n = new e();
    return e.prototype = void 0, n;
  };
}(), eB = Qj;
function tB(e, t) {
  return function(n) {
    return e(t(n));
  };
}
var nB = tB, aB = nB, rB = aB(Object.getPrototypeOf, Object), gk = rB, iB = Object.prototype;
function sB(e) {
  var t = e && e.constructor, n = typeof t == "function" && t.prototype || iB;
  return e === n;
}
var bk = sB, oB = eB, lB = gk, cB = bk;
function dB(e) {
  return typeof e.constructor == "function" && !cB(e) ? oB(lB(e)) : {};
}
var uB = dB;
function pB(e) {
  return e != null && typeof e == "object";
}
var id = pB, mB = Cp, fB = id, hB = "[object Arguments]";
function gB(e) {
  return fB(e) && mB(e) == hB;
}
var bB = gB, gC = bB, vB = id, vk = Object.prototype, yB = vk.hasOwnProperty, CB = vk.propertyIsEnumerable, xB = gC(/* @__PURE__ */ function() {
  return arguments;
}()) ? gC : function(e) {
  return vB(e) && yB.call(e, "callee") && !CB.call(e, "callee");
}, yk = xB, SB = Array.isArray, Ck = SB, wB = 9007199254740991;
function kB(e) {
  return typeof e == "number" && e > -1 && e % 1 == 0 && e <= wB;
}
var xk = kB, OB = Rg, TB = xk;
function EB(e) {
  return e != null && TB(e.length) && !OB(e);
}
var Ng = EB, IB = Ng, PB = id;
function _B(e) {
  return PB(e) && IB(e);
}
var RB = _B, Iu = { exports: {} };
function AB() {
  return !1;
}
var LB = AB;
Iu.exports;
(function(e, t) {
  var n = pl, r = LB, i = t && !t.nodeType && t, s = i && !0 && e && !e.nodeType && e, o = s && s.exports === i, l = o ? n.Buffer : void 0, c = l ? l.isBuffer : void 0, d = c || r;
  e.exports = d;
})(Iu, Iu.exports);
var Sk = Iu.exports, NB = Cp, DB = gk, MB = id, FB = "[object Object]", $B = Function.prototype, jB = Object.prototype, wk = $B.toString, BB = jB.hasOwnProperty, UB = wk.call(Object);
function VB(e) {
  if (!MB(e) || NB(e) != FB)
    return !1;
  var t = DB(e);
  if (t === null)
    return !0;
  var n = BB.call(t, "constructor") && t.constructor;
  return typeof n == "function" && n instanceof n && wk.call(n) == UB;
}
var KB = VB, HB = Cp, zB = xk, qB = id, GB = "[object Arguments]", WB = "[object Array]", XB = "[object Boolean]", YB = "[object Date]", JB = "[object Error]", ZB = "[object Function]", QB = "[object Map]", eU = "[object Number]", tU = "[object Object]", nU = "[object RegExp]", aU = "[object Set]", rU = "[object String]", iU = "[object WeakMap]", sU = "[object ArrayBuffer]", oU = "[object DataView]", lU = "[object Float32Array]", cU = "[object Float64Array]", dU = "[object Int8Array]", uU = "[object Int16Array]", pU = "[object Int32Array]", mU = "[object Uint8Array]", fU = "[object Uint8ClampedArray]", hU = "[object Uint16Array]", gU = "[object Uint32Array]", hn = {};
hn[lU] = hn[cU] = hn[dU] = hn[uU] = hn[pU] = hn[mU] = hn[fU] = hn[hU] = hn[gU] = !0;
hn[GB] = hn[WB] = hn[sU] = hn[XB] = hn[oU] = hn[YB] = hn[JB] = hn[ZB] = hn[QB] = hn[eU] = hn[tU] = hn[nU] = hn[aU] = hn[rU] = hn[iU] = !1;
function bU(e) {
  return qB(e) && zB(e.length) && !!hn[HB(e)];
}
var vU = bU;
function yU(e) {
  return function(t) {
    return e(t);
  };
}
var CU = yU, Pu = { exports: {} };
Pu.exports;
(function(e, t) {
  var n = dk, r = t && !t.nodeType && t, i = r && !0 && e && !e.nodeType && e, s = i && i.exports === r, o = s && n.process, l = function() {
    try {
      var c = i && i.require && i.require("util").types;
      return c || o && o.binding && o.binding("util");
    } catch {
    }
  }();
  e.exports = l;
})(Pu, Pu.exports);
var xU = Pu.exports, SU = vU, wU = CU, bC = xU, vC = bC && bC.isTypedArray, kU = vC ? wU(vC) : SU, kk = kU;
function OU(e, t) {
  if (!(t === "constructor" && typeof e[t] == "function") && t != "__proto__")
    return e[t];
}
var Ok = OU, Am, yC;
function TU() {
  if (yC) return Am;
  yC = 1;
  var e = Lg, t = bp, n = Object.prototype, r = n.hasOwnProperty;
  function i(s, o, l) {
    var c = s[o];
    (!(r.call(s, o) && t(c, l)) || l === void 0 && !(o in s)) && e(s, o, l);
  }
  return Am = i, Am;
}
var EU = TU(), IU = Lg;
function PU(e, t, n, r) {
  var i = !n;
  n || (n = {});
  for (var s = -1, o = t.length; ++s < o; ) {
    var l = t[s], c = r ? r(n[l], e[l], l, n, e) : void 0;
    c === void 0 && (c = e[l]), i ? IU(n, l, c) : EU(n, l, c);
  }
  return n;
}
var _U = PU;
function RU(e, t) {
  for (var n = -1, r = Array(e); ++n < e; )
    r[n] = t(n);
  return r;
}
var AU = RU, LU = 9007199254740991, NU = /^(?:0|[1-9]\d*)$/;
function DU(e, t) {
  var n = typeof e;
  return t = t ?? LU, !!t && (n == "number" || n != "symbol" && NU.test(e)) && e > -1 && e % 1 == 0 && e < t;
}
var Tk = DU, MU = AU, FU = yk, $U = Ck, jU = Sk, BU = Tk, UU = kk, VU = Object.prototype, KU = VU.hasOwnProperty;
function HU(e, t) {
  var n = $U(e), r = !n && FU(e), i = !n && !r && jU(e), s = !n && !r && !i && UU(e), o = n || r || i || s, l = o ? MU(e.length, String) : [], c = l.length;
  for (var d in e)
    (t || KU.call(e, d)) && !(o && // Safari 9 has enumerable `arguments.length` in strict mode.
    (d == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
    i && (d == "offset" || d == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
    s && (d == "buffer" || d == "byteLength" || d == "byteOffset") || // Skip index properties.
    BU(d, c))) && l.push(d);
  return l;
}
var zU = HU;
function qU(e) {
  var t = [];
  if (e != null)
    for (var n in Object(e))
      t.push(n);
  return t;
}
var GU = qU, WU = to, XU = bk, YU = GU, JU = Object.prototype, ZU = JU.hasOwnProperty;
function QU(e) {
  if (!WU(e))
    return YU(e);
  var t = XU(e), n = [];
  for (var r in e)
    r == "constructor" && (t || !ZU.call(e, r)) || n.push(r);
  return n;
}
var eV = QU, tV = zU, nV = eV, aV = Ng;
function rV(e) {
  return aV(e) ? tV(e, !0) : nV(e);
}
var Ek = rV, iV = _U, sV = Ek;
function oV(e) {
  return iV(e, sV(e));
}
var lV = oV, CC = hk, cV = Uj, dV = Xj, uV = Jj, pV = uB, xC = yk, SC = Ck, mV = RB, fV = Sk, hV = Rg, gV = to, bV = KB, vV = kk, wC = Ok, yV = lV;
function CV(e, t, n, r, i, s, o) {
  var l = wC(e, n), c = wC(t, n), d = o.get(c);
  if (d) {
    CC(e, n, d);
    return;
  }
  var u = s ? s(l, c, n + "", e, t, o) : void 0, p = u === void 0;
  if (p) {
    var m = SC(c), f = !m && fV(c), g = !m && !f && vV(c);
    u = c, m || f || g ? SC(l) ? u = l : mV(l) ? u = uV(l) : f ? (p = !1, u = cV(c, !0)) : g ? (p = !1, u = dV(c, !0)) : u = [] : bV(c) || xC(c) ? (u = l, xC(l) ? u = yV(l) : (!gV(l) || hV(l)) && (u = pV(c))) : p = !1;
  }
  p && (o.set(c, u), i(u, c, r, s, o), o.delete(c)), CC(e, n, u);
}
var xV = CV, SV = Pj, wV = hk, kV = Bj, OV = xV, TV = to, EV = Ek, IV = Ok;
function Ik(e, t, n, r, i) {
  e !== t && kV(t, function(s, o) {
    if (i || (i = new SV()), TV(s))
      OV(e, t, o, n, Ik, r, i);
    else {
      var l = r ? r(IV(e, o), s, o + "", e, t, i) : void 0;
      l === void 0 && (l = s), wV(e, o, l);
    }
  }, EV);
}
var PV = Ik;
function _V(e) {
  return e;
}
var Pk = _V;
function RV(e, t, n) {
  switch (n.length) {
    case 0:
      return e.call(t);
    case 1:
      return e.call(t, n[0]);
    case 2:
      return e.call(t, n[0], n[1]);
    case 3:
      return e.call(t, n[0], n[1], n[2]);
  }
  return e.apply(t, n);
}
var AV = RV, LV = AV, kC = Math.max;
function NV(e, t, n) {
  return t = kC(t === void 0 ? e.length - 1 : t, 0), function() {
    for (var r = arguments, i = -1, s = kC(r.length - t, 0), o = Array(s); ++i < s; )
      o[i] = r[t + i];
    i = -1;
    for (var l = Array(t + 1); ++i < t; )
      l[i] = r[i];
    return l[t] = n(o), LV(e, this, l);
  };
}
var DV = NV, Lm, OC;
function MV() {
  if (OC) return Lm;
  OC = 1;
  function e(t) {
    return function() {
      return t;
    };
  }
  return Lm = e, Lm;
}
var FV = MV(), TC = fk, $V = Pk, jV = TC ? function(e, t) {
  return TC(e, "toString", {
    configurable: !0,
    enumerable: !1,
    value: FV(t),
    writable: !0
  });
} : $V, BV = jV, UV = 800, VV = 16, KV = Date.now;
function HV(e) {
  var t = 0, n = 0;
  return function() {
    var r = KV(), i = VV - (r - n);
    if (n = r, i > 0) {
      if (++t >= UV)
        return arguments[0];
    } else
      t = 0;
    return e.apply(void 0, arguments);
  };
}
var zV = HV, qV = BV, GV = zV, WV = GV(qV), XV = WV, YV = Pk, JV = DV, ZV = XV;
function QV(e, t) {
  return ZV(JV(e, t, YV), e + "");
}
var eK = QV, tK = bp, nK = Ng, aK = Tk, rK = to;
function iK(e, t, n) {
  if (!rK(n))
    return !1;
  var r = typeof t;
  return (r == "number" ? nK(n) && aK(t, n.length) : r == "string" && t in n) ? tK(n[t], e) : !1;
}
var sK = iK, oK = eK, lK = sK;
function cK(e) {
  return oK(function(t, n) {
    var r = -1, i = n.length, s = i > 1 ? n[i - 1] : void 0, o = i > 2 ? n[2] : void 0;
    for (s = e.length > 3 && typeof s == "function" ? (i--, s) : void 0, o && lK(n[0], n[1], o) && (s = i < 3 ? void 0 : s, i = 1), t = Object(t); ++r < i; ) {
      var l = n[r];
      l && e(t, l, r, s);
    }
    return t;
  });
}
var dK = cK, uK = PV, pK = dK, mK = pK(function(e, t, n, r) {
  uK(e, t, n, r);
}), fK = mK;
const Nm = /* @__PURE__ */ Kh(fK);
function _k(...e) {
  const t = e[0], n = e.slice(1);
  return n.length ? Nm(Nm({}, t), ...n, (r, i, s) => {
    if (s === "children")
      return r && i ? h.cloneElement(r, {
        children: i
      }) : Object.assign(Object.assign({}, i), r);
    if (s === "className")
      return $(r, i);
  }) : Nm({}, t);
}
const Rk = {
  name: "--pf-v5-c-table__sticky-cell--MinWidth",
  value: "12.5rem",
  var: "var(--pf-v5-c-table__sticky-cell--MinWidth)"
}, Ak = {
  name: "--pf-v5-c-table__sticky-cell--Left",
  value: "0",
  var: "var(--pf-v5-c-table__sticky-cell--Left)"
}, Lk = {
  name: "--pf-v5-c-table__sticky-cell--Right",
  value: "0",
  var: "var(--pf-v5-c-table__sticky-cell--Right)"
}, hK = (e) => {
  var { children: t, className: n, component: r = "th", dataLabel: i, scope: s = "col", textCenter: o = !1, sort: l = null, modifier: c, select: d = null, expand: u = null, tooltip: p = "", tooltipProps: m, onMouseEnter: f = () => {
  }, width: g, visibility: b, innerRef: v, info: y, isStickyColumn: x = !1, hasRightBorder: w = !1, hasLeftBorder: R = !1, stickyMinWidth: S = "120px", stickyLeftOffset: _, stickyRightOffset: O, isSubheader: E = !1, screenReaderText: T, "aria-label": I } = e, k = oe(e, ["children", "className", "component", "dataLabel", "scope", "textCenter", "sort", "modifier", "select", "expand", "tooltip", "tooltipProps", "onMouseEnter", "width", "visibility", "innerRef", "info", "isStickyColumn", "hasRightBorder", "hasLeftBorder", "stickyMinWidth", "stickyLeftOffset", "stickyRightOffset", "isSubheader", "screenReaderText", "aria-label"]);
  !t && !T && !I && console.warn("Th: Table headers must have an accessible name. If the Th is intended to be visually empty, pass in screenReaderText. If the Th contains only non-text, interactive content such as a checkbox or expand toggle, pass in an aria-label.");
  const [P, D] = h.useState(!1), [F, A] = h.useState(!1), M = v || h.createRef(), V = (Pe) => {
    Pe.target.offsetWidth < Pe.target.scrollWidth ? !P && D(!0) : P && D(!1), f(Pe);
  };
  let U = null;
  l && (l.isFavorites ? U = O$({
    onSort: l?.onSort,
    columnIndex: l.columnIndex,
    sortBy: l.sortBy,
    tooltip: p,
    tooltipProps: m
  })() : U = rk(t, {
    columnIndex: l.columnIndex,
    column: {
      extraParams: {
        sortBy: l.sortBy,
        onSort: l?.onSort
      }
    },
    tooltip: p,
    tooltipProps: m
  }));
  const G = d ? nk(t, {
    rowData: {
      selected: d.isSelected,
      disableSelection: d?.isDisabled,
      props: d?.props
    },
    column: {
      extraParams: {
        onSelect: d?.onSelect,
        selectVariant: "checkbox",
        allRowsSelected: d.isSelected,
        isHeaderSelectDisabled: !!d.isHeaderSelectDisabled
      }
    },
    tooltip: p,
    tooltipProps: m
  }) : null, q = u ? ik(t, {
    column: {
      extraParams: {
        onCollapse: u?.onToggle,
        allRowsExpanded: !u.areAllExpanded,
        collapseAllAriaLabel: ""
      }
    }
  }) : null, L = g ? Ft(g)() : null, K = b ? ok(...b.map((Pe) => sk[Pe]))() : null;
  let B = U?.children || G?.children || q?.children || t, j = null;
  y && (j = A$(y)(B), B = j.children);
  const W = _k(U, G, q, L, K, j), {
    // ignore the merged children since we transform them ourselves so we can wrap it with info
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    children: Q = null,
    // selectable adds this but we don't want it
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    isVisible: te = null,
    className: ie = "",
    component: ce = r
  } = W, Z = oe(W, ["children", "isVisible", "className", "component"]);
  h.useEffect(() => {
    A(M.current.offsetWidth < M.current.scrollWidth);
  }, [M]);
  const me = h.createElement(ce, Object.assign({ tabIndex: l || d || !F ? -1 : 0, onFocus: p !== null ? V : f, onBlur: () => D(!1), "data-label": i, onMouseEnter: p !== null ? V : f, scope: r === "th" ? s : null, ref: M, "aria-label": I, className: $(Ze.tableTh, n, o && Ze.modifiers.center, E && Ze.tableSubhead, x && To.tableStickyCell, w && To.modifiers.borderRight, R && To.modifiers.borderLeft, c && Ze.modifiers[c], ie) }, Z, k, x && {
    style: Object.assign({ [Rk.name]: S || void 0, [Ak.name]: _ || 0, [Lk.name]: O || 0 }, k.style)
  }), B || T && h.createElement("span", { className: "pf-v5-screen-reader" }, T));
  return p !== null && (p === "" ? typeof B == "string" : !0) && !(U || G) && P ? h.createElement(
    h.Fragment,
    null,
    me,
    h.createElement(Yt, Object.assign({ triggerRef: M, content: p || p === "" && t, isVisible: !0 }, m))
  ) : me;
}, De = h.forwardRef((e, t) => h.createElement(hK, Object.assign({}, e, { innerRef: t })));
De.displayName = "Th";
const gK = (e, { rowData: t }) => {
  const { id: n } = t;
  return {
    className: "",
    children: h.createElement(ek, { id: n })
  };
}, bK = (e) => {
  var { children: t, className: n, isActionCell: r = !1, component: i = "td", dataLabel: s, textCenter: o = !1, modifier: l, select: c = null, actions: d = null, expand: u = null, treeRow: p = null, compoundExpand: m = null, noPadding: f, width: g, visibility: b, innerRef: v, favorites: y = null, draggableRow: x = null, tooltip: w = "", onMouseEnter: R = () => {
  }, isStickyColumn: S = !1, hasRightBorder: _ = !1, hasLeftBorder: O = !1, stickyMinWidth: E = "120px", stickyLeftOffset: T, stickyRightOffset: I } = e, k = oe(e, ["children", "className", "isActionCell", "component", "dataLabel", "textCenter", "modifier", "select", "actions", "expand", "treeRow", "compoundExpand", "noPadding", "width", "visibility", "innerRef", "favorites", "draggableRow", "tooltip", "onMouseEnter", "isStickyColumn", "hasRightBorder", "hasLeftBorder", "stickyMinWidth", "stickyLeftOffset", "stickyRightOffset"]);
  const [P, D] = h.useState(!1), [F, A] = h.useState(!1), M = v || h.createRef(), V = (we) => {
    we.target.offsetWidth < we.target.scrollWidth ? !P && D(!0) : P && D(!1), R(we);
  }, U = c ? nk(t, {
    rowIndex: c.rowIndex,
    rowData: {
      selected: c.isSelected,
      disableSelection: c?.isDisabled,
      props: c?.props
    },
    column: {
      extraParams: {
        onSelect: c?.onSelect,
        selectVariant: c.variant || "checkbox"
      }
    }
  }) : null, G = y ? L$(null, {
    rowIndex: y?.rowIndex,
    rowData: {
      favorited: y.isFavorited,
      favoritesProps: y?.props
    },
    column: {
      extraParams: {
        onFavorite: y?.onFavorite
      }
    }
  }) : null, q = x !== null ? gK(null, {
    rowData: {
      id: x.id
    }
  }) : null, L = d ? T$(d.items, null, null) : null, K = L ? L(null, {
    rowIndex: d?.rowIndex,
    rowData: {
      disableActions: d?.isDisabled
    },
    column: {
      extraParams: {
        dropdownPosition: d?.dropdownPosition,
        dropdownDirection: d?.dropdownDirection,
        menuAppendTo: d?.menuAppendTo,
        actionsToggle: d?.actionsToggle
      }
    }
  }) : null, B = u !== null ? ik(null, {
    rowIndex: u.rowIndex,
    columnIndex: u?.columnIndex,
    rowData: {
      isOpen: u.isExpanded
    },
    column: {
      extraParams: {
        onCollapse: u?.onToggle,
        expandId: u?.expandId
      }
    }
  }) : null, j = m !== null ? _$({
    title: t,
    props: {
      isOpen: m.isExpanded
    }
  }, {
    rowIndex: m?.rowIndex,
    columnIndex: m?.columnIndex,
    column: {
      extraParams: {
        onExpand: m?.onToggle,
        expandId: m?.expandId
      }
    }
  }) : null, W = g ? Ft(g)() : null, Q = b ? ok(...b.map((we) => sk[we]))() : null, te = p !== null ? N$(p.onCollapse, p.onCheckChange, p.onToggleRowDetails)({
    title: t
  }, {
    rowIndex: p.rowIndex,
    rowData: {
      props: p.props
    }
  }) : null, ie = _k(U, K, B, j, W, Q, G, te, q), {
    // selectable adds this but we don't want it
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    isVisible: ce = null,
    children: Z = null,
    className: me = "",
    component: ne = i
  } = ie, Oe = oe(ie, ["isVisible", "children", "className", "component"]), Pe = n && n.includes(ga.tableTreeViewTitleCell) || me && me.includes(ga.tableTreeViewTitleCell);
  h.useEffect(() => {
    A(M.current.offsetWidth < M.current.scrollWidth);
  }, [M]);
  const $e = h.createElement(ne, Object.assign({ tabIndex: (c || !F) && l !== "truncate" ? -1 : 0 }, !Pe && { "data-label": s }, { onFocus: w !== null ? V : R, onBlur: () => D(!1), onMouseEnter: w !== null ? V : R, className: $(Ze.tableTd, n, r && Ze.tableAction, o && Ze.modifiers.center, f && Ze.modifiers.noPadding, S && To.tableStickyCell, _ && To.modifiers.borderRight, O && To.modifiers.borderLeft, Ze.modifiers[l], q && Ze.tableDraggable, me), ref: M }, Oe, k, S && {
    style: Object.assign({ [Rk.name]: E || void 0, [Ak.name]: T || 0, [Lk.name]: I || 0 }, k.style)
  }), Z || t);
  return w !== null && (w === "" ? typeof t == "string" : !0) && P ? h.createElement(
    h.Fragment,
    null,
    $e,
    h.createElement(Yt, { triggerRef: M, content: w || w === "" && t, isVisible: !0 })
  ) : $e;
}, ke = h.forwardRef((e, t) => h.createElement(bK, Object.assign({}, e, { innerRef: t })));
ke.displayName = "Td";
const Dm = ({ row: e }) => {
  const t = (n) => !!n && n.title !== void 0;
  return e.cells.map((n, r) => /* @__PURE__ */ a(ke, { children: t(n) ? n.title : n }, `cell-${r}`));
};
function vK({
  columns: e,
  rows: t,
  actions: n,
  actionResolver: r,
  ariaLabelKey: i,
  onSelect: s,
  onCollapse: o,
  canSelectAll: l,
  isNotCompact: c,
  isRadio: d,
  ...u
}) {
  const { t: p } = H(), [m, f] = N([]), [g, b] = N([]), v = (y, x) => {
    const w = [
      ...y === -1 ? Array(t.length).fill(x) : m
    ];
    w[y] = x, f(w);
  };
  return He(() => {
    if (l) {
      const y = document.getElementsByName("check-all").item(0);
      if (y) {
        const x = y, w = m.filter((R) => R === !0);
        x.indeterminate = w.length < t.length && w.length > 0;
      }
    }
  }, [m]), /* @__PURE__ */ C(
    Cn,
    {
      ...u,
      variant: c ? void 0 : Rc.compact,
      "aria-label": p(i),
      children: [
        /* @__PURE__ */ a(wn, { children: /* @__PURE__ */ C(rt, { children: [
          o && /* @__PURE__ */ a(De, {}),
          l && /* @__PURE__ */ a(
            De,
            {
              select: d ? void 0 : {
                onSelect: (y, x, w) => {
                  s(x, w), v(-1, x);
                },
                isSelected: m.filter((y) => y === !0).length === t.length
              }
            }
          ),
          e.map((y) => /* @__PURE__ */ a(
            De,
            {
              "aria-label": p(i),
              className: y.transforms?.[0]().className,
              children: p(y.displayKey || y.name)
            },
            y.displayKey
          ))
        ] }) }),
        o ? t.map((y, x) => /* @__PURE__ */ a(yn, { children: x % 2 === 0 ? /* @__PURE__ */ C(rt, { children: [
          /* @__PURE__ */ a(
            ke,
            {
              expand: {
                isExpanded: !!g[x],
                rowIndex: x,
                expandId: `${x}`,
                onToggle: (w, R, S) => {
                  o(S, R);
                  const _ = [...g];
                  _[x] = S, b(_);
                }
              }
            }
          ),
          /* @__PURE__ */ a(Dm, { row: y })
        ] }) : /* @__PURE__ */ C(rt, { isExpanded: !!g[x - 1], children: [
          /* @__PURE__ */ a(ke, {}),
          /* @__PURE__ */ a(ke, { colSpan: e.length, children: /* @__PURE__ */ a(hs, { children: /* @__PURE__ */ a(Dm, { row: y }) }) })
        ] }) }, x)) : /* @__PURE__ */ a(yn, { children: t.map((y, x) => /* @__PURE__ */ C(rt, { isExpanded: g[x], children: [
          s && /* @__PURE__ */ a(
            ke,
            {
              select: {
                rowIndex: x,
                onSelect: (w, R, S) => {
                  s(R, S), v(S, R);
                },
                isSelected: m[x],
                variant: d ? "radio" : "checkbox"
              }
            }
          ),
          /* @__PURE__ */ a(Dm, { row: y }),
          (n || r) && /* @__PURE__ */ a(ke, { isActionCell: !0, children: /* @__PURE__ */ a(
            dl,
            {
              items: n || r?.(y, {}),
              extraData: { rowIndex: x }
            }
          ) })
        ] }, x)) })
      ]
    }
  );
}
function St({
  ariaLabelKey: e,
  searchPlaceholderKey: t,
  isPaginated: n = !1,
  onSelect: r,
  canSelectAll: i = !1,
  isNotCompact: s,
  isRadio: o,
  detailColumns: l,
  isRowDisabled: c,
  loader: d,
  columns: u,
  actions: p,
  actionResolver: m,
  searchTypeComponent: f,
  toolbarItem: g,
  subToolbar: b,
  emptyState: v,
  icon: y,
  isSearching: x = !1,
  ...w
}) {
  const { t: R } = H(), [S, _] = N([]), [O, E] = N(), [T, I] = N(), [k, P] = N(!1), [D, F] = kg(
    localStorage,
    "pageSize",
    10
  ), [A, M] = N(D), [V, U] = N(0), [G, q] = N(""), L = Ct(), [K, B] = N(0), j = Ct(), W = () => B(K + 1), Q = Vu(), te = (X, Y) => X.map((ae) => {
    if ("cellFormatters" in ae) {
      const de = Wn(Y, ae.name);
      return ae.cellFormatters?.reduce((ye, he) => he(ye), de);
    }
    if (ae.cellRenderer) {
      const de = ae.cellRenderer;
      return { title: /* @__PURE__ */ a(de, { ...Y }) };
    }
    return Wn(Y, ae.name);
  }), ie = (X) => {
    const Y = (ae) => l?.[0]?.enabled?.(ae);
    return X.map((ae, de) => {
      const ye = c ? c(ae) : !1, he = [
        {
          data: ae,
          disableSelection: ye,
          disableActions: ye,
          selected: !!S.find((Ce) => Wn(Ce, "id") === Wn(ae, "id")),
          isOpen: Y(ae) ? !1 : void 0,
          cells: te(u, ae)
        }
      ];
      return l && he.push({
        parent: de * 2,
        cells: Y(ae) ? te(l, ae) : []
      }), he;
    }).flat();
  }, ce = (X) => ["string", "number"].includes(typeof X) ? X.toString() : X instanceof Array ? X.map(ce).join("") : typeof X == "object" ? ce(
    Ps(X.title) ? X.title.props : Object.values(X)
  ) : "", Z = et(
    () => G === "" || n ? void 0 : ie(T || []).filter(
      (X) => X.cells.some(
        (Y) => Y && ce(Y).toLowerCase().includes(G.toLowerCase())
      )
    ).slice(V, V + A + 1),
    [G, V, A]
  );
  Re(
    async () => {
      P(!0);
      const X = L.current === "" && G !== "";
      return X && U(0), L.current = G, typeof d == "function" ? K === j.current && T ? T : await d(X ? 0 : V, A + 1, G) : d;
    },
    (X) => {
      j.current = K, n || (I(X), X.length > V ? X = X.slice(V, V + A + 1) : U(0));
      const Y = ie(X);
      E(Y), P(!1);
    },
    [
      K,
      V,
      A,
      G,
      typeof d != "function" ? d : void 0
    ]
  );
  const me = () => p && wc(p).map((X, Y) => (delete X.onRowClick, X.onClick = async (ae, de) => {
    await p[Y].onRowClick(
      (Z || O)[de].data
    ) && (n || q(""), W());
  }, X)), ne = (X, Y) => {
    const ae = Z || O;
    Y === -1 ? E(
      ae.map((he) => (he.selected = X, he))
    ) : (ae[Y].selected = X, E([...O]));
    const ye = [
      ...Cw(
        S,
        ae.map((he) => he.data),
        "id"
      ),
      ...ae.filter((he) => he.selected).map((he) => he.data)
    ];
    _(ye), r(ye);
  }, Oe = (X, Y) => {
    Pe[Y].isOpen = X, E([...Pe]);
  }, Pe = Z || O, $e = !Pe || Pe.length === 0, fe = G !== "" || x, we = l ? A * 2 : A, J = l ? (Pe?.length || 0) / 2 : Pe?.length || 0;
  return /* @__PURE__ */ C(ee, { children: [
    (k || !$e || fe) && /* @__PURE__ */ C(
      Fi,
      {
        id: Q,
        count: J,
        first: V,
        max: A,
        onNextClick: U,
        onPreviousClick: U,
        onPerPageSelect: (X, Y) => {
          U(X), M(Y), F(Y);
        },
        inputGroupName: t ? `${e}input` : void 0,
        inputGroupOnEnter: q,
        inputGroupPlaceholder: R(t || ""),
        searchTypeComponent: f,
        toolbarItem: /* @__PURE__ */ C(ee, { children: [
          g,
          " ",
          /* @__PURE__ */ a(je, { variant: "separator" }),
          " ",
          /* @__PURE__ */ a(je, { children: /* @__PURE__ */ C(z, { variant: "link", onClick: W, children: [
            /* @__PURE__ */ a(eN, {}),
            " ",
            R("refresh")
          ] }) })
        ] }),
        subToolbar: b,
        children: [
          !k && !$e && /* @__PURE__ */ a(
            vK,
            {
              ...w,
              canSelectAll: i,
              onSelect: r ? ne : void 0,
              onCollapse: l ? Oe : void 0,
              actions: me(),
              actionResolver: m,
              rows: Pe.slice(0, we),
              columns: u,
              isNotCompact: s,
              isRadio: o,
              ariaLabelKey: e
            }
          ),
          !k && $e && fe && /* @__PURE__ */ a(
            ct,
            {
              hasIcon: !0,
              icon: y,
              isSearchVariant: !0,
              message: R("noSearchResults"),
              instructions: R("noSearchResultsInstructions"),
              secondaryActions: x ? [] : [
                {
                  text: R("clearAllFilters"),
                  onClick: () => q(""),
                  type: xe.link
                }
              ]
            }
          ),
          k && /* @__PURE__ */ a(gt, {})
        ]
      }
    ),
    !k && $e && !fe && v
  ] });
}
const EC = {
  delete: ["delClientRoleMappings", "delRealmRoleMappings"],
  listEffective: [
    "listRoleMappings",
    "listCompositeRealmRoleMappings",
    "listCompositeClientRoleMappings"
  ],
  listAvailable: [
    "listAvailableClientRoleMappings",
    "listAvailableRealmRoleMappings"
  ]
}, IC = {
  delete: ["delClientScopeMappings", "delRealmScopeMappings"],
  listEffective: [
    "listScopeMappings",
    "listCompositeRealmScopeMappings",
    "listCompositeClientScopeMappings"
  ],
  listAvailable: [
    "listAvailableClientScopeMappings",
    "listAvailableRealmScopeMappings"
  ]
}, wp = {
  groups: EC,
  users: EC,
  clientScopes: IC,
  clients: IC,
  roles: {
    delete: ["delCompositeRoles", "delCompositeRoles"],
    listEffective: [
      "getCompositeRoles",
      "getCompositeRoles",
      "getCompositeRolesForClient"
    ],
    listAvailable: ["listRoles", "find"]
  }
}, yK = (e, t) => e[t], Eo = (e, t, n, ...r) => yK(e, t)[n](...r), CK = (e, t, n, r) => r.map((i) => {
  const s = { id: i.role.id, name: i.role.name }, o = wp[t]?.delete[i.client ? 0 : 1];
  return Eo(
    e,
    t,
    o,
    {
      id: n,
      clientUniqueId: i.client?.id,
      client: i.client?.id,
      roles: [s]
    },
    [s]
  );
}), xK = async (e, t, n) => {
  const r = wp[t].listEffective[0], i = Eo(e, t, r, { id: n });
  if (t !== "roles")
    return i;
  const s = await i;
  return {
    clientMappings: await Promise.all(
      s.filter((l) => l.clientRole).map(async (l) => {
        const c = await e.clients.findOne({
          id: l.containerId
        });
        return l.containerId = c?.clientId, { ...c, mappings: [l] };
      })
    ),
    realmMappings: s.filter((l) => !l.clientRole)
  };
}, SK = async (e, t, n) => {
  const r = wp[t].listEffective[1];
  if (t !== "roles")
    return (await Eo(e, t, r, { id: n })).map((o) => ({
      role: o
    }));
  const i = await Eo(e, t, r, { id: n }), s = await Promise.all(
    i.filter((o) => o.composite).map((o) => Eo(e, t, r, { id: o.id }))
  );
  return [...i, ...s.flat()].map((o) => ({ role: o }));
}, wK = async (e, t, n) => {
  const r = wp[t].listAvailable[1];
  return (await Eo(e, t, r, n)).map((i) => ({
    role: i
  }));
};
function no(e) {
  return e ? { Authorization: `Bearer ${e}` } : {};
}
async function Ko(e, t, n) {
  const r = await e.getAccessToken(), i = e.baseUrl;
  return await (await Ii(
    _c(
      i,
      "admin/realms",
      encodeURIComponent(e.realmName),
      t
    ) + (n ? "?" + new URLSearchParams(n) : ""),
    {
      method: "GET",
      headers: no(r)
    }
  )).json();
}
const Dg = async (e, { id: t, type: n, first: r, max: i, search: s, endpoint: o }) => Ko(e, `/ui-ext/${o}/${n}/${t}`, {
  first: (r || 0).toString(),
  max: (i || 10).toString(),
  search: s || ""
}), kK = (e, t) => Dg(e, { ...t, endpoint: "available-roles" }), OK = (e, t) => Dg(e, { ...t, endpoint: "effective-roles" }), TK = (e, t) => Ko(
  e,
  "ui-ext/brute-force-user",
  t
), EK = (e, t) => Dg(e, {
  ...t,
  endpoint: "authentication-management"
}), IK = (e, t, n) => [
  ...n ? e.map((r) => ({
    ...r,
    role: {
      ...r.role,
      isInherited: !1
    }
  })) : t.map((r) => ({
    ...r,
    role: {
      ...r.role,
      isInherited: e.find((i) => i.role.id === r.role.id) === void 0
    }
  }))
], kp = ({ role: e, client: t }) => /* @__PURE__ */ C(ee, { children: [
  t?.clientId && /* @__PURE__ */ a(Wr, { isRead: !0, className: "keycloak-admin--role-mapping__client-name", children: t.clientId }),
  e.name
] }), ao = ({
  name: e,
  id: t,
  type: n,
  isManager: r = !0,
  save: i
}) => {
  const { adminClient: s } = pe(), { t: o } = H(), { addAlert: l, addError: c } = Se(), [d, u] = N(0), p = () => u(d + 1), [m, f] = N(!0), [g, b] = N(!1), [v, y] = N([]), x = async (_) => {
    await i(_), p();
  }, w = async () => {
    let _ = [], O = [];
    m || (_ = await SK(s, n, t), O = (await OK(s, {
      type: n,
      id: t
    })).map((k) => ({
      client: { clientId: k.client, id: k.clientId },
      role: { id: k.id, name: k.role, description: k.description }
    })));
    const E = await xK(s, n, t), T = E.realmMappings?.map((k) => ({ role: k })) || [], I = Object.values(E.clientMappings || {}).map(
      (k) => k.mappings.map((P) => ({
        client: { clientId: k.client, ...k },
        role: P
      }))
    ).flat();
    return [
      ...IK(
        [...T, ...I],
        [...O, ..._],
        m
      )
    ];
  }, [R, S] = ze({
    titleKey: "removeMappingTitle",
    messageKey: o("removeMappingConfirm", { count: v.length }),
    continueButtonLabel: "remove",
    continueButtonVariant: xe.danger,
    onCancel: () => {
      y([]), p();
    },
    onConfirm: async () => {
      try {
        await Promise.all(CK(s, n, t, v)), l(o("clientScopeRemoveSuccess"), ue.success), y([]), p();
      } catch (_) {
        c("clientScopeRemoveError", _);
      }
    }
  });
  return /* @__PURE__ */ C(ee, { children: [
    g && /* @__PURE__ */ a(
      Op,
      {
        id: t,
        type: n,
        name: e,
        onAssign: x,
        onClose: () => b(!1)
      }
    ),
    /* @__PURE__ */ a(S, {}),
    /* @__PURE__ */ a(
      St,
      {
        "data-testid": "assigned-roles",
        loader: w,
        canSelectAll: !0,
        onSelect: (_) => y(_),
        searchPlaceholderKey: "searchByName",
        ariaLabelKey: "clientScopeList",
        isRowDisabled: (_) => _.role.isInherited || !1,
        toolbarItem: /* @__PURE__ */ C(ee, { children: [
          /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(
            rn,
            {
              label: o("hideInheritedRoles"),
              id: "hideInheritedRoles",
              "data-testid": "hideInheritedRoles",
              isChecked: m,
              onChange: (_, O) => {
                f(O), p();
              }
            }
          ) }),
          r && /* @__PURE__ */ C(ee, { children: [
            /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(
              z,
              {
                "data-testid": "assignRole",
                onClick: () => b(!0),
                children: o("assignRole")
              }
            ) }),
            /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(
              z,
              {
                variant: "link",
                "data-testid": "unAssignRole",
                onClick: R,
                isDisabled: v.length === 0,
                children: o("unAssignRole")
              }
            ) })
          ] })
        ] }),
        actions: r ? [
          {
            title: o("unAssignRole"),
            onRowClick: async (_) => (y([_]), R(), !1)
          }
        ] : [],
        columns: [
          {
            name: "role.name",
            displayKey: o("name"),
            transforms: [Ft(30)],
            cellRenderer: kp
          },
          {
            name: "role.isInherited",
            displayKey: o("inherent"),
            cellFormatters: [rd(), on()]
          },
          {
            name: "role.description",
            displayKey: o("description"),
            cellFormatters: [on()]
          }
        ],
        emptyState: /* @__PURE__ */ a(
          ct,
          {
            message: o(`noRoles-${n}`),
            instructions: o(`noRolesInstructions-${n}`),
            primaryActionText: o("assignRole"),
            onPrimaryAction: () => b(!0),
            secondaryActions: [
              {
                text: o("showInheritedRoles"),
                onClick: () => {
                  f(!1), p();
                }
              }
            ]
          }
        )
      },
      `${t}${d}`
    )
  ] });
}, Op = ({
  id: e,
  name: t,
  type: n,
  isRadio: r = !1,
  isLDAPmapper: i,
  onAssign: s,
  onClose: o
}) => {
  const { adminClient: l } = pe(), { t: c } = H(), { hasAccess: d } = Mt(), u = d("view-realm") || d("query-users"), [p, m] = N(!1), [f, g] = N("clients"), [b, v] = N([]), [y, x] = N(0), w = () => x(y + 1), R = pa(), S = ({ role: { name: E } }) => E?.toUpperCase(), _ = async (E, T, I) => {
    const k = {
      first: E,
      max: T
    };
    I && (k.search = I);
    const P = await wK(l, n, { ...k, id: e });
    return R(P, S).map((F) => ({
      role: F.role,
      id: F.role.id
    }));
  }, O = async (E, T, I) => {
    const k = await kK(l, {
      id: e,
      type: n,
      first: E || 0,
      max: T || 10,
      search: I
    });
    return R(
      k.map((P) => ({
        client: { clientId: P.client, id: P.clientId },
        role: { id: P.id, name: P.role, description: P.description },
        id: P.id
      })),
      ({ client: { clientId: P }, role: { name: D } }) => `${P}${D}`
    );
  };
  return /* @__PURE__ */ a(
    ht,
    {
      variant: Rt.large,
      title: i ? c("assignRole") : c("assignRolesTo", { client: t }),
      isOpen: !0,
      onClose: o,
      actions: [
        /* @__PURE__ */ a(
          z,
          {
            "data-testid": "assign",
            isDisabled: b.length === 0,
            variant: "primary",
            onClick: () => {
              s(b), o();
            },
            children: c("assign")
          },
          "confirm"
        ),
        /* @__PURE__ */ a(
          z,
          {
            "data-testid": "cancel",
            variant: "link",
            onClick: o,
            children: c("cancel")
          },
          "cancel"
        )
      ],
      children: /* @__PURE__ */ a(
        St,
        {
          onSelect: (E) => v([...E]),
          searchPlaceholderKey: "searchByRoleName",
          isPaginated: !(f === "roles" && n !== "roles"),
          searchTypeComponent: u && /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(
            qt,
            {
              onSelect: () => {
                g(f === "roles" ? "clients" : "roles"), m(!1), w();
              },
              toggle: (E) => /* @__PURE__ */ a(
                yt,
                {
                  "data-testid": "filter-type-dropdown",
                  ref: E,
                  onClick: () => m(!p),
                  icon: /* @__PURE__ */ a(ss, {}),
                  children: c(f === "roles" ? "filterByRoles" : "filterByClients")
                }
              ),
              isOpen: p,
              children: /* @__PURE__ */ a(Xt, { children: /* @__PURE__ */ a(Ke, { "data-testid": f, children: c(f === "roles" ? "filterByClients" : "filterByRoles") }, "filter-type") })
            }
          ) }),
          canSelectAll: !0,
          isRadio: r,
          loader: f === "roles" ? _ : O,
          ariaLabelKey: "roles",
          columns: [
            {
              name: "name",
              cellRenderer: kp
            },
            {
              name: "role.description",
              displayKey: "description"
            }
          ],
          emptyState: /* @__PURE__ */ a(
            ct,
            {
              message: c("noRoles"),
              instructions: c("noRealmRolesToAssign"),
              secondaryActions: [
                {
                  text: c("filterByClients"),
                  onClick: () => {
                    g("clients"), w();
                  }
                }
              ]
            }
          )
        },
        y
      )
    }
  );
}, PC = (e) => e?.includes(".") ? e.split(".") : ["", e || ""], PK = (e) => e.client?.clientId ? `${e.client.clientId}.${e.role.name}` : e.role.name, _K = ({
  name: e,
  label: t,
  helpText: n,
  defaultValue: r,
  required: i,
  isDisabled: s = !1
}) => {
  const { t: o } = H(), [l, c] = ot(), {
    control: d,
    formState: { errors: u }
  } = Le(), p = ma(e);
  return /* @__PURE__ */ C(
    se,
    {
      label: o(t),
      labelIcon: /* @__PURE__ */ a(le, { helpText: o(n), fieldLabelId: `${t}` }),
      fieldId: e,
      isRequired: i,
      children: [
        /* @__PURE__ */ a(
          ge,
          {
            name: p,
            defaultValue: r || "",
            control: d,
            render: ({ field: m }) => /* @__PURE__ */ C(Jn, { children: [
              l && /* @__PURE__ */ a(
                Op,
                {
                  id: "id",
                  type: "roles",
                  name: e,
                  onAssign: (f) => m.onChange(PK(f[0])),
                  onClose: c,
                  isRadio: !0
                }
              ),
              m.value !== "" && /* @__PURE__ */ a(Dt, { children: /* @__PURE__ */ a(Ut, { textMaxWidth: "500px", onClick: () => m.onChange(""), children: /* @__PURE__ */ a(
                kp,
                {
                  role: { name: PC(m.value)[1] },
                  client: { clientId: PC(m.value)[0] }
                }
              ) }) }),
              /* @__PURE__ */ a(Dt, { children: /* @__PURE__ */ a(
                z,
                {
                  onClick: c,
                  variant: "secondary",
                  "data-testid": "add-roles",
                  disabled: s,
                  children: o("selectRole.label")
                }
              ) })
            ] })
          }
        ),
        u[p] && /* @__PURE__ */ a(En, { message: o("required") })
      ]
    }
  );
}, Ga = {
  button: "pf-v5-c-button",
  codeEditor: "pf-v5-c-code-editor",
  codeEditorCode: "pf-v5-c-code-editor__code",
  codeEditorCodePre: "pf-v5-c-code-editor__code-pre",
  codeEditorControls: "pf-v5-c-code-editor__controls",
  codeEditorHeader: "pf-v5-c-code-editor__header",
  codeEditorHeaderMain: "pf-v5-c-code-editor__header-main",
  codeEditorMain: "pf-v5-c-code-editor__main",
  codeEditorTab: "pf-v5-c-code-editor__tab",
  codeEditorTabIcon: "pf-v5-c-code-editor__tab-icon",
  codeEditorTabText: "pf-v5-c-code-editor__tab-text",
  modifiers: {
    readOnly: "pf-m-read-only",
    control: "pf-m-control",
    dragHover: "pf-m-drag-hover"
  },
  monacoEditor: "monaco-editor",
  themeDark: "pf-v5-theme-dark"
};
function RK(e, t, n) {
  return t in e ? Object.defineProperty(e, t, {
    value: n,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : e[t] = n, e;
}
function _C(e, t) {
  var n = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(e);
    t && (r = r.filter(function(i) {
      return Object.getOwnPropertyDescriptor(e, i).enumerable;
    })), n.push.apply(n, r);
  }
  return n;
}
function RC(e) {
  for (var t = 1; t < arguments.length; t++) {
    var n = arguments[t] != null ? arguments[t] : {};
    t % 2 ? _C(Object(n), !0).forEach(function(r) {
      RK(e, r, n[r]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : _C(Object(n)).forEach(function(r) {
      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(n, r));
    });
  }
  return e;
}
function AK(e, t) {
  if (e == null) return {};
  var n = {}, r = Object.keys(e), i, s;
  for (s = 0; s < r.length; s++)
    i = r[s], !(t.indexOf(i) >= 0) && (n[i] = e[i]);
  return n;
}
function LK(e, t) {
  if (e == null) return {};
  var n = AK(e, t), r, i;
  if (Object.getOwnPropertySymbols) {
    var s = Object.getOwnPropertySymbols(e);
    for (i = 0; i < s.length; i++)
      r = s[i], !(t.indexOf(r) >= 0) && Object.prototype.propertyIsEnumerable.call(e, r) && (n[r] = e[r]);
  }
  return n;
}
function NK(e, t) {
  return DK(e) || MK(e, t) || FK(e, t) || $K();
}
function DK(e) {
  if (Array.isArray(e)) return e;
}
function MK(e, t) {
  if (!(typeof Symbol > "u" || !(Symbol.iterator in Object(e)))) {
    var n = [], r = !0, i = !1, s = void 0;
    try {
      for (var o = e[Symbol.iterator](), l; !(r = (l = o.next()).done) && (n.push(l.value), !(t && n.length === t)); r = !0)
        ;
    } catch (c) {
      i = !0, s = c;
    } finally {
      try {
        !r && o.return != null && o.return();
      } finally {
        if (i) throw s;
      }
    }
    return n;
  }
}
function FK(e, t) {
  if (e) {
    if (typeof e == "string") return AC(e, t);
    var n = Object.prototype.toString.call(e).slice(8, -1);
    if (n === "Object" && e.constructor && (n = e.constructor.name), n === "Map" || n === "Set") return Array.from(e);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return AC(e, t);
  }
}
function AC(e, t) {
  (t == null || t > e.length) && (t = e.length);
  for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
  return r;
}
function $K() {
  throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function jK(e, t, n) {
  return t in e ? Object.defineProperty(e, t, {
    value: n,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : e[t] = n, e;
}
function LC(e, t) {
  var n = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(e);
    t && (r = r.filter(function(i) {
      return Object.getOwnPropertyDescriptor(e, i).enumerable;
    })), n.push.apply(n, r);
  }
  return n;
}
function NC(e) {
  for (var t = 1; t < arguments.length; t++) {
    var n = arguments[t] != null ? arguments[t] : {};
    t % 2 ? LC(Object(n), !0).forEach(function(r) {
      jK(e, r, n[r]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : LC(Object(n)).forEach(function(r) {
      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(n, r));
    });
  }
  return e;
}
function BK() {
  for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
    t[n] = arguments[n];
  return function(r) {
    return t.reduceRight(function(i, s) {
      return s(i);
    }, r);
  };
}
function Fl(e) {
  return function t() {
    for (var n = this, r = arguments.length, i = new Array(r), s = 0; s < r; s++)
      i[s] = arguments[s];
    return i.length >= e.length ? e.apply(this, i) : function() {
      for (var o = arguments.length, l = new Array(o), c = 0; c < o; c++)
        l[c] = arguments[c];
      return t.apply(n, [].concat(i, l));
    };
  };
}
function _u(e) {
  return {}.toString.call(e).includes("Object");
}
function UK(e) {
  return !Object.keys(e).length;
}
function Ac(e) {
  return typeof e == "function";
}
function VK(e, t) {
  return Object.prototype.hasOwnProperty.call(e, t);
}
function KK(e, t) {
  return _u(t) || ts("changeType"), Object.keys(t).some(function(n) {
    return !VK(e, n);
  }) && ts("changeField"), t;
}
function HK(e) {
  Ac(e) || ts("selectorType");
}
function zK(e) {
  Ac(e) || _u(e) || ts("handlerType"), _u(e) && Object.values(e).some(function(t) {
    return !Ac(t);
  }) && ts("handlersType");
}
function qK(e) {
  e || ts("initialIsRequired"), _u(e) || ts("initialType"), UK(e) && ts("initialContent");
}
function GK(e, t) {
  throw new Error(e[t] || e.default);
}
var WK = {
  initialIsRequired: "initial state is required",
  initialType: "initial state should be an object",
  initialContent: "initial state shouldn't be an empty object",
  handlerType: "handler should be an object or a function",
  handlersType: "all handlers should be a functions",
  selectorType: "selector should be a function",
  changeType: "provided value of changes should be an object",
  changeField: 'it seams you want to change a field in the state which is not specified in the "initial" state',
  default: "an unknown error accured in `state-local` package"
}, ts = Fl(GK)(WK), Id = {
  changes: KK,
  selector: HK,
  handler: zK,
  initial: qK
};
function XK(e) {
  var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  Id.initial(e), Id.handler(t);
  var n = {
    current: e
  }, r = Fl(ZK)(n, t), i = Fl(JK)(n), s = Fl(Id.changes)(e), o = Fl(YK)(n);
  function l() {
    var d = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : function(u) {
      return u;
    };
    return Id.selector(d), d(n.current);
  }
  function c(d) {
    BK(r, i, s, o)(d);
  }
  return [l, c];
}
function YK(e, t) {
  return Ac(t) ? t(e.current) : t;
}
function JK(e, t) {
  return e.current = NC(NC({}, e.current), t), t;
}
function ZK(e, t, n) {
  return Ac(t) ? t(e.current) : Object.keys(n).forEach(function(r) {
    var i;
    return (i = t[r]) === null || i === void 0 ? void 0 : i.call(t, e.current[r]);
  }), n;
}
var QK = {
  create: XK
}, eH = {
  paths: {
    vs: "https://cdn.jsdelivr.net/npm/monaco-editor@0.43.0/min/vs"
  }
};
function tH(e) {
  return function t() {
    for (var n = this, r = arguments.length, i = new Array(r), s = 0; s < r; s++)
      i[s] = arguments[s];
    return i.length >= e.length ? e.apply(this, i) : function() {
      for (var o = arguments.length, l = new Array(o), c = 0; c < o; c++)
        l[c] = arguments[c];
      return t.apply(n, [].concat(i, l));
    };
  };
}
function nH(e) {
  return {}.toString.call(e).includes("Object");
}
function aH(e) {
  return e || DC("configIsRequired"), nH(e) || DC("configType"), e.urls ? (rH(), {
    paths: {
      vs: e.urls.monacoBase
    }
  }) : e;
}
function rH() {
  console.warn(Nk.deprecation);
}
function iH(e, t) {
  throw new Error(e[t] || e.default);
}
var Nk = {
  configIsRequired: "the configuration object is required",
  configType: "the configuration object should be an object",
  default: "an unknown error accured in `@monaco-editor/loader` package",
  deprecation: `Deprecation warning!
    You are using deprecated way of configuration.

    Instead of using
      monaco.config({ urls: { monacoBase: '...' } })
    use
      monaco.config({ paths: { vs: '...' } })

    For more please check the link https://github.com/suren-atoyan/monaco-loader#config
  `
}, DC = tH(iH)(Nk), sH = {
  config: aH
}, oH = function() {
  for (var t = arguments.length, n = new Array(t), r = 0; r < t; r++)
    n[r] = arguments[r];
  return function(i) {
    return n.reduceRight(function(s, o) {
      return o(s);
    }, i);
  };
};
function Dk(e, t) {
  return Object.keys(t).forEach(function(n) {
    t[n] instanceof Object && e[n] && Object.assign(t[n], Dk(e[n], t[n]));
  }), RC(RC({}, e), t);
}
var lH = {
  type: "cancelation",
  msg: "operation is manually canceled"
};
function Mm(e) {
  var t = !1, n = new Promise(function(r, i) {
    e.then(function(s) {
      return t ? i(lH) : r(s);
    }), e.catch(i);
  });
  return n.cancel = function() {
    return t = !0;
  }, n;
}
var cH = QK.create({
  config: eH,
  isInitialized: !1,
  resolve: null,
  reject: null,
  monaco: null
}), Mk = NK(cH, 2), sd = Mk[0], Tp = Mk[1];
function dH(e) {
  var t = sH.config(e), n = t.monaco, r = LK(t, ["monaco"]);
  Tp(function(i) {
    return {
      config: Dk(i.config, r),
      monaco: n
    };
  });
}
function uH() {
  var e = sd(function(t) {
    var n = t.monaco, r = t.isInitialized, i = t.resolve;
    return {
      monaco: n,
      isInitialized: r,
      resolve: i
    };
  });
  if (!e.isInitialized) {
    if (Tp({
      isInitialized: !0
    }), e.monaco)
      return e.resolve(e.monaco), Mm(Fm);
    if (window.monaco && window.monaco.editor)
      return Fk(window.monaco), e.resolve(window.monaco), Mm(Fm);
    oH(pH, fH)(hH);
  }
  return Mm(Fm);
}
function pH(e) {
  return document.body.appendChild(e);
}
function mH(e) {
  var t = document.createElement("script");
  return e && (t.src = e), t;
}
function fH(e) {
  var t = sd(function(r) {
    var i = r.config, s = r.reject;
    return {
      config: i,
      reject: s
    };
  }), n = mH("".concat(t.config.paths.vs, "/loader.js"));
  return n.onload = function() {
    return e();
  }, n.onerror = t.reject, n;
}
function hH() {
  var e = sd(function(n) {
    var r = n.config, i = n.resolve, s = n.reject;
    return {
      config: r,
      resolve: i,
      reject: s
    };
  }), t = window.require;
  t.config(e.config), t(["vs/editor/editor.main"], function(n) {
    Fk(n), e.resolve(n);
  }, function(n) {
    e.reject(n);
  });
}
function Fk(e) {
  sd().monaco || Tp({
    monaco: e
  });
}
function gH() {
  return sd(function(e) {
    var t = e.monaco;
    return t;
  });
}
var Fm = new Promise(function(e, t) {
  return Tp({
    resolve: e,
    reject: t
  });
}), $k = {
  config: dH,
  init: uH,
  __getMonacoInstance: gH
}, bH = { wrapper: { display: "flex", position: "relative", textAlign: "initial" }, fullWidth: { width: "100%" }, hide: { display: "none" } }, $m = bH, vH = { container: { display: "flex", height: "100%", width: "100%", justifyContent: "center", alignItems: "center" } }, yH = vH;
function CH({ children: e }) {
  return re.createElement("div", { style: yH.container }, e);
}
var xH = CH, SH = xH;
function wH({ width: e, height: t, isEditorReady: n, loading: r, _ref: i, className: s, wrapperProps: o }) {
  return re.createElement("section", { style: { ...$m.wrapper, width: e, height: t }, ...o }, !n && re.createElement(SH, null, r), re.createElement("div", { ref: i, style: { ...$m.fullWidth, ...!n && $m.hide }, className: s }));
}
var kH = wH, jk = sh(kH);
function OH(e) {
  He(e, []);
}
var Bk = OH;
function TH(e, t, n = !0) {
  let r = Ct(!0);
  He(r.current || !n ? () => {
    r.current = !1;
  } : e, t);
}
var Da = TH;
function tc() {
}
function yo(e, t, n, r) {
  return EH(e, r) || IH(e, t, n, r);
}
function EH(e, t) {
  return e.editor.getModel(Uk(e, t));
}
function IH(e, t, n, r) {
  return e.editor.createModel(t, n, r ? Uk(e, r) : void 0);
}
function Uk(e, t) {
  return e.Uri.parse(t);
}
function PH({ original: e, modified: t, language: n, originalLanguage: r, modifiedLanguage: i, originalModelPath: s, modifiedModelPath: o, keepCurrentOriginalModel: l = !1, keepCurrentModifiedModel: c = !1, theme: d = "light", loading: u = "Loading...", options: p = {}, height: m = "100%", width: f = "100%", className: g, wrapperProps: b = {}, beforeMount: v = tc, onMount: y = tc }) {
  let [x, w] = N(!1), [R, S] = N(!0), _ = Ct(null), O = Ct(null), E = Ct(null), T = Ct(y), I = Ct(v), k = Ct(!1);
  Bk(() => {
    let A = $k.init();
    return A.then((M) => (O.current = M) && S(!1)).catch((M) => M?.type !== "cancelation" && console.error("Monaco initialization: error:", M)), () => _.current ? F() : A.cancel();
  }), Da(() => {
    if (_.current && O.current) {
      let A = _.current.getOriginalEditor(), M = yo(O.current, e || "", r || n || "text", s || "");
      M !== A.getModel() && A.setModel(M);
    }
  }, [s], x), Da(() => {
    if (_.current && O.current) {
      let A = _.current.getModifiedEditor(), M = yo(O.current, t || "", i || n || "text", o || "");
      M !== A.getModel() && A.setModel(M);
    }
  }, [o], x), Da(() => {
    let A = _.current.getModifiedEditor();
    A.getOption(O.current.editor.EditorOption.readOnly) ? A.setValue(t || "") : t !== A.getValue() && (A.executeEdits("", [{ range: A.getModel().getFullModelRange(), text: t || "", forceMoveMarkers: !0 }]), A.pushUndoStop());
  }, [t], x), Da(() => {
    _.current?.getModel()?.original.setValue(e || "");
  }, [e], x), Da(() => {
    let { original: A, modified: M } = _.current.getModel();
    O.current.editor.setModelLanguage(A, r || n || "text"), O.current.editor.setModelLanguage(M, i || n || "text");
  }, [n, r, i], x), Da(() => {
    O.current?.editor.setTheme(d);
  }, [d], x), Da(() => {
    _.current?.updateOptions(p);
  }, [p], x);
  let P = bn(() => {
    if (!O.current) return;
    I.current(O.current);
    let A = yo(O.current, e || "", r || n || "text", s || ""), M = yo(O.current, t || "", i || n || "text", o || "");
    _.current?.setModel({ original: A, modified: M });
  }, [n, t, i, e, r, s, o]), D = bn(() => {
    !k.current && E.current && (_.current = O.current.editor.createDiffEditor(E.current, { automaticLayout: !0, ...p }), P(), O.current?.editor.setTheme(d), w(!0), k.current = !0);
  }, [p, d, P]);
  He(() => {
    x && T.current(_.current, O.current);
  }, [x]), He(() => {
    !R && !x && D();
  }, [R, x, D]);
  function F() {
    let A = _.current?.getModel();
    l || A?.original?.dispose(), c || A?.modified?.dispose(), _.current?.dispose();
  }
  return re.createElement(jk, { width: f, height: m, isEditorReady: x, loading: u, _ref: E, className: g, wrapperProps: b });
}
var _H = PH;
sh(_H);
function RH(e) {
  let t = Ct();
  return He(() => {
    t.current = e;
  }, [e]), t.current;
}
var AH = RH, Pd = /* @__PURE__ */ new Map();
function LH({ defaultValue: e, defaultLanguage: t, defaultPath: n, value: r, language: i, path: s, theme: o = "light", line: l, loading: c = "Loading...", options: d = {}, overrideServices: u = {}, saveViewState: p = !0, keepCurrentModel: m = !1, width: f = "100%", height: g = "100%", className: b, wrapperProps: v = {}, beforeMount: y = tc, onMount: x = tc, onChange: w, onValidate: R = tc }) {
  let [S, _] = N(!1), [O, E] = N(!0), T = Ct(null), I = Ct(null), k = Ct(null), P = Ct(x), D = Ct(y), F = Ct(), A = Ct(r), M = AH(s), V = Ct(!1), U = Ct(!1);
  Bk(() => {
    let L = $k.init();
    return L.then((K) => (T.current = K) && E(!1)).catch((K) => K?.type !== "cancelation" && console.error("Monaco initialization: error:", K)), () => I.current ? q() : L.cancel();
  }), Da(() => {
    let L = yo(T.current, e || r || "", t || i || "", s || n || "");
    L !== I.current?.getModel() && (p && Pd.set(M, I.current?.saveViewState()), I.current?.setModel(L), p && I.current?.restoreViewState(Pd.get(s)));
  }, [s], S), Da(() => {
    I.current?.updateOptions(d);
  }, [d], S), Da(() => {
    !I.current || r === void 0 || (I.current.getOption(T.current.editor.EditorOption.readOnly) ? I.current.setValue(r) : r !== I.current.getValue() && (U.current = !0, I.current.executeEdits("", [{ range: I.current.getModel().getFullModelRange(), text: r, forceMoveMarkers: !0 }]), I.current.pushUndoStop(), U.current = !1));
  }, [r], S), Da(() => {
    let L = I.current?.getModel();
    L && i && T.current?.editor.setModelLanguage(L, i);
  }, [i], S), Da(() => {
    l !== void 0 && I.current?.revealLine(l);
  }, [l], S), Da(() => {
    T.current?.editor.setTheme(o);
  }, [o], S);
  let G = bn(() => {
    if (!(!k.current || !T.current) && !V.current) {
      D.current(T.current);
      let L = s || n, K = yo(T.current, r || e || "", t || i || "", L || "");
      I.current = T.current?.editor.create(k.current, { model: K, automaticLayout: !0, ...d }, u), p && I.current.restoreViewState(Pd.get(L)), T.current.editor.setTheme(o), l !== void 0 && I.current.revealLine(l), _(!0), V.current = !0;
    }
  }, [e, t, n, r, i, s, d, u, p, o, l]);
  He(() => {
    S && P.current(I.current, T.current);
  }, [S]), He(() => {
    !O && !S && G();
  }, [O, S, G]), A.current = r, He(() => {
    S && w && (F.current?.dispose(), F.current = I.current?.onDidChangeModelContent((L) => {
      U.current || w(I.current.getValue(), L);
    }));
  }, [S, w]), He(() => {
    if (S) {
      let L = T.current.editor.onDidChangeMarkers((K) => {
        let B = I.current.getModel()?.uri;
        if (B && K.find((j) => j.path === B.path)) {
          let j = T.current.editor.getModelMarkers({ resource: B });
          R?.(j);
        }
      });
      return () => {
        L?.dispose();
      };
    }
    return () => {
    };
  }, [S, R]);
  function q() {
    F.current?.dispose(), m ? p && Pd.set(s, I.current.saveViewState()) : I.current.getModel()?.dispose(), I.current.dispose();
  }
  return re.createElement(jk, { width: f, height: g, isEditorReady: S, loading: c, _ref: k, className: b, wrapperProps: v });
}
var NH = LH, DH = sh(NH), MH = DH;
const Vk = h.createContext(null), Hd = (e) => {
  var { icon: t, className: n, "aria-label": r, onClick: i = () => {
  }, isVisible: s = !0, tooltipProps: o = {} } = e, l = oe(e, ["icon", "className", "aria-label", "onClick", "isVisible", "tooltipProps"]);
  const c = h.useContext(Vk), d = (u) => {
    i(c.code, u);
  };
  return s ? h.createElement(
    Yt,
    Object.assign({}, o),
    h.createElement(z, Object.assign({ className: n, onClick: d, variant: "control", "aria-label": r }, l), t)
  ) : null;
};
Hd.displayName = "CodeEditorControl";
var Ln;
(function(e) {
  e.abap = "abap", e.aes = "aes", e.apex = "apex", e.azcli = "azcli", e.bat = "bat", e.bicep = "bicep", e.c = "c", e.cameligo = "cameligo", e.clojure = "clojure", e.coffeescript = "coffeescript", e.cpp = "cpp", e.csharp = "csharp", e.csp = "csp", e.css = "css", e.dart = "dart", e.dockerfile = "dockerfile", e.ecl = "ecl", e.elixir = "elixir", e.fsharp = "fsharp", e.go = "go", e.graphql = "graphql", e.handlebars = "handlebars", e.hcl = "hcl", e.html = "html", e.ini = "ini", e.java = "java", e.javascript = "javascript", e.json = "json", e.julia = "julia", e.kotlin = "kotlin", e.less = "less", e.lexon = "lexon", e.liquid = "liquid", e.lua = "lua", e.m3 = "m3", e.markdown = "markdown", e.mips = "mips", e.msdax = "msdax", e.mysql = "mysql", e["objective-c"] = "objective-c", e.pascal = "pascal", e.pascaligo = "pascaligo", e.perl = "perl", e.pgsql = "pgsql", e.php = "php", e.plaintext = "plaintext", e.postiats = "postiats", e.powerquery = "powerquery", e.powershell = "powershell", e.pug = "pug", e.python = "python", e.r = "r", e.razor = "razor", e.redis = "redis", e.redshift = "redshift", e.restructuredtext = "restructuredtext", e.ruby = "ruby", e.rust = "rust", e.sb = "sb", e.scala = "scala", e.scheme = "scheme", e.scss = "scss", e.shell = "shell", e.sol = "sol", e.sql = "sql", e.st = "st", e.swift = "swift", e.systemverilog = "systemverilog", e.tcl = "tcl", e.twig = "twig", e.typescript = "typescript", e.vb = "vb", e.verilog = "verilog", e.xml = "xml", e.yaml = "yaml";
})(Ln || (Ln = {}));
class lr extends h.Component {
  constructor(t) {
    super(t), this.editor = null, this.wrapperRef = h.createRef(), this.ref = h.createRef(), this.timer = null, this.observer = () => {
    }, this.onChange = (n, r) => {
      this.props.height === "sizeToFit" && this.setHeightToFitContent(), this.props.onChange && this.props.onChange(n, r), this.setState({ value: n }), this.props.onCodeChange(n);
    }, this.handleResize = () => {
      this.editor && this.editor.layout();
    }, this.handleGlobalKeys = (n) => {
      var r;
      this.wrapperRef.current === document.activeElement && (n.key === "ArrowDown" || n.key === " ") && ((r = this.editor) === null || r === void 0 || r.focus(), n.preventDefault());
    }, this.editorDidMount = (n, r) => {
      n.addCommand(r.KeyMod.Shift | r.KeyCode.Tab, () => this.wrapperRef.current.focus()), Array.from(document.getElementsByClassName("monaco-editor")).forEach((i) => i.removeAttribute("role")), this.props.onEditorDidMount(n, r), this.editor = n, this.props.height === "sizeToFit" && this.setHeightToFitContent();
    }, this.handleFileChange = (n, r) => {
      this.setState({
        value: n,
        filename: r
      }), this.props.onCodeChange(n);
    }, this.handleFileReadStarted = () => this.setState({ isLoading: !0 }), this.handleFileReadFinished = () => this.setState({ isLoading: !1 }), this.onDropAccepted = (n) => {
      if (n.length > 0) {
        const r = n[0];
        this.handleFileChange("", r.name), this.handleFileReadStarted(), this.readFile(r).then((i) => {
          this.handleFileReadFinished(), this.toggleEmptyState(), this.handleFileChange(i, r.name);
        }).catch((i) => {
          console.error("error", i), this.handleFileReadFinished(), this.handleFileChange("", "");
        });
      }
    }, this.onDropRejected = (n) => {
      n.length > 0 && console.error("There was an error accepting that dropped file");
    }, this.copyCode = () => {
      navigator.clipboard.writeText(this.state.value), this.setState({ copied: !0 });
    }, this.download = () => {
      const { value: n } = this.state, r = document.createElement("a"), i = new Blob([n], { type: "text" });
      r.href = URL.createObjectURL(i), r.download = `${this.props.downloadFileName}.${lr.getExtensionFromLanguage(this.props.language)}`, document.body.appendChild(r), r.click();
    }, this.toggleEmptyState = () => {
      this.setState({ showEmptyState: !1 });
    }, this.state = {
      height: this.props.height,
      prevPropsCode: this.props.code,
      value: this.props.code,
      filename: "",
      isLoading: !1,
      showEmptyState: !0,
      copied: !1
    };
  }
  static getExtensionFromLanguage(t) {
    switch (t) {
      case Ln.shell:
        return "sh";
      case Ln.ruby:
        return "rb";
      case Ln.perl:
        return "pl";
      case Ln.python:
        return "py";
      case Ln.mysql:
        return "sql";
      case Ln.javascript:
        return "js";
      case Ln.typescript:
        return "ts";
      case Ln.markdown:
        return "md";
      case Ln.plaintext:
        return "txt";
      default:
        return t.toString();
    }
  }
  setHeightToFitContent() {
    const t = this.editor.getContentHeight(), n = this.editor.getLayoutInfo();
    this.editor.layout({ width: n.width, height: t });
  }
  // this function is only called when the props change
  // the only conflict is between props.code and state.value
  static getDerivedStateFromProps(t, n) {
    return t.code !== n.prevPropsCode ? {
      value: t.code,
      prevPropsCode: t.code
    } : null;
  }
  componentDidMount() {
    document.addEventListener("keydown", this.handleGlobalKeys), this.observer = Wo(this.ref.current, this.handleResize, !0), this.handleResize();
  }
  componentWillUnmount() {
    document.removeEventListener("keydown", this.handleGlobalKeys), this.observer();
  }
  readFile(t) {
    return new Promise((n, r) => {
      const i = new FileReader();
      i.onload = () => n(i.result), i.onerror = () => r(i.error), i.readAsText(t);
    });
  }
  render() {
    const { height: t, value: n, isLoading: r, showEmptyState: i, copied: s } = this.state, { isDarkTheme: o, width: l, className: c, isCopyEnabled: d, copyButtonSuccessTooltipText: u, isReadOnly: p, isUploadEnabled: m, isLanguageLabelVisible: f, copyButtonAriaLabel: g, copyButtonToolTipText: b, uploadButtonAriaLabel: v, uploadButtonToolTipText: y, downloadButtonAriaLabel: x, downloadButtonToolTipText: w, toolTipDelay: R, toolTipCopyExitDelay: S, toolTipMaxWidth: _, toolTipPosition: O, isLineNumbersVisible: E, isDownloadEnabled: T, language: I, emptyState: k, emptyStateTitle: P, emptyStateBody: D, emptyStateButton: F, emptyStateLink: A, customControls: M, isMinimapVisible: V, headerMainContent: U, shortcutsPopoverButtonText: G, shortcutsPopoverProps: q, showEditor: L, options: K, overrideServices: B, editorProps: j } = this.props, W = Object.assign(Object.assign({}, lr.defaultProps.shortcutsPopoverProps), q), Q = Object.assign({ scrollBeyondLastLine: t !== "sizeToFit", readOnly: p, cursorStyle: "line", lineNumbers: E ? "on" : "off", tabIndex: -1, minimap: {
      enabled: V
    } }, K);
    return h.createElement(Wu, { multiple: !1, onDropAccepted: this.onDropAccepted, onDropRejected: this.onDropRejected }, ({ getRootProps: te, getInputProps: ie, isDragActive: ce, open: Z }) => {
      const me = k || (m ? h.createElement(
        Sr,
        { variant: uc.sm },
        h.createElement(ki, { titleText: P, icon: h.createElement(Ns, { icon: cm }), headingLevel: "h4" }),
        h.createElement(Ri, null, D),
        !p && h.createElement(
          rs,
          null,
          h.createElement(
            xo,
            null,
            h.createElement(z, { variant: "primary", onClick: Z }, F)
          ),
          h.createElement(
            xo,
            null,
            h.createElement(z, { variant: "link", onClick: this.toggleEmptyState }, A)
          )
        )
      ) : h.createElement(
        Sr,
        { variant: uc.sm },
        h.createElement(ki, { titleText: P, icon: h.createElement(Ns, { icon: cm }), headingLevel: "h4" }),
        !p && h.createElement(
          rs,
          null,
          h.createElement(
            xo,
            null,
            h.createElement(z, { variant: "primary", onClick: this.toggleEmptyState }, A)
          )
        )
      )), ne = {
        position: O,
        exitDelay: R,
        entryDelay: R,
        maxWidth: _,
        trigger: "mouseenter focus"
      }, Oe = h.createElement(
        "div",
        { className: $(Ga.codeEditorHeader) },
        h.createElement(
          "div",
          { className: $(Ga.codeEditorControls) },
          h.createElement(
            Vk.Provider,
            { value: { code: n } },
            d && (!i || !!n) && h.createElement(Hd, { icon: h.createElement(H1, null), "aria-label": g, tooltipProps: Object.assign(Object.assign({}, ne), { "aria-live": "polite", content: h.createElement("div", null, s ? u : b), exitDelay: s ? S : R, onTooltipHidden: () => this.setState({ copied: !1 }) }), onClick: this.copyCode }),
            m && h.createElement(Hd, { icon: h.createElement(oN, null), "aria-label": v, tooltipProps: Object.assign({ content: h.createElement("div", null, y) }, ne), onClick: Z }),
            T && (!i || !!n) && h.createElement(Hd, { icon: h.createElement(vL, null), "aria-label": x, tooltipProps: Object.assign({ content: h.createElement("div", null, w) }, ne), onClick: this.download }),
            M && M
          )
        ),
        h.createElement("div", { className: $(Ga.codeEditorHeaderMain) }, U),
        !!W.bodyContent && h.createElement(
          "div",
          { className: `${Ga.codeEditor}__keyboard-shortcuts` },
          h.createElement(
            Or,
            Object.assign({}, W),
            h.createElement(z, { variant: xe.link, icon: h.createElement(Tf, null) }, G)
          )
        ),
        f && h.createElement(
          "div",
          { className: $(Ga.codeEditorTab) },
          h.createElement(
            "span",
            { className: $(Ga.codeEditorTabIcon) },
            h.createElement(cm, null)
          ),
          h.createElement("span", { className: $(Ga.codeEditorTabText) }, I.toUpperCase())
        )
      ), Pe = h.createElement(
        "div",
        { className: $(Ga.codeEditorCode), ref: this.wrapperRef, tabIndex: 0, dir: "ltr" },
        h.createElement(MH, Object.assign({ height: t, width: l, language: I, value: n, options: Q, overrideServices: B, onChange: this.onChange, onMount: this.editorDidMount, theme: o ? "vs-dark" : "vs-light" }, j))
      );
      return h.createElement("div", { className: $(Ga.codeEditor, p && Ga.modifiers.readOnly, c), ref: this.ref }, m || k ? h.createElement(
        "div",
        Object.assign({}, te({
          onClick: ($e) => $e.stopPropagation()
          // Prevents clicking TextArea from opening file dialog
        }), { className: `${pi.fileUpload} ${ce && pi.modifiers.dragHover} ${r && pi.modifiers.loading}` }),
        Oe,
        h.createElement(
          "div",
          { className: $(Ga.codeEditorMain) },
          h.createElement("input", Object.assign({}, ie())),
          (i || k) && !n ? me : Pe
        )
      ) : h.createElement(
        h.Fragment,
        null,
        Oe,
        L && h.createElement("div", { className: $(Ga.codeEditorMain) }, Pe)
      ));
    });
  }
}
lr.displayName = "CodeEditor";
lr.defaultProps = {
  className: "",
  code: "",
  onEditorDidMount: () => {
  },
  language: Ln.plaintext,
  isDarkTheme: !1,
  height: "",
  width: "",
  isLineNumbersVisible: !0,
  isReadOnly: !1,
  isLanguageLabelVisible: !1,
  loading: "",
  emptyState: "",
  emptyStateTitle: "Start editing",
  emptyStateBody: "Drag and drop a file or upload one.",
  emptyStateButton: "Browse",
  emptyStateLink: "Start from scratch",
  downloadFileName: Date.now().toString(),
  isUploadEnabled: !1,
  isDownloadEnabled: !1,
  isCopyEnabled: !1,
  copyButtonAriaLabel: "Copy code to clipboard",
  uploadButtonAriaLabel: "Upload code",
  downloadButtonAriaLabel: "Download code",
  copyButtonToolTipText: "Copy to clipboard",
  uploadButtonToolTipText: "Upload",
  downloadButtonToolTipText: "Download",
  copyButtonSuccessTooltipText: "Content added to clipboard",
  toolTipCopyExitDelay: 1600,
  toolTipDelay: 300,
  toolTipMaxWidth: "100px",
  toolTipPosition: "top",
  customControls: null,
  isMinimapVisible: !1,
  headerMainContent: "",
  shortcutsPopoverButtonText: "View Shortcuts",
  shortcutsPopoverProps: Object.assign({ bodyContent: "", "aria-label": "Keyboard Shortcuts" }, Or.defaultProps),
  showEditor: !0,
  options: {},
  overrideServices: {},
  onCodeChange: () => {
  }
};
const FH = ({
  name: e,
  label: t,
  helpText: n,
  defaultValue: r,
  required: i,
  isDisabled: s = !1
}) => {
  const { t: o } = H(), { control: l } = Le();
  return /* @__PURE__ */ a(
    se,
    {
      label: o(t),
      labelIcon: /* @__PURE__ */ a(
        le,
        {
          helpText: /* @__PURE__ */ a("span", { style: { whiteSpace: "pre-wrap" }, children: n }),
          fieldLabelId: `${t}`
        }
      ),
      fieldId: e,
      isRequired: i,
      children: /* @__PURE__ */ a(
        ge,
        {
          name: ma(e),
          defaultValue: r,
          control: l,
          render: ({ field: c }) => /* @__PURE__ */ a(
            lr,
            {
              id: e,
              "data-testid": e,
              isReadOnly: s,
              type: "text",
              onChange: c.onChange,
              code: c.value,
              height: "600px",
              language: Ln.javascript
            }
          )
        }
      )
    }
  );
}, $H = ({
  name: e,
  label: t,
  helpText: n,
  defaultValue: r,
  isDisabled: i = !1,
  required: s
}) => {
  const { t: o } = H(), { register: l } = Le();
  return /* @__PURE__ */ a(
    se,
    {
      label: o(t),
      labelIcon: /* @__PURE__ */ a(le, { helpText: o(n), fieldLabelId: `${t}` }),
      fieldId: e,
      isRequired: s,
      children: /* @__PURE__ */ a(
        mt,
        {
          id: e,
          "data-testid": e,
          isDisabled: i,
          defaultValue: r?.toString(),
          ...l(ma(e))
        }
      )
    }
  );
}, jH = ({
  name: e,
  label: t,
  helpText: n,
  defaultValue: r,
  required: i,
  isDisabled: s = !1
}) => {
  const { t: o } = H(), { register: l } = Le();
  return /* @__PURE__ */ a(
    se,
    {
      label: o(t),
      labelIcon: /* @__PURE__ */ a(le, { helpText: o(n), fieldLabelId: `${t}` }),
      fieldId: e,
      required: i,
      children: /* @__PURE__ */ a(
        Tg,
        {
          id: e,
          "data-testid": e,
          isDisabled: s,
          defaultValue: r?.toString(),
          ...l(ma(e))
        }
      )
    }
  );
}, js = ({
  title: e,
  href: t,
  isInline: n,
  ...r
}) => /* @__PURE__ */ C(
  "a",
  {
    href: t,
    target: "_blank",
    rel: "noreferrer noopener",
    className: n ? "pf-m-link pf-m-inline" : "",
    ...r,
    children: [
      e || t,
      " ",
      t?.startsWith("http") && /* @__PURE__ */ a(Th, {})
    ]
  }
), BH = ({ name: e, label: t, helpText: n }) => {
  const { t: r } = H(), { control: i } = Le(), { value: s } = nt({
    control: i,
    name: e,
    defaultValue: ""
  });
  return /* @__PURE__ */ a(
    se,
    {
      label: r(t),
      fieldId: e,
      labelIcon: /* @__PURE__ */ a(le, { helpText: r(n), fieldLabelId: `${t}` }),
      className: "keycloak__identity-providers__url_component",
      children: /* @__PURE__ */ a(js, { title: r(n), href: s, isInline: !0 })
    }
  );
}, Kk = ({ selectItems: e, ...t }) => {
  const { t: n } = H(), [r, i] = ot(), { field: s } = qs(t), [o, l] = N(
    !e.map(({ key: c }) => c).includes(s.value)
  );
  return /* @__PURE__ */ C(Va, { children: [
    /* @__PURE__ */ a(zt, { lg: o ? 2 : 12, children: /* @__PURE__ */ a(
      ft,
      {
        onToggle: () => i(),
        isOpen: r,
        onSelect: (c) => {
          c && l(!1), s.onChange(c), i();
        },
        selections: o ? "" : [s.value],
        children: [
          /* @__PURE__ */ a(_e, { onClick: () => l(!0), children: n("customAttribute") }, "custom"),
          ...e.map((c) => /* @__PURE__ */ a(_e, { value: c.key, children: c.label }, c.key))
        ]
      }
    ) }),
    o && /* @__PURE__ */ a(zt, { lg: 10, children: /* @__PURE__ */ a(
      mt,
      {
        id: "customValue",
        "data-testid": t.name,
        placeholder: n("keyPlaceholder"),
        value: s.value,
        onChange: s.onChange,
        autoFocus: !0
      }
    ) })
  ] });
}, UH = ({
  name: e,
  label: t,
  helpText: n,
  required: r = !1
}) => {
  const { adminClient: i } = pe(), { t: s } = H(), {
    formState: { errors: o }
  } = Le(), [l, c] = N(), d = ma(e);
  Re(
    () => i.users.getProfile(),
    (p) => c(p),
    []
  );
  const u = (p) => p?.attributes ? p.attributes.map((m) => ({
    key: m.name,
    label: m.name
  })) : [];
  return l ? /* @__PURE__ */ C(
    se,
    {
      label: s(t),
      isRequired: r,
      labelIcon: /* @__PURE__ */ a(le, { helpText: s(n), fieldLabelId: t }),
      fieldId: d,
      children: [
        /* @__PURE__ */ a(
          Kk,
          {
            name: d,
            rules: r ? { required: !0 } : {},
            selectItems: u(l)
          }
        ),
        o[d] && /* @__PURE__ */ a(En, { message: s("required") })
      ]
    }
  ) : null;
}, Hk = {
  String: $H,
  Text: jH,
  boolean: y8,
  List: k8,
  Role: _K,
  Script: FH,
  Map: O8,
  Group: w8,
  ClientList: C8,
  UserProfileAttributeList: UH,
  MultivaluedList: E8,
  MultivaluedString: _8,
  File: S8,
  Password: R8,
  Url: BH
}, VH = (e) => e in Hk, ur = ({
  properties: e,
  ...t
}) => /* @__PURE__ */ a(ee, { children: e.map((n) => {
  const r = n.type;
  if (VH(r)) {
    const i = Hk[r];
    return /* @__PURE__ */ a(i, { ...n, ...t }, n.name);
  } else
    console.warn(`There is no editor registered for ${r}`);
}) }), ma = (e) => Ne(`config.${e}`), Vt = () => Qn(), Wa = "https://www.keycloak.org/docs/latest/server_admin/index.html", _d = "https://www.keycloak.org", na = {
  documentationUrl: Wa,
  clientsUrl: `${Wa}#assembly-managing-clients_server_administration_guide`,
  clientScopesUrl: `${Wa}#_client_scopes`,
  realmRolesUrl: `${Wa}#assigning-permissions-using-roles-and-groups`,
  usersUrl: `${Wa}#assembly-managing-users_server_administration_guide`,
  groupsUrl: `${Wa}#proc-managing-groups_server_administration_guide`,
  sessionsUrl: `${Wa}#managing-user-sessions`,
  eventsUrl: `${Wa}#configuring-auditing-to-track-events`,
  realmSettingsUrl: `${Wa}#configuring-realms`,
  authenticationUrl: `${Wa}#configuring-authentication`,
  identityProvidersUrl: `${Wa}#_identity_broker`,
  userFederationUrl: `${Wa}#_user-storage-federation`,
  documentation: `${_d}/documentation`,
  guides: `${_d}/guides`,
  community: `${_d}/community`,
  blog: `${_d}/blog`
}, wt = ({
  actionsDropdownId: e,
  className: t,
  titleKey: n,
  badges: r,
  isDropdownDisabled: i,
  subKey: s,
  helpUrl: o,
  dropdownItems: l,
  lowerDropdownMenuTitle: c,
  lowerDropdownItems: d,
  lowerButton: u,
  isEnabled: p = !0,
  onToggle: m,
  divider: f = !0,
  helpTextKey: g,
  isReadOnly: b = !1
}) => {
  const { t: v, i18n: y } = H(), { enabled: x } = Pr(), [w, R] = N(!1), [S, _] = N(!1), O = () => {
    R(!w);
  }, E = () => {
    _(!S);
  }, T = (I) => I.replace(/\s/g, "-");
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ C(Te, { variant: "light", children: [
      /* @__PURE__ */ C(kf, { hasGutter: !0, children: [
        /* @__PURE__ */ a(Dl, { children: /* @__PURE__ */ C(kf, { children: [
          /* @__PURE__ */ a(Dl, { children: /* @__PURE__ */ a(Pt, { className: "pf-v5-u-mr-sm", children: /* @__PURE__ */ a(
            tt,
            {
              className: t,
              component: "h1",
              "data-testid": "view-header",
              children: y.exists(n) ? v(n) : n
            }
          ) }) }),
          r && /* @__PURE__ */ a(Dl, { children: r.map((I, k) => /* @__PURE__ */ C(ka, { children: [
            !Ps(I.text) && /* @__PURE__ */ C(ka, { children: [
              /* @__PURE__ */ a(Wr, { "data-testid": I.id, isRead: I.readonly, children: I.text }),
              " "
            ] }, I.text),
            Ps(I.text) && I.text,
            " "
          ] }, k)) })
        ] }) }),
        /* @__PURE__ */ a(Dl, { children: /* @__PURE__ */ a(Sa, { className: "pf-v5-u-p-0", children: /* @__PURE__ */ C(rr, { children: [
          m && /* @__PURE__ */ C(je, { children: [
            /* @__PURE__ */ a(
              Ye,
              {
                id: `${T(n)}-switch`,
                "data-testid": `${n}-switch`,
                label: v("enabled"),
                labelOff: v("disabled"),
                className: "pf-v5-u-mr-lg",
                isDisabled: b,
                isChecked: p,
                "aria-label": v("enabled"),
                onChange: (I, k) => {
                  m(k);
                }
              }
            ),
            g && /* @__PURE__ */ a(
              le,
              {
                helpText: v(g),
                fieldLabelId: `${T(n)}-switch`
              }
            )
          ] }),
          l && /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(
            qt,
            {
              popperProps: {
                position: "right"
              },
              toggle: (I) => /* @__PURE__ */ a(
                yt,
                {
                  ref: I,
                  isDisabled: i,
                  id: e,
                  onClick: O,
                  "data-testid": "action-dropdown",
                  children: v("action")
                }
              ),
              isOpen: w,
              children: /* @__PURE__ */ a(Xt, { children: l })
            }
          ) })
        ] }) }) })
      ] }),
      x && /* @__PURE__ */ a(Pt, { id: "view-header-subkey", children: /* @__PURE__ */ C(tt, { children: [
        Ps(s) ? s : s ? v(s) : "",
        o && /* @__PURE__ */ a(
          js,
          {
            title: v("learnMore"),
            href: o,
            isInline: !0,
            className: "pf-v5-u-ml-md"
          }
        )
      ] }) }),
      d && /* @__PURE__ */ a(
        qt,
        {
          className: "keycloak__user-federation__dropdown",
          toggle: (I) => /* @__PURE__ */ a(
            yt,
            {
              ref: I,
              onClick: E,
              variant: "primary",
              id: "ufToggleId",
              children: v(c)
            }
          ),
          isOpen: S,
          children: /* @__PURE__ */ a(Xt, { children: d })
        }
      ),
      u && /* @__PURE__ */ a(
        z,
        {
          variant: u.variant,
          onClick: u.onClick,
          "data-testid": "viewHeader-lower-btn",
          children: u.lowerButtonTitle
        }
      )
    ] }),
    f && /* @__PURE__ */ a(_t, { component: "div" })
  ] });
}, KH = Be(() => Promise.resolve().then(() => WH)), HH = Be(() => Promise.resolve().then(() => qJ)), zk = {
  path: "/:realm?/page-section/:providerId",
  element: /* @__PURE__ */ a(KH, {}),
  breadcrumb: (e) => e("page"),
  handle: {
    access: "view-realm"
  }
}, qk = {
  path: "/:realm/page/:providerId/:id?",
  element: /* @__PURE__ */ a(HH, {}),
  breadcrumb: (e) => e("page"),
  handle: {
    access: "view-realm"
  }
}, zH = [zk, qk], Mg = (e) => ({
  pathname: Bc(zk.path, e)
}), Yf = (e) => ({
  pathname: Bc(qk.path, e)
}), Lc = "org.keycloak.services.ui.extend.UiPageProvider", Nc = "org.keycloak.services.ui.extend.UiTabProvider", qH = (e) => {
  const { realm: t } = be();
  return /* @__PURE__ */ a(
    Ae,
    {
      to: Yf({ realm: t, providerId: e.providerId, id: e.id }),
      children: e.id
    },
    e.id
  );
};
function GH() {
  const { adminClient: e } = pe(), { t } = H(), { addAlert: n, addError: r } = Se(), i = Je(), { providerId: s } = Qn(), [o, l] = N(0), c = () => l(o + 1), { realm: d, realmRepresentation: u } = be(), [p, m] = N(), { componentTypes: f } = Tt(), b = f?.[Lc]?.find((w) => w.id === s), v = async () => {
    const w = {
      parent: u?.id,
      type: Lc
    };
    return await e.components.find({ ...w });
  }, [y, x] = ze({
    titleKey: "itemDeleteConfirmTitle",
    messageKey: "itemDeleteConfirm",
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        await e.components.del({
          id: p.id
        }), n(t("itemDeletedSuccess")), c();
      } catch (w) {
        r("itemSaveError", w);
      }
    }
  });
  return /* @__PURE__ */ C(Te, { variant: "light", className: "pf-v5-u-p-0", children: [
    /* @__PURE__ */ a(x, {}),
    /* @__PURE__ */ a(wt, { titleKey: b.id, subKey: b.helpText, divider: !1 }),
    /* @__PURE__ */ a(
      St,
      {
        toolbarItem: /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(
          z,
          {
            component: (w) => /* @__PURE__ */ a(
              Ae,
              {
                ...w,
                to: Yf({ realm: d, providerId: b.id })
              }
            ),
            children: t("createItem")
          }
        ) }),
        actionResolver: (w) => [
          {
            title: t("delete"),
            onClick() {
              m(w.data), y();
            }
          }
        ],
        searchPlaceholderKey: "searchItem",
        loader: v,
        columns: [
          { name: "id", cellRenderer: qH },
          ...b.properties.slice(0, 3).map((w) => ({
            name: `config.${w.name}[0]`,
            displayKey: w.label
          }))
        ],
        ariaLabelKey: "list",
        emptyState: /* @__PURE__ */ a(
          ct,
          {
            hasIcon: !0,
            message: t("noItems"),
            instructions: t("noItemsInstructions"),
            primaryActionText: t("createItem"),
            onPrimaryAction: () => i(Yf({ realm: d, providerId: b.id }))
          }
        )
      },
      o
    )
  ] });
}
const WH = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  PAGE_PROVIDER: Lc,
  TAB_PROVIDER: Nc,
  default: GH
}, Symbol.toStringTag, { value: "Module" })), Gk = ({
  id: e,
  providerType: t,
  page: { id: n, ...r }
}) => {
  const { adminClient: i } = pe(), { t: s } = H(), o = Ue(), { realm: l, realmRepresentation: c } = be(), { addAlert: d, addError: u } = Se(), [p, m] = N(e), f = Vt();
  Re(
    async () => await Promise.all([
      p ? i.components.findOne({ id: p }) : Promise.resolve(),
      t === Nc ? i.components.find({ type: Nc }) : Promise.resolve()
    ]),
    ([b, v]) => {
      const y = (v || []).find((x) => x.providerId === n);
      o.reset(b || y || {}), y && m(y.id);
    },
    []
  );
  const g = async (b) => {
    (b.config || f) && (b.config = Object.assign(b.config || {}, f), Object.entries(b.config).forEach(
      ([v, y]) => b.config[v] = Array.isArray(y) ? y : [y]
    ));
    try {
      const v = {
        ...b,
        providerId: n,
        providerType: t,
        parentId: c?.id
      };
      p ? await i.components.update({ id: p }, v) : await i.components.create(v), d("itemSaveSuccessful");
    } catch (v) {
      u("itemSaveError", v);
    }
  };
  return /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ C(
    xt,
    {
      isHorizontal: !0,
      onSubmit: o.handleSubmit(g),
      className: "keycloak__form",
      children: [
        /* @__PURE__ */ a(Ve, { ...o, children: /* @__PURE__ */ a(ur, { properties: r.properties }) }),
        /* @__PURE__ */ C(st, { children: [
          /* @__PURE__ */ a(z, { "data-testid": "save", type: "submit", children: s("save") }),
          /* @__PURE__ */ a(
            z,
            {
              variant: "link",
              component: (b) => /* @__PURE__ */ a(
                Ae,
                {
                  ...b,
                  to: Mg({ realm: l, providerId: n })
                }
              ),
              children: s("cancel")
            }
          )
        ] })
      ]
    }
  ) });
};
var zn = /* @__PURE__ */ ((e) => (e.AdminFineGrainedAuthz = "ADMIN_FINE_GRAINED_AUTHZ", e.ClientPolicies = "CLIENT_POLICIES", e.Kerberos = "KERBEROS", e.DynamicScopes = "DYNAMIC_SCOPES", e.DPoP = "DPOP", e.DeviceFlow = "DEVICE_FLOW", e.TransientUsers = "TRANSIENT_USERS", e.ClientTypes = "CLIENT_TYPES", e.DeclarativeUI = "DECLARATIVE_UI", e.Organizations = "ORGANIZATION", e))(zn || {});
function oa() {
  const { features: e } = Tt();
  return function(n) {
    return e ? e.filter((r) => r.enabled).map((r) => r.name).includes(n) : !1;
  };
}
const $n = ({
  children: e,
  defaultLocation: t,
  ...n
}) => {
  const { pathname: r } = cs(), i = Qn(), { componentTypes: s } = Tt(), o = s?.[Nc] || [], l = oa(), c = o.filter((g) => qd({ path: g.metadata.path }, r)).map((g) => ({
    ...g,
    pathname: Bc(g.metadata.path, {
      ...i,
      ...g.metadata.params
    })
  })), d = c.map((g) => g.pathname), u = Ku.toArray(e).filter((g) => Ps(g)).map((g) => g.props.eventKey.toString()), m = [...u, ...d].find(
    (g) => g === decodeURI(r)
  ), f = u.filter((g) => r.includes(g)).sort((g, b) => g.length - b.length).pop();
  return /* @__PURE__ */ C(
    Ua,
    {
      activeKey: m ?? f ?? t?.pathname ?? r,
      component: bc.nav,
      inset: {
        default: "insetNone",
        xl: "insetLg",
        "2xl": "inset2xl"
      },
      ...n,
      children: [
        e,
        l(zn.DeclarativeUI) && c.map((g) => /* @__PURE__ */ a(XH, { eventKey: g.pathname, title: g.id, children: /* @__PURE__ */ a(Gk, { page: g, providerType: Nc }) }, g.id))
      ]
    }
  );
}, XH = ({
  children: e,
  ...t
}) => {
  const n = lh(t.eventKey);
  return /* @__PURE__ */ a(Ee, { href: n, ...t, children: e });
}, jn = (e) => ({
  eventKey: e.pathname ?? "",
  href: lh(e)
}), YH = ({ flowAlias: e, onClose: t }) => {
  const { adminClient: n } = pe(), { t: r } = H(), i = Ue(), { addAlert: s, addError: o } = Se(), { realm: l, realmRepresentation: c, refresh: d } = be(), u = async ({ bindingType: m }) => {
    try {
      await n.realms.update(
        { realm: l },
        { ...c, [m]: e }
      ), d(), s(r("updateFlowSuccess"), ue.success);
    } catch (f) {
      o("updateFlowError", f);
    }
    t(!0);
  }, p = Array.from(Ru.keys());
  return /* @__PURE__ */ a(
    ht,
    {
      title: r("bindFlow"),
      variant: "small",
      onClose: () => t(),
      actions: [
        /* @__PURE__ */ a(z, { "data-testid": "save", type: "submit", form: "bind-form", children: r("save") }, "confirm"),
        /* @__PURE__ */ a(
          z,
          {
            "data-testid": "cancel",
            variant: xe.link,
            onClick: () => t(),
            children: r("cancel")
          },
          "cancel"
        )
      ],
      isOpen: !0,
      children: /* @__PURE__ */ a(xt, { id: "bind-form", isHorizontal: !0, onSubmit: i.handleSubmit(u), children: /* @__PURE__ */ a(Ve, { ...i, children: /* @__PURE__ */ a(
        at,
        {
          id: "chooseBindingType",
          name: "bindingType",
          label: r("chooseBindingType"),
          options: p.filter((m) => m !== "dockerAuthenticationFlow").map((m) => ({
            key: m,
            value: r(`flow.${Ru.get(m)}`)
          })),
          controller: { defaultValue: p[0] },
          menuAppendTo: "parent",
          "aria-label": r("chooseBindingType")
        }
      ) }) })
    }
  );
}, JH = () => {
  const { t: e } = H();
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(
      ve,
      {
        name: "alias",
        label: e("name"),
        labelIcon: e("flowNameHelp"),
        rules: { required: { value: !0, message: e("required") } }
      }
    ),
    /* @__PURE__ */ a(
      ve,
      {
        name: "description",
        label: e("description"),
        labelIcon: e("flowDescriptionHelp"),
        rules: {
          maxLength: {
            value: 255,
            message: e("maxLength", { length: 255 })
          }
        }
      }
    )
  ] });
}, ZH = Be(() => import("./FlowDetails-1aOlL_ce.js")), Fg = {
  path: "/:realm/authentication/:id/:usedBy",
  element: /* @__PURE__ */ a(ZH, {}),
  breadcrumb: (e) => e("flowDetails"),
  handle: {
    access: "view-authorization"
  }
}, Wk = {
  ...Fg,
  path: "/:realm/authentication/:id/:usedBy/:builtIn"
}, $g = (e) => {
  const t = e.builtIn ? Wk.path : Fg.path;
  return {
    pathname: We(t, e)
  };
}, QH = ({
  name: e,
  description: t,
  toggleDialog: n,
  onComplete: r
}) => {
  const { adminClient: i } = pe(), { t: s } = H(), o = Ue({ mode: "onChange" }), { setValue: l, getValues: c, handleSubmit: d } = o, { addAlert: u, addError: p } = Se(), m = Je(), { realm: f } = be();
  He(() => {
    l("alias", s("copyOf", { name: e })), l("description", t);
  }, [e, t]);
  const g = async () => {
    const b = c();
    try {
      await i.authenticationManagement.copyFlow({
        flow: e,
        newName: b.alias
      });
      const v = (await i.authenticationManagement.getFlows()).find((y) => y.alias === b.alias);
      b.description !== t && (v.description = b.description, await i.authenticationManagement.updateFlow(
        { flowId: v.id },
        v
      )), u(s("copyFlowSuccess"), ue.success), m(
        $g({
          realm: f,
          id: v.id,
          usedBy: "notInUse",
          builtIn: v.builtIn ? "builtIn" : void 0
        })
      );
    } catch (v) {
      p("copyFlowError", v);
    }
    r();
  };
  return /* @__PURE__ */ a(
    ht,
    {
      title: s("duplicateFlow"),
      onClose: n,
      variant: Rt.small,
      actions: [
        /* @__PURE__ */ a(
          z,
          {
            "data-testid": "confirm",
            type: "submit",
            form: "duplicate-flow-form",
            children: s("duplicate")
          },
          "confirm"
        ),
        /* @__PURE__ */ a(
          z,
          {
            "data-testid": "cancel",
            variant: xe.link,
            onClick: n,
            children: s("cancel")
          },
          "cancel"
        )
      ],
      isOpen: !0,
      children: /* @__PURE__ */ a(Ve, { ...o, children: /* @__PURE__ */ a(
        xt,
        {
          id: "duplicate-flow-form",
          onSubmit: d(g),
          isHorizontal: !0,
          children: /* @__PURE__ */ a(JH, {})
        }
      ) })
    }
  );
};
function jg({
  keyField: e,
  columns: t,
  data: n,
  actions: r,
  onDragFinish: i,
  ...s
}) {
  const { t: o } = H(), l = Ct(null), [c, d] = N({
    draggedItemId: "",
    draggingToItemIndex: -1,
    dragging: !1,
    tempItemOrder: [""]
  }), u = et(
    () => n.map((S) => Wn(S, e)),
    [n]
  ), p = (S) => {
    S.dataTransfer.effectAllowed = "move", S.dataTransfer.setData("text/plain", S.currentTarget.id);
    const _ = S.currentTarget.id;
    S.currentTarget.classList.add(Lt.modifiers.ghostRow), S.currentTarget.setAttribute("aria-grabbed", "true"), d({ ...c, draggedItemId: _, dragging: !0 });
  }, m = (S, _, O) => {
    const E = S.indexOf(_);
    if (E === O)
      return S;
    const T = S.splice(E, 1);
    return S.splice(O, 0, T[0]), S;
  }, f = (S) => {
    if (!l.current) return;
    const _ = l.current, O = Array.from(_.children);
    if (!O.map((E) => E.id).every((E, T) => E === S[T])) {
      for (; _.firstChild; )
        _.removeChild(_.lastChild);
      S.forEach((E) => {
        _.appendChild(O.find((T) => T.id === E));
      });
    }
  }, g = () => {
    Array.from(l.current?.children || []).forEach((S) => {
      S.classList.remove(Lt.modifiers.ghostRow), S.setAttribute("aria-grabbed", "false");
    }), d({
      ...c,
      draggedItemId: "",
      draggingToItemIndex: -1,
      dragging: !1
    });
  }, b = (S) => {
    v(S) || (f(u), d({ ...c, draggingToItemIndex: -1 }));
  }, v = (S) => {
    const _ = l.current.getBoundingClientRect();
    return S.clientX > _.x && S.clientX < _.x + _.width && S.clientY > _.y && S.clientY < _.y + _.height;
  }, y = (S) => {
    v(S) ? i(c.draggedItemId, c.tempItemOrder) : g();
  }, x = (S) => {
    S.preventDefault();
    const O = S.target.closest("tr");
    if (!O || l.current && !l.current.contains(O) || O.id === c.draggedItemId)
      return null;
    {
      const E = O.id, T = Array.from(
        l.current?.children || []
      ).findIndex((I) => I.id === E);
      if (T !== c.draggingToItemIndex) {
        const I = m(
          u,
          c.draggedItemId,
          T
        );
        f(I), d({
          ...c,
          draggingToItemIndex: T,
          tempItemOrder: I
        });
      }
    }
  }, w = (S) => {
    const _ = S.target;
    _.classList.remove(Lt.modifiers.ghostRow), _.setAttribute("aria-grabbed", "false"), d({
      ...c,
      draggedItemId: "",
      draggingToItemIndex: -1,
      dragging: !1
    });
  }, R = (S) => {
    if (S.thTooltipText)
      return {
        popover: /* @__PURE__ */ a("div", { children: o(S.thTooltipText) }),
        ariaLabel: o(S.thTooltipText)
      };
  };
  return /* @__PURE__ */ C(
    Cn,
    {
      "aria-label": "Draggable table",
      className: c.dragging ? Lt.modifiers.dragOver : "",
      ...s,
      children: [
        /* @__PURE__ */ a(wn, { children: /* @__PURE__ */ C(rt, { children: [
          /* @__PURE__ */ a(De, { "aria-hidden": "true" }),
          t.map((S) => /* @__PURE__ */ a(
            De,
            {
              info: R(S),
              width: S.width,
              modifier: "fitContent",
              children: o(S.displayKey || S.name)
            },
            S.name
          ))
        ] }) }),
        /* @__PURE__ */ a(
          yn,
          {
            ref: l,
            onDragOver: x,
            onDrop: x,
            onDragLeave: b,
            children: n.map((S) => /* @__PURE__ */ C(
              rt,
              {
                id: Wn(S, e),
                draggable: !0,
                onDrop: y,
                onDragEnd: w,
                onDragStart: p,
                children: [
                  /* @__PURE__ */ a(
                    ke,
                    {
                      draggableRow: {
                        id: `draggable-row-${Wn(S, e)}`
                      }
                    }
                  ),
                  t.map((_) => /* @__PURE__ */ a(
                    ke,
                    {
                      dataLabel: _.name,
                      children: _.cellRenderer ? _.cellRenderer(S) : Wn(S, _.name)
                    },
                    `${Wn(S, e)}_${_.name}`
                  )),
                  r && /* @__PURE__ */ a(ke, { isActionCell: !0, children: /* @__PURE__ */ a(
                    dl,
                    {
                      items: r.map(
                        ({ isActionable: _, ...O }) => _ ? { ...O, isDisabled: !_(S) } : O
                      ),
                      rowData: S
                    }
                  ) })
                ]
              },
              Wn(S, e)
            ))
          }
        )
      ]
    }
  );
}
const ez = ({
  requiredAction: e,
  onClose: t
}) => {
  const { adminClient: n } = pe(), { t: r } = H(), { addAlert: i, addError: s } = Se(), [o, l] = N(), c = Ue(), { setValue: d, handleSubmit: u } = c, p = (f) => {
    In(f || {}, d);
  };
  Re(
    async () => {
      const f = await n.authenticationManagement.getRequiredActionConfigDescription(
        {
          alias: e.alias
        }
      ), g = await n.authenticationManagement.getRequiredActionConfig({
        alias: e.alias
      });
      return f.properties = [
        //...defaultConfigProperties!,
        ...f.properties
      ], { configDescription: f, config: g };
    },
    ({ configDescription: f, config: g }) => {
      l(f), p(g);
    },
    []
  );
  const m = async (f) => {
    const g = Zn(f);
    try {
      await n.authenticationManagement.updateRequiredActionConfig(
        { alias: e.alias },
        g
      ), p(g), i(r("configSaveSuccess"), ue.success), t();
    } catch (b) {
      s("configSaveError", b);
    }
  };
  return /* @__PURE__ */ a(
    ht,
    {
      variant: Rt.small,
      isOpen: !0,
      title: r("requiredActionConfig", { name: e.name }),
      onClose: t,
      children: /* @__PURE__ */ C(xt, { id: "required-action-config-form", onSubmit: u(m), children: [
        /* @__PURE__ */ a(Ve, { ...c, children: /* @__PURE__ */ a(
          ur,
          {
            stringify: !0,
            properties: o?.properties || []
          }
        ) }),
        /* @__PURE__ */ C(st, { children: [
          /* @__PURE__ */ a(z, { "data-testid": "save", variant: "primary", type: "submit", children: r("save") }),
          /* @__PURE__ */ a(
            z,
            {
              "data-testid": "cancel",
              variant: xe.link,
              onClick: t,
              children: r("cancel")
            }
          ),
          /* @__PURE__ */ C(
            z,
            {
              className: "pf-v5-u-ml-3xl",
              "data-testid": "clear",
              variant: xe.link,
              onClick: async () => {
                await n.authenticationManagement.removeRequiredActionConfig(
                  {
                    alias: e.alias
                  }
                ), c.reset({}), t();
              },
              children: [
                r("clear"),
                " ",
                /* @__PURE__ */ a(mu, {})
              ]
            }
          )
        ] })
      ] })
    }
  );
}, tz = () => {
  const { adminClient: e } = pe(), { t } = H(), { addAlert: n, addError: r } = Se(), [i, s] = N(), [o, l] = N(), [c, d] = N(0), u = () => d(c + 1), { realm: p } = be(), m = async () => await (await Ii(
    `${os(
      e.baseUrl
    )}admin/realms/${p}/ui-ext/authentication-management/required-actions`,
    {
      method: "GET",
      headers: no(await e.getAccessToken())
    }
  )).json();
  Re(
    async () => {
      const [v, y] = await Promise.all([
        m(),
        e.authenticationManagement.getUnregisteredRequiredActions()
      ]);
      return [
        ...v.map((x) => ({
          name: x.name,
          enabled: x.enabled,
          defaultAction: x.defaultAction,
          data: x
        })),
        ...y.map((x) => ({
          name: x.name,
          enabled: !1,
          defaultAction: !1,
          data: x
        }))
      ];
    },
    (v) => s(v),
    [c]
  );
  const f = (v) => !("alias" in v), g = async (v, y) => {
    try {
      y in v ? (v[y] = !v[y], delete v.configurable, await e.authenticationManagement.updateRequiredAction(
        { alias: v.alias },
        v
      )) : f(v) && await e.authenticationManagement.registerRequiredAction({
        name: v.name,
        providerId: v.providerId
      }), u(), n(t("updatedRequiredActionSuccess"), ue.success);
    } catch (x) {
      r("updatedRequiredActionError", x);
    }
  }, b = async (v, y) => {
    try {
      const x = v.alias;
      for (let w = 0; w < Math.abs(y); w++)
        y > 0 ? await e.authenticationManagement.lowerRequiredActionPriority(
          {
            alias: x
          }
        ) : await e.authenticationManagement.raiseRequiredActionPriority(
          {
            alias: x
          }
        );
      u(), n(t("updatedRequiredActionSuccess"), ue.success);
    } catch (x) {
      r("updatedRequiredActionError", x);
    }
  };
  return i ? /* @__PURE__ */ C(ee, { children: [
    o && /* @__PURE__ */ a(
      ez,
      {
        requiredAction: o,
        onClose: () => l(void 0)
      }
    ),
    /* @__PURE__ */ a(
      jg,
      {
        keyField: "name",
        onDragFinish: async (v, y) => {
          const x = i.map((O) => O.name), w = y.indexOf(v), R = x.indexOf(v), S = i[R].data;
          if (!S.alias) return;
          const _ = w - R;
          b(S, _);
        },
        columns: [
          {
            name: "name",
            displayKey: "action",
            width: 50
          },
          {
            name: "enabled",
            displayKey: "enabled",
            cellRenderer: (v) => /* @__PURE__ */ a(
              Ye,
              {
                id: `enable-${Od(v.name)}`,
                label: t("on"),
                labelOff: t("off"),
                isChecked: v.enabled,
                onChange: () => {
                  g(v.data, "enabled");
                },
                "aria-label": Od(v.name)
              }
            ),
            width: 20
          },
          {
            name: "default",
            displayKey: "setAsDefaultAction",
            thTooltipText: "authDefaultActionTooltip",
            cellRenderer: (v) => /* @__PURE__ */ a(
              Ye,
              {
                id: `default-${Od(v.name)}`,
                label: t("on"),
                isDisabled: !v.enabled,
                labelOff: v.enabled ? t("off") : t("disabledOff"),
                isChecked: v.defaultAction,
                onChange: () => {
                  g(v.data, "defaultAction");
                },
                "aria-label": Od(v.name)
              }
            ),
            width: 20
          },
          {
            name: "config",
            displayKey: "configure",
            cellRenderer: (v) => v.data.configurable ? /* @__PURE__ */ a(
              z,
              {
                variant: "plain",
                "aria-label": t("settings"),
                onClick: () => l(v.data),
                children: /* @__PURE__ */ a(uL, {})
              }
            ) : void 0,
            width: 10
          }
        ],
        data: i
      }
    )
  ] }) : /* @__PURE__ */ a(gt, {});
}, nz = "_label_1u2bs_1", Jf = {
  label: nz
}, jm = ({ label: e }) => /* @__PURE__ */ C(ee, { children: [
  /* @__PURE__ */ a(Ks, { className: Jf.label }),
  " ",
  e
] }), az = ({ id: e, isSpecificClient: t, onClose: n }) => {
  const { adminClient: r } = pe(), { t: i } = H(), s = async (o, l, c) => (await EK(r, {
    id: e,
    type: t ? "clients" : "idp",
    first: o || 0,
    max: l || 10,
    search: c
  })).map((u) => ({ name: u }));
  return /* @__PURE__ */ a(
    ht,
    {
      header: /* @__PURE__ */ C(Pt, { children: [
        /* @__PURE__ */ a(tt, { component: Wt.h1, children: i("flowUsedBy") }),
        /* @__PURE__ */ a(tt, { children: i("flowUsedByDescription", {
          value: i(t ? "clients" : "identiyProviders")
        }) })
      ] }),
      variant: Rt.medium,
      isOpen: !0,
      onClose: n,
      actions: [
        /* @__PURE__ */ a(
          z,
          {
            "data-testid": "cancel",
            id: "modal-cancel",
            onClick: n,
            children: i("close")
          },
          "cancel"
        )
      ],
      children: /* @__PURE__ */ a(
        St,
        {
          loader: s,
          isPaginated: !0,
          ariaLabelKey: "usedBy",
          searchPlaceholderKey: "search",
          columns: [
            {
              name: "name"
            }
          ]
        }
      )
    }
  );
}, rz = ({ authType: { id: e, usedBy: t } }) => {
  const { t: n } = H(), { realmRepresentation: r } = be(), [i, s] = ot(), o = Object.entries(r).find(
    (l) => l[1] === t?.values[0]
  )?.[0];
  return /* @__PURE__ */ C(ee, { children: [
    i && /* @__PURE__ */ a(
      az,
      {
        id: e,
        onClose: s,
        isSpecificClient: t?.type === "SPECIFIC_CLIENTS"
      }
    ),
    (t?.type === "SPECIFIC_PROVIDERS" || t?.type === "SPECIFIC_CLIENTS") && (t.values.length <= 8 ? /* @__PURE__ */ a(
      Or,
      {
        "aria-label": n("usedBy"),
        bodyContent: /* @__PURE__ */ C("div", { children: [
          n(
            "appliedBy" + (t.type === "SPECIFIC_CLIENTS" ? "Clients" : "Providers")
          ),
          " ",
          t.values.map((l, c) => /* @__PURE__ */ C(ee, { children: [
            /* @__PURE__ */ a("strong", { children: l }),
            c < t.values.length - 1 ? ", " : ""
          ] }))
        ] }, `usedBy-${e}-${t.values}`),
        children: /* @__PURE__ */ a(z, { variant: "link", className: Jf.label, children: /* @__PURE__ */ a(jm, { label: n(`used.${t.type}`) }) })
      },
      e
    ) : /* @__PURE__ */ a(z, { variant: "link", className: Jf.label, onClick: s, children: /* @__PURE__ */ a(jm, { label: n(`used.${t.type}`) }) })),
    t?.type === "DEFAULT" && /* @__PURE__ */ a(jm, { label: n(`flow.${Ru.get(o)}`) }),
    !t?.type && n("used.notInUse")
  ] });
}, iz = "_buttonGroup_1gajx_1", sz = {
  buttonGroup: iz
}, _r = ({
  name: e,
  save: t,
  saveText: n,
  reset: r,
  resetText: i,
  isSubmit: s = !1,
  isActive: o = !0,
  children: l,
  ...c
}) => {
  const { t: d } = H();
  return /* @__PURE__ */ C(st, { className: sz.buttonGroup, ...c, children: [
    (t || s) && /* @__PURE__ */ a(
      z,
      {
        isDisabled: !o,
        "data-testid": `${e}-save`,
        onClick: () => t?.(),
        type: s ? "submit" : "button",
        children: n || d("save")
      }
    ),
    r && /* @__PURE__ */ a(
      z,
      {
        isDisabled: !o,
        "data-testid": `${e}-revert`,
        variant: "link",
        onClick: () => r(),
        children: i || d("revert")
      }
    ),
    l
  ] });
}, Fe = ({
  children: e,
  role: t,
  fineGrainedAccess: n = !1,
  isReadOnly: r = !1,
  unWrap: i = !1,
  ...s
}) => {
  const { hasAccess: o } = Mt(), l = (d, u) => Ku.map(d, (p) => {
    if (!Ps(p))
      return p;
    if (p.props) {
      const m = p;
      if (p.type === ge)
        return Cl(p, {
          ...m.props,
          render: (g) => {
            const b = m.props.render(g);
            return Cl(b, {
              ...b.props,
              ...u
            });
          }
        });
      const f = l(
        m.props.children,
        u
      );
      switch (p.type) {
        case _r:
          return Cl(p, {
            isActive: !u.isDisabled,
            children: f
          });
        case Ai:
          return Cl(p, {
            readOnly: u.isDisabled,
            children: f
          });
      }
      return Cl(
        p,
        p.type === se || p.type === zt || p.type === Va || p.type === st || p.type === ti || p.type === rl || p.type === va ? { children: f } : { ...u, children: f }
      );
    }
    return p;
  }), c = r || !o(t) && !n;
  return /* @__PURE__ */ C(ee, { children: [
    !i && /* @__PURE__ */ a(xt, { ...s, className: "keycloak__form " + (s.className || ""), children: l(e, c ? { isDisabled: c } : {}) }),
    i && l(e, c ? { isDisabled: c } : {})
  ] });
}, oz = ["poll", "ping"], Rd = 10, Ad = 600, MC = 0, FC = 600, lz = ({ realm: e, realmUpdated: t }) => {
  const { adminClient: n } = pe(), { t: r } = H(), i = Ue({ mode: "onChange" }), { realm: s } = be(), { addAlert: o, addError: l } = Se(), c = (u) => In(u, i.setValue);
  He(() => c(e), []);
  const d = async (u) => {
    try {
      await n.realms.update(
        { realm: s },
        Zn(u)
      );
      const p = await n.realms.findOne({
        realm: s
      });
      t(p), c(p), o(r("updateCibaSuccess"), ue.success);
    } catch (p) {
      l("updateCibaError", p);
    }
  };
  return /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ C(
    Fe,
    {
      role: "manage-realm",
      isHorizontal: !0,
      onSubmit: i.handleSubmit(d),
      children: [
        /* @__PURE__ */ C(Ve, { ...i, children: [
          /* @__PURE__ */ a(
            at,
            {
              name: "attributes.cibaBackchannelTokenDeliveryMode",
              label: r("cibaBackchannelTokenDeliveryMode"),
              labelIcon: r("cibaBackchannelTokenDeliveryModeHelp"),
              options: oz.map((u) => ({
                key: u,
                value: r(`cibaBackhannelTokenDeliveryModes.${u}`)
              })),
              controller: { defaultValue: "" }
            }
          ),
          /* @__PURE__ */ a(
            ve,
            {
              name: "attributes.cibaExpiresIn",
              type: "number",
              min: Rd,
              max: Ad,
              label: r("cibaExpiresIn"),
              labelIcon: r("cibaExpiresInHelp"),
              rules: {
                min: {
                  value: Rd,
                  message: r("greaterThan", {
                    value: Rd
                  })
                },
                max: {
                  value: Ad,
                  message: r("lessThan", { value: Ad })
                },
                required: {
                  value: !0,
                  message: r("required")
                }
              }
            }
          ),
          /* @__PURE__ */ a(
            ve,
            {
              name: "attributes.cibaInterval",
              type: "number",
              min: Rd,
              max: Ad,
              label: r("cibaInterval"),
              labelIcon: r("cibaIntervalHelp"),
              rules: {
                min: {
                  value: MC,
                  message: r("greaterThan", {
                    value: MC
                  })
                },
                max: {
                  value: FC,
                  message: r("lessThan", { value: FC })
                },
                required: {
                  value: !0,
                  message: r("required")
                }
              }
            }
          ),
          /* @__PURE__ */ a(
            at,
            {
              name: "attributes.cibaAuthRequestedUserHint",
              label: r("cibaAuthRequestedUserHint"),
              labelIcon: r("cibaAuthRequestedUserHintHelp"),
              options: ["login_hint", "id_token_hint", "login_hint_token"],
              controller: { defaultValue: "" },
              isDisabled: !0
            }
          )
        ] }),
        /* @__PURE__ */ C(st, { children: [
          /* @__PURE__ */ a(
            z,
            {
              "data-testid": "save",
              variant: "primary",
              type: "submit",
              isDisabled: !i.formState.isValid || !i.formState.isDirty,
              children: r("save")
            }
          ),
          /* @__PURE__ */ a(
            z,
            {
              "data-testid": "reload",
              variant: xe.link,
              onClick: () => c({ ...e }),
              children: r("reload")
            }
          )
        ] })
      ]
    }
  ) });
}, $l = [
  { unit: "second", label: "times.seconds", multiplier: 1 },
  { unit: "minute", label: "times.minutes", multiplier: 60 },
  { unit: "hour", label: "times.hours", multiplier: 3600 },
  { unit: "day", label: "times.days", multiplier: 86400 }
], Xk = (e, t = 0) => e.reduce(
  (n, r) => t % r.multiplier === 0 && n.multiplier < r.multiplier ? r : n,
  e[0]
), cz = (e, t) => {
  const n = Xk($l, e);
  return new Intl.NumberFormat(t, {
    style: "unit",
    unit: n.unit,
    unitDisplay: "long"
  }).format(e / n.multiplier);
}, cn = ({
  value: e,
  units: t = ["second", "minute", "hour", "day"],
  onChange: n,
  className: r,
  min: i,
  menuAppendTo: s,
  ...o
}) => {
  const { t: l } = H(), [c, d] = N(), u = et(
    () => $l.find((w) => w.unit === t[0])?.multiplier,
    [t]
  ), [p, m] = N(""), [f, g] = N(u), [b, v] = N(!1), y = et(() => {
    const w = t.map(
      (R) => $l.find((S) => S.unit === R)
    );
    return !w.every((R) => R.multiplier === f) && w[0] !== $l[0] && w.unshift($l[0]), w;
  }, [t, f]);
  He(() => {
    const w = Xk(y, e).multiplier;
    e ? (g(w), m(e / w), d(w)) : (m(e || ""), g(c ?? u), d(c ?? u));
  }, [e, u]);
  const x = (w, R = f) => {
    w !== "" ? (n?.(w * (R || 1)), m(w)) : n?.("");
  };
  return /* @__PURE__ */ C(Jn, { hasGutter: !0, className: r, children: [
    /* @__PURE__ */ a(Dt, { children: /* @__PURE__ */ a(
      mt,
      {
        ...o,
        type: "number",
        "aria-label": "kc-time",
        min: i || 0,
        value: p,
        className: `${r}-input`,
        onChange: (w, R) => {
          x(R === "" ? R : parseInt(R));
        }
      }
    ) }),
    /* @__PURE__ */ a(Dt, { id: `${r}-select-menu`, children: /* @__PURE__ */ a(
      ft,
      {
        variant: pt.single,
        "aria-label": l("unitLabel"),
        className: `${r}-select`,
        onSelect: (w) => {
          g(w), x(p, w), v(!1);
        },
        menuAppendTo: s,
        selections: f,
        onToggle: () => {
          v(!b);
        },
        isOpen: b,
        isDisabled: o.isDisabled,
        children: y.map((w) => /* @__PURE__ */ a(
          _e,
          {
            id: w.label,
            value: w.multiplier,
            children: l(w.label)
          },
          w.label
        ))
      }
    ) })
  ] });
}, gl = ({
  name: e,
  label: t,
  controller: n,
  labelIcon: r,
  ...i
}) => {
  const {
    control: s,
    formState: { errors: o }
  } = Le(), l = o[e];
  return /* @__PURE__ */ C(
    se,
    {
      isRequired: n.rules?.required === !0,
      label: t || e,
      fieldId: e,
      labelIcon: r ? /* @__PURE__ */ a(le, { helpText: r, fieldLabelId: e }) : void 0,
      children: [
        /* @__PURE__ */ a(
          ge,
          {
            ...n,
            name: e,
            control: s,
            render: ({ field: c }) => /* @__PURE__ */ a(
              cn,
              {
                ...i,
                id: e,
                "data-testid": e,
                value: c.value,
                onChange: c.onChange,
                validated: l ? Pn.error : Pn.default
              }
            )
          }
        ),
        l && /* @__PURE__ */ a(En, { message: l.message })
      ]
    }
  );
}, uo = ["totp", "hotp"], $C = ["SHA1", "SHA256", "SHA512"], jC = [6, 8], dz = ({ realm: e, realmUpdated: t }) => {
  const { adminClient: n } = pe(), { t: r } = H(), i = Ue({ mode: "onChange", defaultValues: e }), {
    control: s,
    reset: o,
    handleSubmit: l,
    formState: { isValid: c, isDirty: d }
  } = i, { realm: u } = be(), { addAlert: p, addError: m } = Se(), f = pa(), g = nt({
    name: "otpPolicyType",
    control: s,
    defaultValue: uo[0]
  }), b = (x) => o(x);
  He(() => b(e), []);
  const v = et(() => {
    const x = (e.otpSupportedApplications ?? []).map(
      (w) => r(`otpSupportedApplications.${w}`)
    );
    return f(x, (w) => w);
  }, [e.otpSupportedApplications]);
  return /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ a(
    Fe,
    {
      role: "manage-realm",
      isHorizontal: !0,
      onSubmit: l(async (x) => {
        try {
          await n.realms.update({ realm: u }, x);
          const w = await n.realms.findOne({
            realm: u
          });
          t(w), b(w), p(r("updateOtpSuccess"), ue.success);
        } catch (w) {
          m("updateOtpError", w);
        }
      }),
      className: "keycloak__otp_policies_authentication__form",
      children: /* @__PURE__ */ C(Ve, { ...i, children: [
        /* @__PURE__ */ a(
          se,
          {
            label: r("otpType"),
            labelIcon: /* @__PURE__ */ a(le, { helpText: r("otpTypeHelp"), fieldLabelId: "otpType" }),
            hasNoPaddingTop: !0,
            children: /* @__PURE__ */ a(
              ge,
              {
                name: "otpPolicyType",
                "data-testid": "otpPolicyType",
                defaultValue: uo[0],
                control: s,
                render: ({ field: x }) => /* @__PURE__ */ a(ee, { children: uo.map((w) => /* @__PURE__ */ a(
                  sn,
                  {
                    id: w,
                    "data-testid": w,
                    isChecked: x.value === w,
                    name: "otpPolicyType",
                    onChange: () => x.onChange(w),
                    label: r(`policyType.${w}`),
                    className: "keycloak__otp_policies_authentication__policy-type"
                  },
                  w
                )) })
              }
            )
          }
        ),
        /* @__PURE__ */ a(
          at,
          {
            name: "otpPolicyAlgorithm",
            label: r("otpHashAlgorithm"),
            labelIcon: r("otpHashAlgorithmHelp"),
            options: $C.map((x) => ({
              key: `Hmac${x}`,
              value: x
            })),
            controller: { defaultValue: `Hmac${$C[0]}` }
          }
        ),
        /* @__PURE__ */ a(
          se,
          {
            label: r("otpPolicyDigits"),
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: r("otpPolicyDigitsHelp"),
                fieldLabelId: "otpPolicyDigits"
              }
            ),
            hasNoPaddingTop: !0,
            children: /* @__PURE__ */ a(
              ge,
              {
                name: "otpPolicyDigits",
                "data-testid": "otpPolicyDigits",
                defaultValue: jC[0],
                control: s,
                render: ({ field: x }) => /* @__PURE__ */ a(ee, { children: jC.map((w) => /* @__PURE__ */ a(
                  sn,
                  {
                    id: `digit-${w}`,
                    "data-testid": `digit-${w}`,
                    isChecked: x.value === w,
                    name: "otpPolicyDigits",
                    onChange: () => x.onChange(w),
                    label: w,
                    className: "keycloak__otp_policies_authentication__number-of-digits"
                  },
                  w
                )) })
              }
            )
          }
        ),
        /* @__PURE__ */ a(
          es,
          {
            name: "otpPolicyLookAheadWindow",
            label: r("lookAround"),
            labelIcon: r("lookAroundHelp"),
            controller: { defaultValue: 1, rules: { min: 0 } }
          }
        ),
        g === uo[0] && /* @__PURE__ */ a(
          gl,
          {
            name: "otpPolicyPeriod",
            label: r("otpPolicyPeriod"),
            labelIcon: r("otpPolicyPeriodHelp"),
            units: ["second", "minute"],
            controller: {
              defaultValue: 30,
              rules: {
                min: 1,
                max: {
                  value: 120,
                  message: r("maxLength", { length: "2 " + r("minutes") })
                }
              }
            }
          }
        ),
        g === uo[1] && /* @__PURE__ */ a(
          es,
          {
            name: "otpPolicyInitialCounter",
            label: r("initialCounter"),
            labelIcon: r("initialCounterHelp"),
            controller: { defaultValue: 30, rules: { min: 1, max: 120 } }
          }
        ),
        /* @__PURE__ */ a(
          se,
          {
            label: r("supportedApplications"),
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: r("supportedApplicationsHelp"),
                fieldLabelId: "supportedApplications"
              }
            ),
            children: /* @__PURE__ */ a("span", { "data-testid": "supportedApplications", children: /* @__PURE__ */ a(vn, { children: v.map((x) => /* @__PURE__ */ a(Ut, { isReadOnly: !0, children: x }, x)) }) })
          }
        ),
        g === uo[0] && /* @__PURE__ */ a(
          Qs,
          {
            name: "otpPolicyCodeReusable",
            label: r("otpPolicyCodeReusable"),
            labelIcon: r("otpPolicyCodeReusableHelp"),
            labelOn: r("on"),
            labelOff: r("off")
          }
        ),
        /* @__PURE__ */ C(st, { children: [
          /* @__PURE__ */ a(
            z,
            {
              "data-testid": "save",
              variant: "primary",
              type: "submit",
              isDisabled: !c || !d,
              children: r("save")
            }
          ),
          /* @__PURE__ */ a(
            z,
            {
              "data-testid": "reload",
              variant: xe.link,
              onClick: () => o({ ...e }),
              children: r("reload")
            }
          )
        ] })
      ] })
    }
  ) });
}, uz = ({
  policy: { id: e, configType: t, defaultValue: n, displayName: r },
  onRemove: i
}) => {
  const { t: s } = H(), {
    control: o,
    register: l,
    formState: { errors: c }
  } = Le(), d = c[e];
  return /* @__PURE__ */ C(
    se,
    {
      label: r,
      fieldId: e,
      isRequired: !0,
      labelIcon: /* @__PURE__ */ a(
        le,
        {
          helpText: s(`passwordPoliciesHelp.${e}`),
          fieldLabelId: e
        }
      ),
      children: [
        /* @__PURE__ */ C(Jn, { children: [
          /* @__PURE__ */ C(Dt, { isFilled: !0, children: [
            t && t !== "int" && /* @__PURE__ */ a(
              mt,
              {
                id: e,
                "data-testid": e,
                ...l(e, { required: !0 }),
                defaultValue: n,
                validated: d ? Pn.error : Pn.default
              }
            ),
            t === "int" && /* @__PURE__ */ a(
              ge,
              {
                name: e,
                defaultValue: Number.parseInt(n || "0"),
                control: o,
                render: ({ field: u }) => {
                  const m = (g) => u.onChange(Math.max(g, 0)), f = Number(u.value);
                  return /* @__PURE__ */ a(
                    is,
                    {
                      id: e,
                      value: f,
                      min: 0,
                      onPlus: () => m(f + 1),
                      onMinus: () => m(f - 1),
                      onChange: (g) => {
                        const b = Number(g.currentTarget.value);
                        m(isNaN(b) ? 0 : b);
                      },
                      className: "keycloak__policies_authentication__number-field"
                    }
                  );
                }
              }
            ),
            !t && /* @__PURE__ */ a(
              Ye,
              {
                id: e,
                label: s("on"),
                labelOff: s("off"),
                isChecked: !0,
                isDisabled: !0,
                "aria-label": r
              }
            )
          ] }),
          /* @__PURE__ */ a(Dt, { children: /* @__PURE__ */ a(
            z,
            {
              "data-testid": `remove-${e}`,
              variant: "link",
              className: "keycloak__policies_authentication__minus-icon",
              onClick: () => i(e),
              "aria-label": s("remove"),
              children: /* @__PURE__ */ a(Ni, {})
            }
          ) })
        ] }),
        d && /* @__PURE__ */ a(En, { message: s("required") })
      ]
    }
  );
}, Yk = " and ", pz = (e, t) => e.map((n) => `${n.id}(${t[n.id]})`).join(Yk), mz = (e, t) => e.split(Yk).map(fz).reduce((n, { id: r, value: i }) => {
  const s = t.find((o) => o.id === r);
  return s ? n.concat({ ...s, value: i }) : n;
}, []);
function fz(e) {
  const t = e.indexOf("(");
  if (t === -1)
    return { id: e.trim() };
  const n = e.substring(0, t).trim(), r = e.lastIndexOf(")");
  if (r === -1)
    return { id: n };
  const i = e.substring(t + 1, r).trim();
  return { id: n, value: i };
}
const BC = ({ onSelect: e, selectedPolicies: t }) => {
  const { t: n } = H(), { passwordPolicies: r } = Tt(), [i, s] = N(!1), o = et(
    () => r?.filter(
      (l) => t.find((c) => c.id === l.id) === void 0
    ),
    [t]
  );
  return /* @__PURE__ */ a(
    Bn,
    {
      onSelect: (l, c) => {
        e(c), s(!1);
      },
      toggle: (l) => /* @__PURE__ */ a(
        yt,
        {
          ref: l,
          onClick: () => s(!i),
          isExpanded: i,
          isDisabled: o?.length === 0,
          style: { width: "300px" },
          "data-testid": "add-policy",
          children: n("addPolicy")
        }
      ),
      isOpen: i,
      children: /* @__PURE__ */ a(ia, { children: o?.map((l) => /* @__PURE__ */ a(_e, { value: l, children: l.displayName }, l.id)) })
    }
  );
}, hz = ({
  realm: e,
  realmUpdated: t
}) => {
  const { adminClient: n } = pe(), { t: r } = H(), { passwordPolicies: i } = Tt(), { addAlert: s, addError: o } = Se(), { realm: l } = be(), [c, d] = N([]), u = (x) => {
    d([...c, x]), f(x.id, x.defaultValue, { shouldDirty: !0 });
  }, p = Ue({
    defaultValues: {}
  }), {
    handleSubmit: m,
    setValue: f,
    reset: g,
    formState: { isDirty: b }
  } = p, v = (x) => {
    g();
    const w = mz(x.passwordPolicy || "", i);
    w.forEach((R) => {
      f(R.id, R.value);
    }), d(w);
  };
  He(() => v(e), []);
  const y = async (x) => {
    const w = {
      ...e,
      passwordPolicy: pz(c, x)
    };
    try {
      await n.realms.update({ realm: l }, w), t(w), v(w), s(r("updatePasswordPolicySuccess"), ue.success);
    } catch (R) {
      o("updatePasswordPolicyError", R);
    }
  };
  return /* @__PURE__ */ C(Te, { variant: "light", className: "pf-v5-u-p-0", children: [
    (c.length !== 0 || e.passwordPolicy) && /* @__PURE__ */ C(ee, { children: [
      /* @__PURE__ */ a(Sa, { children: /* @__PURE__ */ a(rr, { children: /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(BC, { onSelect: u, selectedPolicies: c }) }) }) }),
      /* @__PURE__ */ a(_t, {}),
      /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ a(Ve, { ...p, children: /* @__PURE__ */ C(
        Fe,
        {
          className: "keycloak__policies_authentication__form",
          role: "manage-realm",
          isHorizontal: !0,
          onSubmit: m(y),
          children: [
            c.map((x, w) => /* @__PURE__ */ a(
              uz,
              {
                policy: x,
                onRemove: (R) => {
                  d(c.filter((S) => S.id !== R)), f(x.id, "", { shouldDirty: !0 });
                }
              },
              `${x.id}-${w}`
            )),
            /* @__PURE__ */ C(st, { children: [
              /* @__PURE__ */ a(
                z,
                {
                  "data-testid": "save",
                  variant: "primary",
                  type: "submit",
                  isDisabled: !b,
                  children: r("save")
                }
              ),
              /* @__PURE__ */ a(
                z,
                {
                  "data-testid": "reload",
                  variant: xe.link,
                  onClick: () => v(e),
                  children: r("reload")
                }
              )
            ] })
          ]
        }
      ) }) })
    ] }),
    !c.length && !e.passwordPolicy && /* @__PURE__ */ C(Sr, { "data-testid": "empty-state", variant: "lg", children: [
      /* @__PURE__ */ a(
        ki,
        {
          titleText: /* @__PURE__ */ a(ee, { children: r("noPasswordPolicies") }),
          icon: /* @__PURE__ */ a(Ns, { icon: Ea }),
          headingLevel: "h1"
        }
      ),
      /* @__PURE__ */ a(Ri, { children: r("noPasswordPoliciesInstructions") }),
      /* @__PURE__ */ a(rs, { children: /* @__PURE__ */ a(xo, { children: /* @__PURE__ */ a(BC, { onSelect: u, selectedPolicies: [] }) }) })
    ] })
  ] });
}, gz = [
  "ES256",
  "ES384",
  "ES512",
  "RS256",
  "RS384",
  "RS512",
  "Ed25519",
  "RS1"
], bz = [
  "not specified",
  "none",
  "indirect",
  "direct"
], vz = [
  "not specified",
  "platform",
  "cross-platform"
], yz = ["not specified", "Yes", "No"], Cz = [
  "not specified",
  "required",
  "preferred",
  "discouraged"
], Al = ({
  name: e,
  label: t,
  options: n,
  labelPrefix: r,
  isMultiSelect: i = !1
}) => {
  const { t: s } = H();
  return /* @__PURE__ */ a(
    at,
    {
      name: e,
      label: s(t),
      variant: i ? "typeaheadMulti" : "single",
      controller: { defaultValue: n[0] },
      options: n.map((o) => ({
        key: o,
        value: r ? s(`${r}.${o}`) : o
      }))
    }
  );
}, UC = ({
  realm: e,
  realmUpdated: t,
  isPasswordLess: n = !1
}) => {
  const { adminClient: r } = pe(), { t: i } = H(), { addAlert: s, addError: o } = Se(), { realm: l } = be(), { enabled: c } = Pr(), d = Ue({ mode: "onChange" }), {
    setValue: u,
    handleSubmit: p,
    formState: { isDirty: m }
  } = d, f = n ? "webAuthnPolicyPasswordless" : "webAuthnPolicy", g = (v) => In(v, u);
  He(() => g(e), []);
  const b = async (v) => {
    const y = Zn(v);
    try {
      await r.realms.update({ realm: l }, y), t(y), g(y), s(i("webAuthnUpdateSuccess"), ue.success);
    } catch (x) {
      o("webAuthnUpdateError", x);
    }
  };
  return /* @__PURE__ */ C(Te, { variant: "light", children: [
    c && /* @__PURE__ */ a(Or, { bodyContent: i(`${f}FormHelp`), children: /* @__PURE__ */ a(Pt, { className: "keycloak__section_intro__help", children: /* @__PURE__ */ C(tt, { children: [
      /* @__PURE__ */ a(Yc, {}),
      " ",
      i("webauthnIntro")
    ] }) }) }),
    /* @__PURE__ */ C(
      Fe,
      {
        role: "manage-realm",
        isHorizontal: !0,
        onSubmit: p(b),
        className: "keycloak__webauthn_policies_authentication__form",
        children: [
          /* @__PURE__ */ C(Ve, { ...d, children: [
            /* @__PURE__ */ a(
              ve,
              {
                name: `${f}RpEntityName`,
                label: i("webAuthnPolicyRpEntityName"),
                labelIcon: i("webAuthnPolicyRpEntityNameHelp"),
                rules: { required: { value: !0, message: i("required") } }
              }
            ),
            /* @__PURE__ */ a(
              Al,
              {
                name: `${f}SignatureAlgorithms`,
                label: "webAuthnPolicySignatureAlgorithms",
                options: gz,
                isMultiSelect: !0
              }
            ),
            /* @__PURE__ */ a(
              ve,
              {
                name: `${f}RpId`,
                label: i("webAuthnPolicyRpId"),
                labelIcon: i("webAuthnPolicyRpIdHelp")
              }
            ),
            /* @__PURE__ */ a(
              Al,
              {
                name: `${f}AttestationConveyancePreference`,
                label: "webAuthnPolicyAttestationConveyancePreference",
                options: bz,
                labelPrefix: "attestationPreference"
              }
            ),
            /* @__PURE__ */ a(
              Al,
              {
                name: `${f}AuthenticatorAttachment`,
                label: "webAuthnPolicyAuthenticatorAttachment",
                options: vz,
                labelPrefix: "authenticatorAttachment"
              }
            ),
            /* @__PURE__ */ a(
              Al,
              {
                name: `${f}RequireResidentKey`,
                label: "webAuthnPolicyRequireResidentKey",
                options: yz,
                labelPrefix: "residentKey"
              }
            ),
            /* @__PURE__ */ a(
              Al,
              {
                name: `${f}UserVerificationRequirement`,
                label: "webAuthnPolicyUserVerificationRequirement",
                options: Cz,
                labelPrefix: "userVerify"
              }
            ),
            /* @__PURE__ */ a(
              gl,
              {
                name: `${f}CreateTimeout`,
                label: i("webAuthnPolicyCreateTimeout"),
                labelIcon: i("otpPolicyPeriodHelp"),
                units: ["second", "minute", "hour"],
                controller: {
                  defaultValue: 0,
                  rules: {
                    min: 0,
                    max: {
                      value: 31536,
                      message: i("webAuthnPolicyCreateTimeoutHint")
                    }
                  }
                }
              }
            ),
            /* @__PURE__ */ a(
              Qs,
              {
                name: `${f}AvoidSameAuthenticatorRegister`,
                label: i("webAuthnPolicyAvoidSameAuthenticatorRegister"),
                labelIcon: i("webAuthnPolicyAvoidSameAuthenticatorRegisterHelp"),
                labelOn: i("on"),
                labelOff: i("off")
              }
            ),
            /* @__PURE__ */ a(
              se,
              {
                label: i("webAuthnPolicyAcceptableAaguids"),
                fieldId: "webAuthnPolicyAcceptableAaguids",
                labelIcon: /* @__PURE__ */ a(
                  le,
                  {
                    helpText: i("webAuthnPolicyAcceptableAaguidsHelp"),
                    fieldLabelId: "webAuthnPolicyAcceptableAaguids"
                  }
                ),
                children: /* @__PURE__ */ a(
                  yr,
                  {
                    name: `${f}AcceptableAaguids`,
                    "aria-label": i("webAuthnPolicyAcceptableAaguids"),
                    addButtonLabel: "addAaguids"
                  }
                )
              }
            ),
            /* @__PURE__ */ a(
              se,
              {
                label: i("webAuthnPolicyExtraOrigins"),
                fieldId: "webAuthnPolicyExtraOrigins",
                labelIcon: /* @__PURE__ */ a(
                  le,
                  {
                    helpText: i("webAuthnPolicyExtraOriginsHelp"),
                    fieldLabelId: "webAuthnPolicyExtraOrigins"
                  }
                ),
                children: /* @__PURE__ */ a(
                  yr,
                  {
                    name: `${f}ExtraOrigins`,
                    "aria-label": i("webAuthnPolicyExtraOrigins"),
                    addButtonLabel: "addOrigins"
                  }
                )
              }
            )
          ] }),
          /* @__PURE__ */ C(st, { children: [
            /* @__PURE__ */ a(
              z,
              {
                "data-testid": "save",
                variant: "primary",
                type: "submit",
                isDisabled: !m,
                children: i("save")
              }
            ),
            /* @__PURE__ */ a(
              z,
              {
                "data-testid": "reload",
                variant: xe.link,
                onClick: () => g(e),
                children: i("reload")
              }
            )
          ] })
        ]
      }
    )
  ] });
}, xz = () => {
  const { adminClient: e } = pe(), { t } = H(), [n, r] = N(1), { realm: i } = be(), [s, o] = N();
  return Re(
    async () => {
      const l = await e.realms.findOne({ realm: i });
      if (!l)
        throw new Error(t("notFound"));
      return l;
    },
    (l) => {
      o(l);
    },
    []
  ), s ? /* @__PURE__ */ C(
    Ua,
    {
      activeKey: n,
      onSelect: (l, c) => r(c),
      mountOnEnter: !0,
      unmountOnExit: !0,
      children: [
        /* @__PURE__ */ a(
          Ee,
          {
            id: "passwordPolicy",
            eventKey: 1,
            title: /* @__PURE__ */ a(Ie, { children: t("passwordPolicy") }),
            children: /* @__PURE__ */ a(hz, { realm: s, realmUpdated: o })
          }
        ),
        /* @__PURE__ */ a(
          Ee,
          {
            id: "otpPolicy",
            eventKey: 2,
            title: /* @__PURE__ */ a(Ie, { children: t("otpPolicy") }),
            children: /* @__PURE__ */ a(dz, { realm: s, realmUpdated: o })
          }
        ),
        /* @__PURE__ */ a(
          Ee,
          {
            id: "webauthnPolicy",
            eventKey: 3,
            title: /* @__PURE__ */ a(Ie, { children: t("webauthnPolicy") }),
            children: /* @__PURE__ */ a(UC, { realm: s, realmUpdated: o })
          }
        ),
        /* @__PURE__ */ a(
          Ee,
          {
            id: "webauthnPasswordlessPolicy",
            eventKey: 4,
            title: /* @__PURE__ */ a(Ie, { children: t("webauthnPasswordlessPolicy") }),
            children: /* @__PURE__ */ a(UC, { realm: s, realmUpdated: o, isPasswordLess: !0 })
          }
        ),
        /* @__PURE__ */ a(
          Ee,
          {
            "data-testid": "tab-ciba-policy",
            eventKey: 5,
            title: /* @__PURE__ */ a(Ie, { children: t("cibaPolicy") }),
            children: /* @__PURE__ */ a(lz, { realm: s, realmUpdated: o })
          }
        )
      ]
    }
  ) : /* @__PURE__ */ a(gt, {});
}, Sz = Be(() => Promise.resolve().then(() => Ez)), Bg = {
  path: "/:realm/authentication",
  element: /* @__PURE__ */ a(Sz, {}),
  breadcrumb: (e) => e("authentication"),
  handle: {
    access: ["view-realm", "view-identity-providers", "view-clients"]
  }
}, Jk = {
  ...Bg,
  path: "/:realm/authentication/:tab"
}, VC = (e) => {
  const t = e.tab ? Jk.path : Bg.path;
  return {
    pathname: We(t, e)
  };
}, wz = Be(() => import("./CreateFlow-BrgtRtoO.js")), Zk = {
  path: "/:realm/authentication/flows/create",
  element: /* @__PURE__ */ a(wz, {}),
  breadcrumb: (e) => e("createFlow"),
  handle: {
    access: "manage-authorization"
  }
}, kz = (e) => ({
  pathname: We(Zk.path, e)
}), Ru = /* @__PURE__ */ new Map([
  ["browserFlow", "browser"],
  ["registrationFlow", "registration"],
  ["directGrantFlow", "direct grant"],
  ["resetCredentialsFlow", "reset credentials"],
  ["clientAuthenticationFlow", "clients"],
  ["dockerAuthenticationFlow", "docker auth"],
  ["firstBrokerLoginFlow", "firstBrokerLogin"]
]), Oz = ({ id: e, alias: t, usedBy: n, builtIn: r }) => {
  const { t: i } = H(), { realm: s } = be();
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(
      Ae,
      {
        to: $g({
          realm: s,
          id: e,
          usedBy: n?.type || "notInUse",
          builtIn: r ? "builtIn" : void 0
        }),
        children: t
      },
      `link-${e}`
    ),
    " ",
    r && /* @__PURE__ */ a(pn, { children: i("buildIn") }, `label-${e}`)
  ] });
};
function Tz() {
  const { adminClient: e } = pe(), { t } = H(), { realm: n, realmRepresentation: r } = be(), [i, s] = N(0), o = () => s(i + 1), { addAlert: l, addError: c } = Se(), d = pa(), [u, p] = N(), [m, f] = ot(), [g, b] = ot(), v = async () => {
    const E = await (await Ii(
      `${os(
        e.baseUrl
      )}admin/realms/${n}/ui-ext/authentication-management/flows`,
      {
        method: "GET",
        headers: no(await e.getAccessToken())
      }
    )).json();
    return E ? zr(
      d(E, or("alias")),
      (T) => T.usedBy?.type
    ) : [];
  }, y = (O) => jn(VC({ realm: n, tab: O })), x = y("flows"), w = y("required-actions"), R = y("policies"), [S, _] = ze({
    titleKey: "deleteConfirmFlow",
    children: /* @__PURE__ */ C(ns, { i18nKey: "deleteConfirmFlowMessage", children: [
      " ",
      /* @__PURE__ */ a("strong", { children: { flow: u ? u.alias : "" } }),
      "."
    ] }),
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        await e.authenticationManagement.deleteFlow({
          flowId: u.id
        }), o(), l(t("deleteFlowSuccess"), ue.success);
      } catch (O) {
        c("deleteFlowError", O);
      }
    }
  });
  return r ? /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(_, {}),
    m && /* @__PURE__ */ a(
      QH,
      {
        name: u ? u.alias : "",
        description: u?.description,
        toggleDialog: f,
        onComplete: () => {
          o(), f();
        }
      }
    ),
    g && /* @__PURE__ */ a(
      YH,
      {
        onClose: () => {
          b(), o();
        },
        flowAlias: u?.alias
      }
    ),
    /* @__PURE__ */ a(
      wt,
      {
        titleKey: "titleAuthentication",
        subKey: "authenticationExplain",
        helpUrl: na.authenticationUrl,
        divider: !1
      }
    ),
    /* @__PURE__ */ a(Te, { variant: "light", className: "pf-v5-u-p-0", children: /* @__PURE__ */ C(
      $n,
      {
        isBox: !0,
        defaultLocation: VC({ realm: n, tab: "flows" }),
        children: [
          /* @__PURE__ */ a(
            Ee,
            {
              "data-testid": "flows",
              title: /* @__PURE__ */ a(Ie, { children: t("flows") }),
              ...x,
              children: /* @__PURE__ */ a(
                St,
                {
                  loader: v,
                  ariaLabelKey: "titleAuthentication",
                  searchPlaceholderKey: "searchForFlow",
                  toolbarItem: /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(
                    z,
                    {
                      component: (O) => /* @__PURE__ */ a(
                        Ae,
                        {
                          ...O,
                          to: kz({ realm: n })
                        }
                      ),
                      children: t("createFlow")
                    }
                  ) }),
                  actionResolver: ({ data: O }) => [
                    {
                      title: t("duplicate"),
                      onClick: () => {
                        f(), p(O);
                      }
                    },
                    ...O.usedBy?.type !== "DEFAULT" ? [
                      {
                        title: t("bindFlow"),
                        onClick: () => {
                          b(), p(O);
                        }
                      }
                    ] : [],
                    ...!O.builtIn && !O.usedBy ? [
                      {
                        title: t("delete"),
                        onClick: () => {
                          p(O), S();
                        }
                      }
                    ] : []
                  ],
                  columns: [
                    {
                      name: "alias",
                      displayKey: "flowName",
                      cellRenderer: (O) => /* @__PURE__ */ a(Oz, { ...O })
                    },
                    {
                      name: "usedBy",
                      displayKey: "usedBy",
                      cellRenderer: (O) => /* @__PURE__ */ a(rz, { authType: O })
                    },
                    {
                      name: "description",
                      displayKey: "description"
                    }
                  ],
                  emptyState: /* @__PURE__ */ a(
                    ct,
                    {
                      message: t("emptyEvents"),
                      instructions: t("emptyEventsInstructions")
                    }
                  )
                },
                i
              )
            }
          ),
          /* @__PURE__ */ a(
            Ee,
            {
              "data-testid": "requiredActions",
              title: /* @__PURE__ */ a(Ie, { children: t("requiredActions") }),
              ...w,
              children: /* @__PURE__ */ a(tz, {})
            }
          ),
          /* @__PURE__ */ a(
            Ee,
            {
              "data-testid": "policies",
              title: /* @__PURE__ */ a(Ie, { children: t("policies") }),
              ...R,
              children: /* @__PURE__ */ a(xz, {})
            }
          )
        ]
      }
    ) })
  ] }) : /* @__PURE__ */ a(gt, {});
}
const Ez = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  REALM_FLOWS: Ru,
  default: Tz
}, Symbol.toStringTag, { value: "Module" })), Iz = (e) => {
  const { t } = H(), n = Tt(), r = e.protocol, i = n.protocolMapperTypes[r], s = n.builtinProtocolMappers[r], [o, l] = N([]), [c, d] = N([]), u = pa(), p = et(
    () => u(s, or("name")).map((y) => {
      const x = i.filter(
        (w) => w.id === y.protocolMapper
      )[0];
      return {
        item: y,
        id: y.name,
        description: x.helpText
      };
    }),
    [s, i]
  ), [m, f] = N(p);
  if (e.filter && e.filter.length !== o.length) {
    l(e.filter);
    const y = e.filter.map((x) => x.name);
    f([...p.filter((x) => !y.includes(x.item.name))]);
  }
  const g = et(
    () => u(i, or("name")),
    [i]
  ), b = !!e.filter, v = [t("name"), t("description")];
  return /* @__PURE__ */ C(
    ht,
    {
      "aria-label": t(b ? "addPredefinedMappers" : "emptySecondaryAction"),
      variant: Rt.medium,
      header: /* @__PURE__ */ C(
        Pt,
        {
          role: "dialog",
          "aria-label": t(b ? "addPredefinedMappers" : "emptySecondaryAction"),
          children: [
            /* @__PURE__ */ a(tt, { component: Wt.h1, children: t(b ? "addPredefinedMappers" : "emptySecondaryAction") }),
            /* @__PURE__ */ a(tt, { children: t(b ? "predefinedMappingDescription" : "configureMappingDescription") })
          ]
        }
      ),
      isOpen: e.open,
      onClose: e.toggleDialog,
      actions: b ? [
        /* @__PURE__ */ a(
          z,
          {
            id: "modal-confirm",
            "data-testid": "confirm",
            isDisabled: m.length === 0 || c.length === 0,
            onClick: () => {
              e.onConfirm(c.map(({ item: y }) => y)), e.toggleDialog();
            },
            children: t("add")
          },
          "confirm"
        ),
        /* @__PURE__ */ a(
          z,
          {
            id: "modal-cancel",
            "data-testid": "cancel",
            variant: xe.link,
            onClick: () => {
              e.toggleDialog();
            },
            children: t("cancel")
          },
          "cancel"
        )
      ] : [],
      children: [
        !b && /* @__PURE__ */ C(
          ar,
          {
            onSelectDataListItem: (y, x) => {
              const w = i.find((R) => R.id === x);
              e.onConfirm(w), e.toggleDialog();
            },
            "aria-label": t("addPredefinedMappers"),
            isCompact: !0,
            children: [
              /* @__PURE__ */ a(Ta, { "aria-label": t("headerName"), id: "header", children: /* @__PURE__ */ a(Ba, { children: /* @__PURE__ */ a(
                ja,
                {
                  dataListCells: v.map((y) => /* @__PURE__ */ a(aa, { style: { fontWeight: 700 }, children: y }, y))
                }
              ) }) }),
              g.map((y) => /* @__PURE__ */ a(
                Ta,
                {
                  "aria-label": y.name,
                  id: y.id,
                  children: /* @__PURE__ */ a(Ba, { children: /* @__PURE__ */ a(
                    ja,
                    {
                      dataListCells: [
                        /* @__PURE__ */ a(aa, { children: y.name }, `name-${y.id}`),
                        /* @__PURE__ */ a(aa, { children: y.helpText }, `helpText-${y.id}`)
                      ]
                    }
                  ) })
                },
                y.id
              ))
            ]
          }
        ),
        b && /* @__PURE__ */ a(
          St,
          {
            loader: m,
            onSelect: d,
            canSelectAll: !0,
            ariaLabelKey: "addPredefinedMappers",
            searchPlaceholderKey: "searchForMapper",
            columns: [
              {
                name: "id",
                displayKey: "name"
              },
              {
                name: "description",
                displayKey: "description"
              }
            ],
            emptyState: /* @__PURE__ */ a(
              ct,
              {
                message: t("emptyMappers"),
                instructions: t("emptyBuiltInMappersInstructions")
              }
            )
          }
        )
      ]
    }
  );
}, Pz = ({ id: e, name: t, detailLink: n }) => /* @__PURE__ */ a(Ae, { to: n(e), children: t }), Qk = ({
  model: e,
  onAdd: t,
  onDelete: n,
  detailLink: r
}) => {
  const { t: i } = H(), [s, o] = N(!1), l = e.protocolMappers, c = Tt().protocolMapperTypes[e.protocol], [d, u] = N(0);
  He(() => u(d + 1), [l]);
  const [p, m] = N(!1), [f, g] = N(e.protocolMappers), b = (y) => {
    g(y ? l || [] : void 0), m(!p);
  }, v = async () => l ? l.reduce((x, w) => {
    const R = c.find(
      ({ id: S }) => S === w.protocolMapper
    );
    return R ? x.concat({
      ...w,
      category: R.category,
      type: R.name,
      priority: R.priority
    }) : x;
  }, []).sort((x, w) => x.priority - w.priority) : [];
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(
      Iz,
      {
        protocol: e.protocol,
        filter: f,
        onConfirm: t,
        open: p,
        toggleDialog: () => m(!p)
      }
    ),
    /* @__PURE__ */ a(
      St,
      {
        loader: v,
        ariaLabelKey: "clientScopeList",
        searchPlaceholderKey: "searchForMapper",
        toolbarItem: /* @__PURE__ */ a(
          qt,
          {
            onSelect: () => o(!1),
            toggle: (y) => /* @__PURE__ */ a(
              yt,
              {
                ref: y,
                variant: "primary",
                id: "mapperAction",
                onClick: () => o(!s),
                children: i("addMapper")
              }
            ),
            isOpen: s,
            children: /* @__PURE__ */ C(Xt, { children: [
              /* @__PURE__ */ a(Ke, { onClick: () => b(!0), children: i("fromPredefinedMapper") }),
              /* @__PURE__ */ a(Ke, { onClick: () => b(!1), children: i("byConfiguration") })
            ] })
          }
        ),
        actions: [
          {
            title: i("delete"),
            onRowClick: n
          }
        ],
        columns: [
          {
            name: "name",
            cellRenderer: (y) => /* @__PURE__ */ a(Pz, { ...y, detailLink: r })
          },
          { name: "category" },
          {
            name: "type"
          },
          {
            name: "priority"
          }
        ],
        emptyState: /* @__PURE__ */ a(
          ct,
          {
            message: i("emptyMappers"),
            instructions: i("emptyMappersInstructions"),
            secondaryActions: [
              {
                text: i("emptyPrimaryAction"),
                onClick: () => b(!0)
              },
              {
                text: i("emptySecondaryAction"),
                onClick: () => b(!1)
              }
            ]
          }
        )
      },
      d
    )
  ] });
}, _z = Be(() => Promise.resolve().then(() => tW)), Ug = {
  path: "/:realm/clients/:clientId/clientScopes/dedicated",
  element: /* @__PURE__ */ a(_z, {}),
  breadcrumb: (e) => e("dedicatedScopes"),
  handle: {
    access: "view-clients"
  }
}, eO = {
  ...Ug,
  path: "/:realm/clients/:clientId/clientScopes/dedicated/:tab"
}, Au = (e) => {
  const t = e.tab ? eO.path : Ug.path;
  return {
    pathname: We(t, e)
  };
}, Rz = Be(() => Promise.resolve().then(() => Wz)), tO = {
  path: "/:realm/client-scopes/:id/:tab",
  element: /* @__PURE__ */ a(Rz, {}),
  breadcrumb: (e) => e("clientScopeDetails"),
  handle: {
    access: "view-clients"
  }
}, od = (e) => {
  const t = tO.path;
  return {
    pathname: We(t, e)
  };
}, Az = Be(() => Promise.resolve().then(() => nO)), Vg = {
  path: "/:realm/client-scopes/:id/mappers/:mapperId",
  element: /* @__PURE__ */ a(Az, {}),
  breadcrumb: (e) => e("mappingDetails"),
  handle: {
    access: "view-clients"
  }
}, KC = (e) => ({
  pathname: We(Vg.path, e)
});
function Lz() {
  const { adminClient: e } = pe(), { t } = H(), { addAlert: n, addError: r } = Se(), { id: i, mapperId: s } = Vt(), o = Ue(), { setValue: l, handleSubmit: c } = o, [d, u] = N(), [p, m] = N(), f = Je(), { realm: g } = be(), b = Tt(), v = /^[{]?[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}[}]?$/, y = !!s.match(v), x = !!Po(Vg.path), w = () => x ? od({ realm: g, id: i, tab: "mappers" }) : Au({ realm: g, clientId: i, tab: "mappers" });
  Re(
    async () => {
      let O;
      if (y) {
        if (x ? O = await e.clientScopes.findProtocolMapper({
          id: i,
          mapperId: s
        }) : O = await e.clients.findProtocolMapperById({
          id: i,
          mapperId: s
        }), !O)
          throw new Error(t("notFound"));
        const T = b.protocolMapperTypes[O.protocol].find(
          (I) => I.id === O.protocolMapper
        );
        return {
          config: {
            protocol: O.protocol,
            protocolMapper: O.protocolMapper
          },
          mapping: T,
          data: O
        };
      } else {
        const E = x ? await e.clientScopes.findOne({ id: i }) : await e.clients.findOne({ id: i });
        if (!E)
          throw new Error(t("notFound"));
        const I = b.protocolMapperTypes[E.protocol].find(
          (k) => k.id === s
        );
        if (!I)
          throw new Error(t("notFound"));
        return {
          mapping: I,
          config: {
            protocol: E.protocol,
            protocolMapper: s
          }
        };
      }
    },
    ({ config: O, mapping: E, data: T }) => {
      m(O), u(E), T && In(T, l);
    },
    []
  );
  const [R, S] = ze({
    titleKey: "deleteMappingTitle",
    messageKey: "deleteMappingConfirm",
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        x ? await e.clientScopes.delProtocolMapper({
          id: i,
          mapperId: s
        }) : await e.clients.delProtocolMapper({
          id: i,
          mapperId: s
        }), n(t("mappingDeletedSuccess"), ue.success), f(w());
      } catch (O) {
        r("mappingDeletedError", O);
      }
    }
  }), _ = async (O) => {
    const E = y ? "Updated" : "Created";
    try {
      const T = { ...p, ...Zn(O) };
      y ? x ? await e.clientScopes.updateProtocolMapper(
        { id: i, mapperId: s },
        { id: s, ...T }
      ) : await e.clients.updateProtocolMapper(
        { id: i, mapperId: s },
        { id: s, ...T }
      ) : x ? await e.clientScopes.addProtocolMapper({ id: i }, T) : await e.clients.addProtocolMapper({ id: i }, T), n(t(`mapping${E}Success`), ue.success);
    } catch (T) {
      r(`mapping${E}Error`, T);
    }
  };
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(S, {}),
    /* @__PURE__ */ a(
      wt,
      {
        titleKey: y ? d?.name : t("addMapper"),
        subKey: y ? s : "addMapperExplain",
        dropdownItems: y ? [
          /* @__PURE__ */ a(
            Ke,
            {
              value: "delete",
              onClick: R,
              children: t("delete")
            },
            "delete"
          )
        ] : void 0
      }
    ),
    /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ a(Ve, { ...o, children: /* @__PURE__ */ C(
      Fe,
      {
        isHorizontal: !0,
        onSubmit: c(_),
        role: "manage-clients",
        children: [
          /* @__PURE__ */ a(se, { label: t("mapperType"), fieldId: "mapperType", children: /* @__PURE__ */ a(
            mt,
            {
              type: "text",
              id: "mapperType",
              name: "mapperType",
              readOnlyVariant: "default",
              value: d?.name
            }
          ) }),
          /* @__PURE__ */ a(
            ve,
            {
              name: "name",
              label: t("name"),
              labelIcon: t("mapperNameHelp"),
              readOnlyVariant: y ? "default" : void 0,
              rules: { required: { value: !0, message: t("required") } }
            }
          ),
          /* @__PURE__ */ a(
            ur,
            {
              properties: d?.properties || [],
              isNew: !y
            }
          ),
          /* @__PURE__ */ C(st, { children: [
            /* @__PURE__ */ a(z, { variant: "primary", type: "submit", children: t("save") }),
            /* @__PURE__ */ a(
              z,
              {
                variant: "link",
                component: (O) => /* @__PURE__ */ a(Ae, { ...O, to: w() }),
                children: t("cancel")
              }
            )
          ] })
        ]
      }
    ) }) })
  ] });
}
const nO = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Lz
}, Symbol.toStringTag, { value: "Module" })), nc = (e) => e.attributes?.realm_client === "true", bl = (e, t) => {
  switch (t) {
    case "openid-connect":
      return e("protocolTypes.openid-connect");
    case "saml":
      return e("protocolTypes.saml");
    case "oid4vc":
      return e("protocolTypes.oid4vc");
    default:
      return t;
  }
}, aO = [
  {
    key: "custom",
    name: "Custom Attribute...",
    custom: !0
  },
  {
    key: "kc.identity.authc.method",
    name: "Authentication Method",
    values: [
      {
        key: "pwd",
        name: "Password"
      },
      {
        key: "otp",
        name: "One-Time Password"
      },
      {
        key: "kbr",
        name: "Kerberos"
      }
    ]
  },
  {
    key: "kc.realm.name",
    name: "Realm"
  },
  {
    key: "kc.time.date_time",
    name: "Date/Time (MM/dd/yyyy hh:mm:ss)"
  },
  {
    key: "kc.client.network.ip_address",
    name: "Client IPv4 Address"
  },
  {
    key: "kc.client.network.host",
    name: "Client Host"
  },
  {
    key: "kc.client.user_agent",
    name: "Client/User Agent"
  }
], bt = (e) => {
  const { t } = H();
  return /* @__PURE__ */ a(Qs, { ...e, labelOn: t("on"), labelOff: t("off") });
};
var Oi = /* @__PURE__ */ ((e) => (e.default = "default", e.optional = "optional", e))(Oi || {}), Ma = /* @__PURE__ */ ((e) => (e.none = "none", e))(Ma || {});
const Kg = Object.keys(Oi), Lu = Object.keys({
  ...Ma,
  ...Oi
}), Hg = (e, t = Kg) => t.map((n) => /* @__PURE__ */ a(_e, { value: n, children: e(`clientScopeType.${n}`) }, n)), Nz = (e, t) => Kg.map((n) => /* @__PURE__ */ a(Ke, { onClick: () => t(n), children: e(`clientScopeType.${n}`) }, n)), rO = ({
  clientScope: e,
  type: t,
  onSelect: n,
  all: r = !1,
  isDisabled: i,
  ...s
}) => {
  const { t: o } = H(), [l, c] = N(!1);
  return /* @__PURE__ */ a(
    Bn,
    {
      toggle: (d) => /* @__PURE__ */ a(
        yt,
        {
          "data-testid": "cell-dropdown",
          className: `keycloak__client-scope__${t}`,
          ref: d,
          onClick: () => c(!l),
          isExpanded: l,
          isDisabled: i,
          children: o(`clientScopeType.${t}`)
        }
      ),
      isOpen: l,
      selected: [t],
      onSelect: (d, u) => {
        n(
          u
        ), c(!1);
      },
      ...s,
      children: Hg(
        o,
        r ? Lu : Kg
      )
    },
    e.id
  );
}, Ep = async (e, t, n) => {
  await sO(e, t), await Dz(e, t, n);
}, iO = (e) => e.clientScopes, sO = async (e, t) => {
  t.type !== "none" && await iO(e)[`delDefault${t.type === "optional" ? "Optional" : ""}ClientScope`]({
    id: t.id
  });
}, Dz = async (e, t, n) => {
  n !== "none" && await iO(e)[`addDefault${n === "optional" ? "Optional" : ""}ClientScope`]({
    id: t.id
  });
}, oO = async (e, t, n, r, i) => {
  r !== "none" && await Zf(e, t, n, r), await lO(e, t, n, i);
}, Zf = async (e, t, n, r) => {
  const i = `del${wa(r)}ClientScope`;
  await e.clients[i]({
    id: t,
    clientScopeId: n.id
  });
}, lO = async (e, t, n, r) => {
  const i = `add${wa(r)}ClientScope`;
  await e.clients[i]({
    id: t,
    clientScopeId: n.id
  });
}, Mz = Be(() => Promise.resolve().then(() => Hz)), cO = {
  path: "/:realm/client-scopes",
  element: /* @__PURE__ */ a(Mz, {}),
  breadcrumb: (e) => e("clientScopeList"),
  handle: {
    access: "view-clients"
  }
}, dO = (e) => ({
  pathname: We(cO.path, e)
}), uO = ({ clientScope: e, save: t }) => {
  const { t: n } = H(), r = Ue({ mode: "onChange" }), { control: i, handleSubmit: s, setValue: o, formState: l } = r, { isDirty: c, isValid: d } = l, { realm: u } = be(), p = $w(), f = oa()(zn.DynamicScopes), g = nt({
    control: i,
    name: Ne("attributes.display.on.consent.screen"),
    defaultValue: e?.attributes?.["display.on.consent.screen"] ?? "true"
  }), b = nt({
    control: i,
    name: Ne(
      "attributes.is.dynamic.scope"
    ),
    defaultValue: "false"
  }), v = (y, x) => o(
    Ne(
      "attributes.dynamic.scope.regexp"
    ),
    x ? `${y}:*` : y,
    { shouldDirty: !0 }
    // Mark the field as dirty when we modify the field
  );
  return He(() => {
    In(e ?? {}, o);
  }, [e]), /* @__PURE__ */ a(
    Fe,
    {
      role: "manage-clients",
      onSubmit: s(t),
      isHorizontal: !0,
      children: /* @__PURE__ */ C(Ve, { ...r, children: [
        /* @__PURE__ */ a(
          ve,
          {
            name: "name",
            label: n("name"),
            labelIcon: n("scopeNameHelp"),
            rules: {
              required: {
                value: !0,
                message: n("required")
              },
              onChange: (y) => {
                f && v(y.target.validated, !0);
              }
            }
          }
        ),
        f && /* @__PURE__ */ C(ee, { children: [
          /* @__PURE__ */ a(
            bt,
            {
              name: Ne(
                "attributes.is.dynamic.scope"
              ),
              label: n("dynamicScope"),
              labelIcon: n("dynamicScopeHelp"),
              onChange: (y, x) => {
                v(
                  x && r.getValues("name") || "",
                  x
                );
              },
              stringify: !0
            }
          ),
          b === "true" && /* @__PURE__ */ a(
            ve,
            {
              name: Ne(
                "attributes.dynamic.scope.regexp"
              ),
              label: n("dynamicScopeFormat"),
              labelIcon: n("dynamicScopeFormatHelp"),
              isDisabled: !0
            }
          )
        ] }),
        /* @__PURE__ */ a(
          wr,
          {
            name: "description",
            label: n("description"),
            labelIcon: n("scopeDescriptionHelp"),
            rules: {
              maxLength: {
                value: 255,
                message: n("maxLength")
              }
            }
          }
        ),
        /* @__PURE__ */ a(
          at,
          {
            id: "kc-type",
            name: "type",
            label: n("type"),
            labelIcon: n("scopeTypeHelp"),
            controller: { defaultValue: Lu[0] },
            options: Lu.map((y) => ({
              key: y,
              value: n(`clientScopeType.${y}`)
            }))
          }
        ),
        !e && /* @__PURE__ */ a(
          at,
          {
            id: "kc-protocol",
            name: "protocol",
            label: n("protocol"),
            labelIcon: n("protocolHelp"),
            controller: { defaultValue: p[0] },
            options: p.map((y) => ({
              key: y,
              value: bl(n, y)
            }))
          }
        ),
        /* @__PURE__ */ a(
          bt,
          {
            name: Ne(
              "attributes.display.on.consent.screen"
            ),
            defaultValue: g,
            label: n("displayOnConsentScreen"),
            labelIcon: n("displayOnConsentScreenHelp"),
            stringify: !0
          }
        ),
        g === "true" && /* @__PURE__ */ a(
          wr,
          {
            name: Ne(
              "attributes.consent.screen.text"
            ),
            label: n("consentScreenText"),
            labelIcon: n("consentScreenTextHelp")
          }
        ),
        /* @__PURE__ */ a(
          bt,
          {
            name: Ne(
              "attributes.include.in.token.scope"
            ),
            label: n("includeInTokenScope"),
            labelIcon: n("includeInTokenScopeHelp"),
            stringify: !0
          }
        ),
        /* @__PURE__ */ a(
          ve,
          {
            name: Ne(
              "attributes.gui.order"
            ),
            label: n("guiOrder"),
            labelIcon: n("guiOrderHelp"),
            type: "number",
            min: 0
          }
        ),
        /* @__PURE__ */ C(st, { children: [
          /* @__PURE__ */ a(
            eo,
            {
              formState: l,
              disabled: !c || !d,
              children: n("save")
            }
          ),
          /* @__PURE__ */ a(
            z,
            {
              variant: "link",
              component: (y) => /* @__PURE__ */ a(Ae, { ...y, to: dO({ realm: u }) }),
              children: n("cancel")
            }
          )
        ] })
      ] })
    }
  );
}, Fz = ["all", "saml", "openid-connect"], pO = (e = "") => (t) => t.name?.includes(e), mO = (e) => (t) => e === Ma.none || t.type === e, $z = (e) => (t) => e === "all" || t.protocol === e, Nu = ({
  searchType: e,
  withProtocol: t = !1,
  onSelect: n
}) => {
  const { t: r } = H(), [i, s] = N(!1), o = (c) => /* @__PURE__ */ a(
    Ke,
    {
      onClick: () => {
        n(c), s(!1);
      },
      children: r(`clientScopeSearch.${c}`)
    },
    c
  ), l = [o("name"), o("type")];
  return t && l.push(o("protocol")), /* @__PURE__ */ a(
    qt,
    {
      toggle: (c) => /* @__PURE__ */ C(
        yt,
        {
          "data-testid": "clientScopeSearch",
          ref: c,
          id: "toggle-id",
          onClick: () => s(!i),
          children: [
            /* @__PURE__ */ a(ss, {}),
            " ",
            r(`clientScopeSearch.${e}`)
          ]
        }
      ),
      isOpen: i,
      children: /* @__PURE__ */ a(Xt, { children: l })
    }
  );
}, fO = ({
  searchType: e,
  onSelect: t,
  type: n,
  onType: r,
  protocol: i,
  onProtocol: s
}) => {
  const { t: o } = H(), [l, c] = N(!1);
  return /* @__PURE__ */ C(ee, { children: [
    e === "type" && /* @__PURE__ */ C(ee, { children: [
      /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(
        Nu,
        {
          searchType: e,
          onSelect: t,
          withProtocol: !!i
        }
      ) }),
      /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(
        Bn,
        {
          toggle: (d) => /* @__PURE__ */ a(
            yt,
            {
              "data-testid": "clientScopeSearchType",
              ref: d,
              isExpanded: l,
              onClick: () => c(!l),
              children: n === Ma.none ? o("allTypes") : o(`clientScopeTypes.${n}`)
            }
          ),
          onOpenChange: (d) => c(d),
          isOpen: l,
          selected: n === Ma.none ? o("allTypes") : o(`clientScopeTypes.${n}`),
          onSelect: (d, u) => {
            r(u), c(!1);
          },
          children: /* @__PURE__ */ C(ia, { children: [
            /* @__PURE__ */ a(_e, { value: Ma.none, children: o("allTypes") }),
            Hg(o)
          ] })
        }
      ) })
    ] }),
    e === "protocol" && !!i && /* @__PURE__ */ C(ee, { children: [
      /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(
        Nu,
        {
          searchType: e,
          onSelect: t,
          withProtocol: !0
        }
      ) }),
      /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(
        Bn,
        {
          toggle: (d) => /* @__PURE__ */ a(
            yt,
            {
              "data-testid": "clientScopeSearchProtocol",
              ref: d,
              isExpanded: l,
              onClick: () => c(!l),
              children: o(`protocolTypes.${i}`)
            }
          ),
          onOpenChange: (d) => c(d),
          isOpen: l,
          selected: o(`protocolTypes.${i}`),
          onSelect: (d, u) => {
            s?.(u), c(!1);
          },
          children: /* @__PURE__ */ a(ia, { children: Fz.map((d) => /* @__PURE__ */ a(_e, { value: d, children: o(`protocolTypes.${d}`) }, d)) })
        }
      ) })
    ] })
  ] });
}, hO = ({
  clientId: e,
  selectedRows: t,
  refresh: n
}) => {
  const { adminClient: r } = pe(), { t: i } = H(), [s, o] = N(!1), { addAlert: l, addError: c } = Se();
  return /* @__PURE__ */ a(
    Bn,
    {
      "aria-label": "change-type-to",
      isOpen: s,
      toggle: (d) => /* @__PURE__ */ a(
        yt,
        {
          id: "change-type-dropdown",
          isDisabled: t.length === 0,
          ref: d,
          onClick: () => o(!s),
          isExpanded: s,
          children: i("changeTypeTo")
        }
      ),
      onSelect: async (d, u) => {
        try {
          await Promise.all(
            t.map((p) => e ? oO(
              r,
              e,
              p,
              p.type,
              u
            ) : Ep(r, p, u))
          ), o(!1), n(), l(i("clientScopeSuccess"), ue.success);
        } catch (p) {
          c("clientScopeError", p);
        }
      },
      children: /* @__PURE__ */ a(ia, { children: Hg(
        i,
        e ? void 0 : Lu
      ) })
    }
  );
}, jz = Be(() => Promise.resolve().then(() => qz)), gO = {
  path: "/:realm/client-scopes/new",
  element: /* @__PURE__ */ a(jz, {}),
  breadcrumb: (e) => e("createClientScope"),
  handle: {
    access: "manage-clients"
  }
}, Bz = (e) => ({
  pathname: We(gO.path, e)
}), Uz = (e) => {
  const { adminClient: t } = pe(), { t: n } = H(), { addAlert: r, addError: i } = Se();
  return /* @__PURE__ */ a(
    rO,
    {
      clientScope: e,
      type: e.type,
      all: !0,
      onSelect: async (s) => {
        try {
          await Ep(t, e, s), r(n("clientScopeSuccess"), ue.success), e.refresh();
        } catch (o) {
          i("clientScopeError", o);
        }
      }
    }
  );
}, Vz = ({
  id: e,
  name: t
}) => {
  const { realm: n } = be();
  return /* @__PURE__ */ a(Ae, { to: od({ realm: n, id: e, tab: "settings" }), children: t }, e);
};
function Kz() {
  const { adminClient: e } = pe(), { realm: t } = be(), { t: n } = H(), { addAlert: r, addError: i } = Se(), [s, o] = N(!1), [l, c] = N([]), [d, u] = N("name"), [p, m] = N(
    Ma.none
  ), [f, g] = N("all"), b = pa(), [v, y] = N(0), x = () => {
    c([]), y(v + 1);
  }, w = async (_, O, E) => {
    const T = await e.clientScopes.listDefaultClientScopes(), I = await e.clientScopes.listDefaultOptionalClientScopes(), k = await e.clientScopes.find(), P = d === "name" ? pO(E) : d === "type" ? mO(p) : $z(f), D = k.map((F) => ({
      ...F,
      type: T.find(
        (M) => M.name === F.name
      ) ? Oi.default : I.find(
        (M) => M.name === F.name
      ) ? Oi.optional : Ma.none
    })).filter(P);
    return b(D, or("name")).slice(
      _,
      Number(_) + Number(O)
    );
  }, [R, S] = ze({
    titleKey: n("deleteClientScope", {
      count: l.length,
      name: l[0]?.name
    }),
    messageKey: "deleteConfirmClientScopes",
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      const _ = await e.clientScopes.find();
      if (Object.keys(_).length - l.length > 0)
        try {
          for (const E of l) {
            try {
              await sO(e, E);
            } catch (T) {
              console.warn(
                "could not remove scope",
                T.response?.data?.errorMessage || T
              );
            }
            await e.clientScopes.del({ id: E.id });
          }
          r(n("deletedSuccessClientScope"), ue.success), x();
        } catch (E) {
          i("deleteErrorClientScope", E);
        }
      else
        i(n("notAllowedToDeleteAllClientScopes"), "error");
    }
  });
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(S, {}),
    /* @__PURE__ */ a(
      wt,
      {
        titleKey: "clientScopes",
        subKey: "clientScopeExplain",
        helpUrl: na.clientScopesUrl
      }
    ),
    /* @__PURE__ */ a(Te, { variant: "light", className: "pf-v5-u-p-0", children: /* @__PURE__ */ a(
      St,
      {
        loader: w,
        ariaLabelKey: "clientScopeList",
        searchPlaceholderKey: d === "name" ? "searchForClientScope" : void 0,
        isSearching: d !== "name",
        searchTypeComponent: /* @__PURE__ */ a(
          Nu,
          {
            searchType: d,
            onSelect: (_) => u(_),
            withProtocol: !0
          }
        ),
        isPaginated: !0,
        onSelect: (_) => c([..._]),
        canSelectAll: !0,
        toolbarItem: /* @__PURE__ */ C(ee, { children: [
          /* @__PURE__ */ a(
            fO,
            {
              searchType: d,
              type: p,
              onSelect: (_) => {
                u(_), g("all"), m(Ma.none), x();
              },
              onType: (_) => {
                m(_), g("all"), x();
              },
              protocol: f,
              onProtocol: (_) => {
                g(_), m(Ma.none), x();
              }
            }
          ),
          /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(
            z,
            {
              component: (_) => /* @__PURE__ */ a(Ae, { ..._, to: Bz({ realm: t }) }),
              children: n("createClientScope")
            }
          ) }),
          /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(
            hO,
            {
              selectedRows: l,
              refresh: x
            }
          ) }),
          /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(
            qt,
            {
              shouldFocusToggleOnSelect: !0,
              toggle: (_) => /* @__PURE__ */ a(
                yt,
                {
                  "data-testid": "kebab",
                  "aria-label": "Kebab toggle",
                  ref: _,
                  onClick: () => o(!s),
                  variant: "plain",
                  children: /* @__PURE__ */ a(dr, {})
                }
              ),
              isOpen: s,
              children: /* @__PURE__ */ a(Xt, { children: /* @__PURE__ */ a(
                Ke,
                {
                  "data-testid": "delete",
                  isDisabled: l.length === 0,
                  onClick: () => {
                    R(), o(!1);
                  },
                  children: n("delete")
                }
              ) })
            }
          ) })
        ] }),
        actions: [
          {
            title: n("delete"),
            onRowClick: (_) => {
              c([_]), R();
            }
          }
        ],
        columns: [
          {
            name: "name",
            cellRenderer: Vz
          },
          {
            name: "type",
            displayKey: "assignedType",
            cellRenderer: (_) => /* @__PURE__ */ a(Uz, { ..._, refresh: x })
          },
          {
            name: "protocol",
            displayKey: "protocol",
            cellRenderer: (_) => bl(n, _.protocol ?? "openid-connect"),
            transforms: [Ft(15)]
          },
          {
            name: "attributes['gui.order']",
            displayKey: "displayOrder",
            cellFormatters: [on()],
            transforms: [Ft(15)]
          },
          { name: "description", cellFormatters: [on()] }
        ]
      },
      v
    ) })
  ] });
}
const Hz = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Kz
}, Symbol.toStringTag, { value: "Module" }));
function zz() {
  const { adminClient: e } = pe(), { t } = H(), n = Je(), { realm: r } = be(), { addAlert: i, addError: s } = Se();
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(wt, { titleKey: "createClientScope" }),
    /* @__PURE__ */ a(Te, { variant: "light", className: "pf-v5-u-p-0", children: /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ a(uO, { save: async (l) => {
      const c = Zn({
        ...l,
        name: l.name?.trim().replace(/ /g, "_")
      });
      try {
        await e.clientScopes.create(c);
        const d = await e.clientScopes.findOneByName({
          name: c.name
        });
        if (!d)
          throw new Error(t("notFound"));
        await Ep(
          e,
          { ...c, id: d.id },
          c.type
        ), i(t("createClientScopeSuccess", ue.success)), n(
          od({
            realm: r,
            id: d.id,
            tab: "settings"
          })
        );
      } catch (d) {
        s("createClientScopeError", d);
      }
    } }) }) })
  ] });
}
const qz = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: zz
}, Symbol.toStringTag, { value: "Module" }));
function Gz() {
  const { adminClient: e } = pe(), { t } = H(), n = Je(), { realm: r } = be(), { id: i } = Vt(), { addAlert: s, addError: o } = Se(), { enabled: l } = Pr(), [c, d] = N(), [u, p] = N(0), m = () => p(u + 1);
  Re(
    async () => {
      const E = await e.clientScopes.findOne({ id: i });
      if (!E)
        throw new Error(t("notFound"));
      return {
        ...E,
        type: await f(E)
      };
    },
    (E) => {
      d(E);
    },
    [u, i]
  );
  async function f(E) {
    return (await e.clientScopes.listDefaultClientScopes()).find(
      (D) => D.name === E.name
    ) ? Oi.default : (await e.clientScopes.listDefaultOptionalClientScopes()).find(
      (D) => D.name === E.name
    ) ? Oi.optional : Ma.none;
  }
  const g = (E) => jn(
    od({
      realm: r,
      id: i,
      tab: E
    })
  ), b = g("settings"), v = g("mappers"), y = g("scope"), x = async (E) => {
    const T = Zn({
      ...E,
      name: E.name?.trim().replace(/ /g, "_")
    });
    try {
      await e.clientScopes.update({ id: i }, T), await Ep(e, { ...T, id: i }, T.type), s(t("updateSuccessClientScope"), ue.success);
    } catch (I) {
      o("updateErrorClientScope", I);
    }
  }, [w, R] = ze({
    titleKey: t("deleteClientScope", {
      count: 1,
      name: c?.name
    }),
    messageKey: "deleteConfirmClientScopes",
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        await e.clientScopes.del({ id: i }), s(t("deletedSuccessClientScope"), ue.success), n(dO({ realm: r }));
      } catch (E) {
        o("deleteErrorClientScope", E);
      }
    }
  }), S = async (E) => {
    try {
      const T = E.filter((I) => I.client === void 0).map((I) => I.role).flat();
      await e.clientScopes.addRealmScopeMappings(
        {
          id: i
        },
        T
      ), await Promise.all(
        E.filter((I) => I.client !== void 0).map(
          (I) => e.clientScopes.addClientScopeMappings(
            {
              id: i,
              client: I.client.id
            },
            [I.role]
          )
        )
      ), s(t("roleMappingUpdatedSuccess"), ue.success);
    } catch (T) {
      o("roleMappingUpdatedError", T);
    }
  }, _ = async (E) => {
    if (Array.isArray(E))
      try {
        await e.clientScopes.addMultipleProtocolMappers(
          { id: c.id },
          E
        ), m(), s(t("mappingCreatedSuccess"), ue.success);
      } catch (T) {
        o("mappingCreatedError", T);
      }
    else {
      const T = E;
      n(
        KC({
          realm: r,
          id: c.id,
          mapperId: T.id
        })
      );
    }
  }, O = async (E) => {
    try {
      await e.clientScopes.delProtocolMapper({
        id: c.id,
        mapperId: E.id
      }), s(t("mappingDeletedSuccess"), ue.success), m();
    } catch (T) {
      o("mappingDeletedError", T);
    }
    return !0;
  };
  return c ? /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(R, {}),
    /* @__PURE__ */ a(
      wt,
      {
        titleKey: c.name,
        dropdownItems: [
          /* @__PURE__ */ a(Ke, { onClick: w, children: t("delete") }, "delete")
        ],
        badges: [{ text: c.protocol }],
        divider: !1
      }
    ),
    /* @__PURE__ */ a(Te, { variant: "light", className: "pf-v5-u-p-0", children: /* @__PURE__ */ C($n, { isBox: !0, children: [
      /* @__PURE__ */ a(
        Ee,
        {
          id: "settings",
          "data-testid": "settings",
          title: /* @__PURE__ */ a(Ie, { children: t("settings") }),
          ...b,
          children: /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ a(uO, { save: x, clientScope: c }) })
        }
      ),
      /* @__PURE__ */ a(
        Ee,
        {
          id: "mappers",
          "data-testid": "mappers",
          title: /* @__PURE__ */ a(Ie, { children: t("mappers") }),
          ...v,
          children: /* @__PURE__ */ a(
            Qk,
            {
              model: c,
              onAdd: _,
              onDelete: O,
              detailLink: (E) => KC({ realm: r, id: c.id, mapperId: E })
            }
          )
        }
      ),
      /* @__PURE__ */ C(
        Ee,
        {
          id: "scope",
          "data-testid": "scopeTab",
          title: /* @__PURE__ */ a(Ie, { children: t("scope") }),
          ...y,
          children: [
            l && /* @__PURE__ */ a(Te, { children: /* @__PURE__ */ a(
              _n,
              {
                variant: "info",
                isInline: !0,
                title: t("clientScopesRolesScope"),
                component: "h2"
              }
            ) }),
            /* @__PURE__ */ a(
              ao,
              {
                id: c.id,
                name: c.name,
                type: "clientScopes",
                save: S
              }
            )
          ]
        }
      )
    ] }) })
  ] }) : /* @__PURE__ */ a(gt, {});
}
const Wz = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Gz
}, Symbol.toStringTag, { value: "Module" })), Bm = ["UNANIMOUS", "AFFIRMATIVE", "CONSENSUS"], bO = ({
  helpLabel: e,
  isDisabled: t = !1,
  isLimited: n = !1
}) => {
  const { t: r } = H(), { control: i } = Le();
  return /* @__PURE__ */ a(
    se,
    {
      label: r("decisionStrategy"),
      labelIcon: /* @__PURE__ */ a(
        le,
        {
          helpText: r(e || "decisionStrategyHelp"),
          fieldLabelId: "decisionStrategy"
        }
      ),
      fieldId: "decisionStrategy",
      hasNoPaddingTop: !0,
      children: /* @__PURE__ */ a(
        ge,
        {
          name: "decisionStrategy",
          "data-testid": "decisionStrategy",
          defaultValue: Bm[0],
          control: i,
          render: ({ field: s }) => /* @__PURE__ */ a(ee, { children: (n ? Bm.slice(0, 2) : Bm).map((o) => /* @__PURE__ */ a(
            sn,
            {
              id: o,
              "data-testid": o,
              isChecked: s.value === o,
              isDisabled: t,
              name: "decisionStrategy",
              onChange: () => s.onChange(o),
              label: r(`decisionStrategies.${o}`),
              className: "pf-v5-u-mb-md"
            },
            o
          )) })
        }
      )
    }
  );
}, zg = ({
  id: e,
  onChange: t,
  helpText: n = "helpFileUpload",
  unWrap: r = !1,
  language: i,
  extension: s,
  ...o
}) => {
  const { t: l } = H(), c = {
    value: "",
    filename: "",
    isLoading: !1,
    modal: !1
  }, [d, u] = N(c), p = () => u({ ...d, modal: !1 }), m = (b, v) => {
    u({ ...d, filename: v.name });
  }, f = (b) => {
    u({ ...d, value: b }), t(b);
  }, g = () => {
    u({ ...d, modal: !0 });
  };
  return /* @__PURE__ */ C(ee, { children: [
    d.modal && /* @__PURE__ */ a(
      ht,
      {
        variant: Rt.small,
        title: l("clearFile"),
        isOpen: !0,
        onClose: p,
        actions: [
          /* @__PURE__ */ a(
            z,
            {
              variant: "primary",
              "data-testid": "clear-button",
              onClick: () => {
                u(c), t("");
              },
              children: l("clear")
            },
            "confirm"
          ),
          /* @__PURE__ */ a(
            z,
            {
              "data-testid": "cancel",
              variant: "link",
              onClick: p,
              children: l("cancel")
            },
            "cancel"
          )
        ],
        children: l("clearFileExplain")
      }
    ),
    r && /* @__PURE__ */ a(
      Uo,
      {
        id: e,
        ...o,
        type: "text",
        value: d.value,
        filename: d.filename,
        onFileInputChange: m,
        onDataChange: f,
        onTextChange: f,
        onClearClick: g,
        onReadStarted: () => u({ ...d, isLoading: !0 }),
        onReadFinished: () => u({ ...d, isLoading: !1 }),
        isLoading: d.isLoading,
        dropzoneProps: {
          accept: { "application/text": [s] }
        }
      }
    ),
    !r && /* @__PURE__ */ C(se, { label: l("resourceFile"), fieldId: e, children: [
      /* @__PURE__ */ a(
        Uo,
        {
          "data-testid": e,
          id: e,
          ...o,
          type: "text",
          value: d.value,
          filename: d.filename,
          onFileInputChange: m,
          onDataChange: f,
          onTextChange: f,
          onClearClick: g,
          onReadStarted: () => u({ ...d, isLoading: !0 }),
          onReadFinished: () => u({ ...d, isLoading: !1 }),
          isLoading: d.isLoading,
          hideDefaultPreview: !0,
          children: !o.hideDefaultPreview && /* @__PURE__ */ a(
            lr,
            {
              isLineNumbersVisible: !0,
              code: d.value,
              language: i,
              height: "128px",
              onChange: f,
              isReadOnly: !o.allowEditingUploadedText
            }
          )
        }
      ),
      /* @__PURE__ */ a(Zo, { children: /* @__PURE__ */ a(Xr, { children: /* @__PURE__ */ a(Yr, { children: l(n) }) }) })
    ] })
  ] });
}, Ip = ({ onChange: e, ...t }) => {
  const n = (r) => {
    try {
      e(JSON.parse(r));
    } catch {
      e({}), console.warn("Invalid json, ignoring value using {}");
    }
  };
  return /* @__PURE__ */ a(
    zg,
    {
      ...t,
      language: Ln.json,
      extension: ".json",
      onChange: n
    }
  );
}, Xz = ({ onConfirm: e, closeDialog: t }) => {
  const { t: n } = H(), [r, i] = N({});
  return /* @__PURE__ */ C(
    ht,
    {
      title: n("import"),
      isOpen: !0,
      variant: "small",
      onClose: t,
      actions: [
        /* @__PURE__ */ a(
          z,
          {
            id: "modal-confirm",
            onClick: () => {
              e(r), t();
            },
            "data-testid": "confirm",
            children: n("confirm")
          },
          "confirm"
        ),
        /* @__PURE__ */ a(
          z,
          {
            "data-testid": "cancel",
            id: "modal-cancel",
            variant: xe.link,
            onClick: () => {
              t();
            },
            children: n("cancel")
          },
          "cancel"
        )
      ],
      children: [
        /* @__PURE__ */ a(xt, { children: /* @__PURE__ */ a(Ip, { id: "import-resource", onChange: i }) }),
        Object.keys(r).length !== 0 && /* @__PURE__ */ C(ee, { children: [
          /* @__PURE__ */ a(_t, {}),
          /* @__PURE__ */ a("p", { className: "pf-v5-u-my-lg", children: n("importResources") }),
          /* @__PURE__ */ C(xt, { isHorizontal: !0, children: [
            /* @__PURE__ */ a(
              se,
              {
                label: n("policyEnforcementMode"),
                labelIcon: /* @__PURE__ */ a(
                  le,
                  {
                    helpText: n("policyEnforcementModeHelp"),
                    fieldLabelId: "policyEnforcementMode"
                  }
                ),
                fieldId: "policyEnforcementMode",
                hasNoPaddingTop: !0,
                children: /* @__PURE__ */ a(
                  sn,
                  {
                    id: "policyEnforcementMode",
                    name: "policyEnforcementMode",
                    label: n(
                      `policyEnforcementModes.${r.policyEnforcementMode}`
                    ),
                    isChecked: !0,
                    isDisabled: !0,
                    className: "pf-v5-u-mb-md"
                  }
                )
              }
            ),
            /* @__PURE__ */ a(
              se,
              {
                label: n("decisionStrategy"),
                labelIcon: /* @__PURE__ */ a(
                  le,
                  {
                    helpText: n("decisionStrategyHelp"),
                    fieldLabelId: "decisionStrategy"
                  }
                ),
                fieldId: "decisionStrategy",
                hasNoPaddingTop: !0,
                children: /* @__PURE__ */ a(
                  sn,
                  {
                    id: "decisionStrategy",
                    name: "decisionStrategy",
                    isChecked: !0,
                    isDisabled: !0,
                    label: n(`decisionStrategies.${r.decisionStrategy}`),
                    className: "pf-v5-u-mb-md"
                  }
                )
              }
            ),
            /* @__PURE__ */ a(
              se,
              {
                hasNoPaddingTop: !0,
                label: n("allowRemoteResourceManagement"),
                fieldId: "allowRemoteResourceManagement",
                labelIcon: /* @__PURE__ */ a(
                  le,
                  {
                    helpText: n("allowRemoteResourceManagement"),
                    fieldLabelId: "allowRemoteResourceManagement"
                  }
                ),
                children: /* @__PURE__ */ a(
                  Ye,
                  {
                    id: "allowRemoteResourceManagement",
                    label: n("on"),
                    labelOff: n("off"),
                    isChecked: r.allowRemoteResourceManagement,
                    isDisabled: !0,
                    "aria-label": n("allowRemoteResourceManagement")
                  }
                )
              }
            )
          ] }),
          /* @__PURE__ */ a("div", { className: "pf-v5-u-mt-md", children: Object.entries(r).filter(([, s]) => Array.isArray(s)).map(([s, o]) => /* @__PURE__ */ C(ka, { children: [
            /* @__PURE__ */ a(_t, {}),
            /* @__PURE__ */ a("p", { className: "pf-v5-u-my-sm", children: /* @__PURE__ */ C("strong", { children: [
              o.length,
              " ",
              n(s)
            ] }) })
          ] }, s)) }),
          /* @__PURE__ */ a(_t, {}),
          /* @__PURE__ */ a(
            _n,
            {
              variant: "warning",
              className: "pf-v5-u-mt-lg",
              isInline: !0,
              title: n("importWarning")
            }
          )
        ] })
      ]
    }
  );
}, HC = [
  "ENFORCING",
  "PERMISSIVE",
  "DISABLED"
], Yz = ({ clientId: e }) => {
  const { adminClient: t } = pe(), { t: n } = H(), [r, i] = N(), [s, o] = ot(), l = Ue({}), { control: c, reset: d, handleSubmit: u } = l, { addAlert: p, addError: m } = Se(), { hasAccess: f } = Mt(), g = !f("manage-authorization");
  Re(
    () => t.clients.getResourceServer({ id: e }),
    (y) => {
      i(y), d(y);
    },
    []
  );
  const b = async (y) => {
    try {
      await t.clients.importResource({ id: e }, y), p(n("importResourceSuccess"), ue.success), d({ ...y });
    } catch (x) {
      m("importResourceError", x);
    }
  }, v = async (y) => {
    try {
      await t.clients.updateResourceServer(
        { id: e },
        y
      ), p(n("updateResourceSuccess"), ue.success);
    } catch (x) {
      m("resourceSaveError", x);
    }
  };
  return r ? /* @__PURE__ */ C(Te, { variant: "light", children: [
    s && /* @__PURE__ */ a(
      Xz,
      {
        onConfirm: b,
        closeDialog: o
      }
    ),
    /* @__PURE__ */ C(
      Fe,
      {
        role: "manage-authorization",
        isHorizontal: !0,
        onSubmit: u(v),
        children: [
          /* @__PURE__ */ a(
            se,
            {
              label: n("import"),
              fieldId: "import",
              labelIcon: /* @__PURE__ */ a(le, { helpText: n("importHelp"), fieldLabelId: "import" }),
              children: /* @__PURE__ */ a(z, { variant: "secondary", onClick: o, children: n("import") })
            }
          ),
          /* @__PURE__ */ a(_t, {}),
          /* @__PURE__ */ a(
            se,
            {
              label: n("policyEnforcementMode"),
              labelIcon: /* @__PURE__ */ a(
                le,
                {
                  helpText: n("policyEnforcementModeHelp"),
                  fieldLabelId: "policyEnforcementMode"
                }
              ),
              fieldId: "policyEnforcementMode",
              hasNoPaddingTop: !0,
              children: /* @__PURE__ */ a(
                ge,
                {
                  name: "policyEnforcementMode",
                  "data-testid": "policyEnforcementMode",
                  defaultValue: HC[0],
                  control: c,
                  render: ({ field: y }) => /* @__PURE__ */ a(ee, { children: HC.map((x) => /* @__PURE__ */ a(
                    sn,
                    {
                      id: x,
                      "data-testid": x,
                      isChecked: y.value === x,
                      isDisabled: g,
                      name: "policyEnforcementMode",
                      onChange: () => y.onChange(x),
                      label: n(`policyEnforcementModes.${x}`),
                      className: "pf-v5-u-mb-md"
                    },
                    x
                  )) })
                }
              )
            }
          ),
          /* @__PURE__ */ C(Ve, { ...l, children: [
            /* @__PURE__ */ a(bO, { isLimited: !0 }),
            /* @__PURE__ */ a(
              bt,
              {
                name: "allowRemoteResourceManagement",
                label: n("allowRemoteResourceManagement"),
                labelIcon: n("allowRemoteResourceManagementHelp")
              }
            )
          ] }),
          /* @__PURE__ */ a(
            _r,
            {
              name: "authenticationSettings",
              reset: () => d(r),
              isActive: !0,
              isSubmit: !0
            }
          )
        ]
      }
    )
  ] }) : /* @__PURE__ */ a(gt, {});
}, vO = ({
  protocol: e = "openid-connect"
}) => {
  const { t } = H(), { watch: n } = Le(), r = n("standardFlowEnabled");
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(
      ve,
      {
        type: "url",
        name: "rootUrl",
        label: t("rootUrl"),
        labelIcon: t("rootURLHelp")
      }
    ),
    /* @__PURE__ */ a(
      ve,
      {
        type: "url",
        name: "baseUrl",
        label: t("homeURL"),
        labelIcon: t("homeURLHelp")
      }
    ),
    r && /* @__PURE__ */ C(ee, { children: [
      /* @__PURE__ */ a(
        se,
        {
          label: t("validRedirectUri"),
          fieldId: "kc-redirect",
          labelIcon: /* @__PURE__ */ a(
            le,
            {
              helpText: t("validRedirectURIsHelp"),
              fieldLabelId: "validRedirectUri"
            }
          ),
          children: /* @__PURE__ */ a(
            yr,
            {
              id: "kc-redirect",
              name: "redirectUris",
              "aria-label": t("validRedirectUri"),
              addButtonLabel: "addRedirectUri"
            }
          )
        }
      ),
      /* @__PURE__ */ a(
        se,
        {
          label: t("validPostLogoutRedirectUri"),
          fieldId: "kc-postLogoutRedirect",
          labelIcon: /* @__PURE__ */ a(
            le,
            {
              helpText: t("validPostLogoutRedirectURIsHelp"),
              fieldLabelId: "validPostLogoutRedirectUri"
            }
          ),
          children: /* @__PURE__ */ a(
            yr,
            {
              id: "kc-postLogoutRedirect",
              name: Ne(
                "attributes.post.logout.redirect.uris"
              ),
              "aria-label": t("validPostLogoutRedirectUri"),
              addButtonLabel: "addPostLogoutRedirectUri",
              stringify: !0
            }
          )
        }
      )
    ] }),
    e === "saml" && /* @__PURE__ */ C(ee, { children: [
      /* @__PURE__ */ a(
        ve,
        {
          name: "attributes.saml_idp_initiated_sso_url_name",
          label: t("idpInitiatedSsoUrlName"),
          labelIcon: t("idpInitiatedSsoUrlNameHelp")
        }
      ),
      /* @__PURE__ */ a(
        ve,
        {
          name: "attributes.saml_idp_initiated_sso_relay_state",
          label: t("idpInitiatedSsoRelayState"),
          labelIcon: t("idpInitiatedSsoRelayStateHelp")
        }
      ),
      /* @__PURE__ */ a(
        ve,
        {
          type: "url",
          name: "adminUrl",
          label: t("masterSamlProcessingUrl"),
          labelIcon: t("masterSamlProcessingUrlHelp")
        }
      )
    ] }),
    e !== "saml" && r && /* @__PURE__ */ a(
      se,
      {
        label: t("webOrigins"),
        fieldId: "kc-web-origins",
        labelIcon: /* @__PURE__ */ a(
          le,
          {
            helpText: t("webOriginsHelp"),
            fieldLabelId: "webOrigins"
          }
        ),
        children: /* @__PURE__ */ a(
          yr,
          {
            id: "kc-web-origins",
            name: "webOrigins",
            "aria-label": t("webOrigins"),
            addButtonLabel: "addWebOrigins"
          }
        )
      }
    )
  ] });
}, Jz = ({
  client: e,
  save: t,
  reset: n
}) => {
  const { t: r } = H(), { watch: i } = Le(), { hasAccess: s } = Mt(), o = s("manage-clients") || e.access?.configure, l = i("protocol");
  return /* @__PURE__ */ C(
    Fe,
    {
      isHorizontal: !0,
      fineGrainedAccess: e.access?.configure,
      role: "manage-clients",
      children: [
        !e.bearerOnly && /* @__PURE__ */ a(vO, { protocol: l }),
        l !== "saml" && /* @__PURE__ */ a(
          ve,
          {
            type: "url",
            name: "adminUrl",
            label: r("adminURL"),
            labelIcon: r("adminURLHelp")
          }
        ),
        e.bearerOnly && /* @__PURE__ */ a(
          _r,
          {
            name: "settings",
            save: t,
            reset: n,
            isActive: !o
          }
        )
      ]
    }
  );
}, qg = ({
  unWrap: e,
  protocol: t
}) => {
  const { t: n } = H(), { control: r, watch: i, setValue: s } = Le(), o = t || i("protocol"), l = i("publicClient"), c = i("authorizationServicesEnabled"), d = oa();
  return /* @__PURE__ */ C(
    Fe,
    {
      isHorizontal: !0,
      role: "manage-clients",
      unWrap: e,
      className: "keycloak__capability-config__form",
      "data-testid": "capability-config-form",
      children: [
        o === "openid-connect" && /* @__PURE__ */ C(ee, { children: [
          /* @__PURE__ */ a(
            se,
            {
              hasNoPaddingTop: !0,
              label: n("clientAuthentication"),
              fieldId: "kc-authentication",
              labelIcon: /* @__PURE__ */ a(
                le,
                {
                  helpText: n("authenticationHelp"),
                  fieldLabelId: "authentication"
                }
              ),
              children: /* @__PURE__ */ a(
                ge,
                {
                  name: "publicClient",
                  defaultValue: !1,
                  control: r,
                  render: ({ field: u }) => /* @__PURE__ */ a(
                    Ye,
                    {
                      "data-testid": "authentication",
                      id: "kc-authentication-switch",
                      label: n("on"),
                      labelOff: n("off"),
                      isChecked: !u.value,
                      onChange: (p, m) => {
                        u.onChange(!m), m || (s("authorizationServicesEnabled", !1), s("serviceAccountsEnabled", !1), s(
                          Ne(
                            "attributes.oidc.ciba.grant.enabled"
                          ),
                          !1
                        ));
                      },
                      "aria-label": n("clientAuthentication")
                    }
                  )
                }
              )
            }
          ),
          /* @__PURE__ */ a(
            se,
            {
              hasNoPaddingTop: !0,
              label: n("clientAuthorization"),
              fieldId: "kc-authorization",
              labelIcon: /* @__PURE__ */ a(
                le,
                {
                  helpText: n("authorizationHelp"),
                  fieldLabelId: "authorization"
                }
              ),
              children: /* @__PURE__ */ a(
                ge,
                {
                  name: "authorizationServicesEnabled",
                  defaultValue: !1,
                  control: r,
                  render: ({ field: u }) => /* @__PURE__ */ a(
                    Ye,
                    {
                      "data-testid": "authorization",
                      id: "kc-authorization-switch",
                      label: n("on"),
                      labelOff: n("off"),
                      isChecked: u.value && !l,
                      onChange: (p, m) => {
                        u.onChange(m), m && s("serviceAccountsEnabled", !0);
                      },
                      isDisabled: l,
                      "aria-label": n("clientAuthorization")
                    }
                  )
                }
              )
            }
          ),
          /* @__PURE__ */ a(
            se,
            {
              hasNoPaddingTop: !0,
              label: n("authenticationFlow"),
              fieldId: "kc-flow",
              children: /* @__PURE__ */ C(Va, { id: "authenticationFlowGrid", hasGutter: !0, children: [
                /* @__PURE__ */ a(zt, { lg: 4, sm: 6, children: /* @__PURE__ */ a(
                  ge,
                  {
                    name: "standardFlowEnabled",
                    defaultValue: !0,
                    control: r,
                    render: ({ field: u }) => /* @__PURE__ */ C(Qt, { children: [
                      /* @__PURE__ */ a(dt, { children: /* @__PURE__ */ a(
                        rn,
                        {
                          "data-testid": "standard",
                          label: n("standardFlow"),
                          id: "kc-flow-standard",
                          isChecked: u.value?.toString() === "true",
                          onChange: u.onChange
                        }
                      ) }),
                      /* @__PURE__ */ a(dt, { children: /* @__PURE__ */ a(
                        le,
                        {
                          helpText: n("standardFlowHelp"),
                          fieldLabelId: "standardFlow"
                        }
                      ) })
                    ] })
                  }
                ) }),
                /* @__PURE__ */ a(zt, { lg: 8, sm: 6, children: /* @__PURE__ */ a(
                  ge,
                  {
                    name: "directAccessGrantsEnabled",
                    defaultValue: !0,
                    control: r,
                    render: ({ field: u }) => /* @__PURE__ */ C(Qt, { children: [
                      /* @__PURE__ */ a(dt, { children: /* @__PURE__ */ a(
                        rn,
                        {
                          "data-testid": "direct",
                          label: n("directAccess"),
                          id: "kc-flow-direct",
                          isChecked: u.value,
                          onChange: u.onChange
                        }
                      ) }),
                      /* @__PURE__ */ a(dt, { children: /* @__PURE__ */ a(
                        le,
                        {
                          helpText: n("directAccessHelp"),
                          fieldLabelId: "directAccess"
                        }
                      ) })
                    ] })
                  }
                ) }),
                /* @__PURE__ */ a(zt, { lg: 4, sm: 6, children: /* @__PURE__ */ a(
                  ge,
                  {
                    name: "implicitFlowEnabled",
                    defaultValue: !0,
                    control: r,
                    render: ({ field: u }) => /* @__PURE__ */ C(Qt, { children: [
                      /* @__PURE__ */ a(dt, { children: /* @__PURE__ */ a(
                        rn,
                        {
                          "data-testid": "implicit",
                          label: n("implicitFlow"),
                          id: "kc-flow-implicit",
                          isChecked: u.value?.toString() === "true",
                          onChange: u.onChange
                        }
                      ) }),
                      /* @__PURE__ */ a(dt, { children: /* @__PURE__ */ a(
                        le,
                        {
                          helpText: n("implicitFlowHelp"),
                          fieldLabelId: "implicitFlow"
                        }
                      ) })
                    ] })
                  }
                ) }),
                /* @__PURE__ */ a(zt, { lg: 8, sm: 6, children: /* @__PURE__ */ a(
                  ge,
                  {
                    name: "serviceAccountsEnabled",
                    defaultValue: !1,
                    control: r,
                    render: ({ field: u }) => /* @__PURE__ */ C(Qt, { children: [
                      /* @__PURE__ */ a(dt, { children: /* @__PURE__ */ a(
                        rn,
                        {
                          "data-testid": "service-account",
                          label: n("serviceAccount"),
                          id: "kc-flow-service-account",
                          isChecked: u.value?.toString() === "true" || l && c,
                          onChange: u.onChange,
                          isDisabled: l && !c || !l && c
                        }
                      ) }),
                      /* @__PURE__ */ a(dt, { children: /* @__PURE__ */ a(
                        le,
                        {
                          helpText: n("serviceAccountHelp"),
                          fieldLabelId: "serviceAccount"
                        }
                      ) })
                    ] })
                  }
                ) }),
                d(zn.DeviceFlow) && /* @__PURE__ */ a(zt, { lg: 8, sm: 6, children: /* @__PURE__ */ a(
                  ge,
                  {
                    name: Ne("attributes.oauth2.device.authorization.grant.enabled"),
                    defaultValue: !1,
                    control: r,
                    render: ({ field: u }) => /* @__PURE__ */ C(Qt, { children: [
                      /* @__PURE__ */ a(dt, { children: /* @__PURE__ */ a(
                        rn,
                        {
                          "data-testid": "oauth-device-authorization-grant",
                          label: n("oauthDeviceAuthorizationGrant"),
                          id: "kc-oauth-device-authorization-grant",
                          name: "oauth2.device.authorization.grant.enabled",
                          isChecked: u.value.toString() === "true",
                          onChange: u.onChange
                        }
                      ) }),
                      /* @__PURE__ */ a(dt, { children: /* @__PURE__ */ a(
                        le,
                        {
                          helpText: n("oauthDeviceAuthorizationGrantHelp"),
                          fieldLabelId: "oauthDeviceAuthorizationGrant"
                        }
                      ) })
                    ] })
                  }
                ) }),
                /* @__PURE__ */ a(zt, { lg: 8, sm: 6, children: /* @__PURE__ */ a(
                  ge,
                  {
                    name: Ne(
                      "attributes.oidc.ciba.grant.enabled"
                    ),
                    defaultValue: !1,
                    control: r,
                    render: ({ field: u }) => /* @__PURE__ */ C(Qt, { children: [
                      /* @__PURE__ */ a(dt, { children: /* @__PURE__ */ a(
                        rn,
                        {
                          "data-testid": "oidc-ciba-grant",
                          label: n("oidcCibaGrant"),
                          id: "kc-oidc-ciba-grant",
                          name: "oidc.ciba.grant.enabled",
                          isChecked: u.value.toString() === "true",
                          onChange: u.onChange,
                          isDisabled: l
                        }
                      ) }),
                      /* @__PURE__ */ a(dt, { children: /* @__PURE__ */ a(
                        le,
                        {
                          helpText: n("oidcCibaGrantHelp"),
                          fieldLabelId: "oidcCibaGrant"
                        }
                      ) })
                    ] })
                  }
                ) })
              ] })
            }
          )
        ] }),
        o === "saml" && /* @__PURE__ */ C(ee, { children: [
          /* @__PURE__ */ a(
            bt,
            {
              name: Ne(
                "attributes.saml.encrypt"
              ),
              label: n("encryptAssertions"),
              labelIcon: n("encryptAssertionsHelp")
            }
          ),
          /* @__PURE__ */ a(
            bt,
            {
              name: Ne(
                "attributes.saml.client.signature"
              ),
              label: n("clientSignature"),
              labelIcon: n("clientSignatureHelp")
            }
          )
        ] })
      ]
    }
  );
}, Gg = ({
  hasConfigureAccess: e
}) => {
  const { t } = H();
  return /* @__PURE__ */ C(Fe, { role: "manage-clients", fineGrainedAccess: e, unWrap: !0, children: [
    /* @__PURE__ */ a(
      ve,
      {
        name: "clientId",
        label: t("clientId"),
        labelIcon: t("clientIdHelp"),
        rules: { required: { value: !0, message: t("required") } }
      }
    ),
    /* @__PURE__ */ a(
      ve,
      {
        name: "name",
        label: t("name"),
        labelIcon: t("clientNameHelp")
      }
    ),
    /* @__PURE__ */ a(
      wr,
      {
        name: "description",
        label: t("description"),
        labelIcon: t("clientDescriptionHelp"),
        rules: {
          maxLength: {
            value: 255,
            message: t("maxLength", { length: 255 })
          }
        }
      }
    ),
    /* @__PURE__ */ a(
      bt,
      {
        name: "alwaysDisplayInConsole",
        label: t("alwaysDisplayInUI"),
        labelIcon: t("alwaysDisplayInUIHelp")
      }
    )
  ] });
}, Zz = () => {
  const { t: e } = H(), t = $w();
  return /* @__PURE__ */ C(Fe, { isHorizontal: !0, role: "manage-clients", children: [
    /* @__PURE__ */ a(
      at,
      {
        name: "protocol",
        label: e("clientType"),
        labelIcon: e("clientTypeHelp"),
        controller: {
          defaultValue: ""
        },
        options: t.map((n) => ({
          key: n,
          value: bl(e, n)
        }))
      }
    ),
    /* @__PURE__ */ a(Gg, { hasConfigureAccess: !0 })
  ] });
}, Qz = ({ access: e }) => {
  const { t } = H(), { watch: n } = Le(), r = Tt().themes.login, i = n("consentRequired"), s = n(
    Ne(
      "attributes.display.on.consent.screen"
    )
  );
  return /* @__PURE__ */ C(Fe, { isHorizontal: !0, fineGrainedAccess: e, role: "manage-clients", children: [
    /* @__PURE__ */ a(
      at,
      {
        name: "attributes.login_theme",
        label: t("loginTheme"),
        labelIcon: t("loginThemeHelp"),
        controller: {
          defaultValue: ""
        },
        options: [
          { key: "", value: t("choose") },
          ...r.map(({ name: o }) => ({ key: o, value: o }))
        ]
      }
    ),
    /* @__PURE__ */ a(
      bt,
      {
        name: "consentRequired",
        label: t("consentRequired"),
        labelIcon: t("consentRequiredHelp")
      }
    ),
    /* @__PURE__ */ a(
      bt,
      {
        name: Ne(
          "attributes.display.on.consent.screen"
        ),
        label: t("displayOnClient"),
        labelIcon: t("displayOnClientHelp"),
        isDisabled: !i,
        stringify: !0
      }
    ),
    /* @__PURE__ */ a(
      wr,
      {
        name: Ne(
          "attributes.consent.screen.text"
        ),
        label: t("consentScreenText"),
        labelIcon: t("consentScreenTextHelp"),
        isDisabled: !(i && s === "true")
      }
    )
  ] });
}, zC = (e, t) => (e?.startsWith("https://") || e?.startsWith("http://")) && !e.includes("*") || e === "" || t, eq = ({
  save: e,
  reset: t,
  client: { access: n }
}) => {
  const { t: r } = H(), { control: i, watch: s } = Le(), { hasAccess: o } = Mt(), l = o("manage-clients") || n?.configure, c = s("protocol"), d = s("frontchannelLogout");
  return /* @__PURE__ */ C(
    Fe,
    {
      isHorizontal: !0,
      fineGrainedAccess: n?.configure,
      role: "manage-clients",
      children: [
        /* @__PURE__ */ a(
          se,
          {
            label: r("frontchannelLogout"),
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: r("frontchannelLogoutHelp"),
                fieldLabelId: "frontchannelLogout"
              }
            ),
            fieldId: "kc-frontchannelLogout",
            hasNoPaddingTop: !0,
            children: /* @__PURE__ */ a(
              ge,
              {
                name: "frontchannelLogout",
                defaultValue: !0,
                control: i,
                render: ({ field: u }) => /* @__PURE__ */ a(
                  Ye,
                  {
                    id: "kc-frontchannelLogout-switch",
                    label: r("on"),
                    labelOff: r("off"),
                    isChecked: u.value,
                    onChange: u.onChange,
                    "aria-label": r("frontchannelLogout")
                  }
                )
              }
            )
          }
        ),
        c === "openid-connect" && d && /* @__PURE__ */ a(
          ve,
          {
            "data-testid": "frontchannelLogoutUrl",
            type: "url",
            name: Ne(
              "attributes.frontchannel.logout.url"
            ),
            label: r("frontchannelLogoutUrl"),
            labelIcon: r("frontchannelLogoutUrlHelp"),
            rules: {
              validate: (u) => zC(u, r("frontchannelUrlInvalid").toString())
            }
          }
        ),
        c === "openid-connect" && /* @__PURE__ */ C(ee, { children: [
          /* @__PURE__ */ a(
            ve,
            {
              "data-testid": "backchannelLogoutUrl",
              type: "url",
              name: Ne(
                "attributes.backchannel.logout.url"
              ),
              label: r("backchannelLogoutUrl"),
              labelIcon: r("backchannelLogoutUrlHelp"),
              rules: {
                validate: (u) => zC(u, r("backchannelUrlInvalid").toString())
              }
            }
          ),
          /* @__PURE__ */ a(
            se,
            {
              label: r("backchannelLogoutSessionRequired"),
              labelIcon: /* @__PURE__ */ a(
                le,
                {
                  helpText: r("backchannelLogoutSessionRequiredHelp"),
                  fieldLabelId: "backchannelLogoutSessionRequired"
                }
              ),
              fieldId: "backchannelLogoutSessionRequired",
              hasNoPaddingTop: !0,
              children: /* @__PURE__ */ a(
                ge,
                {
                  name: Ne(
                    "attributes.backchannel.logout.session.required"
                  ),
                  defaultValue: "true",
                  control: i,
                  render: ({ field: u }) => /* @__PURE__ */ a(
                    Ye,
                    {
                      id: "backchannelLogoutSessionRequired",
                      label: r("on"),
                      labelOff: r("off"),
                      isChecked: u.value === "true",
                      onChange: (p, m) => u.onChange(m.toString()),
                      "aria-label": r("backchannelLogoutSessionRequired")
                    }
                  )
                }
              )
            }
          ),
          /* @__PURE__ */ a(
            se,
            {
              label: r("backchannelLogoutRevokeOfflineSessions"),
              labelIcon: /* @__PURE__ */ a(
                le,
                {
                  helpText: r("backchannelLogoutRevokeOfflineSessionsHelp"),
                  fieldLabelId: "backchannelLogoutRevokeOfflineSessions"
                }
              ),
              fieldId: "backchannelLogoutRevokeOfflineSessions",
              hasNoPaddingTop: !0,
              children: /* @__PURE__ */ a(
                ge,
                {
                  name: Ne(
                    "attributes.backchannel.logout.revoke.offline.tokens"
                  ),
                  defaultValue: "false",
                  control: i,
                  render: ({ field: u }) => /* @__PURE__ */ a(
                    Ye,
                    {
                      id: "backchannelLogoutRevokeOfflineSessions",
                      label: r("on"),
                      labelOff: r("off"),
                      isChecked: u.value === "true",
                      onChange: (p, m) => u.onChange(m.toString()),
                      "aria-label": r("backchannelLogoutRevokeOfflineSessions")
                    }
                  )
                }
              )
            }
          )
        ] }),
        /* @__PURE__ */ a(
          _r,
          {
            name: "settings",
            save: e,
            reset: t,
            isActive: l
          }
        )
      ]
    }
  );
}, tq = Be(() => Promise.resolve().then(() => pb)), yO = {
  path: "/:realm/clients/:clientId/:tab",
  element: /* @__PURE__ */ a(tq, {}),
  breadcrumb: (e) => e("clientSettings"),
  handle: {
    access: "query-clients"
  }
}, Ti = (e) => ({
  pathname: We(yO.path, e)
}), nq = Be(() => Promise.resolve().then(() => zO)), Wg = {
  path: "/:realm/clients",
  element: /* @__PURE__ */ a(nq, {}),
  breadcrumb: (e) => e("clientList"),
  handle: {
    access: "query-clients"
  }
}, CO = {
  ...Wg,
  path: "/:realm/clients/:tab"
}, Bs = (e) => {
  const t = e.tab ? CO.path : Wg.path;
  return {
    pathname: We(t, e)
  };
}, aq = (e) => {
  const { t } = H(), { trigger: n } = e, { activeStep: r, goToNextStep: i, goToPrevStep: s, close: o } = zs(), l = async (c) => {
    await n() && c?.();
  };
  return /* @__PURE__ */ a(
    Xc,
    {
      activeStep: r,
      onNext: () => l(i),
      onBack: s,
      onClose: o,
      isBackDisabled: r.index === 1,
      backButtonText: t("back"),
      nextButtonText: t("next"),
      cancelButtonText: t("cancel")
    }
  );
};
function rq() {
  const { adminClient: e } = pe(), { t } = H(), { realm: n } = be(), r = Je(), [i, s] = N(!1), { addAlert: o, addError: l } = Se(), c = Ue({
    defaultValues: {
      protocol: "openid-connect",
      clientId: "",
      name: "",
      description: "",
      publicClient: !0,
      authorizationServicesEnabled: !1,
      serviceAccountsEnabled: !1,
      implicitFlowEnabled: !1,
      directAccessGrantsEnabled: !0,
      standardFlowEnabled: !0,
      frontchannelLogout: !0,
      attributes: {
        saml_idp_initiated_sso_url_name: ""
      }
    }
  }), { getValues: d, watch: u } = c, p = u("protocol"), m = async () => {
    if (i) return;
    s(!0);
    const g = Zn(d());
    try {
      const b = await e.clients.create({
        ...g,
        clientId: g.clientId?.trim()
      });
      o(t("createClientSuccess"), ue.success), r(Ti({ realm: n, clientId: b.id, tab: "settings" }));
    } catch (b) {
      l("createClientError", b);
    } finally {
      s(!1);
    }
  }, f = t("createClient");
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(wt, { titleKey: "createClient", subKey: "clientsExplain" }),
    /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ a(Ve, { ...c, children: /* @__PURE__ */ C(
      ep,
      {
        onClose: () => r(Bs({ realm: n })),
        navAriaLabel: `${f} steps`,
        onSave: m,
        footer: /* @__PURE__ */ a(aq, { ...c }),
        children: [
          /* @__PURE__ */ a(
            ca,
            {
              name: t("generalSettings"),
              id: "generalSettings",
              children: /* @__PURE__ */ a(Zz, {})
            },
            "generalSettings"
          ),
          /* @__PURE__ */ a(
            ca,
            {
              name: t("capabilityConfig"),
              id: "capabilityConfig",
              isHidden: p === "saml",
              children: /* @__PURE__ */ a(qg, { protocol: p })
            },
            "capabilityConfig"
          ),
          /* @__PURE__ */ a(
            ca,
            {
              name: t("loginSettings"),
              id: "loginSettings",
              footer: {
                backButtonText: t("back"),
                nextButtonText: t("save"),
                cancelButtonText: t("cancel")
              },
              children: /* @__PURE__ */ a(Fe, { isHorizontal: !0, role: "manage-clients", children: /* @__PURE__ */ a(vO, { protocol: p }) })
            },
            "loginSettings"
          )
        ]
      }
    ) }) })
  ] });
}
const iq = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: rq
}, Symbol.toStringTag, { value: "Module" })), ui = ({ name: e, label: t }) => {
  const { t: n } = H();
  return /* @__PURE__ */ a(
    bt,
    {
      name: e,
      label: n(t),
      labelIcon: n(`${t}Help`),
      stringify: !0
    }
  );
}, sq = () => {
  const { t: e } = H();
  return /* @__PURE__ */ C(
    Fe,
    {
      isHorizontal: !0,
      role: "manage-clients",
      className: "keycloak__capability-config__form",
      children: [
        /* @__PURE__ */ a(
          at,
          {
            name: "attributes.saml_name_id_format",
            label: e("nameIdFormat"),
            labelIcon: e("nameIdFormatHelp"),
            controller: {
              defaultValue: "username"
            },
            options: ["username", "email", "transient", "persistent"]
          }
        ),
        /* @__PURE__ */ a(
          ui,
          {
            name: "attributes.saml_force_name_id_format",
            label: "forceNameIdFormat"
          }
        ),
        /* @__PURE__ */ a(
          ui,
          {
            name: Ne("attributes.saml.force.post.binding"),
            label: "forcePostBinding"
          }
        ),
        /* @__PURE__ */ a(
          ui,
          {
            name: Ne("attributes.saml.artifact.binding"),
            label: "forceArtifactBinding"
          }
        ),
        /* @__PURE__ */ a(
          ui,
          {
            name: Ne("attributes.saml.authnstatement"),
            label: "includeAuthnStatement"
          }
        ),
        /* @__PURE__ */ a(
          ui,
          {
            name: Ne(
              "attributes.saml.onetimeuse.condition"
            ),
            label: "includeOneTimeUseCondition"
          }
        ),
        /* @__PURE__ */ a(
          ui,
          {
            name: Ne(
              "attributes.saml.server.signature.keyinfo.ext"
            ),
            label: "optimizeLookup"
          }
        ),
        /* @__PURE__ */ a(
          ui,
          {
            name: Ne("attributes.saml.allow.ecp.flow"),
            label: "allowEcpFlow"
          }
        )
      ]
    }
  );
}, qC = [
  "RSA_SHA1",
  "RSA_SHA256",
  "RSA_SHA256_MGF1",
  "RSA_SHA512",
  "RSA_SHA512_MGF1",
  "DSA_SHA1"
], GC = ["NONE", "KEY_ID", "CERT_SUBJECT"], WC = [
  { name: "EXCLUSIVE", value: "http://www.w3.org/2001/10/xml-exc-c14n#" },
  {
    name: "EXCLUSIVE_WITH_COMMENTS",
    value: "http://www.w3.org/2001/10/xml-exc-c14n#WithComments"
  },
  {
    name: "INCLUSIVE",
    value: "http://www.w3.org/TR/2001/REC-xml-c14n-20010315"
  },
  {
    name: "INCLUSIVE_WITH_COMMENTS",
    value: "http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments"
  }
], oq = () => {
  const { t: e } = H(), { watch: t } = Le(), n = t(
    Ne("attributes.saml.server.signature")
  ), r = t(
    Ne(
      "attributes.saml.assertion.signature"
    )
  );
  return /* @__PURE__ */ C(
    Fe,
    {
      isHorizontal: !0,
      role: "manage-clients",
      className: "keycloak__capability-config__form",
      children: [
        /* @__PURE__ */ a(
          ui,
          {
            name: Ne("attributes.saml.server.signature"),
            label: "signDocuments"
          }
        ),
        /* @__PURE__ */ a(
          ui,
          {
            name: Ne("attributes.saml.assertion.signature"),
            label: "signAssertions"
          }
        ),
        (n === "true" || r === "true") && /* @__PURE__ */ C(ee, { children: [
          /* @__PURE__ */ a(
            at,
            {
              name: Ne(
                "attributes.saml.signature.algorithm"
              ),
              label: e("signatureAlgorithm"),
              labelIcon: e("signatureAlgorithmHelp"),
              controller: {
                defaultValue: qC[0]
              },
              options: [...qC]
            }
          ),
          /* @__PURE__ */ a(
            at,
            {
              name: Ne(
                "attributes.saml.server.signature.keyinfo.xmlSigKeyInfoKeyNameTransformer"
              ),
              label: e("signatureKeyName"),
              labelIcon: e("signatureKeyNameHelp"),
              controller: {
                defaultValue: GC[0]
              },
              options: [...GC]
            }
          ),
          /* @__PURE__ */ a(
            at,
            {
              name: "attributes.saml_signature_canonicalization_method",
              label: e("canonicalization"),
              labelIcon: e("canonicalizationHelp"),
              controller: {
                defaultValue: WC[0].value
              },
              options: WC.map(({ name: i, value: s }) => ({
                key: s,
                value: i
              }))
            }
          )
        ] })
      ]
    }
  );
}, lq = ({
  clientId: e,
  isOpen: t,
  onAdded: n,
  onClose: r
}) => {
  const { adminClient: i } = pe(), { t: s } = H(), o = Ue(), {
    handleSubmit: l,
    formState: { isDirty: c, isValid: d }
  } = o, { addAlert: u, addError: p } = Se();
  async function m({ node: f }) {
    try {
      await i.clients.addClusterNode({
        id: e,
        node: f
      }), n(f), u(s("addedNodeSuccess"), ue.success);
    } catch (g) {
      p("addedNodeFail", g);
    }
    r();
  }
  return /* @__PURE__ */ a(
    ht,
    {
      title: s("addNode"),
      isOpen: t,
      onClose: r,
      variant: "small",
      actions: [
        /* @__PURE__ */ a(
          z,
          {
            id: "add-node-confirm",
            type: "submit",
            form: "add-host-form",
            isDisabled: !c || !d,
            children: s("save")
          },
          "confirm"
        ),
        /* @__PURE__ */ a(
          z,
          {
            id: "add-node-cancel",
            variant: xe.link,
            onClick: r,
            children: s("cancel")
          },
          "cancel"
        )
      ],
      children: /* @__PURE__ */ a(Ve, { ...o, children: /* @__PURE__ */ a(xt, { id: "add-host-form", onSubmit: l(m), isHorizontal: !0, children: /* @__PURE__ */ a(
        ve,
        {
          name: "node",
          label: s("nodeHost"),
          rules: {
            required: s("required")
          }
        }
      ) }) })
    }
  );
}, cq = ({
  selectItems: e,
  keyValue: t,
  ...n
}) => {
  const { t: r } = H(), { field: i } = qs(n), [s, o] = N(!1), l = et(
    () => e.find((c) => c.key === t),
    [e, t]
  );
  return l?.values ? /* @__PURE__ */ a(
    ft,
    {
      onToggle: (c) => o(c),
      isOpen: s,
      onSelect: (c) => {
        i.onChange(c), o(!1);
      },
      selections: i.value ? [i.value] : r("choose"),
      placeholderText: r("valuePlaceholder"),
      children: l.values.map((c) => /* @__PURE__ */ a(_e, { value: c, children: c }, c))
    }
  ) : /* @__PURE__ */ a(
    mt,
    {
      "aria-label": r("customValue"),
      "data-testid": n.name,
      ...i
    }
  );
}, ld = ({
  name: e,
  label: t = "attributes",
  defaultKeyValue: n,
  isDisabled: r = !1
}) => {
  const { t: i } = H(), {
    control: s,
    register: o,
    formState: { errors: l }
  } = Le(), { fields: c, append: d, remove: u } = sg({
    shouldUnregister: !0,
    control: s,
    name: e
  }), p = () => d({ key: "", value: "" }), m = nt({
    name: e,
    control: s,
    defaultValue: []
  });
  return c.length > 0 ? /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ C(Va, { hasGutter: !0, children: [
      /* @__PURE__ */ a(zt, { className: "pf-v5-c-form__label", span: 5, children: /* @__PURE__ */ a("span", { className: "pf-v5-c-form__label-text", children: i("key") }) }),
      /* @__PURE__ */ a(zt, { className: "pf-v5-c-form__label", span: 7, children: /* @__PURE__ */ a("span", { className: "pf-v5-c-form__label-text", children: i("value") }) }),
      c.map((f, g) => {
        const b = l[e]?.[g], v = !!b?.key, y = !!b?.value || !!b?.message, x = b?.message || i("valueError");
        return /* @__PURE__ */ C(ka, { children: [
          /* @__PURE__ */ C(zt, { span: 5, children: [
            n ? /* @__PURE__ */ a(
              Kk,
              {
                name: `${e}.${g}.key`,
                selectItems: n,
                rules: { required: !0 }
              }
            ) : /* @__PURE__ */ a(
              mt,
              {
                placeholder: i("keyPlaceholder"),
                "aria-label": i("key"),
                "data-testid": `${e}-key`,
                ...o(`${e}.${g}.key`, { required: !0 }),
                validated: v ? "error" : "default",
                isRequired: !0,
                isDisabled: r
              }
            ),
            v && /* @__PURE__ */ a(Xr, { children: /* @__PURE__ */ a(Yr, { variant: "error", children: i("keyError") }) })
          ] }),
          /* @__PURE__ */ C(zt, { span: 5, children: [
            n ? /* @__PURE__ */ a(
              cq,
              {
                name: `${e}.${g}.value`,
                keyValue: m[g]?.key,
                selectItems: n,
                rules: { required: !0 }
              }
            ) : /* @__PURE__ */ a(
              mt,
              {
                placeholder: i("valuePlaceholder"),
                "aria-label": i("value"),
                "data-testid": `${e}-value`,
                ...o(`${e}.${g}.value`, { required: !0 }),
                validated: y ? "error" : "default",
                isRequired: !0,
                isDisabled: r
              }
            ),
            y && /* @__PURE__ */ a(Xr, { children: /* @__PURE__ */ a(Yr, { variant: "error", children: x }) })
          ] }),
          /* @__PURE__ */ a(zt, { span: 2, children: /* @__PURE__ */ a(
            z,
            {
              variant: "link",
              title: i("removeAttribute"),
              onClick: () => u(g),
              "data-testid": `${e}-remove`,
              isDisabled: r,
              children: /* @__PURE__ */ a(Ni, {})
            }
          ) })
        ] }, f.id);
      })
    ] }),
    /* @__PURE__ */ a(qu, { children: /* @__PURE__ */ a(yi, { children: /* @__PURE__ */ a(
      z,
      {
        "data-testid": `${e}-add-row`,
        className: "pf-v5-u-px-0 pf-v5-u-mt-sm",
        variant: "link",
        icon: /* @__PURE__ */ a(Ea, {}),
        onClick: p,
        isDisabled: r,
        children: i("addAttribute", { label: t })
      }
    ) }) })
  ] }) : /* @__PURE__ */ C(
    Sr,
    {
      "data-testid": `${e}-empty-state`,
      className: "pf-v5-u-p-0",
      variant: "xs",
      children: [
        /* @__PURE__ */ a(Ri, { children: i("missingAttributes", { label: t }) }),
        /* @__PURE__ */ a(rs, { children: /* @__PURE__ */ a(
          z,
          {
            "data-testid": `${e}-add-row`,
            variant: "link",
            icon: /* @__PURE__ */ a(Ea, {}),
            size: "sm",
            onClick: p,
            isDisabled: r,
            children: i("addAttribute", { label: t })
          }
        ) })
      ]
    }
  );
}, Um = "tokenLifespan.inherited", Vm = "tokenLifespan.expires", Ll = ({
  id: e,
  name: t,
  defaultValue: n,
  units: r
}) => {
  const { t: i } = H(), [s, o] = N(!1), [l, c] = N(!1), d = () => c(!0), u = () => c(!1), { control: p } = Le(), m = (f) => typeof f == "number" || typeof f == "string" && f !== "" || l;
  return /* @__PURE__ */ a(
    se,
    {
      label: i(e),
      fieldId: e,
      labelIcon: /* @__PURE__ */ a(le, { helpText: i(`${e}Help`), fieldLabelId: e }),
      "data-testid": `token-lifespan-${e}`,
      children: /* @__PURE__ */ a(
        ge,
        {
          name: t,
          defaultValue: "",
          control: p,
          render: ({ field: f }) => /* @__PURE__ */ C(Jn, { hasGutter: !0, children: [
            /* @__PURE__ */ a(Dt, { children: /* @__PURE__ */ a(
              Bn,
              {
                toggle: (g) => /* @__PURE__ */ a(
                  yt,
                  {
                    ref: g,
                    onClick: () => o(!s),
                    isExpanded: s,
                    children: m(f.value) ? i(Vm) : i(Um)
                  }
                ),
                isOpen: s,
                onSelect: (g, b) => {
                  f.onChange(b), o(!1);
                },
                selected: m(f.value) ? i(Vm) : i(Um),
                children: /* @__PURE__ */ C(ia, { children: [
                  /* @__PURE__ */ a(_e, { value: "", children: i(Um) }),
                  /* @__PURE__ */ a(_e, { value: 60, children: i(Vm) })
                ] })
              }
            ) }),
            /* @__PURE__ */ a(Dt, { hidden: !m(f.value), children: /* @__PURE__ */ a(
              cn,
              {
                validated: m(f.value) && f.value < 1 ? "warning" : "default",
                units: r,
                value: f.value === "" ? n : f.value,
                onChange: f.onChange,
                onFocus: d,
                onBlur: u,
                min: 1,
                isDisabled: !m(f.value)
              }
            ) })
          ] })
        }
      )
    }
  );
}, dq = ({
  save: e,
  reset: t,
  protocol: n,
  hasConfigureAccess: r
}) => {
  const { t: i } = H(), [s, o] = N(!1), { realmRepresentation: l } = be(), d = oa()(zn.DPoP), { control: u } = Le();
  return /* @__PURE__ */ C(
    Fe,
    {
      role: "manage-realm",
      fineGrainedAccess: r,
      isHorizontal: !0,
      children: [
        n !== "openid-connect" && /* @__PURE__ */ a(
          se,
          {
            label: i("assertionLifespan"),
            fieldId: "assertionLifespan",
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: i("assertionLifespanHelp"),
                fieldLabelId: "assertionLifespan"
              }
            ),
            children: /* @__PURE__ */ a(
              ge,
              {
                name: Ne(
                  "attributes.saml.assertion.lifespan"
                ),
                defaultValue: "",
                control: u,
                render: ({ field: p }) => /* @__PURE__ */ a(
                  cn,
                  {
                    units: ["minute", "day", "hour"],
                    value: p.value,
                    onChange: p.onChange
                  }
                )
              }
            )
          }
        ),
        n === "openid-connect" && /* @__PURE__ */ C(ee, { children: [
          /* @__PURE__ */ a(
            Ll,
            {
              id: "accessTokenLifespan",
              name: Ne(
                "attributes.access.token.lifespan"
              ),
              defaultValue: l?.accessTokenLifespan,
              units: ["minute", "day", "hour"]
            }
          ),
          /* @__PURE__ */ a(
            Ll,
            {
              id: "clientSessionIdle",
              name: Ne(
                "attributes.client.session.idle.timeout"
              ),
              defaultValue: l?.clientSessionIdleTimeout,
              units: ["minute", "day", "hour"]
            }
          ),
          /* @__PURE__ */ a(
            Ll,
            {
              id: "clientSessionMax",
              name: Ne(
                "attributes.client.session.max.lifespan"
              ),
              defaultValue: l?.clientSessionMaxLifespan,
              units: ["minute", "day", "hour"]
            }
          ),
          /* @__PURE__ */ a(
            Ll,
            {
              id: "clientOfflineSessionIdle",
              name: Ne(
                "attributes.client.offline.session.idle.timeout"
              ),
              defaultValue: l?.offlineSessionIdleTimeout,
              units: ["minute", "day", "hour"]
            }
          ),
          l?.offlineSessionMaxLifespanEnabled && /* @__PURE__ */ a(
            Ll,
            {
              id: "clientOfflineSessionMax",
              name: Ne(
                "attributes.client.offline.session.max.lifespan"
              ),
              defaultValue: l?.offlineSessionMaxLifespanEnabled ? l.offlineSessionMaxLifespan : void 0,
              units: ["minute", "day", "hour"]
            }
          ),
          /* @__PURE__ */ a(
            bt,
            {
              name: Ne(
                "attributes.tls.client.certificate.bound.access.tokens"
              ),
              label: i("oAuthMutual"),
              labelIcon: i("oAuthMutualHelp"),
              stringify: !0
            }
          ),
          d && /* @__PURE__ */ a(
            bt,
            {
              name: Ne(
                "attributes.dpop.bound.access.tokens"
              ),
              label: i("oAuthDPoP"),
              labelIcon: i("oAuthDPoPHelp"),
              stringify: !0
            }
          ),
          /* @__PURE__ */ a(
            se,
            {
              label: i("keyForCodeExchange"),
              fieldId: "keyForCodeExchange",
              hasNoPaddingTop: !0,
              labelIcon: /* @__PURE__ */ a(
                le,
                {
                  helpText: i("keyForCodeExchangeHelp"),
                  fieldLabelId: "keyForCodeExchange"
                }
              ),
              children: /* @__PURE__ */ a(
                ge,
                {
                  name: Ne(
                    "attributes.pkce.code.challenge.method"
                  ),
                  defaultValue: "",
                  control: u,
                  render: ({ field: p }) => /* @__PURE__ */ a(
                    Bn,
                    {
                      toggle: (m) => /* @__PURE__ */ a(
                        yt,
                        {
                          id: "keyForCodeExchange",
                          ref: m,
                          onClick: () => o(!s),
                          isExpanded: s,
                          children: [p.value || i("choose")]
                        }
                      ),
                      isOpen: s,
                      onSelect: (m, f) => {
                        p.onChange(f), o(!1);
                      },
                      selected: p.value,
                      children: /* @__PURE__ */ a(ia, { children: ["", "S256", "plain"].map((m) => /* @__PURE__ */ a(_e, { value: m, children: m || i("choose") }, m)) })
                    }
                  )
                }
              )
            }
          ),
          /* @__PURE__ */ a(
            bt,
            {
              name: Ne(
                "attributes.require.pushed.authorization.requests"
              ),
              label: i("pushedAuthorizationRequestRequired"),
              labelIcon: i("pushedAuthorizationRequestRequiredHelp"),
              stringify: !0
            }
          ),
          /* @__PURE__ */ a(
            bt,
            {
              name: Ne(
                "attributes.client.use.lightweight.access.token.enabled"
              ),
              label: i("lightweightAccessToken"),
              labelIcon: i("lightweightAccessTokenHelp"),
              stringify: !0
            }
          ),
          /* @__PURE__ */ a(
            bt,
            {
              name: Ne(
                "attributes.client.introspection.response.allow.jwt.claim.enabled"
              ),
              label: i("supportJwtClaimInIntrospectionResponse"),
              labelIcon: i("supportJwtClaimInIntrospectionResponseHelp"),
              stringify: !0
            }
          ),
          /* @__PURE__ */ a(
            se,
            {
              label: i("acrToLoAMapping"),
              fieldId: "acrToLoAMapping",
              labelIcon: /* @__PURE__ */ a(
                le,
                {
                  helpText: i("acrToLoAMappingHelp"),
                  fieldLabelId: "acrToLoAMapping"
                }
              ),
              children: /* @__PURE__ */ a(
                ld,
                {
                  label: i("acrToLoAMapping"),
                  name: Ne("attributes.acr.loa.map")
                }
              )
            }
          ),
          /* @__PURE__ */ a(
            se,
            {
              label: i("defaultACRValues"),
              fieldId: "defaultACRValues",
              labelIcon: /* @__PURE__ */ a(
                le,
                {
                  helpText: i("defaultACRValuesHelp"),
                  fieldLabelId: "defaultACRValues"
                }
              ),
              children: /* @__PURE__ */ a(
                yr,
                {
                  id: "defaultACRValues",
                  "aria-label": "defaultACRValues",
                  name: Ne("attributes.default.acr.values"),
                  stringify: !0
                }
              )
            }
          )
        ] }),
        /* @__PURE__ */ C(st, { children: [
          /* @__PURE__ */ a(
            z,
            {
              variant: "secondary",
              onClick: e,
              "data-testid": "OIDCAdvancedSave",
              children: i("save")
            }
          ),
          /* @__PURE__ */ a(z, { variant: "link", onClick: t, "data-testid": "OIDCAdvancedRevert", children: i("revert") })
        ] })
      ]
    }
  );
}, xO = (e) => {
  const { t } = H();
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(
      ve,
      {
        name: "attributes.logoUri",
        label: t("logoUrl"),
        labelIcon: t("logoUrlHelp"),
        type: "url",
        ...e
      }
    ),
    /* @__PURE__ */ a(
      ve,
      {
        name: "attributes.policyUri",
        label: t("policyUrl"),
        labelIcon: t("policyUrlHelp"),
        type: "url",
        ...e
      }
    ),
    /* @__PURE__ */ a(
      ve,
      {
        name: "attributes.tosUri",
        label: t("termsOfServiceUrl"),
        labelIcon: t("termsOfServiceUrlHelp"),
        type: "url",
        ...e
      }
    )
  ] });
}, uq = ({
  protocol: e,
  save: t,
  reset: n,
  hasConfigureAccess: r
}) => {
  const { adminClient: i } = pe(), { t: s } = H(), [o, l] = N([]);
  return Re(
    () => i.authenticationManagement.getFlows(),
    (c) => {
      let d = [
        ...c.filter((u) => u.providerId !== "client-flow")
      ];
      d = zr(d, [(u) => u.alias]), l(d);
    },
    []
  ), /* @__PURE__ */ C(
    Fe,
    {
      role: "manage-clients",
      fineGrainedAccess: r,
      isHorizontal: !0,
      children: [
        /* @__PURE__ */ a(
          at,
          {
            name: "authenticationFlowBindingOverrides.browser",
            label: s("browserFlow"),
            labelIcon: s("browserFlowHelp"),
            controller: {
              defaultValue: ""
            },
            options: [
              { key: "", value: s("choose") },
              ...o.map(({ id: c, alias: d }) => ({ key: c, value: d }))
            ]
          }
        ),
        e === "openid-connect" && /* @__PURE__ */ a(
          at,
          {
            name: "authenticationFlowBindingOverrides.direct_grant",
            label: s("directGrant"),
            labelIcon: s("directGrantHelp"),
            controller: {
              defaultValue: ""
            },
            options: [
              { key: "", value: s("choose") },
              ...o.map(({ id: c, alias: d }) => ({ key: c, value: d }))
            ]
          }
        ),
        /* @__PURE__ */ C(st, { children: [
          /* @__PURE__ */ a(
            z,
            {
              variant: "secondary",
              onClick: t,
              "data-testid": "OIDCAuthFlowOverrideSave",
              children: s("save")
            }
          ),
          /* @__PURE__ */ a(
            z,
            {
              variant: "link",
              onClick: n,
              "data-testid": "OIDCAuthFlowOverrideRevert",
              children: s("revert")
            }
          )
        ] })
      ]
    }
  );
}, pq = (e) => {
  const { field: t } = qs(e);
  return /* @__PURE__ */ a(cn, { ...e, ...t });
}, Dc = {
  dateStyle: "long",
  timeStyle: "short"
};
function ni() {
  const { whoAmI: e } = _a(), t = e.getLocale();
  return function(r, i) {
    return r.toLocaleString(t, i);
  };
}
const mq = ({
  save: e,
  reset: t,
  hasConfigureAccess: n
}) => {
  const { t: r } = H(), i = Tt().providers, s = i?.clientSignature.providers, o = i?.contentencryption.providers, l = i?.cekmanagement.providers, c = i?.signature.providers, d = (f) => fp(f).map((g) => ({ key: g, value: g })), u = (f) => [
    { key: "", value: r("choose") },
    ...d(f)
  ], p = (f) => [
    { key: "any", value: r("any") },
    ...d(f)
  ], m = (f) => [
    { key: "none", value: r("none") },
    ...d(f)
  ];
  return /* @__PURE__ */ C(
    Fe,
    {
      role: "manage-clients",
      fineGrainedAccess: n,
      isHorizontal: !0,
      children: [
        /* @__PURE__ */ a(xO, {}),
        /* @__PURE__ */ a(
          at,
          {
            name: Ne(
              "attributes.access.token.signed.response.alg"
            ),
            label: r("accessTokenSignatureAlgorithm"),
            labelIcon: r("accessTokenSignatureAlgorithmHelp"),
            controller: {
              defaultValue: ""
            },
            options: u(s)
          }
        ),
        /* @__PURE__ */ a(
          at,
          {
            name: Ne(
              "attributes.id.token.signed.response.alg"
            ),
            label: r("idTokenSignatureAlgorithm"),
            labelIcon: r("idTokenSignatureAlgorithmHelp"),
            controller: {
              defaultValue: ""
            },
            options: u(s)
          }
        ),
        /* @__PURE__ */ a(
          at,
          {
            name: Ne(
              "attributes.id.token.encrypted.response.alg"
            ),
            label: r("idTokenEncryptionKeyManagementAlgorithm"),
            labelIcon: r("idTokenEncryptionKeyManagementAlgorithmHelp"),
            controller: {
              defaultValue: ""
            },
            options: u(l)
          }
        ),
        /* @__PURE__ */ a(
          at,
          {
            name: Ne(
              "attributes.id.token.encrypted.response.enc"
            ),
            label: r("idTokenEncryptionContentEncryptionAlgorithm"),
            labelIcon: r("idTokenEncryptionContentEncryptionAlgorithmHelp"),
            controller: {
              defaultValue: ""
            },
            options: u(o)
          }
        ),
        /* @__PURE__ */ a(
          at,
          {
            name: Ne(
              "attributes.user.info.response.signature.alg"
            ),
            label: r("userInfoSignedResponseAlgorithm"),
            labelIcon: r("userInfoSignedResponseAlgorithmHelp"),
            controller: {
              defaultValue: ""
            },
            options: u(c)
          }
        ),
        /* @__PURE__ */ a(
          at,
          {
            name: Ne(
              "attributes.user.info.encrypted.response.alg"
            ),
            label: r("userInfoResponseEncryptionKeyManagementAlgorithm"),
            labelIcon: r("userInfoResponseEncryptionKeyManagementAlgorithmHelp"),
            controller: {
              defaultValue: ""
            },
            options: u(l)
          }
        ),
        /* @__PURE__ */ a(
          at,
          {
            name: Ne(
              "attributes.user.info.encrypted.response.enc"
            ),
            label: r("userInfoResponseEncryptionContentEncryptionAlgorithm"),
            labelIcon: r(
              "userInfoResponseEncryptionContentEncryptionAlgorithmHelp"
            ),
            controller: {
              defaultValue: ""
            },
            options: u(o)
          }
        ),
        /* @__PURE__ */ a(
          at,
          {
            name: Ne(
              "attributes.request.object.signature.alg"
            ),
            label: r("requestObjectSignatureAlgorithm"),
            labelIcon: r("requestObjectSignatureAlgorithmHelp"),
            controller: {
              defaultValue: ""
            },
            options: [
              { key: "any", value: r("any") },
              ...m(s)
            ]
          }
        ),
        /* @__PURE__ */ a(
          at,
          {
            name: Ne(
              "attributes.request.object.encryption.alg"
            ),
            label: r("requestObjectEncryption"),
            labelIcon: r("requestObjectEncryptionHelp"),
            controller: {
              defaultValue: ""
            },
            options: p(l)
          }
        ),
        /* @__PURE__ */ a(
          at,
          {
            name: Ne(
              "attributes.request.object.encryption.enc"
            ),
            label: r("requestObjectEncoding"),
            labelIcon: r("requestObjectEncodingHelp"),
            controller: {
              defaultValue: ""
            },
            options: p(o)
          }
        ),
        /* @__PURE__ */ a(
          at,
          {
            name: Ne(
              "attributes.request.object.required"
            ),
            label: r("requestObjectRequired"),
            labelIcon: r("requestObjectRequiredHelp"),
            controller: {
              defaultValue: ""
            },
            options: [
              "not required",
              "request or request_uri",
              "request only",
              "request_uri only"
            ].map((f) => ({
              key: f,
              value: r(`requestObject.${f}`)
            }))
          }
        ),
        /* @__PURE__ */ a(
          se,
          {
            label: r("validRequestURIs"),
            fieldId: "validRequestURIs",
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: r("validRequestURIsHelp"),
                fieldLabelId: "validRequestURIs"
              }
            ),
            children: /* @__PURE__ */ a(
              yr,
              {
                name: Ne("attributes.request.uris"),
                "aria-label": r("validRequestURIs"),
                addButtonLabel: "addRequestUri",
                stringify: !0
              }
            )
          }
        ),
        /* @__PURE__ */ a(
          at,
          {
            name: Ne(
              "attributes.authorization.signed.response.alg"
            ),
            label: r("authorizationSignedResponseAlg"),
            labelIcon: r("authorizationSignedResponseAlgHelp"),
            controller: {
              defaultValue: ""
            },
            options: u(c)
          }
        ),
        /* @__PURE__ */ a(
          at,
          {
            name: Ne(
              "attributes.authorization.encrypted.response.alg"
            ),
            label: r("authorizationEncryptedResponseAlg"),
            labelIcon: r("authorizationEncryptedResponseAlgHelp"),
            controller: {
              defaultValue: ""
            },
            options: u(l)
          }
        ),
        /* @__PURE__ */ a(
          at,
          {
            name: Ne(
              "attributes.authorization.encrypted.response.enc"
            ),
            label: r("authorizationEncryptedResponseEnc"),
            labelIcon: r("authorizationEncryptedResponseEncHelp"),
            controller: {
              defaultValue: ""
            },
            options: u(o)
          }
        ),
        /* @__PURE__ */ C(st, { children: [
          /* @__PURE__ */ a(z, { variant: "secondary", id: "fineGrainSave", onClick: e, children: r("save") }),
          /* @__PURE__ */ a(z, { id: "fineGrainRevert", variant: "link", onClick: t, children: r("revert") })
        ] })
      ]
    }
  );
}, fq = ({
  save: e,
  reset: t
}) => {
  const { t: n } = H();
  return /* @__PURE__ */ C(Fe, { role: "manage-realm", isHorizontal: !0, children: [
    /* @__PURE__ */ a(xO, {}),
    /* @__PURE__ */ a(
      ve,
      {
        name: "attributes.saml_assertion_consumer_url_post",
        label: n("assertionConsumerServicePostBindingURL"),
        labelIcon: n("assertionConsumerServicePostBindingURLHelp"),
        type: "url"
      }
    ),
    /* @__PURE__ */ a(
      ve,
      {
        name: "attributes.saml_assertion_consumer_url_redirect",
        label: n("assertionConsumerServiceRedirectBindingURL"),
        labelIcon: n("assertionConsumerServiceRedirectBindingURLHelp"),
        type: "url"
      }
    ),
    /* @__PURE__ */ a(
      ve,
      {
        name: "attributes.saml_single_logout_service_url_post",
        label: n("logoutServicePostBindingURL"),
        labelIcon: n("logoutServicePostBindingURLHelp"),
        type: "url"
      }
    ),
    /* @__PURE__ */ a(
      ve,
      {
        name: "attributes.saml_single_logout_service_url_redirect",
        label: n("logoutServiceRedirectBindingURL"),
        labelIcon: n("logoutServiceRedirectBindingURLHelp"),
        type: "url"
      }
    ),
    /* @__PURE__ */ a(
      ve,
      {
        name: "attributes.saml_single_logout_service_url_soap",
        label: n("logoutServiceSoapBindingUrl"),
        labelIcon: n("logoutServiceSoapBindingUrlHelp"),
        type: "url"
      }
    ),
    /* @__PURE__ */ a(
      ve,
      {
        name: "attributes.saml_single_logout_service_url_artifact",
        label: n("logoutServiceArtifactBindingUrl"),
        labelIcon: n("logoutServiceArtifactBindingUrlHelp"),
        type: "url"
      }
    ),
    /* @__PURE__ */ a(
      ve,
      {
        name: "attributes.saml_artifact_binding_url",
        label: n("artifactBindingUrl"),
        labelIcon: n("artifactBindingUrlHelp"),
        type: "url"
      }
    ),
    /* @__PURE__ */ a(
      ve,
      {
        name: "attributes.saml_artifact_resolution_service_url",
        label: n("artifactResolutionService"),
        labelIcon: n("artifactResolutionServiceHelp"),
        type: "url"
      }
    ),
    /* @__PURE__ */ C(st, { children: [
      /* @__PURE__ */ a(z, { variant: "tertiary", onClick: e, "data-testid": "fineGrainSave", children: n("save") }),
      /* @__PURE__ */ a(z, { variant: "link", onClick: t, "data-testid": "fineGrainRevert", children: n("revert") })
    ] })
  ] });
}, hq = ({
  save: e,
  reset: t,
  hasConfigureAccess: n
}) => {
  const { t: r } = H(), { control: i } = Le();
  return /* @__PURE__ */ C(
    Fe,
    {
      role: "manage-clients",
      fineGrainedAccess: n,
      isHorizontal: !0,
      children: [
        /* @__PURE__ */ a(
          se,
          {
            label: r("excludeSessionStateFromAuthenticationResponse"),
            fieldId: "excludeSessionStateFromAuthenticationResponse",
            hasNoPaddingTop: !0,
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: r("excludeSessionStateFromAuthenticationResponseHelp"),
                fieldLabelId: "excludeSessionStateFromAuthenticationResponse"
              }
            ),
            children: /* @__PURE__ */ a(
              ge,
              {
                name: Ne(
                  "attributes.exclude.session.state.from.auth.response"
                ),
                defaultValue: "",
                control: i,
                render: ({ field: s }) => /* @__PURE__ */ a(
                  Ye,
                  {
                    id: "excludeSessionStateFromAuthenticationResponse-switch",
                    label: r("on"),
                    labelOff: r("off"),
                    isChecked: s.value === "true",
                    onChange: (o, l) => s.onChange(l.toString()),
                    "aria-label": r("excludeSessionStateFromAuthenticationResponse")
                  }
                )
              }
            )
          }
        ),
        /* @__PURE__ */ a(
          se,
          {
            label: r("excludeIssuerFromAuthenticationResponse"),
            fieldId: "excludeIssuerFromAuthenticationResponse",
            hasNoPaddingTop: !0,
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: r("excludeIssuerFromAuthenticationResponseHelp"),
                fieldLabelId: "excludeIssuerFromAuthenticationResponse"
              }
            ),
            children: /* @__PURE__ */ a(
              ge,
              {
                name: Ne(
                  "attributes.exclude.issuer.from.auth.response"
                ),
                defaultValue: "",
                control: i,
                render: ({ field: s }) => /* @__PURE__ */ a(
                  Ye,
                  {
                    id: "excludeIssuerFromAuthenticationResponse-switch",
                    label: r("on"),
                    labelOff: r("off"),
                    isChecked: s.value === "true",
                    onChange: (o, l) => s.onChange(l.toString()),
                    "aria-label": r("excludeIssuerFromAuthenticationResponse")
                  }
                )
              }
            )
          }
        ),
        /* @__PURE__ */ a(
          se,
          {
            label: r("useRefreshTokens"),
            fieldId: "useRefreshTokens",
            hasNoPaddingTop: !0,
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: r("useRefreshTokensHelp"),
                fieldLabelId: "useRefreshTokens"
              }
            ),
            children: /* @__PURE__ */ a(
              ge,
              {
                name: Ne(
                  "attributes.use.refresh.tokens"
                ),
                defaultValue: "true",
                control: i,
                render: ({ field: s }) => /* @__PURE__ */ a(
                  Ye,
                  {
                    id: "useRefreshTokens",
                    label: r("on"),
                    labelOff: r("off"),
                    isChecked: s.value === "true",
                    onChange: (o, l) => s.onChange(l.toString()),
                    "aria-label": r("useRefreshTokens")
                  }
                )
              }
            )
          }
        ),
        /* @__PURE__ */ a(
          se,
          {
            label: r("useRefreshTokenForClientCredentialsGrant"),
            fieldId: "useRefreshTokenForClientCredentialsGrant",
            hasNoPaddingTop: !0,
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: r("useRefreshTokenForClientCredentialsGrantHelp"),
                fieldLabelId: "useRefreshTokenForClientCredentialsGrant"
              }
            ),
            children: /* @__PURE__ */ a(
              ge,
              {
                name: Ne(
                  "attributes.client_credentials.use_refresh_token"
                ),
                defaultValue: "false",
                control: i,
                render: ({ field: s }) => /* @__PURE__ */ a(
                  Ye,
                  {
                    id: "useRefreshTokenForClientCredentialsGrant",
                    label: r("on"),
                    labelOff: r("off"),
                    isChecked: s.value === "true",
                    onChange: (o, l) => s.onChange(l.toString()),
                    "aria-label": r("useRefreshTokenForClientCredentialsGrant")
                  }
                )
              }
            )
          }
        ),
        /* @__PURE__ */ a(
          se,
          {
            label: r("useLowerCaseBearerType"),
            fieldId: "useLowerCaseBearerType",
            hasNoPaddingTop: !0,
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: r("useLowerCaseBearerTypeHelp"),
                fieldLabelId: "useLowerCaseBearerType"
              }
            ),
            children: /* @__PURE__ */ a(
              ge,
              {
                name: Ne(
                  "attributes.token.response.type.bearer.lower-case"
                ),
                defaultValue: "false",
                control: i,
                render: ({ field: s }) => /* @__PURE__ */ a(
                  Ye,
                  {
                    id: "useLowerCaseBearerType",
                    label: r("on"),
                    labelOff: r("off"),
                    isChecked: s.value === "true",
                    onChange: (o, l) => s.onChange(l.toString()),
                    "aria-label": r("useLowerCaseBearerType")
                  }
                )
              }
            )
          }
        ),
        /* @__PURE__ */ C(st, { children: [
          /* @__PURE__ */ a(
            z,
            {
              variant: "secondary",
              onClick: e,
              "data-testid": "OIDCCompatabilitySave",
              children: r("save")
            }
          ),
          /* @__PURE__ */ a(
            z,
            {
              variant: "link",
              onClick: t,
              "data-testid": "OIDCCompatabilityRevert",
              children: r("revert")
            }
          )
        ] })
      ]
    }
  );
}, gq = (e, t, n, r) => {
  const i = e.successRequests?.length || 0, s = e.failedRequests?.length || 0;
  i === 0 && s === 0 ? n(r("noAdminUrlSet"), ue.warning) : s > 0 ? (n(
    r(t + "Success", { successNodes: e.successRequests }),
    ue.success
  ), n(
    r(t + "Fail", { failedNodes: e.failedRequests }),
    ue.danger
  )) : n(
    r(t + "Success", { successNodes: e.successRequests }),
    ue.success
  );
}, bq = ({ save: e, client: t }) => {
  const { t: n } = H(), r = "openid-connect", { setValue: i } = Le(), {
    publicClient: s,
    attributes: o,
    protocol: l,
    authenticationFlowBindingOverrides: c
  } = t, d = (u) => {
    for (const p of u)
      i(
        Ne(`attributes.${p}`),
        o?.[p] || ""
      );
  };
  return /* @__PURE__ */ a(Te, { variant: "light", className: "pf-v5-u-py-0", children: /* @__PURE__ */ a(
    ll,
    {
      label: n("jumpToSection"),
      sections: [
        {
          title: n("clustering"),
          isHidden: !s,
          panel: /* @__PURE__ */ a(vq, { client: t, save: e })
        },
        {
          title: n("fineGrainOpenIdConnectConfiguration"),
          isHidden: l !== r,
          panel: /* @__PURE__ */ C(ee, { children: [
            /* @__PURE__ */ a(tt, { className: "pf-v5-u-pb-lg", children: n("fineGrainOpenIdConnectConfigurationHelp") }),
            /* @__PURE__ */ a(
              mq,
              {
                save: e,
                reset: () => {
                  d([
                    "logoUri",
                    "policyUri",
                    "tosUri",
                    "access.token.signed.response.alg",
                    "id.token.signed.response.alg",
                    "id.token.encrypted.response.alg",
                    "id.token.encrypted.response.enc",
                    "user.info.response.signature.alg",
                    "user.info.encrypted.response.alg",
                    "user.info.encrypted.response.enc",
                    "request.object.signature.alg",
                    "request.object.encryption.alg",
                    "request.object.encryption.enc",
                    "request.object.required",
                    "request.uris",
                    "authorization.signed.response.alg",
                    "authorization.encrypted.response.alg",
                    "authorization.encrypted.response.enc"
                  ]);
                }
              }
            )
          ] })
        },
        {
          title: n("openIdConnectCompatibilityModes"),
          isHidden: l !== r,
          panel: /* @__PURE__ */ C(ee, { children: [
            /* @__PURE__ */ a(tt, { className: "pf-v5-u-pb-lg", children: n("openIdConnectCompatibilityModesHelp") }),
            /* @__PURE__ */ a(
              hq,
              {
                save: () => e(),
                reset: () => d([
                  "exclude.session.state.from.auth.response",
                  "use.refresh.tokens",
                  "client_credentials.use_refresh_token",
                  "token.response.type.bearer.lower-case"
                ])
              }
            )
          ] })
        },
        {
          title: n("fineGrainSamlEndpointConfig"),
          isHidden: l === r,
          panel: /* @__PURE__ */ C(ee, { children: [
            /* @__PURE__ */ a(tt, { className: "pf-v5-u-pb-lg", children: n("fineGrainSamlEndpointConfigHelp") }),
            /* @__PURE__ */ a(
              fq,
              {
                save: () => e(),
                reset: () => d([
                  "logoUri",
                  "policyUri",
                  "tosUri",
                  "saml_assertion_consumer_url_post",
                  "saml_assertion_consumer_url_redirect",
                  "saml_single_logout_service_url_post",
                  "saml_single_logout_service_url_redirect",
                  "saml_single_logout_service_url_artifact",
                  "saml_artifact_binding_url",
                  "saml_artifact_resolution_service_url"
                ])
              }
            )
          ] })
        },
        {
          title: n("advancedSettings"),
          panel: /* @__PURE__ */ C(ee, { children: [
            /* @__PURE__ */ a(tt, { className: "pf-v5-u-pb-lg", children: n("advancedSettings" + wa(l || "")) }),
            /* @__PURE__ */ a(
              dq,
              {
                protocol: l,
                save: () => e(),
                reset: () => {
                  d([
                    "saml.assertion.lifespan",
                    "access.token.lifespan",
                    "tls.client.certificate.bound.access.tokens",
                    "pkce.code.challenge.method"
                  ]);
                }
              }
            )
          ] })
        },
        {
          title: n("authenticationOverrides"),
          panel: /* @__PURE__ */ C(ee, { children: [
            /* @__PURE__ */ a(tt, { className: "pf-v5-u-pb-lg", children: n("authenticationOverridesHelp") }),
            /* @__PURE__ */ a(
              uq,
              {
                protocol: l,
                save: () => e(),
                reset: () => {
                  i(
                    "authenticationFlowBindingOverrides.browser",
                    c?.browser
                  ), i(
                    "authenticationFlowBindingOverrides.direct_grant",
                    c?.direct_grant
                  );
                }
              }
            )
          ] })
        }
      ],
      borders: !0
    }
  ) });
}, vq = ({
  save: e,
  client: { id: t, registeredNodes: n, access: r }
}) => {
  const { adminClient: i } = pe(), { t: s } = H(), { addAlert: o, addError: l } = Se(), c = ni(), [d, u] = N(n || {}), [p, m] = N(!1), [f, g] = N(""), [b, v] = N(!1), [y, x] = N(0), w = () => x((/* @__PURE__ */ new Date()).getTime()), R = async () => {
    const O = await i.clients.testNodesAvailable({ id: t });
    gq(O, "testCluster", o, s);
  }, [S, _] = ze({
    titleKey: "deleteNode",
    messageKey: s("deleteNodeBody", {
      node: f
    }),
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        await i.clients.deleteClusterNode({
          id: t,
          node: f
        }), u({
          ...Object.keys(d).reduce((O, E) => (E !== f && (O[E] = d[E]), O), {})
        }), w(), o(s("deleteNodeSuccess"), ue.success);
      } catch (O) {
        l("deleteNodeFail", O);
      }
    }
  });
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(
      Fe,
      {
        role: "manage-clients",
        fineGrainedAccess: r?.configure,
        isHorizontal: !0,
        children: /* @__PURE__ */ a(
          se,
          {
            label: s("nodeReRegistrationTimeout"),
            fieldId: "kc-node-reregistration-timeout",
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: s("nodeReRegistrationTimeoutHelp"),
                fieldLabelId: "nodeReRegistrationTimeout"
              }
            ),
            children: /* @__PURE__ */ C(Jn, { hasGutter: !0, children: [
              /* @__PURE__ */ a(Dt, { children: /* @__PURE__ */ a(pq, { name: "nodeReRegistrationTimeout" }) }),
              /* @__PURE__ */ a(Dt, { children: /* @__PURE__ */ a(z, { variant: xe.secondary, onClick: () => e(), children: s("save") }) })
            ] })
          }
        )
      }
    ),
    /* @__PURE__ */ C(ee, { children: [
      /* @__PURE__ */ a(_, {}),
      /* @__PURE__ */ a(
        lq,
        {
          clientId: t,
          isOpen: b,
          onAdded: (O) => {
            d[O] = Date.now() / 1e3, w();
          },
          onClose: () => v(!1)
        }
      ),
      /* @__PURE__ */ a(
        us,
        {
          toggleText: s("registeredClusterNodes"),
          onToggle: (O, E) => m(E),
          isExpanded: p,
          children: /* @__PURE__ */ a(
            St,
            {
              ariaLabelKey: "registeredClusterNodes",
              loader: () => Promise.resolve(
                Object.entries(d || {}).map((O) => ({ host: O[0], registration: O[1] }))
              ),
              toolbarItem: /* @__PURE__ */ C(ee, { children: [
                /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(
                  z,
                  {
                    id: "testClusterAvailability",
                    onClick: R,
                    variant: xe.secondary,
                    isDisabled: Object.keys(d).length === 0,
                    children: s("testClusterAvailability")
                  }
                ) }),
                /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(
                  z,
                  {
                    id: "registerNodeManually",
                    onClick: () => v(!0),
                    variant: xe.tertiary,
                    children: s("registerNodeManually")
                  }
                ) })
              ] }),
              actions: [
                {
                  title: s("delete"),
                  onRowClick: (O) => {
                    g(O.host), S();
                  }
                }
              ],
              columns: [
                {
                  name: "host",
                  displayKey: "nodeHost"
                },
                {
                  name: "registration",
                  displayKey: "lastRegistration",
                  cellFormatters: [
                    (O) => O ? c(
                      new Date(parseInt(O.toString()) * 1e3),
                      Dc
                    ) : ""
                  ]
                }
              ],
              emptyState: /* @__PURE__ */ a(
                ct,
                {
                  message: s("noNodes"),
                  instructions: s("noNodesInstructions"),
                  primaryActionText: s("registerNodeManually"),
                  onPrimaryAction: () => v(!0)
                }
              )
            },
            y
          )
        }
      )
    ] })
  ] });
}, yq = Be(
  () => import("./PermissionDetails-DsgxjrkW.js")
), Xg = {
  path: "/:realm/clients/:id/authorization/permission/new/:permissionType",
  element: /* @__PURE__ */ a(yq, {}),
  breadcrumb: (e) => e("createPermission"),
  handle: {
    access: (e) => e.hasAny("manage-clients", "manage-authorization")
  }
}, SO = {
  ...Xg,
  path: "/:realm/clients/:id/authorization/permission/new/:permissionType/:selectedId"
}, Mc = (e) => {
  const t = e.selectedId ? SO.path : Xg.path;
  return {
    pathname: We(t, e)
  };
}, Cq = Be(() => import("./ResourceDetails-B8B5Eh9o.js")), wO = {
  path: "/:realm/clients/:id/authorization/resource/new",
  element: /* @__PURE__ */ a(Cq, {}),
  breadcrumb: (e) => e("createResource"),
  handle: {
    access: (e) => e.hasAny("manage-clients", "manage-authorization")
  }
}, XC = (e) => ({
  pathname: We(wO.path, e)
}), xq = Be(() => import("./ResourceDetails-B8B5Eh9o.js")), Yg = {
  path: "/:realm/clients/:id/authorization/resource",
  element: /* @__PURE__ */ a(xq, {}),
  breadcrumb: (e) => e("resourceDetails"),
  handle: {
    access: (e) => e.hasAny(
      "manage-clients",
      "view-authorization",
      "manage-authorization"
    )
  }
}, kO = {
  ...Yg,
  path: "/:realm/clients/:id/authorization/resource/:resourceId"
}, Jg = (e) => {
  const t = e.resourceId ? kO.path : Yg.path;
  return {
    pathname: We(t, e)
  };
}, Sq = Be(
  () => import("./PermissionDetails-DsgxjrkW.js")
), OO = {
  path: "/:realm/clients/:id/authorization/permission/:permissionType/:permissionId",
  element: /* @__PURE__ */ a(Sq, {}),
  breadcrumb: (e) => e("permissionDetails"),
  handle: {
    access: (e) => e.hasAny(
      "manage-clients",
      "view-authorization",
      "manage-authorization"
    )
  }
}, Us = (e) => ({
  pathname: We(OO.path, e)
}), wq = Be(() => import("./ScopeDetails-C5Ma6EZg.js")), Zg = {
  path: "/:realm/clients/:id/authorization/scope",
  element: /* @__PURE__ */ a(wq, {}),
  breadcrumb: (e) => e("authorizationScopeDetails"),
  handle: {
    access: (e) => e.hasAny("manage-clients", "view-authorization")
  }
}, TO = {
  ...Zg,
  path: "/:realm/clients/:id/authorization/scope/:scopeId"
}, EO = (e) => {
  const t = e.scopeId ? TO.path : Zg.path;
  return {
    pathname: We(t, e)
  };
};
function kq(e) {
  return /* @__PURE__ */ a(Vs, { ...e });
}
function Vs({
  name: e,
  array: t,
  convert: n,
  link: r
}) {
  const { t: i } = H();
  return /* @__PURE__ */ C(qi, { children: [
    /* @__PURE__ */ a(Mr, { children: i(e) }),
    /* @__PURE__ */ C(Dr, { children: [
      t?.map((s) => {
        const o = typeof s == "string" ? s : n(s);
        return r ? /* @__PURE__ */ a(Ae, { to: r(s), className: "pf-v5-u-pr-sm", children: o }, o) : /* @__PURE__ */ a("span", { className: "pf-v5-u-pr-sm", children: o }, o);
      }),
      t?.length === 0 && /* @__PURE__ */ a("i", { children: i("none") })
    ] })
  ] });
}
const Oq = ({ id: e, clientId: t, uris: n }) => {
  const { adminClient: r } = pe(), { realm: i } = be(), [s, o] = N(), [l, c] = N();
  return Re(
    () => Promise.all([
      r.clients.listScopesByResource({
        id: t,
        resourceName: e
      }),
      r.clients.listPermissionsByResource({
        id: t,
        resourceId: e
      })
    ]),
    ([d, u]) => {
      o(d), c(u);
    },
    []
  ), !l || !s ? /* @__PURE__ */ a(gt, {}) : /* @__PURE__ */ C(vr, { isHorizontal: !0, className: "keycloak_resource_details", children: [
    /* @__PURE__ */ a(kq, { name: "uris", array: n }),
    /* @__PURE__ */ a(
      Vs,
      {
        name: "scopes",
        array: s,
        convert: (d) => d.name,
        link: (d) => EO({ id: t, realm: i, scopeId: d.id })
      }
    ),
    /* @__PURE__ */ a(
      Vs,
      {
        name: "associatedPermissions",
        array: l,
        convert: (d) => d.name,
        link: (d) => Us({
          id: t,
          realm: i,
          permissionId: d.id,
          permissionType: "resource"
        })
      }
    )
  ] });
}, Qg = ({ array: e }) => {
  const { t } = H();
  return !e || e.length <= 1 ? null : /* @__PURE__ */ a(pn, { color: "blue", children: t("more", { count: e.length - 1 }) });
}, eb = ({
  types: e,
  search: t,
  onSearch: n,
  type: r
}) => {
  const { t: i } = H(), s = Ue({ mode: "onChange" }), {
    reset: o,
    formState: { isDirty: l },
    handleSubmit: c
  } = s, [d, u] = ot(), p = (m) => {
    u(), n(m);
  };
  return He(() => o(t), [t]), /* @__PURE__ */ a(
    qt,
    {
      toggle: (m) => /* @__PURE__ */ C(
        yt,
        {
          "data-testid": "searchdropdown_dorpdown",
          ref: m,
          onClick: u,
          className: "keycloak__client_authentication__searchdropdown",
          children: [
            r === "resource" && i("searchClientAuthorizationResource"),
            r === "policy" && i("searchClientAuthorizationPolicy"),
            r === "permission" && i("searchClientAuthorizationPermission")
          ]
        }
      ),
      isOpen: d,
      children: /* @__PURE__ */ a(Ve, { ...s, children: /* @__PURE__ */ C(
        xt,
        {
          isHorizontal: !0,
          className: "keycloak__client_authentication__searchdropdown_form",
          onSubmit: c(p),
          children: [
            /* @__PURE__ */ a(ve, { name: "name", label: i("name") }),
            r === "resource" && /* @__PURE__ */ C(ee, { children: [
              /* @__PURE__ */ a(ve, { name: "type", label: i("type") }),
              /* @__PURE__ */ a(ve, { name: "uris", label: i("uris") }),
              /* @__PURE__ */ a(ve, { name: "owner", label: i("owner") })
            ] }),
            r !== "resource" && r !== "policy" && /* @__PURE__ */ a(ve, { name: "resource", label: i("resource") }),
            r !== "policy" && /* @__PURE__ */ a(ve, { name: "scope", label: i("scope") }),
            r !== "resource" && /* @__PURE__ */ a(
              at,
              {
                name: "type",
                label: i("type"),
                controller: {
                  defaultValue: ""
                },
                options: [
                  { key: "", value: i("allTypes") },
                  ...(e || []).map(({ type: m, name: f }) => ({
                    key: m,
                    value: f
                  }))
                ]
              }
            ),
            /* @__PURE__ */ C(st, { children: [
              /* @__PURE__ */ a(
                z,
                {
                  variant: "primary",
                  type: "submit",
                  "data-testid": "search-btn",
                  isDisabled: !l,
                  children: i("search")
                }
              ),
              /* @__PURE__ */ a(
                z,
                {
                  variant: "link",
                  "data-testid": "revert-btn",
                  onClick: () => n({}),
                  children: i("clear")
                }
              )
            ] })
          ]
        }
      ) })
    }
  );
}, Tq = ({ row: e }) => /* @__PURE__ */ C(ee, { children: [
  e.uris?.[0],
  " ",
  /* @__PURE__ */ a(Qg, { array: e.uris })
] }), Eq = ({
  clientId: e,
  isDisabled: t = !1
}) => {
  const { adminClient: n } = pe(), { t: r } = H(), i = Je(), { addAlert: s, addError: o } = Se(), { realm: l } = be(), [c, d] = N(), [u, p] = N(), [m, f] = N(), [g, b] = N(0), v = () => b(g + 1), [y, x] = N(10), [w, R] = N(0), [S, _] = N({});
  Re(
    () => {
      const P = {
        first: w,
        max: y + 1,
        deep: !1,
        ...S
      };
      return n.clients.listResources({
        ...P,
        id: e
      });
    },
    (P) => d(
      P.map((D) => ({ ...D, isExpanded: !1 }))
    ),
    [g, S, w, y]
  );
  const O = async (P) => n.clients.listPermissionsByResource({
    id: e,
    resourceId: P
  }), [E, T] = ze({
    titleKey: "deleteResource",
    children: /* @__PURE__ */ C(ee, { children: [
      r("deleteResourceConfirm"),
      m?.length && /* @__PURE__ */ a(
        _n,
        {
          variant: "warning",
          isInline: !0,
          isPlain: !0,
          title: r("deleteResourceWarning"),
          className: "pf-v5-u-pt-lg",
          children: /* @__PURE__ */ a("p", { className: "pf-v5-u-pt-xs", children: m.map((P) => /* @__PURE__ */ a("strong", { className: "pf-v5-u-pr-md", children: P.name }, P.id)) })
        }
      )
    ] }),
    continueButtonLabel: "confirm",
    onConfirm: async () => {
      try {
        await n.clients.delResource({
          id: e,
          resourceId: u?._id
        }), s(r("resourceDeletedSuccess"), ue.success), v();
      } catch (P) {
        o("resourceDeletedError", P);
      }
    }
  });
  if (!c)
    return /* @__PURE__ */ a(gt, {});
  const I = c.length === 0, k = Object.keys(S).length !== 0;
  return /* @__PURE__ */ C(Te, { variant: "light", className: "pf-v5-u-p-0", children: [
    /* @__PURE__ */ a(T, {}),
    (!I || k) && /* @__PURE__ */ a(
      Fi,
      {
        count: c.length,
        first: w,
        max: y,
        onNextClick: R,
        onPreviousClick: R,
        onPerPageSelect: (P, D) => {
          R(P), x(D);
        },
        toolbarItem: /* @__PURE__ */ C(ee, { children: [
          /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(
            eb,
            {
              search: S,
              onSearch: _,
              type: "resource"
            }
          ) }),
          /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(
            z,
            {
              "data-testid": "createResource",
              isDisabled: t,
              component: (P) => /* @__PURE__ */ a(
                Ae,
                {
                  ...P,
                  to: XC({ realm: l, id: e })
                }
              ),
              children: r("createResource")
            }
          ) })
        ] }),
        children: !I && /* @__PURE__ */ C(Cn, { "aria-label": r("resources"), variant: "compact", children: [
          /* @__PURE__ */ a(wn, { children: /* @__PURE__ */ C(rt, { children: [
            /* @__PURE__ */ a(De, { "aria-hidden": "true" }),
            /* @__PURE__ */ a(De, { children: r("name") }),
            /* @__PURE__ */ a(De, { children: r("displayName") }),
            /* @__PURE__ */ a(De, { children: r("type") }),
            /* @__PURE__ */ a(De, { children: r("owner") }),
            /* @__PURE__ */ a(De, { children: r("uris") }),
            !t && /* @__PURE__ */ C(ee, { children: [
              /* @__PURE__ */ a(De, { "aria-hidden": "true" }),
              /* @__PURE__ */ a(De, { "aria-hidden": "true" })
            ] })
          ] }) }),
          c.map((P, D) => /* @__PURE__ */ C(yn, { isExpanded: P.isExpanded, children: [
            /* @__PURE__ */ C(rt, { children: [
              /* @__PURE__ */ a(
                ke,
                {
                  expand: {
                    rowIndex: D,
                    isExpanded: P.isExpanded,
                    onToggle: (F, A) => {
                      const M = c.map(
                        (V, U) => U === A ? {
                          ...V,
                          isExpanded: !V.isExpanded
                        } : V
                      );
                      d(M);
                    }
                  }
                }
              ),
              /* @__PURE__ */ a(ke, { "data-testid": `name-column-${P.name}`, children: /* @__PURE__ */ a(
                Ae,
                {
                  to: Jg({
                    realm: l,
                    id: e,
                    resourceId: P._id
                  }),
                  children: P.name
                }
              ) }),
              /* @__PURE__ */ a(ke, { children: P.displayName }),
              /* @__PURE__ */ a(ke, { children: P.type }),
              /* @__PURE__ */ a(ke, { children: P.owner?.name }),
              /* @__PURE__ */ a(ke, { children: /* @__PURE__ */ a(Tq, { row: P }) }),
              !t && /* @__PURE__ */ C(ee, { children: [
                /* @__PURE__ */ a(ke, { width: 10, children: /* @__PURE__ */ a(
                  z,
                  {
                    variant: "link",
                    component: (F) => /* @__PURE__ */ a(
                      Ae,
                      {
                        ...F,
                        to: Mc({
                          realm: l,
                          id: e,
                          permissionType: "resource",
                          selectedId: P._id
                        })
                      }
                    ),
                    children: r("createPermission")
                  }
                ) }),
                /* @__PURE__ */ a(
                  ke,
                  {
                    actions: {
                      items: [
                        {
                          title: r("delete"),
                          onClick: async () => {
                            p(P), f(
                              await O(P._id)
                            ), E();
                          }
                        }
                      ]
                    }
                  }
                )
              ] })
            ] }),
            /* @__PURE__ */ C(
              rt,
              {
                isExpanded: P.isExpanded,
                children: [
                  /* @__PURE__ */ a(ke, {}),
                  /* @__PURE__ */ a(ke, { colSpan: 4, children: /* @__PURE__ */ a(hs, { children: P.isExpanded && /* @__PURE__ */ a(
                    Oq,
                    {
                      clientId: e,
                      id: P._id,
                      uris: P.uris
                    }
                  ) }) })
                ]
              },
              `child-${P._id}`
            )
          ] }, P._id))
        ] })
      }
    ),
    I && k && /* @__PURE__ */ a(
      ct,
      {
        isSearchVariant: !0,
        message: r("noSearchResults"),
        instructions: r("noSearchResultsInstructions")
      }
    ),
    I && !k && /* @__PURE__ */ a(
      ct,
      {
        message: r("emptyResources"),
        instructions: r("emptyResourcesInstructions"),
        isDisabled: t,
        primaryActionText: r("createResource"),
        onPrimaryAction: () => i(XC({ realm: l, id: e }))
      }
    )
  ] });
}, Iq = Be(() => import("./ScopeDetails-C5Ma6EZg.js")), IO = {
  path: "/:realm/clients/:id/authorization/scope/new",
  element: /* @__PURE__ */ a(Iq, {}),
  breadcrumb: (e) => e("createAuthorizationScope"),
  handle: {
    access: (e) => e.hasAny("manage-clients", "manage-authorization")
  }
}, YC = (e) => ({
  pathname: We(IO.path, e)
}), Pq = ({
  clientId: e,
  selectedScope: t,
  refresh: n,
  open: r,
  toggleDialog: i
}) => {
  const { adminClient: s } = pe(), { t: o } = H(), { addAlert: l, addError: c } = Se();
  return /* @__PURE__ */ C(
    ms,
    {
      open: r,
      toggleDialog: i,
      titleKey: "deleteScope",
      continueButtonLabel: "confirm",
      onConfirm: async () => {
        try {
          await s.clients.delAuthorizationScope({
            id: e,
            scopeId: t?.id
          }), l(o("resourceScopeSuccess"), ue.success), n();
        } catch (d) {
          c("resourceScopeError", d);
        }
      },
      children: [
        o("deleteScopeConfirm"),
        t && "permissions" in t && t.permissions && t.permissions.length > 0 && /* @__PURE__ */ a(
          _n,
          {
            variant: "warning",
            isInline: !0,
            isPlain: !0,
            title: o("deleteScopeWarning"),
            className: "pf-v5-u-pt-lg",
            children: /* @__PURE__ */ a("p", { className: "pf-v5-u-pt-xs", children: t.permissions.map((d) => /* @__PURE__ */ a("strong", { className: "pf-v5-u-pr-md", children: d.name }, d.id)) })
          }
        )
      ]
    }
  );
}, _q = ({
  clientId: e,
  isDisabled: t = !1
}) => {
  const { adminClient: n } = pe(), { t: r } = H(), i = Je(), { realm: s } = be(), [o, l] = ot(), [c, d] = N(), [u, p] = N(), [m, f] = N([]), [g, b] = N(0), v = () => b(g + 1), [y, x] = N(10), [w, R] = N(0), [S, _] = N("");
  Re(
    () => {
      const k = {
        first: w,
        max: y + 1,
        deep: !1,
        name: S
      };
      return n.clients.listAllScopes({
        ...k,
        id: e
      });
    },
    (k) => {
      d(k.map((P) => ({ ...P, isLoaded: !1 }))), f(k.map((P) => ({ id: P.id, isExpanded: !1 })));
    },
    [g, S, w, y]
  );
  const O = (k) => c?.find((P) => P.id === k), E = (k) => m.find((P) => P.id === k)?.isExpanded || !1;
  if (Re(
    () => {
      const k = m.filter((P) => P.isExpanded).map(({ id: P }) => O(P)).filter((P) => !P.isLoaded);
      return Promise.all(
        k.map(async (P) => {
          const [D, F] = await Promise.all([
            n.clients.listAllResourcesByScope({
              id: e,
              scopeId: P.id
            }),
            n.clients.listAllPermissionsByScope({
              id: e,
              scopeId: P.id
            })
          ]);
          return {
            ...P,
            resources: D,
            permissions: F,
            isLoaded: !0
          };
        })
      );
    },
    (k) => {
      let P = [...c || []];
      k.forEach((D) => {
        const F = c?.findIndex(
          (A) => D.id === A.id
        );
        P = [
          ...P.slice(0, F),
          D,
          ...P.slice(F + 1)
        ];
      }), d(P);
    },
    [m]
  ), !c)
    return /* @__PURE__ */ a(gt, {});
  const T = c.length === 0, I = S !== "";
  return /* @__PURE__ */ C(Te, { variant: "light", className: "pf-v5-u-p-0", children: [
    /* @__PURE__ */ a(
      Pq,
      {
        clientId: e,
        open: o,
        toggleDialog: l,
        selectedScope: u,
        refresh: v
      }
    ),
    (!T || I) && /* @__PURE__ */ a(
      Fi,
      {
        count: c.length,
        first: w,
        max: y,
        onNextClick: R,
        onPreviousClick: R,
        onPerPageSelect: (k, P) => {
          R(k), x(P);
        },
        inputGroupName: "search",
        inputGroupPlaceholder: r("searchByName"),
        inputGroupOnEnter: _,
        toolbarItem: /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(
          z,
          {
            "data-testid": "createAuthorizationScope",
            component: (k) => /* @__PURE__ */ a(Ae, { ...k, to: YC({ realm: s, id: e }) }),
            children: r("createAuthorizationScope")
          }
        ) }),
        children: !T && /* @__PURE__ */ C(Cn, { "aria-label": r("scopes"), variant: "compact", children: [
          /* @__PURE__ */ a(wn, { children: /* @__PURE__ */ C(rt, { children: [
            /* @__PURE__ */ a(De, { "aria-hidden": "true" }),
            /* @__PURE__ */ a(De, { children: r("name") }),
            /* @__PURE__ */ a(De, { children: r("displayName") }),
            /* @__PURE__ */ a(De, { "aria-hidden": "true" }),
            /* @__PURE__ */ a(De, { "aria-hidden": "true" })
          ] }) }),
          c.map((k, P) => /* @__PURE__ */ C(yn, { isExpanded: E(k.id), children: [
            /* @__PURE__ */ C(rt, { children: [
              /* @__PURE__ */ a(
                ke,
                {
                  expand: {
                    rowIndex: P,
                    isExpanded: E(k.id),
                    onToggle: (D, F, A) => {
                      f([
                        ...m.slice(0, F),
                        { id: k.id, isExpanded: A },
                        ...m.slice(F + 1)
                      ]);
                    }
                  }
                }
              ),
              /* @__PURE__ */ a(ke, { "data-testid": `name-column-${k.name}`, children: /* @__PURE__ */ a(
                Ae,
                {
                  to: EO({
                    realm: s,
                    id: e,
                    scopeId: k.id
                  }),
                  children: k.name
                }
              ) }),
              /* @__PURE__ */ a(ke, { children: k.displayName }),
              /* @__PURE__ */ a(ke, { width: 10, children: /* @__PURE__ */ a(
                z,
                {
                  variant: "link",
                  component: (D) => /* @__PURE__ */ a(
                    Ae,
                    {
                      ...D,
                      to: Mc({
                        realm: s,
                        id: e,
                        permissionType: "scope",
                        selectedId: k.id
                      })
                    }
                  ),
                  children: r("createPermission")
                }
              ) }),
              /* @__PURE__ */ a(
                ke,
                {
                  isActionCell: !0,
                  actions: {
                    items: [
                      {
                        title: r("delete"),
                        onClick: () => {
                          p(k), l();
                        }
                      }
                    ]
                  }
                }
              )
            ] }),
            /* @__PURE__ */ C(
              rt,
              {
                isExpanded: E(k.id),
                children: [
                  /* @__PURE__ */ a(ke, {}),
                  /* @__PURE__ */ a(ke, { colSpan: 4, children: /* @__PURE__ */ a(hs, { children: E(k.id) && k.isLoaded ? /* @__PURE__ */ C(
                    vr,
                    {
                      isHorizontal: !0,
                      className: "keycloak_resource_details",
                      children: [
                        /* @__PURE__ */ a(
                          Vs,
                          {
                            name: "resources",
                            array: k.resources,
                            convert: (D) => D.name,
                            link: (D) => Jg({
                              id: e,
                              realm: s,
                              resourceId: D._id
                            })
                          }
                        ),
                        /* @__PURE__ */ a(
                          Vs,
                          {
                            name: "associatedPermissions",
                            array: k.permissions,
                            convert: (D) => D.name,
                            link: (D) => Us({
                              id: e,
                              realm: s,
                              permissionId: D.id,
                              permissionType: D.type
                            })
                          }
                        )
                      ]
                    }
                  ) : /* @__PURE__ */ a(gt, {}) }) })
                ]
              },
              `child-${k.id}`
            )
          ] }, k.id))
        ] })
      }
    ),
    T && !I && /* @__PURE__ */ a(
      ct,
      {
        message: r("emptyAuthorizationScopes"),
        instructions: r("emptyAuthorizationInstructions"),
        isDisabled: t,
        onPrimaryAction: () => i(YC({ id: e, realm: s })),
        primaryActionText: r("createAuthorizationScope")
      }
    ),
    T && I && /* @__PURE__ */ a(
      ct,
      {
        isSearchVariant: !0,
        isDisabled: t,
        message: r("noSearchResults"),
        instructions: r("noSearchResultsInstructions")
      }
    )
  ] });
}, Rq = Be(
  () => Promise.resolve().then(() => LO)
), PO = {
  path: "/:realm/clients/:id/authorization/policy/new/:policyType",
  element: /* @__PURE__ */ a(Rq, {}),
  breadcrumb: (e) => e("createPolicy"),
  handle: {
    access: (e) => e.hasAny("manage-clients", "manage-authorization")
  }
}, Qf = (e) => ({
  pathname: We(PO.path, e)
}), Aq = Be(
  () => Promise.resolve().then(() => LO)
), _O = {
  path: "/:realm/clients/:id/authorization/policy/:policyId/:policyType",
  element: /* @__PURE__ */ a(Aq, {}),
  breadcrumb: (e) => e("policyDetails"),
  handle: {
    access: (e) => e.hasAny(
      "manage-clients",
      "view-authorization",
      "manage-authorization"
    )
  }
}, cd = (e) => ({
  pathname: We(_O.path, e)
}), Lq = Be(() => Promise.resolve().then(() => pb)), RO = {
  path: "/:realm/clients/:clientId/authorization/:tab",
  element: /* @__PURE__ */ a(Lq, {}),
  breadcrumb: (e) => e("clientSettings"),
  handle: {
    access: (e) => e.hasAny("view-authorization", "manage-authorization")
  }
}, Du = (e) => ({
  pathname: We(RO.path, e)
}), Nq = {
  resources: {
    searchFunction: "listResources",
    fetchFunction: "getAssociatedResources"
  },
  policies: {
    searchFunction: "listPolicies",
    fetchFunction: "getAssociatedPolicies"
  }
}, Dq = ({
  name: e,
  clientId: t,
  permissionId: n,
  variant: r = pt.typeaheadMulti,
  preSelected: i,
  isRequired: s = !1
}) => {
  const { adminClient: o } = pe(), { realm: l } = be(), { t: c } = H(), d = Je(), {
    control: u,
    formState: { errors: p, isDirty: m }
  } = Le(), [f, g] = N([]), [b, v] = N(""), [y, x] = N(!1), [w, R] = ot(), [S, _] = N(), [O, E] = N(), T = Nq[e], I = (M) => ({
    id: "_id" in M ? M._id : "id" in M ? M.id : void 0,
    name: M.name,
    type: M.type
  });
  Re(
    async () => {
      const M = Object.assign(
        { id: t, first: 0, max: 10, permission: "false" },
        b === "" ? null : { name: b }
      );
      return await Promise.all([
        o.clients.listPolicyProviders({ id: t }),
        o.clients[T.searchFunction](M),
        n ? o.clients[T.fetchFunction]({
          id: t,
          permissionId: n
        }) : Promise.resolve([])
      ]);
    },
    ([M, ...V]) => {
      _(
        M.filter((U) => U.type !== "resource" && U.type !== "scope")
      ), g(
        V.flat().filter(
          (U) => typeof U != "string"
        ).map(I).filter(
          ({ id: U }, G, q) => G === q.findIndex(({ id: L }) => U === L)
        )
      );
    },
    [b]
  );
  const [k, P] = ze({
    titleKey: c("unsavedChangesTitle"),
    messageKey: c("unsavedChangesConfirm"),
    continueButtonLabel: c("continue"),
    continueButtonVariant: xe.danger,
    onConfirm: () => O?.()
  }), D = (M) => e === "policies" ? cd({
    realm: l,
    id: t,
    policyId: M.id,
    policyType: M.type
  }) : Jg({
    realm: l,
    id: t,
    resourceId: M.id
  }), F = () => f.map((M) => /* @__PURE__ */ a(_e, { value: M.id, children: M.name }, M.id)), A = (M) => /* @__PURE__ */ a(vn, { children: M.value?.map((V) => {
    const U = f.find(
      (q) => q.id === V
    );
    if (!U) return;
    const G = D(U);
    return /* @__PURE__ */ a(
      Ut,
      {
        onClick: () => {
          M.onChange(M.value?.filter((q) => q !== U.id));
        },
        children: /* @__PURE__ */ a(
          Ae,
          {
            to: G,
            onClick: (q) => {
              m && (q.preventDefault(), E(() => () => d(G)), k());
            },
            children: U.name
          }
        )
      },
      U.id
    );
  }) });
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(P, {}),
    w && /* @__PURE__ */ a(
      th,
      {
        policyProviders: S,
        onSelect: (M) => {
          d(
            Qf({ id: t, realm: l, policyType: M.type })
          );
        },
        toggleDialog: R
      }
    ),
    /* @__PURE__ */ a(
      ge,
      {
        name: e,
        defaultValue: i ? [i] : [],
        control: u,
        rules: { validate: (M) => !s || M.length > 0 },
        render: ({ field: M }) => /* @__PURE__ */ a(
          ft,
          {
            toggleId: e,
            variant: r,
            onToggle: (V) => x(V),
            onFilter: (V) => (v(V), F()),
            onClear: () => {
              M.onChange([]), v("");
            },
            selections: M.value,
            onSelect: (V) => {
              const U = V.toString();
              if (r === pt.typeaheadMulti) {
                const G = M.value?.find(
                  (q) => q === U
                ) ? M.value.filter((q) => q !== U) : [...M.value, U];
                M.onChange(G);
              } else
                M.onChange([U]);
              v("");
            },
            isOpen: y,
            "aria-label": c(e),
            isDisabled: !!i,
            validated: p[e] ? "error" : "default",
            typeAheadAriaLabel: c(e),
            chipGroupComponent: A(M),
            footer: e === "policies" ? /* @__PURE__ */ a(
              z,
              {
                variant: "link",
                isInline: !0,
                onClick: () => {
                  m ? (x(!1), E(
                    () => R
                  ), k()) : R();
                },
                children: c("createPolicy")
              }
            ) : void 0,
            children: F()
          }
        )
      }
    )
  ] });
}, Mq = () => {
  const { t: e } = H(), { id: t } = Vt();
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(
      se,
      {
        label: e("applyPolicy"),
        fieldId: "policies",
        labelIcon: /* @__PURE__ */ a(le, { helpText: e("applyPolicyHelp"), fieldLabelId: "policies" }),
        children: /* @__PURE__ */ a(Dq, { name: "policies", clientId: t })
      }
    ),
    /* @__PURE__ */ a(bO, { helpLabel: "policyDecisionStagey" })
  ] });
}, Fq = () => {
  const { t: e } = H();
  return /* @__PURE__ */ a(
    Ig,
    {
      name: "clients",
      label: e("clients"),
      helpText: e("policyClientHelp"),
      required: !0,
      defaultValue: [],
      variant: "typeaheadMulti"
    }
  );
}, AO = ({
  clientScopes: e,
  clientName: t,
  open: n,
  toggleDialog: r,
  onAdd: i,
  isClientScopesConditionType: s
}) => {
  const { t: o } = H(), [l, c] = N(!1), [d, u] = N([]), [p, m] = N(
    "Name"
    /* Name */
  ), [f, g] = N(
    "All"
    /* All */
  ), [b, v] = ot(), [y, x] = ot(!1), w = et(() => f === "OpenID Connect" ? e.filter((E) => E.protocol === "openid-connect") : f === "SAML" ? e.filter((E) => E.protocol === "saml") : e, [e, p, f]), R = (E) => {
    const T = d.map((I) => ({ scope: I, type: E }));
    i(T), c(!1), r();
  }, S = (E) => {
    E === "Name" ? m(
      "Protocol"
      /* Protocol */
    ) : E === "Protocol" && (m(
      "Name"
      /* Name */
    ), g(
      "All"
      /* All */
    )), v();
  }, _ = (E) => {
    E === "SAML" ? g(
      "SAML"
      /* SAML */
    ) : E === "OpenID Connect" ? g(
      "OpenID Connect"
      /* OpenIDConnect */
    ) : E === "All" && g(
      "All"
      /* All */
    ), x();
  }, O = [
    /* @__PURE__ */ a(_e, { value: "SAML", children: o("protocolTypes.saml") }, 1),
    /* @__PURE__ */ a(_e, { value: "OpenID Connect", children: o("protocolTypes.openid-connect") }, 2),
    /* @__PURE__ */ a(_e, { value: "All", children: o("protocolTypes.all") }, 3)
  ];
  return /* @__PURE__ */ a(
    ht,
    {
      variant: Rt.medium,
      title: s ? o("addClientScope") : o("addClientScopesTo", { clientName: t }),
      isOpen: n,
      onClose: r,
      actions: s ? [
        /* @__PURE__ */ a(
          z,
          {
            id: "modal-add",
            "data-testid": "confirm",
            variant: xe.primary,
            onClick: () => {
              const E = d.map((T) => ({ scope: T }));
              i(E), r();
            },
            isDisabled: d.length === 0,
            children: o("add")
          },
          "add"
        ),
        /* @__PURE__ */ a(
          z,
          {
            id: "modal-cancel",
            "data-testid": "cancel",
            variant: xe.link,
            onClick: () => {
              u([]), r();
            },
            children: o("cancel")
          },
          "cancel"
        )
      ] : [
        /* @__PURE__ */ a(
          qt,
          {
            popperProps: {
              direction: "up"
            },
            className: "keycloak__client-scopes-add__add-dropdown",
            isOpen: l,
            toggle: (E) => /* @__PURE__ */ a(
              yt,
              {
                ref: E,
                isDisabled: d.length === 0,
                onClick: () => c(!l),
                variant: "primary",
                id: "add-dropdown",
                statusIcon: /* @__PURE__ */ a(lL, {}),
                children: o("add")
              }
            ),
            children: /* @__PURE__ */ a(Xt, { children: Nz(o, R) })
          },
          "add-dropdown"
        ),
        /* @__PURE__ */ a(
          z,
          {
            id: "modal-cancel",
            variant: xe.link,
            onClick: () => {
              u([]), r();
            },
            children: o("cancel")
          },
          "cancel"
        )
      ],
      children: /* @__PURE__ */ a(
        St,
        {
          loader: w,
          ariaLabelKey: "chooseAMapperType",
          searchPlaceholderKey: p === "Name" ? "searchForClientScope" : void 0,
          isSearching: p !== "Name",
          searchTypeComponent: /* @__PURE__ */ a(
            qt,
            {
              onSelect: () => {
                S(p);
              },
              toggle: (E) => /* @__PURE__ */ a(
                yt,
                {
                  ref: E,
                  "data-testid": "filter-type-dropdown",
                  id: "toggle-id-9",
                  onClick: v,
                  icon: /* @__PURE__ */ a(ss, {}),
                  statusIcon: /* @__PURE__ */ a(Lo, {}),
                  children: p
                }
              ),
              isOpen: b,
              children: /* @__PURE__ */ a(Xt, { children: /* @__PURE__ */ a(
                Ke,
                {
                  "data-testid": "filter-type-dropdown-item",
                  children: o(p === "Name" ? "protocol" : "name")
                },
                "filter-type"
              ) })
            }
          ),
          toolbarItem: p === "Protocol" && /* @__PURE__ */ C(ee, { children: [
            /* @__PURE__ */ a(
              qt,
              {
                onSelect: () => {
                  S(p);
                },
                "data-testid": "filter-type-dropdown",
                toggle: (E) => /* @__PURE__ */ a(
                  yt,
                  {
                    ref: E,
                    id: "toggle-id-9",
                    onClick: v,
                    statusIcon: /* @__PURE__ */ a(Lo, {}),
                    icon: /* @__PURE__ */ a(ss, {}),
                    children: p
                  }
                ),
                isOpen: b,
                children: /* @__PURE__ */ a(Xt, { children: /* @__PURE__ */ a(
                  Ke,
                  {
                    "data-testid": "filter-type-dropdown-item",
                    children: o("name")
                  },
                  "filter-type"
                ) })
              }
            ),
            /* @__PURE__ */ a(
              ft,
              {
                className: "kc-protocolType-select",
                "aria-label": o("selectOne"),
                onToggle: x,
                onSelect: (E) => _(E.toString()),
                selections: f,
                isOpen: y,
                children: O
              }
            )
          ] }),
          canSelectAll: !0,
          onSelect: (E) => u(E),
          columns: [
            {
              name: "name"
            },
            {
              name: "protocol",
              displayKey: "protocol",
              cellRenderer: (E) => bl(o, E.protocol ?? "openid-connect")
            },
            {
              name: "description"
            }
          ],
          emptyState: /* @__PURE__ */ a(
            ct,
            {
              message: o("emptyAddClientScopes"),
              instructions: o("emptyAddClientScopesInstructions")
            }
          )
        }
      )
    }
  );
}, $q = () => {
  const { adminClient: e } = pe(), { t } = H(), {
    control: n,
    getValues: r,
    setValue: i,
    formState: { errors: s }
  } = Le(), [o, l] = N(!1), [c, d] = N([]), [u, p] = N([]), m = pa();
  return Re(
    () => e.clientScopes.find(),
    (f) => {
      p(
        r("clientScopes").map(
          (g) => f.find((b) => b.id === g.id)
        )
      ), d(m(f, or("name")));
    },
    []
  ), /* @__PURE__ */ C(
    se,
    {
      label: t("clientScopes"),
      labelIcon: /* @__PURE__ */ a(
        le,
        {
          helpText: t("clientsClientScopesHelp"),
          fieldLabelId: "clientScopes"
        }
      ),
      fieldId: "clientScopes",
      isRequired: !0,
      children: [
        /* @__PURE__ */ a(
          ge,
          {
            name: "clientScopes",
            control: n,
            defaultValue: [],
            rules: {
              validate: (f) => f.filter((g) => g.id).length > 0
            },
            render: ({ field: f }) => /* @__PURE__ */ C(ee, { children: [
              o && /* @__PURE__ */ a(
                AO,
                {
                  clientScopes: c.filter(
                    (g) => !f.value.map((b) => b.id).includes(g.id)
                  ),
                  isClientScopesConditionType: !0,
                  open: o,
                  toggleDialog: () => l(!o),
                  onAdd: (g) => {
                    p([
                      ...u,
                      ...g.map((b) => b.scope)
                    ]), f.onChange([
                      ...f.value,
                      ...g.map((b) => b.scope).map((b) => ({ id: b.id, required: !1 }))
                    ]);
                  }
                }
              ),
              /* @__PURE__ */ a(
                z,
                {
                  "data-testid": "select-scope-button",
                  variant: "secondary",
                  onClick: () => {
                    l(!0);
                  },
                  children: t("addClientScopes")
                }
              )
            ] })
          }
        ),
        u.length > 0 && /* @__PURE__ */ C(Cn, { variant: "compact", children: [
          /* @__PURE__ */ a(wn, { children: /* @__PURE__ */ C(rt, { children: [
            /* @__PURE__ */ a(De, { children: t("clientScopeTitle") }),
            /* @__PURE__ */ a(De, { children: t("required") }),
            /* @__PURE__ */ a(De, { "aria-hidden": "true" })
          ] }) }),
          /* @__PURE__ */ a(yn, { children: u.map((f, g) => /* @__PURE__ */ C(rt, { children: [
            /* @__PURE__ */ a(ke, { children: f.name }),
            /* @__PURE__ */ a(ke, { children: /* @__PURE__ */ a(
              ge,
              {
                name: `clientScopes.${g}.required`,
                defaultValue: !1,
                control: n,
                render: ({ field: b }) => /* @__PURE__ */ a(
                  rn,
                  {
                    id: "required",
                    "data-testid": "standard",
                    name: "required",
                    isChecked: b.value,
                    onChange: b.onChange
                  }
                )
              }
            ) }),
            /* @__PURE__ */ a(ke, { children: /* @__PURE__ */ a(
              z,
              {
                variant: "link",
                className: "keycloak__client-authorization__policy-row-remove",
                icon: /* @__PURE__ */ a(Ni, {}),
                onClick: () => {
                  i("clientScopes", [
                    ...r("clientScopes").filter(
                      (b) => b.id !== f.id
                    )
                  ]), p([
                    ...u.filter((b) => b.id !== f.id)
                  ]);
                }
              }
            ) })
          ] }, f.id)) })
        ] }),
        s.clientScopes && /* @__PURE__ */ a(En, { message: t("requiredClientScope") })
      ]
    }
  );
}, jq = () => {
  const { adminClient: e } = pe(), { t } = H(), {
    control: n,
    getValues: r,
    setValue: i,
    formState: { errors: s }
  } = Le(), o = r("groups"), [l, c] = N(!1), [d, u] = N(
    []
  );
  return Re(
    () => o && o.length > 0 ? Promise.all(
      o.map((p) => e.groups.findOne({ id: p.id }))
    ) : Promise.resolve([]),
    (p) => {
      const m = p.filter((f) => f);
      u(m);
    },
    []
  ), /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(
      ve,
      {
        name: "groupsClaim",
        label: t("groupsClaim"),
        labelIcon: t("groupsClaimHelp")
      }
    ),
    /* @__PURE__ */ C(
      se,
      {
        label: t("groups"),
        labelIcon: /* @__PURE__ */ a(le, { helpText: t("policyGroupsHelp"), fieldLabelId: "groups" }),
        fieldId: "groups",
        isRequired: !0,
        children: [
          /* @__PURE__ */ a(
            ge,
            {
              name: "groups",
              control: n,
              defaultValue: [],
              rules: {
                validate: (p) => p && p.filter(({ id: m }) => m).length > 0
              },
              render: ({ field: p }) => /* @__PURE__ */ C(ee, { children: [
                l && /* @__PURE__ */ a(
                  cl,
                  {
                    type: "selectMany",
                    text: {
                      title: "addGroupsToGroupPolicy",
                      ok: "add"
                    },
                    onConfirm: (m) => {
                      p.onChange([
                        ...p.value || [],
                        ...(m || []).map(({ id: f }) => ({ id: f }))
                      ]), u([...d, ...m || []]), c(!1);
                    },
                    onClose: () => {
                      c(!1);
                    },
                    filterGroups: d
                  }
                ),
                /* @__PURE__ */ a(
                  z,
                  {
                    "data-testid": "select-group-button",
                    variant: "secondary",
                    onClick: () => {
                      c(!0);
                    },
                    children: t("addGroups")
                  }
                )
              ] })
            }
          ),
          d.length > 0 && /* @__PURE__ */ C(Cn, { variant: "compact", children: [
            /* @__PURE__ */ a(wn, { children: /* @__PURE__ */ C(rt, { children: [
              /* @__PURE__ */ a(De, { children: t("groups") }),
              /* @__PURE__ */ a(De, { children: t("extendToChildren") }),
              /* @__PURE__ */ a(De, { "aria-hidden": "true" })
            ] }) }),
            /* @__PURE__ */ a(yn, { children: d.map((p, m) => /* @__PURE__ */ C(rt, { children: [
              /* @__PURE__ */ a(ke, { children: p.path }),
              /* @__PURE__ */ a(ke, { children: /* @__PURE__ */ a(
                ge,
                {
                  name: `groups.${m}.extendChildren`,
                  defaultValue: !1,
                  control: n,
                  render: ({ field: f }) => /* @__PURE__ */ a(
                    rn,
                    {
                      id: "extendChildren",
                      "data-testid": "standard",
                      name: "extendChildren",
                      isChecked: f.value,
                      onChange: f.onChange,
                      isDisabled: p.subGroupCount === 0
                    }
                  )
                }
              ) }),
              /* @__PURE__ */ a(ke, { children: /* @__PURE__ */ a(
                z,
                {
                  variant: "link",
                  className: "keycloak__client-authorization__policy-row-remove",
                  icon: /* @__PURE__ */ a(Ni, {}),
                  onClick: () => {
                    i("groups", [
                      ...(o || []).filter(({ id: f }) => f !== p.id)
                    ]), u([
                      ...d.filter(({ id: f }) => f !== p.id)
                    ]);
                  }
                }
              ) })
            ] }, p.id)) })
          ] }),
          s.groups && /* @__PURE__ */ a(En, { message: t("requiredGroups") })
        ]
      }
    )
  ] });
}, Bq = () => {
  const { t: e } = H(), { control: t } = Le();
  return /* @__PURE__ */ a(
    se,
    {
      label: e("code"),
      labelIcon: /* @__PURE__ */ a(le, { helpText: e("policyCodeHelp"), fieldLabelId: "code" }),
      fieldId: "code",
      isRequired: !0,
      children: /* @__PURE__ */ a(
        ge,
        {
          name: "code",
          defaultValue: "",
          control: t,
          render: ({ field: n }) => /* @__PURE__ */ a(
            lr,
            {
              id: "code",
              "data-testid": "code",
              onChange: n.onChange,
              code: n.value,
              height: "600px",
              language: Ln.javascript,
              isReadOnly: !0
            }
          )
        }
      )
    }
  );
}, JC = ["POSITIVE", "NEGATIVE"], Uq = ({ isDisabled: e }) => {
  const { t } = H(), { control: n } = Le();
  return /* @__PURE__ */ a(
    se,
    {
      label: t("logic"),
      labelIcon: /* @__PURE__ */ a(le, { helpText: t("logicHelp"), fieldLabelId: "logic" }),
      fieldId: "logic",
      hasNoPaddingTop: !0,
      children: /* @__PURE__ */ a(
        ge,
        {
          name: "logic",
          "data-testid": "logic",
          defaultValue: JC[0],
          control: n,
          render: ({ field: r }) => /* @__PURE__ */ a(ee, { children: JC.map((i) => /* @__PURE__ */ a(
            sn,
            {
              id: i,
              "data-testid": i,
              isChecked: r.value === i,
              name: "logic",
              onChange: () => r.onChange(i),
              label: t(`logicType.${i.toLowerCase()}`),
              className: "pf-v5-u-mb-md",
              isDisabled: e
            },
            i
          )) })
        }
      )
    }
  );
}, Vq = ({ isDisabled: e }) => {
  const { t } = H();
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(
      ve,
      {
        name: "name",
        label: t("name"),
        rules: { required: t("required") },
        isDisabled: e
      }
    ),
    /* @__PURE__ */ a(
      wr,
      {
        name: "description",
        label: t("description"),
        rules: {
          maxLength: { message: t("maxLength", { length: 255 }), value: 255 }
        },
        isDisabled: e
      }
    )
  ] });
}, Kq = () => {
  const { t: e } = H();
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(
      ve,
      {
        name: "targetClaim",
        label: e("targetClaim"),
        labelIcon: e("targetClaimHelp"),
        rules: { required: e("required") }
      }
    ),
    /* @__PURE__ */ a(
      ve,
      {
        name: "pattern",
        label: e("regexPattern"),
        labelIcon: e("regexPatternHelp"),
        rules: { required: e("required") }
      }
    ),
    /* @__PURE__ */ a(
      Qs,
      {
        name: "targetContextAttributes",
        label: e("targetContextAttributes"),
        labelIcon: e("targetContextAttributesHelp"),
        labelOn: e("yes"),
        labelOff: e("no")
      }
    )
  ] });
}, Hq = () => {
  const { adminClient: e } = pe(), { t } = H(), {
    control: n,
    getValues: r,
    setValue: i,
    formState: { errors: s }
  } = Le(), o = r("roles"), [l, c] = N(!1), [d, u] = N([]);
  return Re(
    async () => {
      if (o && o.length > 0) {
        const p = await Promise.all(
          o.map((m) => e.roles.findOneById({ id: m.id }))
        );
        return Promise.all(
          p.map(async (m) => ({
            role: m,
            client: m.clientRole ? await e.clients.findOne({
              id: m?.containerId
            }) : void 0
          }))
        );
      }
      return Promise.resolve([]);
    },
    u,
    []
  ), /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ C(
      se,
      {
        label: t("roles"),
        labelIcon: /* @__PURE__ */ a(le, { helpText: t("policyRolesHelp"), fieldLabelId: "roles" }),
        fieldId: "roles",
        isRequired: !0,
        children: [
          /* @__PURE__ */ a(
            ge,
            {
              name: "roles",
              control: n,
              defaultValue: [],
              rules: {
                validate: (p) => p && p.filter((m) => m.id).length > 0
              },
              render: ({ field: p }) => /* @__PURE__ */ C(ee, { children: [
                l && /* @__PURE__ */ a(
                  Op,
                  {
                    id: "role",
                    type: "roles",
                    onAssign: (m) => {
                      p.onChange([
                        ...p.value || [],
                        ...m.map((f) => ({ id: f.role.id }))
                      ]), u([...d, ...m]), c(!1);
                    },
                    onClose: () => {
                      c(!1);
                    },
                    isLDAPmapper: !0
                  }
                ),
                /* @__PURE__ */ a(
                  z,
                  {
                    "data-testid": "select-role-button",
                    variant: "secondary",
                    onClick: () => {
                      c(!0);
                    },
                    children: t("addRoles")
                  }
                )
              ] })
            }
          ),
          d.length > 0 && /* @__PURE__ */ C(Cn, { variant: "compact", children: [
            /* @__PURE__ */ a(wn, { children: /* @__PURE__ */ C(rt, { children: [
              /* @__PURE__ */ a(De, { children: t("roles") }),
              /* @__PURE__ */ a(De, { children: t("required") }),
              /* @__PURE__ */ a(De, { "aria-hidden": "true" })
            ] }) }),
            /* @__PURE__ */ a(yn, { children: d.map((p, m) => /* @__PURE__ */ C(rt, { children: [
              /* @__PURE__ */ a(ke, { children: /* @__PURE__ */ a(kp, { role: p.role, client: p.client }) }),
              /* @__PURE__ */ a(ke, { children: /* @__PURE__ */ a(
                ge,
                {
                  name: `roles.${m}.required`,
                  defaultValue: !1,
                  control: n,
                  render: ({ field: f }) => /* @__PURE__ */ a(
                    rn,
                    {
                      id: "required",
                      "data-testid": "standard",
                      name: "required",
                      isChecked: f.value,
                      onChange: f.onChange
                    }
                  )
                }
              ) }),
              /* @__PURE__ */ a(ke, { children: /* @__PURE__ */ a(
                z,
                {
                  variant: "link",
                  className: "keycloak__client-authorization__policy-row-remove",
                  icon: /* @__PURE__ */ a(Ni, {}),
                  onClick: () => {
                    i("roles", [
                      ...(o || []).filter((f) => f.id !== p.role.id)
                    ]), u([
                      ...d.filter(
                        (f) => f.role.id !== p.role.id
                      )
                    ]);
                  }
                }
              ) })
            ] }, p.role.id)) })
          ] }),
          s.roles && /* @__PURE__ */ a(En, { message: t("requiredRoles") })
        ]
      }
    ),
    /* @__PURE__ */ a(
      bt,
      {
        name: "fetchRoles",
        label: t("fetchRoles"),
        labelIcon: t("fetchRolesHelp")
      }
    )
  ] });
}, Km = /(\d\d\d\d-\d\d-\d\d)? (\d\d?):(\d\d?)/, ZC = (e) => e.toString().padStart(2, "0"), QC = ({ name: e }) => {
  const { control: t } = Le(), n = (i, s) => {
    if (!s)
      return i;
    const o = i.match(Km);
    return `${[
      s.getFullYear(),
      ZC(s.getMonth() + 1),
      ZC(s.getDate())
    ].join("-")} ${o ? o[2] : "00"}:${o ? o[3] : "00"}:00`;
  }, r = (i, s, o) => {
    const l = i.match(Km);
    return o != null ? `${l ? l[1] : ""} ${s}:${o < 10 ? `0${o}` : o}:00` : i;
  };
  return /* @__PURE__ */ a(
    ge,
    {
      name: e,
      defaultValue: "",
      control: t,
      rules: { required: !0 },
      render: ({ field: i }) => {
        const s = i.value.match(Km) || [
          "",
          "",
          "0",
          "00"
        ];
        return /* @__PURE__ */ C(Jn, { hasGutter: !0, id: e, children: [
          /* @__PURE__ */ a(Dt, { children: /* @__PURE__ */ a(
            No,
            {
              value: s[1],
              onChange: (o, l, c) => {
                i.onChange(n(i.value, c));
              }
            }
          ) }),
          /* @__PURE__ */ a(Dt, { children: /* @__PURE__ */ a(
            Zh,
            {
              time: `${s[2]}:${s[3]}`,
              onChange: (o, l, c, d) => i.onChange(r(i.value, c, d)),
              is24Hour: !0
            }
          ) })
        ] });
      }
    }
  );
}, e0 = ({ name: e, min: t, max: n }) => {
  const { control: r } = Le(), i = (s) => Math.min(s, n);
  return /* @__PURE__ */ a(
    ge,
    {
      name: e,
      defaultValue: "",
      control: r,
      render: ({ field: s }) => /* @__PURE__ */ a(
        is,
        {
          id: e,
          value: s.value,
          min: t,
          max: n,
          onPlus: () => s.onChange(Number(s.value) + 1),
          onMinus: () => s.onChange(Number(s.value) - 1),
          onChange: (o) => {
            const l = Number(o.currentTarget.value);
            s.onChange(i(isNaN(l) ? 0 : l));
          }
        }
      )
    }
  );
}, Ld = ({ name: e, ...t }) => {
  const { t: n } = H();
  return /* @__PURE__ */ a(
    se,
    {
      label: n(e),
      fieldId: e,
      labelIcon: /* @__PURE__ */ a(le, { helpText: n(`${e}Help`), fieldLabelId: e }),
      children: /* @__PURE__ */ C(Jn, { hasGutter: !0, children: [
        /* @__PURE__ */ a(Dt, { children: /* @__PURE__ */ a(e0, { name: e, ...t }) }),
        /* @__PURE__ */ a(Dt, { children: n("to") }),
        /* @__PURE__ */ a(Dt, { children: /* @__PURE__ */ a(e0, { name: `${e}End`, ...t }) })
      ] })
    }
  );
}, zq = () => {
  const { t: e } = H(), {
    getValues: t,
    formState: { errors: n }
  } = Le(), [r, i] = N(t("month"));
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(
      se,
      {
        label: e("repeat"),
        fieldId: "repeat",
        labelIcon: /* @__PURE__ */ a(le, { helpText: e("repeatHelp"), fieldLabelId: "repeat" }),
        children: /* @__PURE__ */ C(ra, { children: [
          /* @__PURE__ */ a(Nt, { children: /* @__PURE__ */ a(
            sn,
            {
              id: "notRepeat",
              "data-testid": "notRepeat",
              isChecked: !r,
              name: "repeat",
              onChange: () => i(!1),
              label: e("notRepeat"),
              className: "pf-v5-u-mb-md"
            }
          ) }),
          /* @__PURE__ */ a(Nt, { children: /* @__PURE__ */ a(
            sn,
            {
              id: "repeat",
              "data-testid": "repeat",
              isChecked: r,
              name: "repeat",
              onChange: () => i(!0),
              label: e("repeat"),
              className: "pf-v5-u-mb-md"
            }
          ) })
        ] })
      }
    ),
    r && /* @__PURE__ */ C(ee, { children: [
      /* @__PURE__ */ a(Ld, { name: "month", min: 1, max: 12 }),
      /* @__PURE__ */ a(Ld, { name: "dayMonth", min: 1, max: 31 }),
      /* @__PURE__ */ a(Ld, { name: "hour", min: 0, max: 23 }),
      /* @__PURE__ */ a(Ld, { name: "minute", min: 0, max: 59 })
    ] }),
    /* @__PURE__ */ C(
      se,
      {
        label: e("startTime"),
        fieldId: "notBefore",
        labelIcon: /* @__PURE__ */ a(le, { helpText: e("startTimeHelp"), fieldLabelId: "startTime" }),
        isRequired: !0,
        children: [
          /* @__PURE__ */ a(QC, { name: "notBefore" }),
          n.notBefore && /* @__PURE__ */ a(En, { message: e("required") })
        ]
      }
    ),
    /* @__PURE__ */ C(
      se,
      {
        label: e("expireTime"),
        fieldId: "notOnOrAfter",
        labelIcon: /* @__PURE__ */ a(le, { helpText: e("expireTimeHelp"), fieldLabelId: "expireTime" }),
        isRequired: !0,
        children: [
          /* @__PURE__ */ a(QC, { name: "notOnOrAfter" }),
          n.notOnOrAfter && /* @__PURE__ */ a(En, { message: e("required") })
        ]
      }
    )
  ] });
}, tb = ({
  name: e,
  label: t,
  helpText: n,
  defaultValue: r,
  isRequired: i,
  variant: s = "typeaheadMulti"
}) => {
  const { adminClient: o } = pe(), { t: l } = H(), {
    control: c,
    getValues: d,
    formState: { errors: u }
  } = Le(), p = d(e), [m, f, g] = ot(), [b, v] = N([]), [y, x] = N(""), [w, R] = N(""), S = Ct(), _ = bn(xg(R, 1e3), []);
  Re(
    () => {
      const E = {
        max: 20
      };
      return w && (E.username = w), p?.length && !w ? Promise.all(
        p.map((T) => o.users.findOne({ id: T }))
      ) : o.users.find(E);
    },
    v,
    [w]
  );
  const O = (E) => E.filter((T) => T !== void 0).map((T) => /* @__PURE__ */ a(
    _e,
    {
      value: T.id,
      selected: p?.includes(T.id),
      children: T.username
    },
    T.id
  ));
  return /* @__PURE__ */ C(
    se,
    {
      label: l(t),
      isRequired: i,
      labelIcon: /* @__PURE__ */ a(le, { helpText: n, fieldLabelId: t }),
      fieldId: e,
      children: [
        /* @__PURE__ */ a(
          ge,
          {
            name: e,
            defaultValue: r,
            control: c,
            rules: i && s === "typeaheadMulti" ? { validate: (E) => E.length > 0 } : { required: i },
            render: ({ field: E }) => /* @__PURE__ */ a(
              Bn,
              {
                id: e,
                toggle: (T) => /* @__PURE__ */ a(
                  yt,
                  {
                    "data-testid": e,
                    ref: T,
                    variant: "typeahead",
                    onClick: f,
                    isExpanded: m,
                    isFullWidth: !0,
                    status: u[e] ? "danger" : void 0,
                    children: /* @__PURE__ */ C(Qo, { isPlain: !0, children: [
                      /* @__PURE__ */ a(
                        el,
                        {
                          value: y,
                          onClick: f,
                          onChange: (I, k) => {
                            g(!0), x(k), _(k);
                          },
                          autoComplete: "off",
                          innerRef: S,
                          placeholderText: l("selectAUser"),
                          ...E.value && {
                            "aria-activedescendant": E.value
                          },
                          role: "combobox",
                          isExpanded: m,
                          "aria-controls": "select-create-typeahead-listbox",
                          children: s === "typeaheadMulti" && Array.isArray(E.value) && /* @__PURE__ */ a(vn, { "aria-label": "Current selections", children: E.value.map(
                            (I, k) => /* @__PURE__ */ a(
                              Ut,
                              {
                                onClick: (P) => {
                                  P.stopPropagation(), E.onChange(
                                    E.value.filter(
                                      (D) => D !== I
                                    )
                                  );
                                },
                                children: b.find((P) => P?.id === I)?.username
                              },
                              k
                            )
                          ) })
                        }
                      ),
                      /* @__PURE__ */ a(tl, { children: !!w && /* @__PURE__ */ a(
                        z,
                        {
                          variant: "plain",
                          onClick: () => {
                            x(""), R(""), E.onChange([]), S?.current?.focus();
                          },
                          "aria-label": "Clear input value",
                          children: /* @__PURE__ */ a(Oa, { "aria-hidden": !0 })
                        }
                      ) })
                    ] })
                  }
                ),
                isOpen: m,
                selected: E.value,
                onSelect: (T, I) => {
                  const k = I?.toString();
                  if (s !== "typeaheadMulti") {
                    const P = E.value.includes(k);
                    P ? E.onChange([]) : E.onChange([k]), x(
                      P ? "" : b.find((D) => D?.id === k)?.username || ""
                    ), g(!1);
                  } else {
                    const P = E.value.find(
                      (D) => D === k
                    ) ? E.value.filter((D) => D !== k) : [...E.value, k];
                    E.onChange(P);
                  }
                },
                "aria-label": l(e),
                children: /* @__PURE__ */ a(ia, { children: O(b) })
              }
            )
          }
        ),
        u[e] && /* @__PURE__ */ a(En, { message: l("required") })
      ]
    }
  );
}, qq = () => {
  const { t: e } = H();
  return /* @__PURE__ */ a(
    tb,
    {
      name: "users",
      label: "users",
      helpText: e("policyUsers"),
      defaultValue: [],
      variant: "typeaheadMulti",
      isRequired: !0
    }
  );
}, eh = {
  aggregate: Mq,
  client: Fq,
  user: qq,
  "client-scope": $q,
  group: jq,
  regex: Kq,
  role: Hq,
  time: zq,
  js: Bq
}, nb = (e) => e in eh;
function Gq() {
  const { adminClient: e } = pe(), { t } = H(), { id: n, realm: r, policyId: i, policyType: s } = Vt(), o = Je(), l = Ue(), { reset: c, handleSubmit: d } = l, { addAlert: u, addError: p } = Se(), [m, f] = N(), g = s === "js";
  Re(
    async () => {
      if (i) {
        const R = await Promise.all([
          e.clients.findOnePolicy({
            id: n,
            type: s,
            policyId: i
          }),
          e.clients.getAssociatedPolicies({
            id: n,
            permissionId: i
          })
        ]);
        if (!R[0])
          throw new Error(t("notFound"));
        return {
          policy: R[0],
          policies: R[1].map((S) => S.id)
        };
      }
      return {};
    },
    ({ policy: R, policies: S }) => {
      c({ ...R, policies: S }), f(R);
    },
    [n, s, i]
  );
  const b = async (R) => {
    R.groups = R.groups?.filter((S) => S.id), R.clientScopes = R.clientScopes?.filter((S) => S.id), R.roles = R.roles?.filter((S) => S.id).map((S) => ({ ...S, required: S.required || !1 }));
    try {
      if (i)
        await e.clients.updatePolicy(
          { id: n, type: s, policyId: i },
          R
        );
      else {
        const S = await e.clients.createPolicy(
          { id: n, type: s },
          R
        );
        o(
          cd({
            realm: r,
            id: n,
            policyType: s,
            policyId: S.id
          })
        );
      }
      u(
        t((i ? "update" : "create") + "PolicySuccess"),
        ue.success
      );
    } catch (S) {
      p("policySaveError", S);
    }
  }, [v, y] = ze({
    titleKey: "deletePolicy",
    messageKey: "deletePolicyConfirm",
    continueButtonLabel: "confirm",
    onConfirm: async () => {
      try {
        await e.clients.delPolicy({
          id: n,
          policyId: i
        }), u(t("policyDeletedSuccess"), ue.success), o(Du({ realm: r, clientId: n, tab: "policies" }));
      } catch (R) {
        p("policyDeletedError", R);
      }
    }
  });
  if (i && !m)
    return /* @__PURE__ */ a(gt, {});
  function x() {
    return nb(s) ? eh[s] : eh.js;
  }
  const w = x();
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(y, {}),
    /* @__PURE__ */ a(
      wt,
      {
        titleKey: i ? m?.name : t("createPolicyOfType", { policyType: s }),
        dropdownItems: i ? [
          /* @__PURE__ */ a(
            Ke,
            {
              "data-testid": "delete-policy",
              onClick: () => v(),
              children: t("delete")
            },
            "delete"
          )
        ] : void 0
      }
    ),
    /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ C(
      Fe,
      {
        isHorizontal: !0,
        onSubmit: d(b),
        role: "anyone",
        children: [
          /* @__PURE__ */ C(Ve, { ...l, children: [
            /* @__PURE__ */ a(Vq, { isDisabled: g }),
            /* @__PURE__ */ a(w, {}),
            /* @__PURE__ */ a(Uq, { isDisabled: g })
          ] }),
          /* @__PURE__ */ a(st, { children: /* @__PURE__ */ C("div", { className: "pf-v5-u-mt-md", children: [
            /* @__PURE__ */ a(
              z,
              {
                isDisabled: g,
                variant: xe.primary,
                className: "pf-v5-u-mr-md",
                type: "submit",
                "data-testid": "save",
                children: t("save")
              }
            ),
            /* @__PURE__ */ a(
              z,
              {
                variant: "link",
                "data-testid": "cancel",
                component: (R) => /* @__PURE__ */ a(
                  Ae,
                  {
                    ...R,
                    to: Du({
                      realm: r,
                      clientId: n,
                      tab: "policies"
                    })
                  }
                ),
                children: t("cancel")
              }
            )
          ] }) })
        ]
      }
    ) })
  ] });
}
const LO = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Gq,
  isValidComponentType: nb
}, Symbol.toStringTag, { value: "Module" })), th = ({
  policyProviders: e,
  onSelect: t,
  toggleDialog: n
}) => {
  const { t: r } = H(), i = pa(), s = et(
    () => e ? i(e, or("name")) : [],
    [e]
  );
  return /* @__PURE__ */ a(
    ht,
    {
      "aria-label": r("createPolicy"),
      variant: Rt.medium,
      header: /* @__PURE__ */ C(Pt, { children: [
        /* @__PURE__ */ a(tt, { component: Wt.h1, children: r("chooseAPolicyType") }),
        /* @__PURE__ */ a(tt, { children: r("chooseAPolicyTypeInstructions") })
      ] }),
      isOpen: !0,
      onClose: n,
      children: /* @__PURE__ */ C(Cn, { "aria-label": r("policies"), variant: "compact", children: [
        /* @__PURE__ */ a(wn, { children: /* @__PURE__ */ C(rt, { children: [
          /* @__PURE__ */ a(De, { children: r("name") }),
          /* @__PURE__ */ a(De, { children: r("description") })
        ] }) }),
        /* @__PURE__ */ a(yn, { children: s.map((o) => /* @__PURE__ */ C(
          rt,
          {
            "data-testid": o.type,
            onRowClick: () => t(o),
            isClickable: !0,
            children: [
              /* @__PURE__ */ a(ke, { children: o.name }),
              /* @__PURE__ */ a(ke, { children: nb(o.type) && r(`policyProvider.${o.type}`) })
            ]
          },
          o.type
        )) })
      ] })
    }
  );
}, Wq = ({
  row: e
}) => /* @__PURE__ */ C(ee, { children: [
  e.dependentPolicies?.[0]?.name,
  " ",
  /* @__PURE__ */ a(Qg, { array: e.dependentPolicies })
] }), Xq = ({
  clientId: e,
  isDisabled: t = !1
}) => {
  const { adminClient: n } = pe(), { t: r } = H(), { addAlert: i, addError: s } = Se(), { realm: o } = be(), l = Je(), [c, d] = N(), [u, p] = N(), [m, f] = N(), [g, b] = N(0), v = () => b(g + 1), [y, x] = N(10), [w, R] = N(0), [S, _] = N({}), [O, E] = ot();
  Re(
    async () => {
      const D = await n.clients.listPolicies({
        first: w,
        max: y + 1,
        id: e,
        permission: "false",
        ...S
      });
      return await Promise.all([
        n.clients.listPolicyProviders({ id: e }),
        ...(D || []).map(async (F) => {
          const A = await n.clients.listDependentPolicies({
            id: e,
            policyId: F.id
          });
          return {
            ...F,
            dependentPolicies: A,
            isExpanded: !1
          };
        })
      ]);
    },
    ([D, ...F]) => {
      f(
        D.filter((A) => A.type !== "resource" && A.type !== "scope")
      ), d(F);
    },
    [g, S, w, y]
  );
  const [T, I] = ze({
    titleKey: "deletePolicy",
    children: /* @__PURE__ */ C(ee, { children: [
      r("deletePolicyConfirm"),
      u?.dependentPolicies && u.dependentPolicies.length > 0 && /* @__PURE__ */ a(
        _n,
        {
          variant: "warning",
          isInline: !0,
          isPlain: !0,
          component: "p",
          title: r("deletePolicyWarning"),
          className: "pf-v5-u-pt-lg",
          children: /* @__PURE__ */ a("p", { className: "pf-v5-u-pt-xs", children: u.dependentPolicies.map((D) => /* @__PURE__ */ a("strong", { className: "pf-v5-u-pr-md", children: D.name }, D.id)) })
        }
      )
    ] }),
    continueButtonLabel: "confirm",
    onConfirm: async () => {
      try {
        await n.clients.delPolicy({
          id: e,
          policyId: u?.id
        }), i(r("policyDeletedSuccess"), ue.success), v();
      } catch (D) {
        s("policyDeletedError", D);
      }
    }
  });
  if (!c)
    return /* @__PURE__ */ a(gt, {});
  const k = c.length === 0, P = Object.keys(S).length !== 0;
  return /* @__PURE__ */ C(Te, { variant: "light", className: "pf-v5-u-p-0", children: [
    /* @__PURE__ */ a(I, {}),
    (!k || P) && /* @__PURE__ */ C(ee, { children: [
      O && /* @__PURE__ */ a(
        th,
        {
          policyProviders: m,
          onSelect: (D) => l(
            Qf({ id: e, realm: o, policyType: D.type })
          ),
          toggleDialog: E
        }
      ),
      /* @__PURE__ */ a(
        Fi,
        {
          count: c.length,
          first: w,
          max: y,
          onNextClick: R,
          onPreviousClick: R,
          onPerPageSelect: (D, F) => {
            R(D), x(F);
          },
          toolbarItem: /* @__PURE__ */ C(ee, { children: [
            /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(
              eb,
              {
                types: m,
                search: S,
                onSearch: _,
                type: "policy"
              }
            ) }),
            /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(
              z,
              {
                "data-testid": "createPolicy",
                onClick: E,
                isDisabled: t,
                children: r("createPolicy")
              }
            ) })
          ] }),
          children: !k && /* @__PURE__ */ C(Cn, { "aria-label": r("resources"), variant: "compact", children: [
            /* @__PURE__ */ a(wn, { children: /* @__PURE__ */ C(rt, { children: [
              /* @__PURE__ */ a(De, { "aria-hidden": "true" }),
              /* @__PURE__ */ a(De, { children: r("name") }),
              /* @__PURE__ */ a(De, { children: r("type") }),
              /* @__PURE__ */ a(De, { children: r("dependentPermission") }),
              /* @__PURE__ */ a(De, { children: r("description") }),
              /* @__PURE__ */ a(De, { "aria-hidden": "true" })
            ] }) }),
            c.map((D, F) => /* @__PURE__ */ C(yn, { isExpanded: D.isExpanded, children: [
              /* @__PURE__ */ C(rt, { children: [
                /* @__PURE__ */ a(
                  ke,
                  {
                    expand: {
                      rowIndex: F,
                      isExpanded: D.isExpanded,
                      onToggle: (A, M) => {
                        const V = c.map(
                          (U, G) => G === M ? { ...U, isExpanded: !U.isExpanded } : U
                        );
                        d(V);
                      }
                    }
                  }
                ),
                /* @__PURE__ */ a(ke, { "data-testid": `name-column-${D.name}`, children: /* @__PURE__ */ a(
                  Ae,
                  {
                    to: cd({
                      realm: o,
                      id: e,
                      policyType: D.type,
                      policyId: D.id
                    }),
                    children: D.name
                  }
                ) }),
                /* @__PURE__ */ a(ke, { children: wa(D.type) }),
                /* @__PURE__ */ a(ke, { children: /* @__PURE__ */ a(Wq, { row: D }) }),
                /* @__PURE__ */ a(ke, { children: D.description }),
                !t && /* @__PURE__ */ a(
                  ke,
                  {
                    actions: {
                      items: [
                        {
                          title: r("delete"),
                          onClick: () => {
                            p(D), T();
                          }
                        }
                      ]
                    }
                  }
                )
              ] }),
              /* @__PURE__ */ C(
                rt,
                {
                  isExpanded: D.isExpanded,
                  children: [
                    /* @__PURE__ */ a(ke, {}),
                    /* @__PURE__ */ a(ke, { colSpan: 3 + (t ? 0 : 1), children: /* @__PURE__ */ a(hs, { children: D.isExpanded && /* @__PURE__ */ a(
                      vr,
                      {
                        isHorizontal: !0,
                        className: "keycloak_resource_details",
                        children: /* @__PURE__ */ a(
                          Vs,
                          {
                            name: "dependentPermission",
                            array: D.dependentPolicies,
                            convert: (A) => A.name,
                            link: (A) => Us({
                              realm: o,
                              id: e,
                              permissionId: A.id,
                              permissionType: A.type
                            })
                          }
                        )
                      }
                    ) }) })
                  ]
                },
                `child-${D.id}`
              )
            ] }, D.id))
          ] })
        }
      )
    ] }),
    k && P && /* @__PURE__ */ a(
      ct,
      {
        isSearchVariant: !0,
        isDisabled: t,
        message: r("noSearchResults"),
        instructions: r("noSearchResultsInstructions")
      }
    ),
    k && !P && /* @__PURE__ */ C(ee, { children: [
      O && /* @__PURE__ */ a(
        th,
        {
          policyProviders: m?.filter(
            (D) => D.type !== "aggregate"
          ),
          onSelect: (D) => l(
            Qf({ id: e, realm: o, policyType: D.type })
          ),
          toggleDialog: E
        }
      ),
      /* @__PURE__ */ a(
        ct,
        {
          message: r("emptyPolicies"),
          instructions: r("emptyPoliciesInstructions"),
          isDisabled: t,
          primaryActionText: r("createPolicy"),
          onPrimaryAction: E
        }
      )
    ] })
  ] });
}, t0 = ({
  permissionType: e,
  disabled: t = !1,
  clientId: n
}) => {
  const { t: r } = H(), { realm: i } = be(), s = Je();
  return /* @__PURE__ */ a(
    z,
    {
      "data-testid": `create-${e}`,
      className: t ? "keycloak__permissions__empty_state " : "pf-v5-u-m-sm",
      variant: "secondary",
      onClick: () => !t && s(Mc({ realm: i, id: n, permissionType: e })),
      children: r(`create${wa(e)}BasedPermission`)
    }
  );
}, n0 = ({
  permissionType: e,
  disabled: t,
  ...n
}) => {
  const { t: r } = H();
  return t ? /* @__PURE__ */ a(Yt, { content: r(`no${wa(e)}CreateHint`), children: /* @__PURE__ */ a(
    t0,
    {
      ...n,
      disabled: t,
      permissionType: e
    }
  ) }) : /* @__PURE__ */ a(
    t0,
    {
      ...n,
      disabled: t,
      permissionType: e
    }
  );
}, Yq = ({
  clientId: e,
  isResourceEnabled: t,
  isScopeEnabled: n
}) => {
  const { t: r } = H();
  return /* @__PURE__ */ C(Sr, { "data-testid": "empty-state", variant: "lg", children: [
    /* @__PURE__ */ a(
      ki,
      {
        titleText: /* @__PURE__ */ a(ee, { children: r("emptyPermissions") }),
        icon: /* @__PURE__ */ a(Ns, { icon: Ea }),
        headingLevel: "h1"
      }
    ),
    /* @__PURE__ */ a(Ri, { children: r("emptyPermissionInstructions") }),
    /* @__PURE__ */ C(rs, { children: [
      /* @__PURE__ */ a(
        n0,
        {
          permissionType: "resource",
          disabled: t,
          clientId: e
        }
      ),
      /* @__PURE__ */ a("br", {}),
      /* @__PURE__ */ a(
        n0,
        {
          permissionType: "scope",
          disabled: n,
          clientId: e
        }
      )
    ] })
  ] });
}, Jq = ({
  row: e
}) => /* @__PURE__ */ C(ee, { children: [
  e.associatedPolicies?.[0]?.name || "—",
  " ",
  /* @__PURE__ */ a(Qg, { array: e.associatedPolicies })
] }), Zq = ({
  clientId: e,
  isDisabled: t = !1
}) => {
  const { adminClient: n } = pe(), { t: r } = H(), i = Je(), { addAlert: s, addError: o } = Se(), { realm: l } = be(), [c, d] = N(), [u, p] = N(), [m, f] = N(), [g, b] = N(), [v, y] = ot(), [x, w] = N({}), [R, S] = N(0), _ = () => S(R + 1), [O, E] = N(10), [T, I] = N(0);
  Re(
    async () => {
      const A = await n.clients.findPermissions({
        first: T,
        max: O + 1,
        id: e,
        ...x
      });
      return await Promise.all(
        A.map(async (M) => {
          const V = await n.clients.getAssociatedPolicies({
            id: e,
            permissionId: M.id
          });
          return {
            ...M,
            associatedPolicies: V,
            isExpanded: !1
          };
        })
      );
    },
    d,
    [R, x, T, O]
  ), Re(
    async () => {
      const A = {
        first: 0,
        max: 1
      }, [M, V, U] = await Promise.all([
        n.clients.listPolicyProviders({
          id: e
        }),
        n.clients.listResources({ ...A, id: e }),
        n.clients.listAllScopes({ ...A, id: e })
      ]);
      return {
        policies: M.filter(
          (G) => G.type === "resource" || G.type === "scope"
        ),
        resources: V.length !== 1,
        scopes: U.length !== 1
      };
    },
    ({ policies: A, resources: M, scopes: V }) => {
      f(A), b({ resources: M, scopes: V });
    },
    []
  );
  const [k, P] = ze({
    titleKey: "deletePermission",
    messageKey: r("deletePermissionConfirm", {
      permission: u?.name
    }),
    continueButtonVariant: xe.danger,
    continueButtonLabel: "confirm",
    onConfirm: async () => {
      try {
        await n.clients.delPermission({
          id: e,
          type: u?.type,
          permissionId: u?.id
        }), s(r("permissionDeletedSuccess"), ue.success), _();
      } catch (A) {
        o("permissionDeletedError", A);
      }
    }
  });
  if (!c)
    return /* @__PURE__ */ a(gt, {});
  const D = c.length === 0, F = Object.keys(x).length !== 0;
  return /* @__PURE__ */ C(Te, { variant: "light", className: "pf-v5-u-p-0", children: [
    /* @__PURE__ */ a(P, {}),
    (!D || F) && /* @__PURE__ */ a(
      Fi,
      {
        count: c.length,
        first: T,
        max: O,
        onNextClick: I,
        onPreviousClick: I,
        onPerPageSelect: (A, M) => {
          I(A), E(M);
        },
        toolbarItem: /* @__PURE__ */ C(ee, { children: [
          /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(
            eb,
            {
              types: m,
              search: x,
              onSearch: w,
              type: "permission"
            }
          ) }),
          /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(
            qt,
            {
              toggle: (A) => /* @__PURE__ */ a(
                yt,
                {
                  ref: A,
                  onClick: y,
                  isDisabled: t,
                  variant: "primary",
                  "data-testid": "permissionCreateDropdown",
                  children: r("createPermission")
                }
              ),
              isOpen: v,
              children: /* @__PURE__ */ C(Xt, { children: [
                /* @__PURE__ */ a(
                  Ke,
                  {
                    "data-testid": "create-resource",
                    isDisabled: t || g?.resources,
                    component: "button",
                    onClick: () => i(
                      Mc({
                        realm: l,
                        id: e,
                        permissionType: "resource"
                      })
                    ),
                    children: r("createResourceBasedPermission")
                  }
                ),
                /* @__PURE__ */ a(_t, {}),
                /* @__PURE__ */ C(
                  Ke,
                  {
                    "data-testid": "create-scope",
                    isDisabled: t || g?.scopes,
                    component: "button",
                    onClick: () => i(
                      Mc({
                        realm: l,
                        id: e,
                        permissionType: "scope"
                      })
                    ),
                    children: [
                      r("createScopeBasedPermission"),
                      g?.scopes && /* @__PURE__ */ a(
                        _n,
                        {
                          className: "pf-v5-u-mt-sm",
                          variant: "warning",
                          isInline: !0,
                          isPlain: !0,
                          title: r("noScopeCreateHint")
                        }
                      )
                    ]
                  }
                )
              ] })
            }
          ) })
        ] }),
        children: !D && /* @__PURE__ */ C(Cn, { "aria-label": r("resources"), variant: "compact", children: [
          /* @__PURE__ */ a(wn, { children: /* @__PURE__ */ C(rt, { children: [
            /* @__PURE__ */ a(De, { "aria-hidden": "true" }),
            /* @__PURE__ */ a(De, { children: r("name") }),
            /* @__PURE__ */ a(De, { children: r("type") }),
            /* @__PURE__ */ a(De, { children: r("associatedPolicy") }),
            /* @__PURE__ */ a(De, { children: r("description") }),
            /* @__PURE__ */ a(De, { "aria-hidden": "true" })
          ] }) }),
          c.map((A, M) => /* @__PURE__ */ C(yn, { isExpanded: A.isExpanded, children: [
            /* @__PURE__ */ C(rt, { children: [
              /* @__PURE__ */ a(
                ke,
                {
                  expand: {
                    rowIndex: M,
                    isExpanded: A.isExpanded,
                    onToggle: (V, U) => {
                      const G = c.map(
                        (q, L) => L === U ? { ...q, isExpanded: !q.isExpanded } : q
                      );
                      d(G);
                    }
                  }
                }
              ),
              /* @__PURE__ */ a(ke, { "data-testid": `name-column-${A.name}`, children: /* @__PURE__ */ a(
                Ae,
                {
                  to: Us({
                    realm: l,
                    id: e,
                    permissionType: A.type,
                    permissionId: A.id
                  }),
                  children: A.name
                }
              ) }),
              /* @__PURE__ */ a(ke, { children: m?.find((V) => V.type === A.type)?.name }),
              /* @__PURE__ */ a(ke, { children: /* @__PURE__ */ a(Jq, { row: A }) }),
              /* @__PURE__ */ a(ke, { children: A.description || "—" }),
              /* @__PURE__ */ a(
                ke,
                {
                  actions: {
                    items: [
                      {
                        title: r("delete"),
                        onClick: async () => {
                          p(A), k();
                        }
                      }
                    ]
                  }
                }
              )
            ] }),
            /* @__PURE__ */ C(
              rt,
              {
                isExpanded: A.isExpanded,
                children: [
                  /* @__PURE__ */ a(ke, {}),
                  /* @__PURE__ */ a(ke, { colSpan: 5, children: /* @__PURE__ */ a(hs, { children: A.isExpanded && /* @__PURE__ */ a(
                    vr,
                    {
                      isHorizontal: !0,
                      className: "keycloak_resource_details",
                      children: /* @__PURE__ */ a(
                        Vs,
                        {
                          name: "associatedPolicy",
                          array: A.associatedPolicies,
                          convert: (V) => V.name,
                          link: (V) => cd({
                            id: e,
                            realm: l,
                            policyId: V.id,
                            policyType: V.type
                          })
                        }
                      )
                    }
                  ) }) })
                ]
              },
              `child-${A.id}`
            )
          ] }, A.id))
        ] })
      }
    ),
    D && !F && /* @__PURE__ */ a(
      Yq,
      {
        clientId: e,
        isResourceEnabled: !t && g?.resources,
        isScopeEnabled: !t && g?.scopes
      }
    ),
    D && F && /* @__PURE__ */ a(
      ct,
      {
        isSearchVariant: !0,
        message: r("noSearchResults"),
        instructions: r("noSearchResultsInstructions")
      }
    )
  ] });
}, NO = ({
  permissionNeeded: e
}) => {
  const { t } = H(), n = Array.isArray(e) ? e : [e];
  return /* @__PURE__ */ C(Te, { children: [
    t("forbidden", { count: n.length }),
    " ",
    n.map((r) => r.toString()).join(", ")
  ] });
}, Qq = ({
  name: e,
  rowIndex: t,
  attribute: n,
  selectableValues: r,
  resources: i
}) => {
  const { t: s } = H(), { control: o, register: l, getValues: c } = Le(), [d, u] = N([!1]), p = (b, v) => {
    const y = [...d];
    y[b] = v, u(y);
  }, m = et(() => {
    let b = [];
    return r && (b = aO.find(
      (v) => v.key === c().context?.[t]?.key
    )?.values), b;
  }, [c]), f = () => {
    const b = i?.find(
      (v) => v.name === c().resources?.[t]?.key
    )?.scopes;
    if (m?.length && !i)
      return m.map((v) => /* @__PURE__ */ a(_e, { value: v.key, children: v.name }, v.key));
    if (b?.length)
      return b.map((v) => /* @__PURE__ */ a(_e, { value: v.name, children: v.name }, v.name));
  }, g = (b) => Af(b).replace(/\W/g, "");
  return /* @__PURE__ */ a(ke, { children: i || m?.length ? /* @__PURE__ */ a(
    ge,
    {
      name: `${e}.${t}.value`,
      defaultValue: [],
      control: o,
      render: ({ field: b }) => /* @__PURE__ */ a(
        ft,
        {
          toggleId: `${n.id}-value`,
          className: "kc-attribute-value-selectable",
          chipGroupProps: {
            numChips: 1,
            expandedText: s("hide"),
            collapsedText: s("showRemaining")
          },
          onToggle: (v) => p(t, v),
          isOpen: d[t],
          variant: pt.typeahead,
          typeAheadAriaLabel: s("selectOrTypeAKey"),
          placeholderText: s("selectOrTypeAKey"),
          selections: b.value,
          onSelect: (v) => {
            b.onChange(v), p(t, !1);
          },
          children: f()
        }
      )
    }
  ) : /* @__PURE__ */ a(
    mt,
    {
      id: `${g(n.key)}-value`,
      className: "value-input",
      defaultValue: n.value,
      "data-testid": "attribute-value-input",
      "aria-label": s("value"),
      ...l(`${e}.${t}.value`)
    }
  ) });
}, a0 = ({
  name: e,
  selectableValues: t,
  resources: n
}) => {
  const { t: r } = H(), { control: i, watch: s } = Le(), { fields: o, append: l, remove: c } = sg({
    control: i,
    name: e
  }), [d, u] = N([!1]), p = (f, g) => {
    const b = [...d];
    b[f] = g, u(b);
  };
  He(() => {
    o.length || l({ key: "", value: "" }, { shouldFocus: !1 });
  }, [o]);
  const m = s(`${e}.${o.length - 1}.value`, "");
  return /* @__PURE__ */ C(
    Cn,
    {
      className: "kc-attributes__table",
      "aria-label": "Role attribute keys and values",
      variant: "compact",
      children: [
        /* @__PURE__ */ a(wn, { children: /* @__PURE__ */ C(rt, { children: [
          /* @__PURE__ */ a(De, { width: 40, children: r("key") }),
          /* @__PURE__ */ a(De, { width: 40, children: r("value") })
        ] }) }),
        /* @__PURE__ */ C(yn, { children: [
          o.map((f, g) => /* @__PURE__ */ C(rt, { "data-testid": "attribute-row", children: [
            /* @__PURE__ */ a(ke, { children: /* @__PURE__ */ a(
              ge,
              {
                name: `${e}.${g}.key`,
                defaultValue: "",
                control: i,
                render: ({ field: b }) => /* @__PURE__ */ a(
                  ft,
                  {
                    toggleId: `${e}.${g}.key`,
                    className: "kc-attribute-key-selectable",
                    onToggle: (v) => p(g, v),
                    isOpen: d[g],
                    variant: pt.typeahead,
                    typeAheadAriaLabel: r("selectOrTypeAKey"),
                    placeholderText: r("selectOrTypeAKey"),
                    selections: b.value,
                    onSelect: (v) => {
                      b.onChange(v.toString()), p(g, !1);
                    },
                    children: t?.map((v) => /* @__PURE__ */ a(
                      _e,
                      {
                        selected: v.name === b.value,
                        value: n ? v.name : v.key,
                        children: v.name
                      },
                      v.key
                    ))
                  }
                )
              }
            ) }),
            /* @__PURE__ */ a(
              Qq,
              {
                name: e,
                attribute: f,
                rowIndex: g,
                selectableValues: t,
                resources: n
              }
            ),
            /* @__PURE__ */ a(ke, { children: /* @__PURE__ */ a(
              z,
              {
                id: `${e}-minus-button-${g}`,
                variant: "link",
                className: "kc-attributes__minus-icon",
                onClick: () => c(g),
                "aria-label": r("remove"),
                children: /* @__PURE__ */ a(Ni, {})
              }
            ) })
          ] }, f.id)),
          /* @__PURE__ */ a(rt, { children: /* @__PURE__ */ a(ke, { children: /* @__PURE__ */ a(
            z,
            {
              "aria-label": r("addAttribute", { label: r("attribute") }),
              id: `${e}-plus-icon`,
              variant: "link",
              className: "kc-attributes__plus-icon",
              onClick: () => {
                l({ key: "", value: "" }), u([...d, !1]);
              },
              icon: /* @__PURE__ */ a(Ea, {}),
              isDisabled: !m,
              "data-testid": "attribute-add-row",
              children: r("addAttribute", { label: r("attribute") })
            }
          ) }) })
        ] })
      ]
    }
  );
}, eG = ({
  data: e
}) => {
  const { t } = H(), [n, r] = ot();
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(
      z,
      {
        "data-testid": "authorization-revert",
        onClick: r,
        variant: "secondary",
        children: t("showAuthData")
      }
    ),
    /* @__PURE__ */ a(
      ht,
      {
        variant: Rt.medium,
        isOpen: n,
        "aria-label": t("authData"),
        header: /* @__PURE__ */ C(Pt, { children: [
          /* @__PURE__ */ a(tt, { component: Wt.h1, children: t("authData") }),
          /* @__PURE__ */ a(tt, { children: t("authDataDescription") })
        ] }),
        onClose: r,
        actions: [
          /* @__PURE__ */ a(
            z,
            {
              "data-testid": "cancel",
              id: "modal-cancel",
              onClick: r,
              children: t("cancel")
            },
            "cancel"
          )
        ],
        children: /* @__PURE__ */ a(Ai, { readOnly: !0, rows: 20, value: Fa(e) })
      }
    )
  ] });
};
var r0;
(function(e) {
  e.AFFIRMATIVE = "AFFIRMATIVE", e.UNANIMOUS = "UNANIMOUS", e.CONSENSUS = "CONSENSUS";
})(r0 || (r0 = {}));
var Mu;
(function(e) {
  e.Permit = "PERMIT", e.Deny = "DENY";
})(Mu || (Mu = {}));
var i0;
(function(e) {
  e.POSITIVE = "POSITIVE", e.NEGATIVE = "NEGATIVE";
})(i0 || (i0 = {}));
const tG = ({
  idx: e,
  rowIndex: t,
  outerPolicy: n,
  resource: r
}) => {
  const [i, s] = N(!1), { t: o } = H(), { realm: l } = be(), { clientId: c } = Vt();
  return /* @__PURE__ */ C(yn, { isExpanded: i, children: [
    /* @__PURE__ */ C(rt, { children: [
      /* @__PURE__ */ a(
        ke,
        {
          expand: {
            rowIndex: t,
            isExpanded: i,
            onToggle: () => s((d) => !d)
          }
        }
      ),
      /* @__PURE__ */ a(ke, { "data-testid": `name-column-${r.resource}`, children: /* @__PURE__ */ a(
        Ae,
        {
          to: Us({
            realm: l,
            id: c,
            permissionType: n.policy?.type,
            permissionId: n.policy?.id
          }),
          children: n.policy?.name
        }
      ) }),
      /* @__PURE__ */ a(ke, { id: n.status?.toLowerCase(), children: o(n.status?.toLowerCase()) }),
      /* @__PURE__ */ a(ke, { children: o(`${n.policy?.decisionStrategy?.toLowerCase()}`) }),
      /* @__PURE__ */ a(ke, { children: n.status === Mu.Permit ? r.policies?.[t]?.scopes?.join(", ") : "-" }),
      /* @__PURE__ */ a(ke, { children: n.status === Mu.Deny && r.policies?.[t]?.scopes?.length ? r.policies[t].scopes?.join(", ") : "-" })
    ] }),
    /* @__PURE__ */ C(rt, { isExpanded: i, children: [
      /* @__PURE__ */ a(ke, {}),
      /* @__PURE__ */ a(ke, { colSpan: 5, children: i && /* @__PURE__ */ a(hs, { children: /* @__PURE__ */ a(
        vr,
        {
          isHorizontal: !0,
          className: "keycloak_resource_details",
          children: /* @__PURE__ */ a(Pt, { children: /* @__PURE__ */ a(Bx, { children: n.associatedPolicies?.map((d) => /* @__PURE__ */ C(Ux, { children: [
            /* @__PURE__ */ a(
              Ae,
              {
                to: cd({
                  realm: l,
                  id: c,
                  policyType: d.policy?.type,
                  policyId: d.policy?.id
                }),
                children: d.policy?.name
              }
            ),
            o("votedToStatus", {
              status: ic(d.status)
            })
          ] }, "policyDetails")) }) })
        }
      ) }) })
    ] }, `child-${r.resource}`)
  ] }, e);
}, nG = ({
  rowIndex: e,
  resource: t,
  evaluateResults: n
}) => {
  const [r, i] = N(!1), { t: s } = H();
  return /* @__PURE__ */ C(yn, { isExpanded: r, children: [
    /* @__PURE__ */ C(rt, { children: [
      /* @__PURE__ */ a(
        ke,
        {
          expand: {
            rowIndex: e,
            isExpanded: r,
            onToggle: () => i((o) => !o)
          }
        }
      ),
      /* @__PURE__ */ a(ke, { "data-testid": `name-column-${t.resource}`, children: t.resource?.name }),
      /* @__PURE__ */ a(ke, { id: t.status?.toLowerCase(), children: s(`${t.status?.toLowerCase()}`) }),
      /* @__PURE__ */ a(ke, { children: t.allowedScopes?.length ? t.allowedScopes.map((o) => o.name) : "-" })
    ] }),
    /* @__PURE__ */ C(rt, { isExpanded: r, children: [
      /* @__PURE__ */ a(ke, {}),
      /* @__PURE__ */ a(ke, { colSpan: 5, children: /* @__PURE__ */ a(hs, { children: r && /* @__PURE__ */ a(
        vr,
        {
          isHorizontal: !0,
          className: "keycloak_resource_details",
          children: /* @__PURE__ */ C(Cn, { "aria-label": s("evaluationResults"), children: [
            /* @__PURE__ */ a(wn, { children: /* @__PURE__ */ C(rt, { children: [
              /* @__PURE__ */ a(De, { "aria-hidden": "true" }),
              /* @__PURE__ */ a(De, { children: s("permission") }),
              /* @__PURE__ */ a(De, { children: s("results") }),
              /* @__PURE__ */ a(De, { children: s("decisionStrategy") }),
              /* @__PURE__ */ a(De, { children: s("grantedScopes") }),
              /* @__PURE__ */ a(De, { children: s("deniedScopes") }),
              /* @__PURE__ */ a(De, { "aria-hidden": "true" })
            ] }) }),
            Object.values(n[e].policies).map(
              (o, l) => /* @__PURE__ */ a(
                tG,
                {
                  idx: l,
                  rowIndex: e,
                  outerPolicy: o,
                  resource: t
                },
                l
              )
            )
          ] })
        }
      ) }) })
    ] }, `child-${t.resource}`)
  ] });
};
function aG(e, t) {
  switch (t) {
    case "STATUS_PERMITTED":
      return e.filter(({ status: n }) => n === "PERMIT");
    case "STATUS_DENIED":
      return e.filter(({ status: n }) => n === "DENY");
    default:
      return e;
  }
}
const rG = ({ evaluateResult: e, refresh: t, back: n }) => {
  const { t: r } = H(), [i, s] = ot(), [o, l] = N(
    "ALL"
    /* All */
  ), [c, d] = N(""), [u, p] = N(""), m = () => {
    d(u);
  }, f = (y) => {
    y.key === "Enter" && m();
  }, g = et(
    () => aG(e.results, o).filter(
      ({ resource: y }) => y?.name?.includes(c) ?? !1
    ),
    [e.results, o, c]
  ), b = e.results.length === 0, v = g.length === 0;
  return /* @__PURE__ */ C(Te, { children: [
    /* @__PURE__ */ a(Sa, { children: /* @__PURE__ */ C(cu, { className: "providers-toolbar", children: [
      /* @__PURE__ */ a(je, { children: /* @__PURE__ */ C(Qt, { children: [
        /* @__PURE__ */ a(dt, { isFill: !0, children: /* @__PURE__ */ a(
          mt,
          {
            name: "inputGroupName",
            id: "inputGroupName",
            type: "search",
            "aria-label": r("search"),
            placeholder: r("search"),
            onChange: (y, x) => p(x),
            onKeyDown: f
          }
        ) }),
        /* @__PURE__ */ a(dt, { children: /* @__PURE__ */ a(
          z,
          {
            variant: xe.control,
            "aria-label": r("search"),
            onClick: () => m(),
            children: /* @__PURE__ */ a(Ls, {})
          }
        ) })
      ] }) }),
      /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(
        Bn,
        {
          "data-testid": "filter-type-select",
          isOpen: i,
          className: "kc-filter-type-select",
          toggle: (y) => /* @__PURE__ */ a(
            yt,
            {
              ref: y,
              onClick: s,
              isExpanded: i,
              style: { width: "300px" },
              children: o
            }
          ),
          onSelect: (y, x) => {
            l(x), s(), t();
          },
          selected: o,
          children: /* @__PURE__ */ C(ia, { children: [
            /* @__PURE__ */ a(
              _e,
              {
                "data-testid": "all-results-option",
                value: "ALL",
                children: r("allResults")
              }
            ),
            /* @__PURE__ */ a(
              _e,
              {
                "data-testid": "result-permit-option",
                value: "STATUS_PERMITTED",
                children: r("resultPermit")
              }
            ),
            /* @__PURE__ */ a(
              _e,
              {
                "data-testid": "result-deny-option",
                value: "STATUS_DENIED",
                children: r("resultDeny")
              }
            )
          ] })
        }
      ) })
    ] }) }),
    !v && /* @__PURE__ */ C(Cn, { "aria-label": r("evaluationResults"), children: [
      /* @__PURE__ */ a(wn, { children: /* @__PURE__ */ C(rt, { children: [
        /* @__PURE__ */ a(De, { "aria-hidden": "true" }),
        /* @__PURE__ */ a(De, { children: r("resource") }),
        /* @__PURE__ */ a(De, { children: r("overallResults") }),
        /* @__PURE__ */ a(De, { children: r("scopes") }),
        /* @__PURE__ */ a(De, { "aria-hidden": "true" })
      ] }) }),
      g.map((y, x) => /* @__PURE__ */ a(
        nG,
        {
          rowIndex: x,
          resource: y,
          evaluateResults: e.results
        },
        x
      ))
    ] }),
    (v || b) && /* @__PURE__ */ C(ee, { children: [
      /* @__PURE__ */ a(_t, {}),
      /* @__PURE__ */ a(
        ct,
        {
          isSearchVariant: !0,
          message: r("noSearchResults"),
          instructions: r("noSearchResultsInstructions")
        }
      )
    ] }),
    /* @__PURE__ */ a(xt, { children: /* @__PURE__ */ C(_r, { name: "authorization", children: [
      /* @__PURE__ */ a(z, { "data-testid": "authorization-eval", id: "back-btn", onClick: n, children: r("back") }),
      " ",
      /* @__PURE__ */ a(
        z,
        {
          "data-testid": "authorization-reevaluate",
          id: "reevaluate-btn",
          variant: "secondary",
          onClick: t,
          children: r("reevaluate")
        }
      ),
      " ",
      /* @__PURE__ */ a(eG, { data: e.rpt })
    ] }) })
  ] });
}, iG = (e) => {
  const { hasAccess: t } = Mt();
  return t("view-users") ? /* @__PURE__ */ a(sG, { ...e }) : /* @__PURE__ */ a(NO, { permissionNeeded: "view-users" });
}, sG = ({ client: e }) => {
  const { adminClient: t } = pe(), n = Ue({ mode: "onChange" }), {
    control: r,
    reset: i,
    trigger: s,
    formState: { isValid: o }
  } = n, { t: l } = H(), { addError: c } = Se(), d = be(), [u, p] = N(!1), [m, f] = N(!1), [g, b] = N([]), [v, y] = N([]), [x, w] = N(), [R, S] = N([]);
  Re(
    () => t.roles.find(),
    (T) => {
      S(T);
    },
    []
  ), Re(
    () => Promise.all([
      t.clients.listResources({
        id: e.id
      }),
      t.clients.listAllScopes({
        id: e.id
      })
    ]),
    ([T, I]) => {
      b(T), y(I);
    },
    []
  );
  const _ = async () => {
    if (!await s())
      return;
    const T = n.getValues(), I = Bo(T.resources), k = {
      roleIds: T.roleIds ?? [],
      clientId: T.client.id,
      userId: T.user[0],
      resources: g.filter((P) => Object.keys(I).includes(P.name)).map((P) => ({
        ...P,
        scopes: P.scopes?.filter(
          (D) => Object.values(I).flatMap((F) => F).includes(D.name)
        )
      })),
      entitlements: !1,
      context: {
        attributes: Object.fromEntries(
          T.context.attributes.filter((P) => P.key || P.value !== "").map(({ key: P, value: D }) => [P, D])
        )
      }
    };
    try {
      const P = await t.clients.evaluateResource(
        { id: e.id, realm: d.realm },
        k
      );
      w(P);
    } catch (P) {
      c("evaluateError", P);
    }
  }, O = nt({ control: r, name: "user", defaultValue: [] }), E = nt({ control: r, name: "roleIds", defaultValue: [] });
  return x ? /* @__PURE__ */ a(
    rG,
    {
      evaluateResult: x,
      refresh: _,
      back: () => w(void 0)
    }
  ) : /* @__PURE__ */ a(Te, { children: /* @__PURE__ */ C(Ve, { ...n, children: [
    /* @__PURE__ */ C(nu, { children: [
      /* @__PURE__ */ a(cf, { children: /* @__PURE__ */ a(nr, { headingLevel: "h2", children: l("identityInformation") }) }),
      /* @__PURE__ */ a(au, { children: /* @__PURE__ */ C(Fe, { isHorizontal: !0, role: "view-clients", children: [
        /* @__PURE__ */ a(
          Ig,
          {
            name: "client",
            label: "client",
            helpText: "clientHelp",
            defaultValue: e.clientId
          }
        ),
        /* @__PURE__ */ a(
          tb,
          {
            name: "user",
            label: "users",
            helpText: l("selectUser"),
            defaultValue: [],
            variant: "typeahead",
            isRequired: E?.length === 0
          }
        ),
        /* @__PURE__ */ a(
          at,
          {
            name: "roleIds",
            label: l("roles"),
            labelIcon: l("rolesHelp"),
            variant: "typeaheadMulti",
            placeholderText: l("selectARole"),
            controller: {
              defaultValue: [],
              rules: {
                required: {
                  value: O.length === 0,
                  message: l("required")
                }
              }
            },
            options: R.map((T) => T.name)
          }
        )
      ] }) })
    ] }),
    /* @__PURE__ */ C(nu, { children: [
      /* @__PURE__ */ a(cf, { children: /* @__PURE__ */ a(nr, { headingLevel: "h2", children: l("permissions") }) }),
      /* @__PURE__ */ a(au, { children: /* @__PURE__ */ C(Fe, { isHorizontal: !0, role: "view-clients", children: [
        /* @__PURE__ */ a(
          se,
          {
            label: l("applyToResourceType"),
            fieldId: "applyToResourceType",
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: l("applyToResourceTypeHelp"),
                fieldLabelId: "applyToResourceType"
              }
            ),
            children: /* @__PURE__ */ a(
              Ye,
              {
                id: "applyToResource-switch",
                label: l("on"),
                labelOff: l("off"),
                isChecked: m,
                onChange: (T, I) => f(I),
                "aria-label": l("applyToResourceType")
              }
            )
          }
        ),
        m ? /* @__PURE__ */ C(ee, { children: [
          /* @__PURE__ */ a(
            ve,
            {
              name: "alias",
              label: l("resourceType"),
              labelIcon: l("resourceTypeHelp"),
              rules: { required: l("required") }
            }
          ),
          /* @__PURE__ */ a(
            at,
            {
              name: "authScopes",
              label: l("authScopes"),
              labelIcon: l("scopesSelect"),
              controller: {
                defaultValue: []
              },
              variant: "typeaheadMulti",
              options: v.map((T) => T.name)
            }
          )
        ] }) : /* @__PURE__ */ a(
          se,
          {
            label: l("resourcesAndScopes"),
            id: "resourcesAndScopes",
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: l("contextualAttributesHelp"),
                fieldLabelId: "resourcesAndScopes"
              }
            ),
            fieldId: "resourcesAndScopes",
            children: /* @__PURE__ */ a(
              a0,
              {
                selectableValues: g.map((T) => ({
                  name: T.name,
                  key: T._id
                })),
                resources: g,
                name: "resources"
              }
            )
          }
        ),
        /* @__PURE__ */ a(
          us,
          {
            toggleText: l("contextualInfo"),
            onToggle: () => p(!u),
            isExpanded: u,
            children: /* @__PURE__ */ a(
              se,
              {
                label: l("contextualAttributes"),
                id: "contextualAttributes",
                labelIcon: /* @__PURE__ */ a(
                  le,
                  {
                    helpText: l("contextualAttributesHelp"),
                    fieldLabelId: "contextualAttributes"
                  }
                ),
                fieldId: "contextualAttributes",
                children: /* @__PURE__ */ a(
                  a0,
                  {
                    selectableValues: aO,
                    name: "context.attributes"
                  }
                )
              }
            )
          }
        )
      ] }) })
    ] }),
    /* @__PURE__ */ C(st, { children: [
      /* @__PURE__ */ a(
        z,
        {
          "data-testid": "authorization-eval",
          id: "authorization-eval",
          className: "pf-v5-u-mr-md",
          isDisabled: !o,
          onClick: () => _(),
          children: l("evaluate")
        }
      ),
      /* @__PURE__ */ a(
        z,
        {
          "data-testid": "authorization-revert",
          id: "authorization-revert",
          className: "pf-v5-u-mr-md",
          variant: "link",
          onClick: () => i(),
          children: l("revert")
        }
      )
    ] })
  ] }) });
}, oG = () => {
  const { adminClient: e } = pe(), { t } = H(), { clientId: n } = Vt(), { addAlert: r, addError: i } = Se(), [s, o] = N(), [l, c] = N();
  Re(
    () => e.clients.exportResource({
      id: n
    }),
    (u) => {
      o(JSON.stringify(u, null, 2)), c(u);
    },
    []
  );
  const d = () => {
    try {
      fs.saveAs(
        new Blob([Fa(l)], {
          type: "application/json"
        }),
        "test-authz-config.json"
      ), r(t("exportAuthDetailsSuccess"), ue.success);
    } catch (u) {
      i("exportAuthDetailsError", u);
    }
  };
  return s ? /* @__PURE__ */ a(Te, { children: /* @__PURE__ */ C(
    Fe,
    {
      isHorizontal: !0,
      role: "manage-authorization",
      className: "pf-v5-u-mt-lg",
      children: [
        /* @__PURE__ */ a(
          wr,
          {
            name: "authDetails",
            label: t("authDetails"),
            labelIcon: t("authDetailsHelp"),
            resizeOrientation: "vertical",
            defaultValue: s,
            readOnly: !0,
            rows: 10
          }
        ),
        /* @__PURE__ */ C(st, { children: [
          /* @__PURE__ */ a(
            z,
            {
              "data-testid": "authorization-export-download",
              onClick: () => d(),
              children: t("download")
            }
          ),
          /* @__PURE__ */ a(
            z,
            {
              "data-testid": "authorization-export-copy",
              variant: "secondary",
              onClick: async () => {
                try {
                  await navigator.clipboard.writeText(s), r(t("copied"), ue.success);
                } catch (u) {
                  i(t("copyError"), u);
                }
              },
              children: t("copy")
            }
          )
        ] })
      ]
    }
  ) }) : /* @__PURE__ */ a(gt, {});
};
function lG(e) {
  const [t, n] = N(null), [r, i] = N(
    null
  );
  function s(o) {
    i({
      name: o.name,
      state: o.state
    });
  }
  return He(() => {
    n(null), i(null), navigator.permissions.query({ name: e }).then((o) => {
      n(o), s(o);
    });
  }, [e]), He(() => {
    if (!t)
      return;
    function o() {
      t && s(t);
    }
    return t.addEventListener("change", o), () => t.removeEventListener("change", o);
  }, [t]), r;
}
const DO = ({
  id: e,
  label: t,
  text: n,
  variant: r = "plain"
}) => {
  const { t: i } = H(), s = Sw(), l = lG("clipboard-write")?.state === "denied", [c, d] = N(
    0
    /* Ready */
  ), u = et(() => {
    if (l)
      return "clipboardCopyDenied";
    switch (c) {
      case 0:
        return "copyToClipboard";
      case 1:
        return "copySuccess";
      case 2:
        return "clipboardCopyError";
    }
  }, [l, c]);
  He(() => {
    if (c !== 0)
      return s(() => d(
        0
        /* Ready */
      ), 1e3);
  }, [c, s]);
  const p = async (m) => {
    try {
      await navigator.clipboard.writeText(m), d(
        1
        /* Copied */
      );
    } catch {
      d(
        2
        /* Error */
      );
    }
  };
  return /* @__PURE__ */ a(
    tu,
    {
      id: `copy-button-${e}`,
      textId: t,
      "aria-label": i("copyToClipboard"),
      onClick: () => p(n),
      exitDelay: 600,
      variant: r,
      children: i(u)
    }
  );
}, s0 = ({
  id: e,
  buttonLabel: t,
  client: n,
  secret: r,
  toggle: i
}) => {
  const { t: s } = H(), o = Le(), { hasAccess: l } = Mt(), c = l("manage-clients") || n.access?.configure;
  return /* @__PURE__ */ C(Jn, { hasGutter: !0, children: [
    /* @__PURE__ */ a(Dt, { isFilled: !0, children: /* @__PURE__ */ C(Qt, { children: [
      /* @__PURE__ */ a(dt, { children: /* @__PURE__ */ a(Tc, { id: e, value: r, readOnly: !0 }) }),
      /* @__PURE__ */ a(dt, { children: /* @__PURE__ */ a(
        DO,
        {
          id: e,
          text: r,
          label: "clientSecret",
          variant: "control"
        }
      ) })
    ] }) }),
    /* @__PURE__ */ a(Dt, { children: /* @__PURE__ */ a(
      z,
      {
        variant: "secondary",
        isDisabled: o.formState.isDirty || !c,
        onClick: i,
        children: s(t)
      }
    ) })
  ] });
}, o0 = ({ time: e }) => {
  const { t } = H(), n = ni();
  return /* @__PURE__ */ a("div", { className: "pf-v5-u-my-md", children: ((i) => i ? t("secretExpiresOn", {
    time: n(new Date(i * 1e3), {
      dateStyle: "full",
      timeStyle: "long"
    })
  }) : void 0)(e) });
}, cG = ({ client: e, secret: t, toggle: n }) => {
  const { adminClient: r } = pe(), { t: i } = H(), { addAlert: s, addError: o } = Se(), [l, c] = N(
    e.attributes?.["client.secret.rotated"]
  ), d = e.attributes?.["client.secret.expiration.time"], u = e.attributes?.["client.secret.rotated.expiration.time"], p = (g) => (/* @__PURE__ */ new Date()).getTime() >= g * 1e3, [m, f] = ze({
    titleKey: "invalidateRotatedSecret",
    messageKey: "invalidateRotatedSecretExplain",
    continueButtonLabel: "confirm",
    onConfirm: async () => {
      try {
        await r.clients.invalidateSecret({
          id: e.id
        }), c(void 0), s(i("invalidateRotatedSuccess"));
      } catch (g) {
        o("invalidateRotatedError", g);
      }
    }
  });
  return He(() => {
    l !== e.attributes?.["client.secret.rotated"] && c(e.attributes?.["client.secret.rotated"]);
  }, [e, l]), /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(f, {}),
    /* @__PURE__ */ C(
      se,
      {
        label: i("clientSecret"),
        fieldId: "kc-client-secret",
        className: "pf-v5-u-my-md",
        children: [
          /* @__PURE__ */ a(
            s0,
            {
              id: "kc-client-secret",
              client: e,
              secret: t,
              toggle: n,
              buttonLabel: "regenerate"
            }
          ),
          /* @__PURE__ */ a(o0, { time: d }),
          p(d) && /* @__PURE__ */ a(_n, { variant: "warning", isInline: !0, title: i("secretHasExpired") })
        ]
      }
    ),
    l && /* @__PURE__ */ C(se, { label: i("secretRotated"), fieldId: "secretRotated", children: [
      /* @__PURE__ */ a(
        s0,
        {
          id: "secretRotated",
          client: e,
          secret: l,
          toggle: m,
          buttonLabel: "invalidateSecret"
        }
      ),
      /* @__PURE__ */ a(o0, { time: u })
    ] })
  ] });
}, dG = ({ clientAuthenticatorType: e }) => {
  const { cryptoInfo: t } = Tt(), n = e === "client-jwt" ? t?.clientSignatureAsymmetricAlgorithms ?? [] : t?.clientSignatureSymmetricAlgorithms ?? [], { t: r } = H();
  return /* @__PURE__ */ a(
    at,
    {
      name: Ne(
        "attributes.token.endpoint.auth.signing.alg"
      ),
      label: r("signatureAlgorithm"),
      labelIcon: r("signatureAlgorithmHelp"),
      controller: {
        defaultValue: ""
      },
      isScrollable: !0,
      maxMenuHeight: "200px",
      options: [
        { key: "", value: r("anyAlgorithm") },
        ...n.map((i) => ({ key: i, value: i }))
      ]
    }
  );
}, uG = () => {
  const { t: e } = H();
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(
      bt,
      {
        name: Ne(
          "attributes.x509.allow.regex.pattern.comparison"
        ),
        label: e("allowRegexComparison"),
        labelIcon: e("allowRegexComparisonHelp")
      }
    ),
    /* @__PURE__ */ a(
      ve,
      {
        name: Ne("attributes.x509.subjectdn"),
        label: e("subject"),
        labelIcon: e("subjectHelp"),
        rules: {
          required: e("required")
        }
      }
    )
  ] });
}, pG = ({ client: e, save: t, refresh: n }) => {
  const { adminClient: r } = pe(), { t: i } = H(), { addAlert: s, addError: o } = Se(), l = e.id, [c, d] = N([]), {
    control: u,
    formState: { isDirty: p },
    handleSubmit: m
  } = Le(), f = nt({
    control: u,
    name: "clientAuthenticatorType",
    defaultValue: ""
  }), [g, b] = N(""), [v, y] = N(""), x = c.find(
    (I) => I.id === f
  );
  Re(
    () => Promise.all([
      r.authenticationManagement.getClientAuthenticatorProviders(),
      r.clients.getClientSecret({
        id: l
      })
    ]),
    ([I, k]) => {
      d(I), b(k.value);
    },
    []
  );
  async function w(I, k) {
    try {
      const P = await I(l);
      return s(i(`${k}Success`), ue.success), P;
    } catch (P) {
      o(`${k}Error`, P);
    }
  }
  const R = async () => {
    const I = await w(
      (k) => r.clients.generateNewClientSecret({ id: k }),
      "clientSecret"
    );
    b(I?.value || ""), n();
  }, [S, _] = ze({
    titleKey: "confirmClientSecretTitle",
    messageKey: "confirmClientSecretBody",
    continueButtonLabel: "yes",
    cancelButtonLabel: "no",
    onConfirm: R
  }), O = async () => {
    const I = await w(
      (k) => r.clients.generateRegistrationAccessToken({ id: k }),
      "accessToken"
    );
    y(I?.registrationAccessToken || "");
  }, [E, T] = ze({
    titleKey: "confirmAccessTokenTitle",
    messageKey: "confirmAccessTokenBody",
    continueButtonLabel: "yes",
    cancelButtonLabel: "no",
    onConfirm: O
  });
  return /* @__PURE__ */ a(Te, { children: /* @__PURE__ */ C(
    Fe,
    {
      onSubmit: m(t),
      isHorizontal: !0,
      className: "pf-v5-u-mt-md",
      role: "manage-clients",
      fineGrainedAccess: e.access?.configure,
      children: [
        /* @__PURE__ */ a(_, {}),
        /* @__PURE__ */ a(T, {}),
        /* @__PURE__ */ C(xa, { isFlat: !0, children: [
          /* @__PURE__ */ C(da, { children: [
            /* @__PURE__ */ a(
              at,
              {
                name: "clientAuthenticatorType",
                label: i("clientAuthenticator"),
                labelIcon: i("clientAuthenticatorTypeHelp"),
                controller: {
                  defaultValue: ""
                },
                options: c.map(({ id: I, displayName: k }) => ({
                  key: I,
                  value: k || I
                }))
              }
            ),
            (f === "client-jwt" || f === "client-secret-jwt") && /* @__PURE__ */ a(dG, { clientAuthenticatorType: f }),
            f === "client-jwt" && /* @__PURE__ */ a(se, { children: /* @__PURE__ */ a(_n, { variant: "info", isInline: !0, title: i("signedJWTConfirm") }) }),
            f === "client-x509" && /* @__PURE__ */ a(uG, {}),
            /* @__PURE__ */ a(st, { children: /* @__PURE__ */ a(z, { variant: "primary", type: "submit", isDisabled: !p, children: i("save") }) })
          ] }),
          x?.supportsSecret && /* @__PURE__ */ C(ee, { children: [
            /* @__PURE__ */ a(_t, {}),
            /* @__PURE__ */ a(da, { children: /* @__PURE__ */ a(
              cG,
              {
                client: e,
                secret: g,
                toggle: S
              }
            ) })
          ] })
        ] }),
        /* @__PURE__ */ a(xa, { isFlat: !0, children: /* @__PURE__ */ a(da, { children: /* @__PURE__ */ a(
          se,
          {
            label: i("registrationAccessToken"),
            fieldId: "kc-access-token",
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: i("registrationAccessTokenHelp"),
                fieldLabelId: "registrationAccessToken"
              }
            ),
            children: /* @__PURE__ */ C(Jn, { hasGutter: !0, children: [
              /* @__PURE__ */ a(Dt, { isFilled: !0, children: /* @__PURE__ */ a(ti, { id: "kc-access-token", isReadOnly: !0, children: v }) }),
              /* @__PURE__ */ a(Dt, { children: /* @__PURE__ */ a(
                z,
                {
                  variant: "secondary",
                  onClick: E,
                  children: i("regenerate")
                }
              ) })
            ] })
          }
        ) }) })
      ]
    }
  ) });
}, mG = (e) => e.match(/(<.[^(><.)]+>)/g);
function fG() {
  const { adminClient: e } = pe(), { t } = H(), n = Je(), { realm: r } = be(), i = Ue(), { handleSubmit: s, setValue: o, formState: l } = i, [c, d] = N({}), { addAlert: u, addError: p } = Se(), m = async (b) => {
    try {
      const v = await f(b);
      In(v, o), d(v);
    } catch (v) {
      p("importParseError", v);
    }
  };
  async function f(b) {
    if (!mG(b))
      return JSON.parse(b);
    const v = await Ii(
      `${os(
        e.baseUrl
      )}admin/realms/${r}/client-description-converter`,
      {
        method: "POST",
        body: b,
        headers: no(await e.getAccessToken())
      }
    );
    if (!v.ok)
      throw new Error(
        `Server responded with invalid status: ${v.statusText}`
      );
    return v.json();
  }
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(wt, { titleKey: "importClient", subKey: "clientsExplain" }),
    /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ a(
      Fe,
      {
        isHorizontal: !0,
        onSubmit: s(async (b) => {
          try {
            const v = await e.clients.create({
              ...c,
              ...Zn({
                ...b,
                attributes: b.attributes || {}
              })
            });
            u(t("clientImportSuccess"), ue.success), n(Ti({ realm: r, clientId: v.id, tab: "settings" }));
          } catch (v) {
            p("clientImportError", v);
          }
        }),
        role: "manage-clients",
        children: /* @__PURE__ */ C(Ve, { ...i, children: [
          /* @__PURE__ */ a(
            zg,
            {
              id: "realm-file",
              language: Ln.json,
              extension: ".json,.xml",
              helpText: t("helpFileUploadClient"),
              onChange: m
            }
          ),
          /* @__PURE__ */ a(Gg, { hasConfigureAccess: !0 }),
          /* @__PURE__ */ a(ve, { name: "protocol", label: t("type"), readOnly: !0 }),
          /* @__PURE__ */ a(qg, { unWrap: !0 }),
          /* @__PURE__ */ C(st, { children: [
            /* @__PURE__ */ a(
              eo,
              {
                formState: l,
                allowInvalid: !0,
                allowNonDirty: !0,
                children: t("save")
              }
            ),
            /* @__PURE__ */ a(
              z,
              {
                variant: "link",
                component: (b) => /* @__PURE__ */ a(Ae, { ...b, to: Bs({ realm: r }) }),
                children: t("cancel")
              }
            )
          ] })
        ] })
      }
    ) })
  ] });
}
const hG = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: fG
}, Symbol.toStringTag, { value: "Module" })), gG = ({
  token: e,
  toggleDialog: t
}) => {
  const { t: n } = H();
  return /* @__PURE__ */ C(
    ht,
    {
      title: n("initialAccessTokenDetails"),
      isOpen: !0,
      onClose: t,
      variant: Rt.medium,
      children: [
        /* @__PURE__ */ a(
          _n,
          {
            title: n("copyInitialAccessToken"),
            component: "h2",
            isInline: !0,
            variant: ue.warning
          }
        ),
        /* @__PURE__ */ a(xt, { className: "pf-v5-u-mt-md", children: /* @__PURE__ */ a(se, { label: n("initialAccessToken"), fieldId: "initialAccessToken", children: /* @__PURE__ */ a(ti, { id: "initialAccessToken", isReadOnly: !0, children: e }) }) })
      ]
    }
  );
};
function bG() {
  const { adminClient: e } = pe(), { t } = H(), n = Ue({ mode: "onChange" }), {
    handleSubmit: r,
    formState: { isValid: i }
  } = n, { realm: s } = be(), { addAlert: o, addError: l } = Se(), c = Je(), [d, u] = N("");
  return /* @__PURE__ */ C(Ve, { ...n, children: [
    d && /* @__PURE__ */ a(
      gG,
      {
        token: d,
        toggleDialog: () => {
          u(""), o(t("tokenSaveSuccess"), ue.success), c(Bs({ realm: s, tab: "initial-access-token" }));
        }
      }
    ),
    /* @__PURE__ */ a(wt, { titleKey: "createToken", subKey: "createTokenHelp" }),
    /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ C(
      Fe,
      {
        isHorizontal: !0,
        role: "create-client",
        onSubmit: r(async (m) => {
          try {
            const f = await e.realms.createClientsInitialAccess(
              { realm: s },
              m
            );
            u(f.token);
          } catch (f) {
            l("tokenSaveError", f);
          }
        }),
        children: [
          /* @__PURE__ */ a(
            gl,
            {
              name: "expiration",
              label: t("expiration"),
              labelIcon: t("tokenExpirationHelp"),
              controller: {
                defaultValue: 86400,
                rules: {
                  min: {
                    value: 1,
                    message: t("expirationValueNotValid")
                  }
                }
              }
            }
          ),
          /* @__PURE__ */ a(
            es,
            {
              name: "count",
              label: t("count"),
              labelIcon: t("countHelp"),
              controller: {
                defaultValue: 1
              },
              min: 1
            }
          ),
          /* @__PURE__ */ C(st, { children: [
            /* @__PURE__ */ a(
              z,
              {
                variant: "primary",
                type: "submit",
                "data-testid": "save",
                isDisabled: !i,
                children: t("save")
              }
            ),
            /* @__PURE__ */ a(
              z,
              {
                "data-testid": "cancel",
                variant: "link",
                component: (m) => /* @__PURE__ */ a(
                  Ae,
                  {
                    ...m,
                    to: Bs({ realm: s, tab: "initial-access-token" })
                  }
                ),
                children: t("cancel")
              }
            )
          ] })
        ]
      }
    ) })
  ] });
}
const vG = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: bG
}, Symbol.toStringTag, { value: "Module" })), yG = Be(
  () => Promise.resolve().then(() => vG)
), MO = {
  path: "/:realm/clients/initialAccessToken/create",
  element: /* @__PURE__ */ a(yG, {}),
  breadcrumb: (e) => e("createToken"),
  handle: {
    access: "manage-clients"
  }
}, l0 = (e) => ({
  pathname: We(MO.path, e)
}), FO = () => {
  const { adminClient: e } = pe(), { t } = H(), { addAlert: n, addError: r } = Se(), { realm: i } = be(), s = ni(), o = Je(), [l, c] = N(), d = async () => {
    try {
      return await e.realms.getClientsInitialAccess({ realm: i });
    } catch {
      return [];
    }
  }, [u, p] = ze({
    titleKey: "tokenDeleteConfirmTitle",
    messageKey: t("tokenDeleteConfirm", { id: l?.id }),
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        await e.realms.delClientsInitialAccess({
          realm: i,
          id: l.id
        }), n(t("tokenDeleteSuccess"), ue.success), c(void 0);
      } catch (m) {
        r("tokenDeleteError", m);
      }
    }
  });
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(p, {}),
    /* @__PURE__ */ a(
      St,
      {
        ariaLabelKey: "initialAccessToken",
        searchPlaceholderKey: "searchInitialAccessToken",
        loader: d,
        toolbarItem: /* @__PURE__ */ a(
          z,
          {
            component: (m) => /* @__PURE__ */ a(Ae, { ...m, to: l0({ realm: i }) }),
            children: t("create")
          }
        ),
        actions: [
          {
            title: t("delete"),
            onRowClick: (m) => {
              c(m), u();
            }
          }
        ],
        columns: [
          {
            name: "id",
            displayKey: "id"
          },
          {
            name: "timestamp",
            displayKey: "timestamp",
            cellRenderer: (m) => s(new Date(m.timestamp * 1e3), Dc)
          },
          {
            name: "expiration",
            displayKey: "expires",
            cellRenderer: (m) => s(
              new Date(m.timestamp * 1e3 + m.expiration * 1e3),
              Dc
            )
          },
          {
            name: "count",
            displayKey: "count"
          },
          {
            name: "remainingCount",
            displayKey: "remainingCount",
            transforms: [P$]
          }
        ],
        emptyState: /* @__PURE__ */ a(
          ct,
          {
            message: t("noTokens"),
            instructions: t("noTokensInstructions"),
            primaryActionText: t("create"),
            onPrimaryAction: () => o(l0({ realm: i }))
          }
        )
      },
      l?.id
    )
  ] });
}, lee = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  InitialAccessTokenList: FO
}, Symbol.toStringTag, { value: "Module" })), c0 = ({ id: e, keyInfo: t }) => {
  const { t: n } = H();
  return /* @__PURE__ */ a(
    Ai,
    {
      readOnly: !0,
      rows: 5,
      id: e,
      "data-testid": "certificate",
      value: t?.certificate,
      "aria-label": n("certificate")
    }
  );
}, ab = ({ keyInfo: e, plain: t = !1 }) => {
  const { t: n } = H(), r = Vu();
  return t ? /* @__PURE__ */ a(c0, { id: r, keyInfo: e }) : /* @__PURE__ */ a(
    se,
    {
      label: n("certificate"),
      fieldId: r,
      labelIcon: /* @__PURE__ */ a(le, { helpText: n("certificateHelp"), fieldLabelId: r }),
      children: /* @__PURE__ */ a(c0, { id: r, keyInfo: e })
    }
  );
}, $O = ({
  hidePassword: e = !1,
  isSaml: t = !1
}) => {
  const { t: n } = H();
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(
      ve,
      {
        name: "keyAlias",
        label: n("keyAlias"),
        labelIcon: n("keyAliasHelp"),
        rules: {
          required: n("required")
        }
      }
    ),
    !e && /* @__PURE__ */ a(
      jo,
      {
        name: "keyPassword",
        label: n("keyPassword"),
        labelIcon: n("keyPasswordHelp"),
        rules: {
          required: n("required")
        }
      }
    ),
    t && /* @__PURE__ */ a(
      ve,
      {
        name: "realmAlias",
        label: n("realmCertificateAlias"),
        labelIcon: n("realmCertificateAliasHelp")
      }
    ),
    /* @__PURE__ */ a(
      jo,
      {
        name: "storePassword",
        label: n("storePassword"),
        labelIcon: n("storePasswordHelp"),
        rules: {
          required: n("required")
        }
      }
    )
  ] });
}, d0 = "Certificate PEM", CG = /* @__PURE__ */ new Map([
  ["PKCS12", "p12"],
  ["JKS", "jks"],
  ["BCFKS", "bcfks"]
]), jO = (e) => CG.get(e), Pp = ({
  isSaml: e = !1,
  hasPem: t = !1,
  useFile: n = !1
}) => {
  const { t: r } = H(), [i, s] = N(), { control: o, watch: l } = Le(), c = l("format"), { cryptoInfo: d } = Tt(), u = [
    ...d?.supportedKeystoreTypes ?? [],
    ...t ? [d0] : []
  ];
  return /* @__PURE__ */ C(xt, { className: "pf-v5-u-pt-lg", children: [
    /* @__PURE__ */ a(
      at,
      {
        name: "format",
        label: r("archiveFormat"),
        labelIcon: r("archiveFormatHelp"),
        controller: {
          defaultValue: u[0]
        },
        menuAppendTo: "parent",
        options: u
      }
    ),
    n && /* @__PURE__ */ a(
      se,
      {
        label: r("importFile"),
        labelIcon: /* @__PURE__ */ a(
          le,
          {
            helpText: r("importFileHelp"),
            fieldLabelId: "importFile"
          }
        ),
        fieldId: "importFile",
        children: /* @__PURE__ */ a(
          ge,
          {
            name: "file",
            defaultValue: "",
            control: o,
            render: ({ field: p }) => /* @__PURE__ */ a(
              Uo,
              {
                id: "importFile",
                value: p.value,
                filename: i,
                browseButtonText: r("browse"),
                onChange: (m, f) => {
                  s(f), p.onChange(m);
                }
              }
            )
          }
        )
      }
    ),
    c !== d0 && /* @__PURE__ */ a($O, { hidePassword: n, isSaml: e })
  ] });
}, xG = ({
  clientId: e,
  save: t,
  toggleDialog: n
}) => {
  const { t: r } = H(), i = Ue({
    defaultValues: { keyAlias: e },
    mode: "onChange"
  }), {
    handleSubmit: s,
    formState: { isValid: o }
  } = i;
  return /* @__PURE__ */ C(
    ht,
    {
      variant: Rt.medium,
      title: r("generateKeys"),
      isOpen: !0,
      onClose: n,
      actions: [
        /* @__PURE__ */ a(
          z,
          {
            id: "modal-confirm",
            "data-testid": "confirm",
            isDisabled: !o,
            onClick: () => {
              s((l) => {
                t(l), n();
              })();
            },
            children: r("generate")
          },
          "confirm"
        ),
        /* @__PURE__ */ a(
          z,
          {
            id: "modal-cancel",
            "data-testid": "cancel",
            variant: xe.link,
            onClick: () => {
              n();
            },
            children: r("cancel")
          },
          "cancel"
        )
      ],
      children: [
        /* @__PURE__ */ a(Pt, { children: /* @__PURE__ */ a(tt, { children: r("generateKeysDescription") }) }),
        /* @__PURE__ */ a(Ve, { ...i, children: /* @__PURE__ */ a(Pp, {}) })
      ]
    }
  );
}, SG = ({
  clientId: e,
  close: t,
  keyType: n
}) => {
  const { adminClient: r } = pe(), { t: i } = H(), { realm: s } = be(), { addAlert: o, addError: l } = Se(), c = Ue({
    defaultValues: { realmAlias: s }
  }), d = async (u) => {
    try {
      const p = await r.clients.downloadKey(
        {
          id: e,
          attr: n
        },
        u
      );
      fs.saveAs(
        new Blob([p], { type: "application/octet-stream" }),
        `keystore.${jO(u.format ?? "")}`
      ), o(i("samlKeysExportSuccess")), t();
    } catch (p) {
      l("samlKeysExportError", p);
    }
  };
  return /* @__PURE__ */ a(
    ht,
    {
      variant: "medium",
      title: i("exportSamlKeyTitle"),
      isOpen: !0,
      onClose: t,
      actions: [
        /* @__PURE__ */ a(
          z,
          {
            id: "modal-confirm",
            "data-testid": "confirm",
            type: "submit",
            form: "export-saml-key-form",
            children: i("export")
          },
          "confirm"
        ),
        /* @__PURE__ */ a(
          z,
          {
            id: "modal-cancel",
            "data-testid": "cancel",
            variant: "link",
            onClick: () => {
              t();
            },
            children: i("cancel")
          },
          "cancel"
        )
      ],
      children: /* @__PURE__ */ a(
        xt,
        {
          id: "export-saml-key-form",
          className: "pf-v5-u-pt-lg",
          onSubmit: c.handleSubmit(d),
          children: /* @__PURE__ */ a(Ve, { ...c, children: /* @__PURE__ */ a(Pp, { isSaml: !0 }) })
        }
      )
    }
  );
}, wG = ({
  save: e,
  toggleDialog: t
}) => {
  const { t: n } = H(), r = Ue(), { control: i, handleSubmit: s } = r, o = Tt().cryptoInfo?.supportedKeystoreTypes ?? [], l = o.concat([
    "Certificate PEM",
    "Public Key PEM",
    "JSON Web Key Set"
  ]), c = nt({
    control: i,
    name: "keystoreFormat",
    defaultValue: l[0]
  });
  return /* @__PURE__ */ C(
    ht,
    {
      variant: Rt.medium,
      title: n("generateKeys"),
      isOpen: !0,
      onClose: t,
      actions: [
        /* @__PURE__ */ a(
          z,
          {
            id: "modal-confirm",
            "data-testid": "confirm",
            onClick: () => {
              s((d) => {
                e(d), t();
              })();
            },
            children: n("import")
          },
          "confirm"
        ),
        /* @__PURE__ */ a(
          z,
          {
            id: "modal-cancel",
            "data-testid": "cancel",
            variant: xe.link,
            onClick: () => {
              t();
            },
            children: n("cancel")
          },
          "cancel"
        )
      ],
      children: [
        /* @__PURE__ */ a(Pt, { children: /* @__PURE__ */ a(tt, { children: n("generateKeysDescription") }) }),
        /* @__PURE__ */ a(xt, { className: "pf-v5-u-pt-lg", children: /* @__PURE__ */ C(Ve, { ...r, children: [
          /* @__PURE__ */ a(
            at,
            {
              name: "keystoreFormat",
              label: n("archiveFormat"),
              labelIcon: n("archiveFormatHelp"),
              controller: {
                defaultValue: l[0]
              },
              options: l
            }
          ),
          o.includes(c) && /* @__PURE__ */ a($O, { hidePassword: !0 }),
          /* @__PURE__ */ a(se, { label: n("importFile"), fieldId: "importFile", children: /* @__PURE__ */ a(
            ge,
            {
              name: "file",
              control: i,
              defaultValue: { filename: "" },
              render: ({ field: d }) => /* @__PURE__ */ a(
                Uo,
                {
                  id: "importFile",
                  value: d.value.value,
                  filename: d.value.filename,
                  onChange: (u, p) => d.onChange({ value: u, filename: p })
                }
              )
            }
          ) })
        ] }) })
      ]
    }
  );
}, Hm = "jwt.credential", kG = ({ clientId: e, save: t, hasConfigureAccess: n }) => {
  const { adminClient: r } = pe(), { t: i } = H(), {
    control: s,
    getValues: o,
    formState: { isDirty: l }
  } = Le(), { addAlert: c, addError: d } = Se(), [u, p] = N(), [m, f, g] = ot(), [b, v, y] = ot(), [x, w] = N(0), R = () => w(x + 1), S = nt({
    control: s,
    name: Ne("attributes.use.jwks.url"),
    defaultValue: "false"
  });
  Re(
    () => r.clients.getKeyInfo({ id: e, attr: Hm }),
    (E) => p(E),
    [x]
  );
  const _ = async (E) => {
    try {
      const T = await r.clients.generateAndDownloadKey(
        {
          id: e,
          attr: Hm
        },
        E
      );
      fs.saveAs(
        new Blob([T], { type: "application/octet-stream" }),
        `keystore.${jO(E.format ?? "")}`
      ), c(i("generateSuccess"), ue.success), R();
    } catch (T) {
      d("generateError", T);
    }
  }, O = async (E) => {
    try {
      const T = new FormData(), { file: I, ...k } = E;
      for (const [P, D] of Object.entries(k))
        T.append(P, D);
      T.append("file", I.value), await r.clients.uploadCertificate(
        { id: e, attr: Hm },
        T
      ), c(i("importSuccess"), ue.success), R();
    } catch (T) {
      d("importError", T);
    }
  };
  return /* @__PURE__ */ C(Te, { variant: "light", className: "keycloak__form", children: [
    m && /* @__PURE__ */ a(
      xG,
      {
        clientId: o("clientId"),
        toggleDialog: f,
        save: _
      }
    ),
    b && /* @__PURE__ */ a(wG, { toggleDialog: v, save: O }),
    /* @__PURE__ */ C(xa, { isFlat: !0, children: [
      /* @__PURE__ */ a(qc, { children: /* @__PURE__ */ a(br, { children: i("jwksUrlConfig") }) }),
      /* @__PURE__ */ a(da, { children: /* @__PURE__ */ a(Pt, { children: /* @__PURE__ */ a(tt, { children: i("keysIntro") }) }) }),
      /* @__PURE__ */ a(da, { children: /* @__PURE__ */ C(
        Fe,
        {
          role: "manage-clients",
          fineGrainedAccess: n,
          isHorizontal: !0,
          children: [
            /* @__PURE__ */ a(
              bt,
              {
                name: Ne("attributes.use.jwks.url"),
                label: i("useJwksUrl"),
                labelIcon: i("useJwksUrlHelp"),
                stringify: !0
              }
            ),
            S !== "true" && (u ? /* @__PURE__ */ a(ab, { plain: !0, keyInfo: u }) : "No client certificate configured"),
            S === "true" && /* @__PURE__ */ a(
              ve,
              {
                name: Ne("attributes.jwks.url"),
                label: i("jwksUrl"),
                labelIcon: i("jwksUrlHelp"),
                type: "url"
              }
            ),
            /* @__PURE__ */ C(st, { children: [
              /* @__PURE__ */ a(
                z,
                {
                  "data-testid": "saveKeys",
                  onClick: t,
                  isDisabled: !l,
                  children: i("save")
                }
              ),
              /* @__PURE__ */ a(
                z,
                {
                  "data-testid": "generate",
                  variant: "secondary",
                  onClick: () => g(!0),
                  children: i("generateNewKeys")
                }
              ),
              /* @__PURE__ */ a(
                z,
                {
                  "data-testid": "import",
                  variant: "secondary",
                  onClick: () => y(!0),
                  isDisabled: S === "true",
                  children: i("import")
                }
              )
            ] })
          ]
        }
      ) })
    ] })
  ] });
}, BO = async (e, t, n, r, i) => {
  try {
    const s = new FormData(), { file: o, ...l } = t;
    Object.entries(l).map(
      ([c, d]) => s.append(
        c === "format" ? "keystoreFormat" : c,
        d.toString()
      )
    ), s.append("file", o), await e.clients.uploadKey({ id: n, attr: r }, s), i();
  } catch (s) {
    i(s);
  }
}, OG = ({
  id: e,
  attr: t,
  onClose: n,
  onCancel: r
}) => {
  const { adminClient: i } = pe(), { t: s } = H(), [o, l] = N(!1), [c, d] = N(), u = Ue({ mode: "onChange" }), {
    handleSubmit: p,
    formState: { isValid: m }
  } = u, { addAlert: f, addError: g } = Se(), b = (y) => {
    BO(i, y, e, t, (x) => {
      x ? g("importError", x) : f(s("importSuccess"), ue.success);
    });
  }, v = async () => {
    try {
      const y = await i.clients.generateKey({
        id: e,
        attr: t
      });
      d(y), fs.saveAs(
        new Blob([y.privateKey], {
          type: "application/octet-stream"
        }),
        "private.key"
      ), f(s("generateSuccess"), ue.success);
    } catch (y) {
      g("generateError", y);
    }
  };
  return /* @__PURE__ */ a(
    ht,
    {
      variant: Rt.medium,
      "aria-label": s("enableClientSignatureRequiredModal"),
      header: /* @__PURE__ */ C(Pt, { children: [
        /* @__PURE__ */ a(nr, { headingLevel: "h1", children: s("enableClientSignatureRequired") }),
        /* @__PURE__ */ a(tt, { children: s("enableClientSignatureRequiredExplain") })
      ] }),
      isOpen: !0,
      onClose: n,
      actions: [
        /* @__PURE__ */ a(
          z,
          {
            id: "modal-confirm",
            "data-testid": "confirm",
            variant: "primary",
            isDisabled: !m && !c,
            onClick: () => {
              o && p(b)(), n();
            },
            children: s("confirm")
          },
          "confirm"
        ),
        /* @__PURE__ */ a(
          z,
          {
            id: "modal-cancel",
            "data-testid": "cancel",
            variant: xe.link,
            onClick: r,
            children: s("cancel")
          },
          "cancel"
        )
      ],
      children: /* @__PURE__ */ C(Ve, { ...u, children: [
        /* @__PURE__ */ C(xt, { isHorizontal: !0, children: [
          /* @__PURE__ */ a(
            se,
            {
              label: s("selectMethod"),
              fieldId: "selectMethod",
              hasNoPaddingTop: !0,
              children: /* @__PURE__ */ C(ra, { children: [
                /* @__PURE__ */ a(Nt, { children: /* @__PURE__ */ a(
                  sn,
                  {
                    isChecked: !o,
                    name: "selectMethodType",
                    onChange: () => l(!1),
                    label: s("selectMethodType.generate"),
                    id: "selectMethodType-generate"
                  }
                ) }),
                /* @__PURE__ */ a(Nt, { children: /* @__PURE__ */ a(
                  sn,
                  {
                    isChecked: o,
                    name: "selectMethodType",
                    onChange: () => l(!0),
                    label: s("selectMethodType.import"),
                    id: "selectMethodType-import"
                  }
                ) })
              ] })
            }
          ),
          !o && /* @__PURE__ */ a(
            se,
            {
              label: s("certificate"),
              fieldId: "certificate",
              labelIcon: /* @__PURE__ */ a(
                le,
                {
                  helpText: s("certificateHelp"),
                  fieldLabelId: "certificate"
                }
              ),
              children: /* @__PURE__ */ C(Jn, { hasGutter: !0, children: [
                /* @__PURE__ */ a(Dt, { isFilled: !0, children: /* @__PURE__ */ a(ab, { plain: !0, keyInfo: c }) }),
                /* @__PURE__ */ a(Dt, { children: /* @__PURE__ */ a(
                  z,
                  {
                    variant: "secondary",
                    "data-testid": "generate",
                    onClick: v,
                    children: s("generate")
                  }
                ) })
              ] })
            }
          )
        ] }),
        o && /* @__PURE__ */ a(Pp, { useFile: !0 })
      ] })
    }
  );
}, TG = ({
  id: e,
  attr: t,
  onClose: n
}) => {
  const { adminClient: r } = pe(), { t: i } = H(), s = Le(), { handleSubmit: o } = s, { addAlert: l, addError: c } = Se(), d = (u) => {
    BO(r, u, e, t, (p) => {
      p ? c("importError", p) : l(i("importSuccess"), ue.success);
    });
  };
  return /* @__PURE__ */ a(
    ms,
    {
      open: !0,
      toggleDialog: n,
      continueButtonLabel: "import",
      titleKey: "importKey",
      onConfirm: () => {
        o(d)(), n();
      },
      children: /* @__PURE__ */ a(Ve, { ...s, children: /* @__PURE__ */ a(Pp, { useFile: !0, hasPem: !0 }) })
    }
  );
}, zm = ["saml.signing", "saml.encryption"], Io = {
  "saml.signing": {
    name: Ne("attributes.saml.client.signature"),
    title: "signingKeysConfig",
    key: "clientSignature"
  },
  "saml.encryption": {
    name: Ne("attributes.saml.encrypt"),
    title: "encryptionKeysConfig",
    key: "encryptAssertions"
  }
}, EG = ({
  clientId: e,
  keyInfo: t,
  attr: n,
  onChanged: r,
  onGenerate: i,
  onImport: s
}) => {
  const { t: o } = H(), { control: l, watch: c } = Le(), d = Io[n].title, u = Io[n].key, p = Io[n].name, [m, f] = ot(), g = c(p);
  return /* @__PURE__ */ C(ee, { children: [
    m && /* @__PURE__ */ a(
      SG,
      {
        keyType: n,
        clientId: e,
        close: f
      }
    ),
    /* @__PURE__ */ C(Xn, { title: o(d), className: "kc-form-panel__panel", children: [
      /* @__PURE__ */ a(Pt, { className: "pf-v5-u-pb-lg", children: /* @__PURE__ */ a(tt, { children: o(`${d}Explain`) }) }),
      /* @__PURE__ */ a(Fe, { role: "manage-clients", isHorizontal: !0, children: /* @__PURE__ */ a(
        se,
        {
          labelIcon: /* @__PURE__ */ a(le, { helpText: o(`${u}Help`), fieldLabelId: u }),
          label: o(u),
          fieldId: u,
          hasNoPaddingTop: !0,
          children: /* @__PURE__ */ a(
            ge,
            {
              name: p,
              control: l,
              defaultValue: "false",
              render: ({ field: b }) => /* @__PURE__ */ a(
                Ye,
                {
                  "data-testid": u,
                  id: u,
                  label: o("on"),
                  labelOff: o("off"),
                  isChecked: b.value === "true",
                  onChange: (v, y) => {
                    const x = y.toString();
                    x === "true" ? (r(n), b.onChange(x)) : i(n, !1);
                  },
                  "aria-label": o(u)
                }
              )
            }
          )
        }
      ) })
    ] }),
    t?.certificate && g === "true" && /* @__PURE__ */ a(xa, { isFlat: !0, children: /* @__PURE__ */ a(da, { className: "kc-form-panel__body", children: /* @__PURE__ */ C(xt, { isHorizontal: !0, children: [
      /* @__PURE__ */ a(ab, { keyInfo: t }),
      /* @__PURE__ */ C(st, { children: [
        /* @__PURE__ */ a(
          z,
          {
            variant: "secondary",
            onClick: () => i(n, !0),
            children: o("regenerate")
          }
        ),
        /* @__PURE__ */ a(z, { variant: "secondary", onClick: () => s(n), children: o("importKey") }),
        /* @__PURE__ */ a(z, { variant: "tertiary", onClick: f, children: o("export") })
      ] })
    ] }) }) })
  ] });
}, IG = ({ clientId: e, save: t }) => {
  const { adminClient: n } = pe(), { t: r } = H(), [i, s] = N(), [o, l] = N(), [c, d] = N(), [u, p] = N(), [m, f] = N(0), { setValue: g } = Le(), { addAlert: b, addError: v } = Se();
  Re(
    () => Promise.all(
      zm.map(
        (O) => n.clients.getKeyInfo({ id: e, attr: O })
      )
    ),
    (O) => l(O),
    [m]
  );
  const y = async (O) => {
    const E = zm.indexOf(O);
    try {
      const T = [...o || []];
      T[E] = await n.clients.generateKey({
        id: e,
        attr: O
      }), l(T), fs.saveAs(
        new Blob([T[E].privateKey], {
          type: "application/octet-stream"
        }),
        "private.key"
      ), b(r("generateSuccess"), ue.success);
    } catch (T) {
      v("generateError", T);
    }
  }, x = c ? Io[c].key : "", [w, R] = ze({
    titleKey: r("disableSigning", {
      key: r(x)
    }),
    messageKey: r("disableSigningExplain", {
      key: r(x)
    }),
    continueButtonLabel: "yes",
    cancelButtonLabel: "no",
    onConfirm: () => {
      g(Io[c].name, "false"), t();
    }
  }), [S, _] = ze({
    titleKey: "reGenerateSigning",
    messageKey: "reGenerateSigningExplain",
    continueButtonLabel: "yes",
    cancelButtonLabel: "no",
    onConfirm: () => {
      y(c);
    }
  });
  return /* @__PURE__ */ C(Te, { variant: "light", className: "keycloak__form", children: [
    i && /* @__PURE__ */ a(
      OG,
      {
        id: e,
        attr: i,
        onClose: () => {
          s(void 0), t(), f(m + 1);
        },
        onCancel: () => {
          g(Io[c].name, "false"), s(void 0);
        }
      }
    ),
    /* @__PURE__ */ a(R, {}),
    /* @__PURE__ */ a(_, {}),
    zm.map((O, E) => /* @__PURE__ */ C(ka, { children: [
      u === O && /* @__PURE__ */ a(
        TG,
        {
          id: e,
          attr: O,
          onClose: () => p(void 0)
        }
      ),
      /* @__PURE__ */ a(
        EG,
        {
          clientId: e,
          keyInfo: o?.[E],
          attr: O,
          onChanged: s,
          onGenerate: (T, I) => {
            d(T), I ? S() : w();
          },
          onImport: () => p(O)
        }
      )
    ] }, O))
  ] });
}, PG = ({
  onConfirm: e,
  toggleDialog: t
}) => {
  const { t: n } = H(), r = Tt(), i = Object.keys(
    r.providers?.["client-registration-policy"].providers || []
  ), s = r.componentTypes?.["org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy"], o = pa(), l = et(
    () => o(
      s?.filter((c) => i.includes(c.id)) || [],
      or("id")
    ),
    [i, s]
  );
  return /* @__PURE__ */ a(
    ht,
    {
      variant: Rt.medium,
      title: n("chooseAPolicyProvider"),
      isOpen: !0,
      onClose: t,
      children: /* @__PURE__ */ C(
        ar,
        {
          onSelectDataListItem: (c, d) => {
            e(d), t();
          },
          "aria-label": n("addPredefinedMappers"),
          isCompact: !0,
          children: [
            /* @__PURE__ */ a(Ta, { "aria-label": n("headerName"), id: "header", children: /* @__PURE__ */ a(Ba, { children: /* @__PURE__ */ a(
              ja,
              {
                dataListCells: [n("name"), n("description")].map((c) => /* @__PURE__ */ a(aa, { style: { fontWeight: 700 }, children: c }, c))
              }
            ) }) }),
            l.map((c) => /* @__PURE__ */ a(
              Ta,
              {
                "aria-label": c.id,
                "data-testid": c.id,
                id: c.id,
                children: /* @__PURE__ */ a(Ba, { children: /* @__PURE__ */ a(
                  ja,
                  {
                    dataListCells: [
                      /* @__PURE__ */ a(aa, { width: 2, children: c.id }, `name-${c.id}`),
                      /* @__PURE__ */ a(aa, { width: 4, children: c.helpText }, `description-${c.id}`)
                    ]
                  }
                ) })
              },
              c.id
            ))
          ]
        }
      )
    }
  );
}, _G = Be(() => Promise.resolve().then(() => zO)), UO = {
  path: "/:realm/clients/client-registration/:subTab",
  element: /* @__PURE__ */ a(_G, {}),
  breadcrumb: (e) => e("clientRegistration"),
  handle: {
    access: "view-clients"
  }
}, Fu = (e) => ({
  pathname: We(UO.path, e)
}), RG = Be(() => Promise.resolve().then(() => DG)), rb = {
  path: "/:realm/clients/client-registration/:subTab/:providerId",
  element: /* @__PURE__ */ a(RG, {}),
  breadcrumb: (e) => e("clientSettings"),
  handle: {
    access: "manage-clients"
  }
}, VO = {
  ...rb,
  path: "/:realm/clients/client-registration/:subTab/:providerId/:id"
}, ib = (e) => {
  const t = e.id ? VO.path : rb.path;
  return {
    pathname: We(t, e)
  };
}, AG = (e) => {
  const { realm: t } = be(), { subTab: n } = Qn();
  return /* @__PURE__ */ a(
    Ae,
    {
      to: ib({
        realm: t,
        subTab: n || "anonymous",
        providerId: e.providerId,
        id: e.id
      }),
      children: e.name
    },
    e.id
  );
}, u0 = ({
  subType: e
}) => {
  const { adminClient: t } = pe(), { t: n } = H(), { subTab: r } = Qn(), i = Je(), { addAlert: s, addError: o } = Se(), { realm: l } = be(), [c, d] = N([]), [u, p] = N(), [m, f] = ot();
  Re(
    () => t.components.find({
      type: "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy"
    }),
    (v) => d(v.filter((y) => y.subType === e)),
    [u]
  );
  const [g, b] = ze({
    titleKey: "clientRegisterPolicyDeleteConfirmTitle",
    messageKey: n("clientRegisterPolicyDeleteConfirm", {
      name: u?.name
    }),
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        await t.components.del({
          realm: l,
          id: u?.id
        }), s(n("clientRegisterPolicyDeleteSuccess")), p(void 0);
      } catch (v) {
        o("clientRegisterPolicyDeleteError", v);
      }
    }
  });
  return /* @__PURE__ */ C(ee, { children: [
    m && /* @__PURE__ */ a(
      PG,
      {
        onConfirm: (v) => i(
          ib({
            realm: l,
            subTab: r || "anonymous",
            providerId: v
          })
        ),
        toggleDialog: f
      }
    ),
    /* @__PURE__ */ a(b, {}),
    /* @__PURE__ */ a(
      St,
      {
        ariaLabelKey: "clientRegistration",
        searchPlaceholderKey: n("searchClientRegistration"),
        "data-testid": `clientRegistration-${e}`,
        loader: c,
        toolbarItem: /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(
          z,
          {
            "data-testid": `createPolicy-${e}`,
            onClick: f,
            children: n("createPolicy")
          }
        ) }),
        actions: [
          {
            title: n("delete"),
            onRowClick: (v) => {
              p(v), g();
            }
          }
        ],
        columns: [
          {
            name: "name",
            displayKey: "name",
            cellRenderer: AG
          },
          {
            name: "providerId",
            displayKey: "providerId"
          }
        ]
      }
    )
  ] });
}, LG = () => {
  const { t: e } = H(), { realm: t } = be(), n = (s) => jn(Fu({ realm: t, subTab: s })), r = n("anonymous"), i = n("authenticated");
  return /* @__PURE__ */ C(
    $n,
    {
      defaultLocation: Fu({ realm: t, subTab: "anonymous" }),
      mountOnEnter: !0,
      children: [
        /* @__PURE__ */ a(
          Ee,
          {
            "data-testid": "anonymous",
            title: /* @__PURE__ */ C(Ie, { children: [
              e("anonymousAccessPolicies"),
              " ",
              /* @__PURE__ */ a(
                le,
                {
                  fieldLabelId: "",
                  helpText: e("anonymousAccessPoliciesHelp"),
                  noVerticalAlign: !1,
                  unWrap: !0
                }
              )
            ] }),
            ...r,
            children: /* @__PURE__ */ a(u0, { subType: "anonymous" })
          }
        ),
        /* @__PURE__ */ a(
          Ee,
          {
            "data-testid": "authenticated",
            title: /* @__PURE__ */ C(Ie, { children: [
              e("authenticatedAccessPolicies"),
              " ",
              /* @__PURE__ */ a(
                le,
                {
                  fieldLabelId: "",
                  helpText: e("authenticatedAccessPoliciesHelp"),
                  noVerticalAlign: !1,
                  unWrap: !0
                }
              )
            ] }),
            ...i,
            children: /* @__PURE__ */ a(u0, { subType: "authenticated" })
          }
        )
      ]
    }
  );
};
function NG() {
  const { adminClient: e } = pe(), { t } = H(), { id: n, providerId: r, subTab: i } = Vt(), s = Je(), o = Ue({
    defaultValues: { providerId: r }
  }), { control: l, handleSubmit: c, reset: d } = o, { realm: u, realmRepresentation: p } = be(), { addAlert: m, addError: f } = Se(), [g, b] = N();
  Re(
    async () => await Promise.all([
      e.realms.getClientRegistrationPolicyProviders({ realm: u }),
      n ? e.components.findOne({ id: n }) : Promise.resolve()
    ]),
    ([R, S]) => {
      b(R.find((_) => _.id === r)), d(S || { providerId: r });
    },
    []
  );
  const v = nt({ control: l, defaultValue: "", name: "name" }), y = async (R) => {
    R.config && Object.entries(R.config).forEach(
      ([S, _]) => R.config[S] = Array.isArray(_) ? _ : [_]
    );
    try {
      const S = {
        ...R,
        subType: i,
        parentId: p?.id,
        providerType: "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy",
        providerId: r
      };
      if (n)
        await e.components.update({ id: n }, S);
      else {
        const { id: _ } = await e.components.create(S);
        s(ib({ id: _, realm: u, subTab: i, providerId: r }));
      }
      m(t(`provider${n ? "Updated" : "Create"}Success`));
    } catch (S) {
      f(`provider${n ? "Updated" : "Create"}Error`, S);
    }
  }, [x, w] = ze({
    titleKey: "clientRegisterPolicyDeleteConfirmTitle",
    messageKey: t("clientRegisterPolicyDeleteConfirm", {
      name: v
    }),
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        await e.components.del({
          realm: u,
          id: n
        }), m(t("clientRegisterPolicyDeleteSuccess")), s(Fu({ realm: u, subTab: i }));
      } catch (R) {
        f("clientRegisterPolicyDeleteError", R);
      }
    }
  });
  return g ? /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(
      wt,
      {
        titleKey: n ? v : "createPolicy",
        subKey: n,
        dropdownItems: n ? [
          /* @__PURE__ */ a(
            Ke,
            {
              "data-testid": "delete",
              onClick: x,
              children: t("delete")
            },
            "delete"
          )
        ] : void 0
      }
    ),
    /* @__PURE__ */ a(w, {}),
    /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ a(Ve, { ...o, children: /* @__PURE__ */ C(
      Fe,
      {
        role: "manage-clients",
        isHorizontal: !0,
        onSubmit: c(y),
        children: [
          /* @__PURE__ */ a(ve, { name: "providerId", label: t("provider"), readOnly: !0 }),
          /* @__PURE__ */ a(
            ve,
            {
              name: "name",
              label: t("name"),
              labelIcon: t("clientPolicyNameHelp"),
              rules: { required: t("required") }
            }
          ),
          /* @__PURE__ */ a(ur, { properties: g.properties }),
          /* @__PURE__ */ C(st, { children: [
            /* @__PURE__ */ a(z, { "data-testid": "save", type: "submit", children: t("save") }),
            /* @__PURE__ */ a(
              z,
              {
                variant: "link",
                component: (R) => /* @__PURE__ */ a(
                  Ae,
                  {
                    ...R,
                    to: Fu({ realm: u, subTab: i })
                  }
                ),
                children: t("cancel")
              }
            )
          ] })
        ]
      }
    ) }) })
  ] }) : /* @__PURE__ */ a(gt, {});
}
const DG = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: NG
}, Symbol.toStringTag, { value: "Module" })), sb = ({
  form: { formState: e },
  onSubmit: t,
  cancelLink: n,
  role: r,
  editMode: i
}) => {
  const { t: s } = H(), { control: o, handleSubmit: l } = Le(), c = nt({
    control: o,
    defaultValue: void 0,
    name: "name"
  });
  return /* @__PURE__ */ C(ee, { children: [
    !i && /* @__PURE__ */ a(wt, { titleKey: s("createRole") }),
    /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ C(
      Fe,
      {
        isHorizontal: !0,
        onSubmit: l(t),
        role: r,
        className: "pf-v5-u-mt-lg",
        children: [
          /* @__PURE__ */ a(
            ve,
            {
              name: "name",
              label: s("roleName"),
              rules: {
                required: i ? void 0 : s("required"),
                validate(d) {
                  if (!d?.trim())
                    return s("required");
                }
              },
              isDisabled: i
            }
          ),
          /* @__PURE__ */ a(
            wr,
            {
              name: "description",
              label: s("description"),
              rules: {
                maxLength: {
                  value: 255,
                  message: s("maxLength", { length: 255 })
                }
              },
              isDisabled: c?.includes("default-roles") ?? !1
            }
          ),
          /* @__PURE__ */ C(st, { children: [
            /* @__PURE__ */ a(
              eo,
              {
                formState: e,
                "data-testid": "save",
                allowInvalid: !0,
                allowNonDirty: !0,
                children: s("save")
              }
            ),
            /* @__PURE__ */ a(
              z,
              {
                "data-testid": "cancel",
                variant: "link",
                component: (d) => /* @__PURE__ */ a(Ae, { ...d, to: n }),
                children: s("cancel")
              }
            )
          ] })
        ]
      }
    ) })
  ] });
}, MG = Be(() => Promise.resolve().then(() => lE)), ob = {
  path: "/:realm/clients/:clientId/roles/:id/:tab",
  element: /* @__PURE__ */ a(MG, {}),
  breadcrumb: (e) => e("roleDetails"),
  handle: {
    access: "query-clients"
  }
}, lb = (e) => ({
  pathname: We(ob.path, e)
});
function FG() {
  const { adminClient: e } = pe(), { t } = H(), n = Ue({ mode: "onChange" }), r = Je(), { clientId: i } = Qn(), { realm: s } = be(), { addAlert: o, addError: l } = Se();
  return /* @__PURE__ */ a(Ve, { ...n, children: /* @__PURE__ */ a(
    sb,
    {
      form: n,
      onSubmit: async (d) => {
        const u = {
          ...d,
          name: d.name?.trim(),
          attributes: {}
        };
        try {
          await e.clients.createRole({
            id: i,
            ...u
          });
          const p = await e.clients.findRole({
            id: i,
            roleName: u.name
          });
          o(t("roleCreated"), ue.success), r(
            lb({
              realm: s,
              clientId: i,
              id: p.id,
              tab: "details"
            })
          );
        } catch (p) {
          l("roleCreateError", p);
        }
      },
      cancelLink: Ti({
        realm: s,
        clientId: i,
        tab: "roles"
      }),
      role: "manage-clients",
      editMode: !1
    }
  ) });
}
const $G = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: FG
}, Symbol.toStringTag, { value: "Module" })), jG = ({ rootUrl: e, baseUrl: t }, n) => t?.startsWith("http") ? t : e === "${authAdminUrl}" ? e.replace(/\$\{(authAdminUrl)\}/, n.adminBaseUrl) : e === "${authBaseUrl}" ? _c(
  e.replace(/\$\{(authBaseUrl)\}/, n.serverBaseUrl),
  t || ""
) : e?.startsWith("http") ? t ? _c(e, t) : e : t, BG = Be(() => Promise.resolve().then(() => iq)), KO = {
  path: "/:realm/clients/add-client",
  element: /* @__PURE__ */ a(BG, {}),
  breadcrumb: (e) => e("createClient"),
  handle: {
    access: "manage-clients"
  }
}, UG = (e) => ({
  pathname: We(KO.path, e)
}), VG = Be(() => Promise.resolve().then(() => hG)), HO = {
  path: "/:realm/clients/import-client",
  element: /* @__PURE__ */ a(VG, {}),
  breadcrumb: (e) => e("importClient"),
  handle: {
    access: "manage-clients"
  }
}, KG = (e) => ({
  pathname: We(HO.path, e)
}), ro = (e) => (t) => t && Pa(e, t) || "—", HG = (e) => {
  const { t } = H(), { realm: n } = be();
  return /* @__PURE__ */ a(gs, { wrapModifier: "truncate", children: /* @__PURE__ */ C(
    Ae,
    {
      to: Ti({ realm: n, clientId: e.id, tab: "settings" }),
      children: [
        e.clientId,
        !e.enabled && /* @__PURE__ */ a(Wr, { isRead: !0, className: "pf-v5-u-ml-sm", children: t("disabled") }, `${e.id}-disabled`)
      ]
    },
    e.id
  ) });
}, zG = (e) => {
  const { t } = H();
  return /* @__PURE__ */ a(gs, { wrapModifier: "truncate", children: ro(t)(e.name) });
}, qG = (e) => /* @__PURE__ */ a(gs, { wrapModifier: "truncate", children: on()(e.description) }), GG = (e) => {
  const { environment: t } = Ha(), n = jG(e, t);
  return n ? /* @__PURE__ */ a(js, { href: n }) : "—";
}, WG = () => {
  const { t: e } = H(), { realm: t } = be(), { hasAccess: n } = Mt();
  return n("manage-clients") ? /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(
      z,
      {
        component: (i) => /* @__PURE__ */ a(Ae, { ...i, to: UG({ realm: t }) }),
        children: e("createClient")
      }
    ) }),
    /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(
      z,
      {
        component: (i) => /* @__PURE__ */ a(Ae, { ...i, to: KG({ realm: t }) }),
        variant: "link",
        "data-testid": "importClient",
        children: e("importClient")
      }
    ) })
  ] }) : /* @__PURE__ */ a("span", {});
};
function XG() {
  const { adminClient: e } = pe(), { t } = H(), { addAlert: n, addError: r } = Se(), { realm: i } = be(), [s, o] = N(0), l = () => o((/* @__PURE__ */ new Date()).getTime()), [c, d] = N(), { hasAccess: u } = Mt(), p = u("manage-clients"), m = async (w, R, S) => {
    const _ = {
      first: w,
      max: R
    };
    return S && (_.clientId = S, _.search = !0), await e.clients.find({ ..._ });
  }, f = (w) => jn(Bs({ realm: i, tab: w })), g = f("list"), b = f("initial-access-token"), v = f("client-registration"), [y, x] = ze({
    titleKey: t("clientDelete", { clientId: c?.clientId }),
    messageKey: "clientDeleteConfirm",
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        await e.clients.del({
          id: c.id
        }), n(t("clientDeletedSuccess"), ue.success), l();
      } catch (w) {
        r("clientDeleteError", w);
      }
    }
  });
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(
      wt,
      {
        titleKey: "clientList",
        subKey: "clientsExplain",
        helpUrl: na.clientsUrl,
        divider: !1
      }
    ),
    /* @__PURE__ */ a(Te, { variant: "light", className: "pf-v5-u-p-0", children: /* @__PURE__ */ C(
      $n,
      {
        mountOnEnter: !0,
        isBox: !0,
        defaultLocation: Bs({
          realm: i,
          tab: "list"
        }),
        children: [
          /* @__PURE__ */ C(
            Ee,
            {
              "data-testid": "list",
              title: /* @__PURE__ */ a(Ie, { children: t("clientsList") }),
              ...g,
              children: [
                /* @__PURE__ */ a(x, {}),
                /* @__PURE__ */ a(
                  St,
                  {
                    loader: m,
                    isPaginated: !0,
                    ariaLabelKey: "clientList",
                    searchPlaceholderKey: "searchForClient",
                    toolbarItem: /* @__PURE__ */ a(WG, {}),
                    actionResolver: (w) => {
                      const R = w.data, S = [
                        {
                          title: t("export"),
                          onClick() {
                            Aw(R);
                          }
                        }
                      ];
                      return !nc(R) && (p || R.access?.configure) && S.push({
                        title: t("delete"),
                        onClick() {
                          d(R), y();
                        }
                      }), S;
                    },
                    columns: [
                      {
                        name: "clientId",
                        displayKey: "clientId",
                        transforms: [Ft(20)],
                        cellRenderer: HG
                      },
                      {
                        name: "clientName",
                        displayKey: "clientName",
                        transforms: [Ft(20)],
                        cellRenderer: zG
                      },
                      {
                        name: "protocol",
                        displayKey: "type",
                        transforms: [Ft(10)],
                        cellRenderer: (w) => bl(t, w.protocol ?? "openid-connect")
                      },
                      {
                        name: "description",
                        displayKey: "description",
                        transforms: [Ft(30)],
                        cellRenderer: qG
                      },
                      {
                        name: "baseUrl",
                        displayKey: "homeURL",
                        transforms: [Ft(20)],
                        cellRenderer: GG
                      }
                    ]
                  },
                  s
                )
              ]
            }
          ),
          /* @__PURE__ */ a(
            Ee,
            {
              "data-testid": "initialAccessToken",
              title: /* @__PURE__ */ a(Ie, { children: t("initialAccessToken") }),
              ...b,
              children: /* @__PURE__ */ a(FO, {})
            }
          ),
          /* @__PURE__ */ a(
            Ee,
            {
              "data-testid": "registration",
              title: /* @__PURE__ */ a(Ie, { children: t("clientRegistration") }),
              ...v,
              children: /* @__PURE__ */ a(LG, {})
            }
          )
        ]
      }
    ) })
  ] });
}
const zO = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: XG,
  translationFormatter: ro
}, Symbol.toStringTag, { value: "Module" })), zd = "dedicated", YG = ({
  clientId: e,
  refresh: t,
  fineGrainedAccess: n,
  ...r
}) => {
  const { adminClient: i } = pe(), { t: s } = H(), { addAlert: o, addError: l } = Se(), { hasAccess: c } = Mt(), d = (p) => p.id === zd, u = c("manage-clients") || n;
  return /* @__PURE__ */ a(
    rO,
    {
      isDisabled: d(r) || !u,
      clientScope: r,
      type: r.type,
      onSelect: async (p) => {
        try {
          await oO(
            i,
            e,
            r,
            r.type,
            p
          ), o(s("clientScopeSuccess"), ue.success), t();
        } catch (m) {
          l("clientScopeError", m);
        }
      }
    }
  );
}, JG = ({
  clientId: e,
  protocol: t,
  clientName: n,
  fineGrainedAccess: r
}) => {
  const { adminClient: i } = pe(), { t: s } = H(), { addAlert: o, addError: l } = Se(), { realm: c } = be(), d = pa(), [u, p] = N("name"), [m, f] = N(
    Ma.none
  ), [g, b] = N(!1), [v, y] = N(), [x, w] = N([]), R = (V) => w(V.filter(({ id: U }) => U !== zd)), [S, _] = N(!1), [O, E] = N(0), T = () => E(O + 1), I = (V) => V.id === zd, { hasAccess: k } = Mt(), P = k("manage-clients") || r, D = k("view-clients") || r, F = async (V, U, G) => {
    const q = await i.clients.listDefaultClientScopes({ id: e }), L = await i.clients.listOptionalClientScopes({ id: e }), K = await i.clientScopes.find(), B = (Z) => K.find((me) => Z === me.id), j = L.map((Z) => {
      const me = B(Z.id);
      return {
        ...Z,
        type: Oi.optional,
        description: me?.description
      };
    }), W = q.map((Z) => {
      const me = B(Z.id);
      return {
        ...Z,
        type: Oi.default,
        description: me?.description
      };
    });
    let Q = [...j, ...W];
    const te = Q.map((Z) => Z.name);
    y(
      K.filter((Z) => !te.includes(Z.name)).filter((Z) => Z.protocol === t)
    ), Q = d(Q, or("name")), D && Q.unshift({
      id: zd,
      name: s("dedicatedScopeName", { clientName: n }),
      type: Ma.none,
      description: s("dedicatedScopeDescription")
    });
    const ie = u === "name" ? pO(G) : mO(m), ce = Number(V);
    return Q.filter(ie).slice(ce, ce + Number(U));
  }, [A, M] = ze({
    titleKey: s("deleteClientScope", {
      count: x.length,
      name: x[0]?.name
    }),
    messageKey: "deleteConfirmClientScopes",
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        await Zf(
          i,
          e,
          x[0],
          x[0].type
        ), o(s("clientScopeRemoveSuccess"), ue.success), T();
      } catch (V) {
        l("clientScopeRemoveError", V);
      }
    }
  });
  return /* @__PURE__ */ C(ee, { children: [
    v && /* @__PURE__ */ a(
      AO,
      {
        clientScopes: v,
        clientName: n,
        open: g,
        toggleDialog: () => b(!g),
        onAdd: async (V) => {
          try {
            await Promise.all(
              V.map(
                async (U) => await lO(
                  i,
                  e,
                  U.scope,
                  U.type
                )
              )
            ), o(s("clientScopeSuccess"), ue.success), T();
          } catch (U) {
            l("clientScopeError", U);
          }
        }
      }
    ),
    /* @__PURE__ */ a(
      St,
      {
        loader: F,
        ariaLabelKey: `clientScopeList-${O}`,
        searchPlaceholderKey: u === "name" ? "searchByName" : void 0,
        canSelectAll: !0,
        isPaginated: !0,
        isSearching: u === "type",
        onSelect: (V) => R([...V]),
        searchTypeComponent: /* @__PURE__ */ a(
          Nu,
          {
            searchType: u,
            onSelect: (V) => p(V)
          }
        ),
        toolbarItem: /* @__PURE__ */ C(ee, { children: [
          /* @__PURE__ */ a(
            fO,
            {
              searchType: u,
              type: m,
              onSelect: (V) => p(V),
              onType: (V) => {
                f(V), T();
              }
            }
          ),
          P && /* @__PURE__ */ C(ee, { children: [
            /* @__PURE__ */ a(M, {}),
            /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(z, { onClick: () => b(!0), children: s("addClientScope") }) }),
            /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(
              hO,
              {
                clientId: e,
                selectedRows: x,
                refresh: T
              }
            ) }),
            /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(
              qt,
              {
                toggle: (V) => /* @__PURE__ */ a(
                  yt,
                  {
                    "data-testid": "kebab",
                    "aria-label": "Kebab toggle",
                    ref: V,
                    variant: "plain",
                    onClick: () => _(!S),
                    isExpanded: S,
                    children: /* @__PURE__ */ a(dr, {})
                  }
                ),
                isOpen: S,
                children: /* @__PURE__ */ a(Xt, { children: /* @__PURE__ */ a(
                  Ke,
                  {
                    isDisabled: x.length === 0,
                    onClick: async () => {
                      try {
                        await Promise.all(
                          x.map(
                            (V) => Zf(
                              i,
                              e,
                              { ...V },
                              V.type
                            )
                          )
                        ), _(!1), R([]), o(s("clientScopeRemoveSuccess")), T();
                      } catch (V) {
                        l("clientScopeRemoveError", V);
                      }
                    },
                    children: s("remove")
                  },
                  "deleteAll"
                ) })
              }
            ) })
          ] })
        ] }),
        columns: [
          {
            name: "name",
            displayKey: "assignedClientScope",
            cellRenderer: (V) => I(V) ? /* @__PURE__ */ a(Ae, { to: Au({ realm: c, clientId: e }), children: V.name }) : V.name
          },
          {
            name: "type",
            displayKey: "assignedType",
            cellRenderer: (V) => /* @__PURE__ */ a(YG, { clientId: e, refresh: T, ...V })
          },
          { name: "description", cellFormatters: [ro(s)] }
        ],
        actions: P ? [
          {
            title: s("remove"),
            onRowClick: async (V) => (R([V]), A(), !0)
          }
        ] : [],
        emptyState: /* @__PURE__ */ a(
          ct,
          {
            message: s("emptyClientScopes"),
            instructions: s("emptyClientScopesInstructions"),
            primaryActionText: s("emptyClientScopesPrimaryAction"),
            onPrimaryAction: () => b(!0)
          }
        )
      },
      O
    )
  ] });
}, ZG = ({
  client: e
}) => {
  const { adminClient: t } = pe(), { t: n } = H(), { addAlert: r, addError: i } = Se(), [s, o] = N(e), { hasAccess: l } = Mt(), c = l("manage-clients") || s.access?.manage, d = async (p) => {
    try {
      const m = p.filter((f) => f.client === void 0).map((f) => f.role).flat();
      await Promise.all([
        t.clients.addRealmScopeMappings(
          {
            id: s.id
          },
          m
        ),
        ...p.filter((f) => f.client !== void 0).map(
          (f) => t.clients.addClientScopeMappings(
            {
              id: s.id,
              client: f.client.id
            },
            [f.role]
          )
        )
      ]), r(n("clientScopeSuccess"), ue.success);
    } catch (m) {
      i("clientScopeError", m);
    }
  }, u = async () => {
    const p = { ...s, fullScopeAllowed: !s.fullScopeAllowed };
    try {
      await t.clients.update({ id: s.id }, p), r(n("clientScopeSuccess"), ue.success), o(p);
    } catch (m) {
      i("clientScopeError", m);
    }
  };
  return /* @__PURE__ */ C(Te, { children: [
    /* @__PURE__ */ a(
      Fe,
      {
        role: "manage-clients",
        fineGrainedAccess: s.access?.manage,
        isHorizontal: !0,
        children: /* @__PURE__ */ a(
          se,
          {
            hasNoPaddingTop: !0,
            label: n("fullScopeAllowed"),
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: n("fullScopeAllowedHelp"),
                fieldLabelId: "fullScopeAllowed"
              }
            ),
            fieldId: "fullScopeAllowed",
            children: /* @__PURE__ */ a(
              Ye,
              {
                id: "fullScopeAllowed",
                label: n("on"),
                labelOff: n("off"),
                isChecked: s.fullScopeAllowed,
                onChange: u,
                "aria-label": n("fullScopeAllowed")
              }
            )
          }
        )
      }
    ),
    !s.fullScopeAllowed && /* @__PURE__ */ C(ee, { children: [
      /* @__PURE__ */ a(_t, {}),
      /* @__PURE__ */ a(
        ao,
        {
          name: s.clientId,
          id: s.id,
          type: "clients",
          save: d,
          isManager: c
        }
      )
    ] })
  ] });
}, QG = Be(
  () => Promise.resolve().then(() => nO)
), qO = {
  path: "/:realm/clients/:id/clientScopes/dedicated/mappers/:mapperId",
  element: /* @__PURE__ */ a(QG, {}),
  breadcrumb: (e) => e("mappingDetails"),
  handle: {
    access: "view-clients"
  }
}, p0 = (e) => ({
  pathname: We(qO.path, e)
});
function eW() {
  const { adminClient: e } = pe(), { t } = H(), n = Je(), { realm: r, clientId: i } = Vt(), { addAlert: s, addError: o } = Se(), [l, c] = N();
  Re(() => e.clients.findOne({ id: i }), c, []);
  const d = (g) => jn(Au({ realm: r, clientId: i, tab: g })), u = d("mappers"), p = d("scope");
  if (!l)
    return /* @__PURE__ */ a(gt, {});
  const m = async (g) => {
    if (Array.isArray(g))
      try {
        await e.clients.addMultipleProtocolMappers(
          { id: l.id },
          g
        ), c(await e.clients.findOne({ id: l.id })), s(t("mappingCreatedSuccess"), ue.success);
      } catch (b) {
        o("mappingCreatedError", b);
      }
    else {
      const b = g;
      n(
        p0({
          realm: r,
          id: l.id,
          mapperId: b.id
        })
      );
    }
  }, f = async (g) => {
    try {
      await e.clients.delProtocolMapper({
        id: l.id,
        mapperId: g.id
      }), c({
        ...l,
        protocolMappers: l.protocolMappers?.filter(
          (b) => b.id !== g.id
        )
      }), s(t("mappingDeletedSuccess"), ue.success);
    } catch (b) {
      o("mappingDeletedError", b);
    }
    return !0;
  };
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(
      wt,
      {
        titleKey: l.clientId + "-dedicated",
        subKey: "dedicatedScopeExplain",
        divider: !1
      }
    ),
    /* @__PURE__ */ a(Te, { variant: "light", className: "pf-v5-u-p-0", children: /* @__PURE__ */ C(
      $n,
      {
        isBox: !0,
        mountOnEnter: !0,
        defaultLocation: Au({
          realm: r,
          clientId: i,
          tab: "mappers"
        }),
        children: [
          /* @__PURE__ */ a(
            Ee,
            {
              title: /* @__PURE__ */ a(Ie, { children: t("mappers") }),
              "data-testid": "mappersTab",
              ...u,
              children: /* @__PURE__ */ a(
                Qk,
                {
                  model: l,
                  onAdd: m,
                  onDelete: f,
                  detailLink: (g) => p0({ realm: r, id: l.id, mapperId: g })
                }
              )
            }
          ),
          /* @__PURE__ */ a(
            Ee,
            {
              title: /* @__PURE__ */ a(Ie, { children: t("scope") }),
              "data-testid": "scopeTab",
              ...p,
              children: /* @__PURE__ */ a(ZG, { client: l })
            }
          )
        ]
      }
    ) })
  ] });
}
const tW = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: eW
}, Symbol.toStringTag, { value: "Module" })), qm = ({
  text: e,
  user: t,
  label: n
}) => {
  const { t: r } = H();
  return t ? /* @__PURE__ */ a(
    q1,
    {
      id: n,
      actions: /* @__PURE__ */ a(G1, { children: /* @__PURE__ */ a(DO, { id: "code", text: e, label: n }) }),
      children: /* @__PURE__ */ a(
        Ai,
        {
          id: `text-area-${n}`,
          rows: 20,
          value: e,
          "aria-label": n
        }
      )
    }
  ) : /* @__PURE__ */ C(Sr, { variant: "lg", id: n, children: [
    /* @__PURE__ */ a(ki, { titleText: /* @__PURE__ */ a(ee, { children: r(`${n}No`) }), headingLevel: "h2" }),
    /* @__PURE__ */ a(Ri, { children: r(`${n}IsDisabled`) })
  ] });
}, nW = ({
  protocolMappers: e
}) => {
  const [t, n] = N(0);
  return He(() => {
    n(t + 1);
  }, [e]), /* @__PURE__ */ a(
    St,
    {
      loader: () => Promise.resolve(e),
      ariaLabelKey: "effectiveProtocolMappers",
      searchPlaceholderKey: "searchForProtocol",
      "data-testid": "effective-protocol-mappers",
      columns: [
        {
          name: "mapperName",
          displayKey: "name"
        },
        {
          name: "containerName",
          displayKey: "parentClientScope"
        },
        {
          name: "type.category",
          displayKey: "category"
        },
        {
          name: "type.priority",
          displayKey: "priority"
        }
      ]
    },
    t
  );
}, aW = ({
  effectiveRoles: e
}) => {
  const [t, n] = N(0);
  return He(() => {
    n(t + 1);
  }, [e]), /* @__PURE__ */ a(
    St,
    {
      loader: () => Promise.resolve(e),
      ariaLabelKey: "effectiveRoleScopeMappings",
      searchPlaceholderKey: "searchForRole",
      "data-testid": "effective-role-scope-mappings",
      columns: [
        {
          name: "name",
          displayKey: "role"
        },
        {
          name: "containerId",
          displayKey: "origin"
        }
      ]
    },
    t
  );
}, rW = ({ clientId: e, protocol: t }) => {
  const { adminClient: n } = pe(), r = "openid", { t: i } = H(), { enabled: s } = Pr(), { realm: o } = be(), l = Tt().protocolMapperTypes[t], [c, d] = N([]), [u, p] = N(!1), [m, f] = N([r]), [g, b] = N(0), [v, y] = N(""), x = () => y(`${(/* @__PURE__ */ new Date()).getTime()}`), [w, R] = N(
    []
  ), [S, _] = N([]), [O, E] = N(""), [T, I] = N(""), [k, P] = N(""), D = Ct(null), F = Ct(null), A = Ct(null), M = Ct(null), V = Ct(null), U = Ue(), { hasAccess: G } = Mt(), q = G("view-users");
  return Re(
    () => n.clients.listOptionalClientScopes({ id: e }),
    (L) => d(L),
    []
  ), Re(
    async () => {
      const L = m.join(" "), K = await n.clients.evaluatePermission({
        id: e,
        roleContainer: o,
        scope: L,
        type: "granted"
      });
      return {
        mapperList: await n.clients.evaluateListProtocolMapper({
          id: e,
          scope: L
        }),
        effectiveRoles: K
      };
    },
    ({ mapperList: L, effectiveRoles: K }) => {
      R(K), L.map((B) => {
        B.type = l.filter(
          (j) => j.id === B.protocolMapper
        )[0];
      }), _(L), x();
    },
    [m]
  ), Re(
    async () => {
      const L = m.join(" "), K = U.getValues("user");
      return K ? await Promise.all([
        n.clients.evaluateGenerateAccessToken({
          id: e,
          userId: K[0],
          scope: L
        }),
        n.clients.evaluateGenerateUserInfo({
          id: e,
          userId: K[0],
          scope: L
        }),
        n.clients.evaluateGenerateIdToken({
          id: e,
          userId: K[0],
          scope: L
        })
      ]) : [];
    },
    ([L, K, B]) => {
      E(Fa(L)), I(Fa(K)), P(Fa(B));
    },
    [U.getValues("user"), m]
  ), /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ C(Te, { variant: "light", children: [
      s && /* @__PURE__ */ a(Pt, { className: "keycloak__section_intro__help", children: /* @__PURE__ */ C(tt, { children: [
        /* @__PURE__ */ a(Yc, {}),
        " ",
        i("evaluateExplain")
      ] }) }),
      /* @__PURE__ */ C(xt, { isHorizontal: !0, children: [
        /* @__PURE__ */ a(
          se,
          {
            label: i("scopeParameter"),
            fieldId: "scopeParameter",
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: i("scopeParameterHelp"),
                fieldLabelId: "scopeParameter"
              }
            ),
            children: /* @__PURE__ */ C(Jn, { hasGutter: !0, children: [
              /* @__PURE__ */ a(Dt, { isFilled: !0, children: /* @__PURE__ */ a(
                ft,
                {
                  toggleId: "scopeParameter",
                  variant: pt.typeaheadMulti,
                  typeAheadAriaLabel: i("scopeParameter"),
                  onToggle: () => p(!u),
                  isOpen: u,
                  selections: m,
                  onSelect: (L) => {
                    const K = L;
                    m.includes(K) ? K !== r && f(m.filter((B) => B !== K)) : f([...m, K]);
                  },
                  "aria-labelledby": i("scopeParameter"),
                  placeholderText: i("scopeParameterPlaceholder"),
                  children: c.map((L, K) => /* @__PURE__ */ a(_e, { value: L.name, children: L.name }, K))
                }
              ) }),
              /* @__PURE__ */ a(Dt, { children: /* @__PURE__ */ a(ti, { className: "keycloak__scopes_evaluate__clipboard-copy", children: m.join(" ") }) })
            ] })
          }
        ),
        q && /* @__PURE__ */ a(Ve, { ...U, children: /* @__PURE__ */ a(
          tb,
          {
            name: "user",
            label: "users",
            helpText: i("userHelp"),
            defaultValue: "",
            variant: pt.typeahead,
            isRequired: !0
          }
        ) })
      ] })
    ] }),
    /* @__PURE__ */ C(Va, { hasGutter: !0, className: "keycloak__scopes_evaluate__tabs", children: [
      /* @__PURE__ */ C(zt, { span: 8, children: [
        /* @__PURE__ */ a(
          fo,
          {
            "aria-labelledby": "pf-tab-0-effectiveProtocolMappers",
            eventKey: 0,
            id: "effectiveProtocolMappers",
            ref: D,
            children: /* @__PURE__ */ a(nW, { protocolMappers: S })
          }
        ),
        /* @__PURE__ */ a(
          fo,
          {
            "aria-labelledby": "pf-tab-0-effectiveRoleScopeMappings",
            eventKey: 1,
            id: "effectiveRoleScopeMappings",
            ref: F,
            hidden: !0,
            children: /* @__PURE__ */ a(aW, { effectiveRoles: w })
          }
        ),
        /* @__PURE__ */ a(
          fo,
          {
            "aria-labelledby": i("generatedAccessToken"),
            eventKey: 2,
            id: "tab-generated-access-token",
            ref: A,
            hidden: !0,
            children: /* @__PURE__ */ a(
              qm,
              {
                text: O,
                user: U.getValues("user"),
                label: "generatedAccessToken"
              }
            )
          }
        ),
        /* @__PURE__ */ a(
          fo,
          {
            "aria-labelledby": i("generatedIdToken"),
            eventKey: 3,
            id: "tab-generated-id-token",
            ref: M,
            hidden: !0,
            children: /* @__PURE__ */ a(
              qm,
              {
                text: k,
                user: U.getValues("user"),
                label: "generatedIdToken"
              }
            )
          }
        ),
        /* @__PURE__ */ a(
          fo,
          {
            "aria-labelledby": i("generatedUserInfo"),
            eventKey: 4,
            id: "tab-generated-user-info",
            ref: V,
            hidden: !0,
            children: /* @__PURE__ */ a(
              qm,
              {
                text: T,
                user: U.getValues("user"),
                label: "generatedUserInfo"
              }
            )
          }
        )
      ] }),
      /* @__PURE__ */ a(zt, { span: 4, children: /* @__PURE__ */ C(
        Ua,
        {
          id: "tabs",
          isVertical: !0,
          activeKey: g,
          onSelect: (L, K) => b(K),
          children: [
            /* @__PURE__ */ a(
              Ee,
              {
                id: "effectiveProtocolMappers",
                "aria-controls": "effectiveProtocolMappers",
                "data-testid": "effective-protocol-mappers-tab",
                eventKey: 0,
                title: /* @__PURE__ */ C(Ie, { children: [
                  i("effectiveProtocolMappers"),
                  " ",
                  /* @__PURE__ */ a(
                    le,
                    {
                      fieldLabelId: "effectiveProtocolMappers",
                      helpText: i("effectiveProtocolMappersHelp"),
                      noVerticalAlign: !1,
                      unWrap: !0
                    }
                  )
                ] }),
                tabContentRef: D
              }
            ),
            /* @__PURE__ */ a(
              Ee,
              {
                id: "effectiveRoleScopeMappings",
                "aria-controls": "effectiveRoleScopeMappings",
                "data-testid": "effective-role-scope-mappings-tab",
                eventKey: 1,
                title: /* @__PURE__ */ C(Ie, { children: [
                  i("effectiveRoleScopeMappings"),
                  " ",
                  /* @__PURE__ */ a(
                    le,
                    {
                      fieldLabelId: "effectiveRoleScopeMappings",
                      helpText: i("effectiveRoleScopeMappingsHelp"),
                      noVerticalAlign: !1,
                      unWrap: !0
                    }
                  )
                ] }),
                tabContentRef: F
              }
            ),
            /* @__PURE__ */ a(
              Ee,
              {
                id: "generatedAccessToken",
                "aria-controls": "generatedAccessToken",
                "data-testid": "generated-access-token-tab",
                eventKey: 2,
                title: /* @__PURE__ */ C(Ie, { children: [
                  i("generatedAccessToken"),
                  " ",
                  /* @__PURE__ */ a(
                    le,
                    {
                      fieldLabelId: "generatedAccessToken",
                      helpText: i("generatedAccessTokenHelp"),
                      noVerticalAlign: !1,
                      unWrap: !0
                    }
                  )
                ] }),
                tabContentRef: A
              }
            ),
            /* @__PURE__ */ a(
              Ee,
              {
                id: "generatedIdToken",
                "aria-controls": "generatedIdToken",
                "data-testid": "generated-id-token-tab",
                eventKey: 3,
                title: /* @__PURE__ */ C(Ie, { children: [
                  i("generatedIdToken"),
                  " ",
                  /* @__PURE__ */ a(
                    le,
                    {
                      fieldLabelId: "generatedIdToken",
                      helpText: i("generatedIdTokenHelp"),
                      noVerticalAlign: !1,
                      unWrap: !0
                    }
                  )
                ] }),
                tabContentRef: M
              }
            ),
            /* @__PURE__ */ a(
              Ee,
              {
                id: "generatedUserInfo",
                "aria-controls": "generatedUserInfo",
                "data-testid": "generated-user-info-tab",
                eventKey: 4,
                title: /* @__PURE__ */ C(Ie, { children: [
                  i("generatedUserInfo"),
                  " ",
                  /* @__PURE__ */ a(
                    le,
                    {
                      fieldLabelId: "generatedUserInfo",
                      helpText: i("generatedUserInfoHelp"),
                      noVerticalAlign: !1,
                      unWrap: !0
                    }
                  )
                ] }),
                tabContentRef: V
              }
            )
          ]
        },
        v
      ) })
    ] })
  ] });
}, iW = Be(() => Promise.resolve().then(() => RQ)), cb = {
  path: "/:realm/users/:id/:tab",
  element: /* @__PURE__ */ a(iW, {}),
  breadcrumb: (e) => e("userDetails"),
  handle: {
    access: "query-users"
  }
}, ai = (e) => ({
  pathname: We(cb.path, e)
}), sW = ({ client: e }) => {
  const { adminClient: t } = pe(), { t: n } = H(), { addAlert: r, addError: i } = Se(), { realm: s } = be(), [o, l] = N(), { hasAccess: c } = Mt(), d = c("manage-clients");
  Re(
    () => t.clients.getServiceAccountUser({
      id: e.id
    }),
    (p) => l(p),
    []
  );
  const u = async (p) => {
    try {
      const m = p.filter((f) => f.client === void 0).map((f) => f.role).flat();
      await t.users.addRealmRoleMappings({
        id: o?.id,
        roles: m
      }), await Promise.all(
        p.filter((f) => f.client !== void 0).map(
          (f) => t.users.addClientRoleMappings({
            id: o?.id,
            clientUniqueId: f.client.id,
            roles: [f.role]
          })
        )
      ), r(n("roleMappingUpdatedSuccess"), ue.success);
    } catch (m) {
      i("roleMappingUpdatedError", m);
    }
  };
  return o ? /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ C(Te, { className: "pf-v5-u-pb-0", children: [
      /* @__PURE__ */ a(_i, { className: "pf-v5-c-alert__icon keycloak--service-account--info-text" }),
      /* @__PURE__ */ a("span", { className: "pf-v5-u-pl-sm", children: /* @__PURE__ */ C(ns, { i18nKey: "manageServiceAccountUser", children: [
        "",
        /* @__PURE__ */ a(
          Ae,
          {
            to: ai({ realm: s, id: o.id, tab: "settings" }),
            children: { link: o.username }
          }
        )
      ] }) })
    ] }),
    /* @__PURE__ */ a(
      ao,
      {
        name: e.clientId,
        id: o.id,
        type: "users",
        isManager: d || e.access?.configure,
        save: u
      }
    )
  ] }) : /* @__PURE__ */ a(gt, {});
}, oW = ({
  id: e,
  open: t,
  toggleDialog: n,
  protocol: r = "openid-connect"
}) => {
  const { adminClient: i } = pe(), { realm: s } = be(), { t: o } = H(), { enabled: l } = Pr(), d = Tt().clientInstallations[r], [u, p] = N(
    d[d.length - 1].id
  ), [m, f] = N(), [g, b] = N(!1), v = et(
    () => d.find((x) => x.id === u) ?? null,
    [u]
  ), y = (x) => x.replace(
    /<PrivateKeyPem>.*<\/PrivateKeyPem>/gs,
    `<PrivateKeyPem>${o("privateKeyMask")}</PrivateKeyPem>`
  );
  return Re(
    async () => {
      if (v?.mediaType === "application/zip")
        return (await Ii(
          `${os(
            i.baseUrl
          )}admin/realms/${s}/clients/${e}/installation/providers/${u}`,
          {
            method: "GET",
            headers: no(
              await i.getAccessToken()
            )
          }
        )).arrayBuffer();
      {
        const x = await i.clients.getInstallationProviders({
          id: e,
          providerId: u
        });
        return typeof x == "string" ? y(x) : Fa(x);
      }
    },
    (x) => f(x),
    [e, u]
  ), He(() => f(""), [e, u]), /* @__PURE__ */ a(
    ms,
    {
      titleKey: o("downloadAdaptorTitle"),
      continueButtonLabel: o("download"),
      onConfirm: () => {
        fs.saveAs(
          new Blob([m], { type: v?.mediaType }),
          v?.filename
        );
      },
      open: t,
      toggleDialog: n,
      variant: Rt.medium,
      children: /* @__PURE__ */ a(xt, { children: /* @__PURE__ */ C(rl, { hasGutter: !0, children: [
        /* @__PURE__ */ a(va, { children: /* @__PURE__ */ a(
          se,
          {
            fieldId: "type",
            label: o("formatOption"),
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: o("downloadType"),
                fieldLabelId: "formatOption"
              }
            ),
            children: /* @__PURE__ */ a(
              Bn,
              {
                isOpen: g,
                toggle: (x) => /* @__PURE__ */ a(
                  yt,
                  {
                    id: "type",
                    ref: x,
                    onClick: () => b(!g),
                    isExpanded: g,
                    children: u
                  }
                ),
                selected: u,
                onSelect: (x, w) => {
                  p(w?.toString() || ""), b(!1);
                },
                "aria-label": o("selectOne"),
                popperProps: {
                  appendTo: document.body
                },
                children: /* @__PURE__ */ a(ia, { children: d.map((x) => /* @__PURE__ */ a(
                  _e,
                  {
                    value: x.id,
                    isSelected: u === x.id,
                    description: l ? x.helpText : void 0,
                    children: x.displayType
                  },
                  x.id
                )) })
              }
            )
          }
        ) }),
        !v?.downloadOnly && /* @__PURE__ */ a(va, { isFilled: !0, children: /* @__PURE__ */ a(
          se,
          {
            fieldId: "details",
            label: o("details"),
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: o("detailsHelp"),
                fieldLabelId: "details"
              }
            ),
            children: /* @__PURE__ */ a(
              Ai,
              {
                id: "details",
                readOnly: !0,
                rows: 12,
                resizeOrientation: "vertical",
                value: m && typeof m == "string" ? m : "",
                "aria-label": "text area example"
              }
            )
          }
        ) })
      ] }) })
    }
  );
}, dd = ({ id: e, type: t }) => {
  const { adminClient: n } = pe(), { t: r } = H(), i = Je(), { realm: s } = be(), [o, l] = N(""), [c, d] = N(), u = pa(), p = (g) => {
    switch (t) {
      case "clients":
        return n.clients.updateFineGrainPermission(
          { id: e },
          { enabled: g }
        );
      case "users":
        return n.realms.updateUsersManagementPermissions({
          realm: s,
          enabled: g
        });
      case "groups":
        return n.groups.updatePermission({ id: e }, { enabled: g });
      case "roles":
        return n.roles.updatePermission({ id: e }, { enabled: g });
      case "identityProviders":
        return n.identityProviders.updatePermission(
          { alias: e },
          { enabled: g }
        );
    }
  };
  Re(
    () => Promise.all([
      n.clients.find({
        search: !0,
        clientId: s === "master" ? "master-realm" : "realm-management"
      }),
      (() => {
        switch (t) {
          case "clients":
            return n.clients.listFineGrainPermissions({ id: e });
          case "users":
            return n.realms.getUsersManagementPermissions({
              realm: s
            });
          case "groups":
            return n.groups.listPermissions({ id: e });
          case "roles":
            return n.roles.listPermissions({ id: e });
          case "identityProviders":
            return n.identityProviders.listPermissions({
              alias: e
            });
        }
      })()
    ]),
    ([g, b]) => {
      l(g[0]?.id), d(b);
    },
    [e]
  );
  const [m, f] = ze({
    titleKey: "permissionsDisable",
    messageKey: "permissionsDisableConfirm",
    continueButtonLabel: "confirm",
    onConfirm: async () => {
      const g = await p(!1);
      d(g);
    }
  });
  return c ? /* @__PURE__ */ C(Te, { variant: "light", children: [
    /* @__PURE__ */ a(f, {}),
    /* @__PURE__ */ C(xa, { isFlat: !0, children: [
      /* @__PURE__ */ a(br, { children: r("permissions") }),
      /* @__PURE__ */ C(da, { children: [
        r(`${t}PermissionsHint`),
        /* @__PURE__ */ a(xt, { isHorizontal: !0, className: "pf-v5-u-pt-md", children: /* @__PURE__ */ a(
          se,
          {
            hasNoPaddingTop: !0,
            className: "permission-label",
            label: r("permissionsEnabled"),
            fieldId: "permissionsEnabled",
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: r("permissionsEnabledHelp"),
                fieldLabelId: "permissionsEnabled"
              }
            ),
            children: /* @__PURE__ */ a(
              Ye,
              {
                id: "permissionsEnabled",
                "data-testid": "permissionSwitch",
                label: r("on"),
                labelOff: r("off"),
                isChecked: c.enabled,
                onChange: async (g, b) => {
                  if (b) {
                    const v = await p(b);
                    d(v);
                  } else
                    m();
                },
                "aria-label": r("permissionsEnabled")
              }
            )
          }
        ) })
      ] })
    ] }),
    c.enabled && /* @__PURE__ */ C(ee, { children: [
      /* @__PURE__ */ C(xa, { isFlat: !0, className: "pf-v5-u-mt-lg", children: [
        /* @__PURE__ */ a(br, { children: r("permissionsList") }),
        /* @__PURE__ */ a(da, { children: /* @__PURE__ */ C(ns, { i18nKey: "permissionsListIntro", children: [
          " ",
          /* @__PURE__ */ a("strong", { children: {
            realm: s === "master" ? "master-realm" : "realm-management"
          } }),
          "."
        ] }) })
      ] }),
      /* @__PURE__ */ a(xa, { isFlat: !0, className: "keycloak__permission__permission-table", children: /* @__PURE__ */ a(da, { className: "pf-v5-u-p-0", children: /* @__PURE__ */ C(Cn, { "aria-label": r("permissionsList"), variant: "compact", children: [
        /* @__PURE__ */ a(wn, { children: /* @__PURE__ */ C(rt, { children: [
          /* @__PURE__ */ a(De, { id: "permissionsScopeName", children: r("permissionsScopeName") }),
          /* @__PURE__ */ a(De, { id: "description", children: r("description") })
        ] }) }),
        /* @__PURE__ */ a(yn, { children: u(
          Object.entries(c.scopePermissions || {}),
          ([g]) => g
        ).map(([g, b]) => /* @__PURE__ */ C(rt, { children: [
          /* @__PURE__ */ a(ke, { children: /* @__PURE__ */ a(
            Ae,
            {
              to: Us({
                realm: s,
                id: o,
                permissionType: "scope",
                permissionId: b
              }),
              children: g
            }
          ) }),
          /* @__PURE__ */ a(ke, { children: r(`scopePermissions.${t}.${g}-description`) }),
          /* @__PURE__ */ a(ke, { isActionCell: !0, children: /* @__PURE__ */ a(
            dl,
            {
              items: [
                {
                  title: r("edit"),
                  onClick() {
                    i(
                      Us({
                        realm: s,
                        id: o,
                        permissionType: "scope",
                        permissionId: b
                      })
                    );
                  }
                }
              ]
            }
          ) })
        ] }, b)) })
      ] }) }) })
    ] })
  ] }) : /* @__PURE__ */ a(gt, {});
}, lW = Be(() => Promise.resolve().then(() => Mp)), db = {
  path: "/:realm/realm-settings",
  element: /* @__PURE__ */ a(lW, {}),
  breadcrumb: (e) => e("realmSettings"),
  handle: {
    access: "view-realm"
  }
}, GO = {
  ...db,
  path: "/:realm/realm-settings/:tab"
}, ac = (e) => {
  const t = e.tab ? GO.path : db.path;
  return {
    pathname: We(t, e)
  };
}, cW = ({
  defaultRoleName: e,
  toDetail: t,
  messageBundle: n,
  ...r
}) => {
  const { t: i } = H(n), { realm: s } = be();
  return r.name !== e ? /* @__PURE__ */ a(Ae, { to: t(r.id), children: r.name }) : /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ C(Ae, { to: ac({ realm: s, tab: "user-registration" }), children: [
      r.name,
      " "
    ] }),
    /* @__PURE__ */ a(
      le,
      {
        helpText: i(`${n}:defaultRole`),
        fieldLabelId: "defaultRole"
      }
    )
  ] });
}, WO = ({
  loader: e,
  paginated: t = !0,
  parentRoleId: n,
  messageBundle: r = "roles",
  toCreate: i,
  toDetail: s,
  isReadOnly: o
}) => {
  const { adminClient: l } = pe(), { t: c } = H(), d = Je(), { addAlert: u, addError: p } = Se(), { realmRepresentation: m } = be(), [f, g] = N(), [b, v] = ze({
    titleKey: "roleDeleteConfirm",
    messageKey: c("roleDeleteConfirmDialog", {
      selectedRoleName: f ? f.name : ""
    }),
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        n ? await l.roles.delCompositeRoles({ id: n }, [
          f
        ]) : await l.roles.delById({
          id: f.id
        }), g(void 0), u(c("roleDeletedSuccess"), ue.success);
      } catch (y) {
        p("roleDeleteError", y);
      }
    }
  });
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(v, {}),
    /* @__PURE__ */ a(
      St,
      {
        loader: e,
        ariaLabelKey: "roleList",
        searchPlaceholderKey: "searchForRoles",
        isPaginated: t,
        toolbarItem: !o && /* @__PURE__ */ a(
          z,
          {
            "data-testid": "create-role",
            component: (y) => /* @__PURE__ */ a(Ae, { ...y, to: i }),
            children: c("createRole")
          }
        ),
        actions: o ? [] : [
          {
            title: c("delete"),
            onRowClick: (y) => {
              g(y), m?.defaultRole && y.name === m.defaultRole.name ? u(
                c("defaultRoleDeleteError"),
                ue.danger
              ) : b();
            }
          }
        ],
        columns: [
          {
            name: "name",
            displayKey: "roleName",
            cellRenderer: (y) => /* @__PURE__ */ a(
              cW,
              {
                ...y,
                defaultRoleName: m?.defaultRole?.name,
                toDetail: s,
                messageBundle: r
              }
            )
          },
          {
            name: "composite",
            displayKey: "composite",
            cellFormatters: [rd(), on()]
          },
          {
            name: "description",
            cellFormatters: [ro(c)]
          }
        ],
        emptyState: /* @__PURE__ */ a(
          ct,
          {
            hasIcon: !0,
            message: c(`noRoles-${r}`),
            instructions: o ? "" : c(`noRolesInstructions-${r}`),
            primaryActionText: o ? "" : c("createRole"),
            onPrimaryAction: () => d(i)
          }
        )
      },
      f ? f.id : "roleList"
    )
  ] });
}, dW = Be(() => Promise.resolve().then(() => LQ)), ub = {
  path: "/:realm/users",
  element: /* @__PURE__ */ a(dW, {}),
  breadcrumb: (e) => e("titleUsers"),
  handle: {
    access: "query-users"
  }
}, XO = {
  ...ub,
  path: "/:realm/users/:tab"
}, Ho = (e) => {
  const t = e.tab ? XO.path : ub.path;
  return {
    pathname: We(t, e)
  };
}, nh = (e) => e?.startsWith("lightweight-"), uW = (e) => {
  const { realm: t } = be(), { t: n } = H();
  return /* @__PURE__ */ C(Ae, { to: ai({ realm: t, id: e.userId, tab: "sessions" }), children: [
    e.username,
    e.transientUser && /* @__PURE__ */ C(ee, { children: [
      " ",
      /* @__PURE__ */ a(Yt, { content: n("transientUserTooltip"), children: /* @__PURE__ */ a(
        pn,
        {
          "data-testid": "user-details-label-transient-user",
          icon: /* @__PURE__ */ a(_i, {}),
          isCompact: !0,
          children: n("transientUser")
        }
      ) })
    ] })
  ] });
}, pW = (e) => {
  const { realm: t } = be();
  return /* @__PURE__ */ a(lu, { variant: hc.inline, children: Object.entries(e.clients).map(([n, r]) => /* @__PURE__ */ a(zh, { children: /* @__PURE__ */ a(Ae, { to: Ti({ realm: t, clientId: n, tab: "sessions" }), children: r }) }, n)) });
};
function _p({
  loader: e,
  hiddenColumns: t = [],
  emptyInstructions: n,
  logoutUser: r,
  filter: i,
  isSearching: s,
  isPaginated: o
}) {
  const { keycloak: l } = Ha(), { adminClient: c } = pe(), { realm: d } = be(), { whoAmI: u } = _a(), p = Je(), { t: m } = H(), { addError: f } = Se(), g = ni(), [b, v] = N(0), y = () => v((E) => E + 1), x = !!Po(cb.path), w = et(() => [
    {
      name: "username",
      displayKey: "user",
      cellRenderer: uW
    },
    {
      name: "type",
      displayKey: "type"
    },
    {
      name: "start",
      displayKey: "started",
      cellRenderer: (T) => g(new Date(T.start))
    },
    {
      name: "lastAccess",
      displayKey: "lastAccess",
      cellRenderer: (T) => g(new Date(T.lastAccess))
    },
    {
      name: "ipAddress",
      displayKey: "ipAddress"
    },
    {
      name: "clients",
      displayKey: "clients",
      cellRenderer: pW
    }
  ].filter(
    ({ name: T }) => !t.includes(T)
  ), [d, t]), [R, S] = ze({
    titleKey: "logoutAllSessions",
    messageKey: "logoutAllDescription",
    continueButtonLabel: "confirm",
    onConfirm: async () => {
      try {
        await c.users.logout({ id: r }), x && nh(r) ? p(Ho({ realm: d })) : y();
      } catch (E) {
        f("logoutAllSessionsError", E);
      }
    }
  });
  async function _(E) {
    const T = E.data;
    await c.realms.deleteSession({
      realm: d,
      session: T.id,
      isOffline: !0
    }), y();
  }
  async function O(E) {
    const T = E.data;
    await c.realms.deleteSession({
      realm: d,
      session: T.id,
      isOffline: !1
    }), T.userId === u.getUserId() ? await l.logout({ redirectUri: "" }) : x && nh(T.userId) ? p(Ho({ realm: d })) : y();
  }
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(S, {}),
    /* @__PURE__ */ a(
      St,
      {
        loader: e,
        ariaLabelKey: "titleSessions",
        searchPlaceholderKey: "searchForSession",
        isPaginated: o,
        isSearching: s,
        searchTypeComponent: i,
        toolbarItem: r && /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(z, { onClick: R, children: m("logoutAllSessions") }) }),
        columns: w,
        actionResolver: (E) => E.data.type === "Offline" || E.data.type === "OFFLINE" ? [
          {
            title: m("revoke"),
            onClick: () => _(E)
          }
        ] : [
          {
            title: m("signOut"),
            onClick: () => O(E)
          }
        ],
        emptyState: /* @__PURE__ */ a(
          ct,
          {
            hasIcon: !0,
            icon: dS,
            message: m("noSessions"),
            instructions: n || m("noSessionsDescription")
          }
        )
      },
      b
    )
  ] });
}
const cee = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _p
}, Symbol.toStringTag, { value: "Module" })), mW = ({ client: e }) => {
  const { adminClient: t } = pe(), { t: n } = H();
  return /* @__PURE__ */ a(Te, { variant: "light", className: "pf-v5-u-p-0", children: /* @__PURE__ */ a(
    _p,
    {
      loader: async (i, s) => {
        const o = (c) => (d) => d.map((u) => ({
          type: c,
          ...u
        }));
        return (await Promise.all([
          t.clients.listSessions({ id: e.id, first: i, max: s }).then(o(n("sessionsType.regularSSO"))),
          t.clients.listOfflineSessions({
            id: e.id,
            first: i,
            max: s
          }).then(o(n("sessionsType.offline")))
        ])).flat();
      },
      hiddenColumns: ["clients"],
      emptyInstructions: n("noSessionsForClient")
    }
  ) });
}, fW = (e) => {
  const { t } = H(), { watch: n } = Le(), r = n("protocol"), { client: i } = e;
  return /* @__PURE__ */ a(
    ll,
    {
      label: t("jumpToSection"),
      className: "pf-v5-u-px-lg pf-v5-u-pb-lg",
      sections: [
        {
          title: t("generalSettings"),
          panel: /* @__PURE__ */ a(xt, { isHorizontal: !0, children: /* @__PURE__ */ a(
            Gg,
            {
              protocol: i.protocol,
              hasConfigureAccess: i.access?.configure
            }
          ) })
        },
        {
          title: t("accessSettings"),
          panel: /* @__PURE__ */ a(Jz, { ...e })
        },
        {
          title: t("samlCapabilityConfig"),
          isHidden: r !== "saml" || i.bearerOnly,
          panel: /* @__PURE__ */ a(sq, {})
        },
        {
          title: t("signatureAndEncryption"),
          isHidden: r !== "saml" || i.bearerOnly,
          panel: /* @__PURE__ */ a(oq, {})
        },
        {
          title: t("capabilityConfig"),
          isHidden: r !== "openid-connect" || i.bearerOnly,
          panel: /* @__PURE__ */ a(qg, {})
        },
        {
          title: t("loginSettings"),
          isHidden: i.bearerOnly,
          panel: /* @__PURE__ */ a(Qz, { access: i.access?.configure })
        },
        {
          title: t("logoutSettings"),
          isHidden: i.bearerOnly,
          panel: /* @__PURE__ */ a(eq, { ...e })
        }
      ]
    }
  );
}, hW = Be(() => Promise.resolve().then(() => pb)), YO = {
  path: "/:realm/clients/:clientId/clientScopes/:tab",
  element: /* @__PURE__ */ a(hW, {}),
  breadcrumb: (e) => e("clientSettings"),
  handle: {
    access: "view-clients"
  }
}, m0 = (e) => ({
  pathname: We(YO.path, e)
}), gW = Be(() => Promise.resolve().then(() => $G)), JO = {
  path: "/:realm/clients/:clientId/roles/new",
  element: /* @__PURE__ */ a(gW, {}),
  breadcrumb: (e) => e("createRole"),
  handle: {
    access: "manage-clients"
  }
}, bW = (e) => ({
  pathname: We(JO.path, e)
}), vW = ({
  onChange: e,
  value: t,
  save: n,
  client: r,
  toggleDownloadDialog: i,
  toggleDeleteDialog: s
}) => {
  const { t: o } = H(), [l, c] = ze({
    titleKey: "disableConfirmClientTitle",
    messageKey: "disableConfirmClient",
    continueButtonLabel: "disable",
    onConfirm: () => {
      e(!t), n();
    }
  }), d = et(() => {
    const f = bl(
      o,
      r.protocol ?? "openid-connect"
    );
    return [{ text: r.bearerOnly ? /* @__PURE__ */ a(
      Yt,
      {
        "data-testid": "bearer-only-explainer-tooltip",
        content: o("explainBearerOnly"),
        children: /* @__PURE__ */ a(
          pn,
          {
            "data-testid": "bearer-only-explainer-label",
            icon: /* @__PURE__ */ a(_i, {}),
            children: f
          }
        )
      }
    ) : /* @__PURE__ */ a(pn, { children: f }) }];
  }, [r, o]), { hasAccess: u } = Mt(), p = u("manage-clients") || r.access?.configure, m = [
    /* @__PURE__ */ a(Ke, { onClick: i, children: o("downloadAdapterConfig") }, "download"),
    /* @__PURE__ */ a(Ke, { onClick: () => Aw(r), children: o("export") }, "export"),
    ...!nc(r) && p ? [
      /* @__PURE__ */ a(_t, {}, "divider"),
      /* @__PURE__ */ a(
        Ke,
        {
          "data-testid": "delete-client",
          onClick: s,
          children: o("delete")
        },
        "delete"
      )
    ] : []
  ];
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(c, {}),
    /* @__PURE__ */ a(
      wt,
      {
        titleKey: r.clientId,
        subKey: "clientsExplain",
        badges: d,
        divider: !1,
        isReadOnly: !p,
        helpTextKey: "enableDisable",
        dropdownItems: m,
        isEnabled: t,
        onToggle: (f) => {
          f ? (e(f), n()) : l();
        }
      }
    )
  ] });
};
function yW() {
  const { adminClient: e } = pe(), { t } = H(), { addAlert: n, addError: r } = Se(), { realm: i } = be(), { hasAccess: s } = Mt(), o = oa(), l = s("manage-authorization"), c = s("view-authorization"), d = s("manage-clients"), u = s("view-clients"), p = s("view-users"), m = o(zn.AdminFineGrainedAuthz) && (l || c), f = Je(), [g, b] = ot(), [v, y] = ot(), x = Ue(), { clientId: w } = Vt(), [R, S] = N(0), _ = nt({
    control: x.control,
    name: "clientAuthenticatorType",
    defaultValue: "client-secret"
  }), [O, E] = N(), T = async () => {
    const fe = await e.clients.listRoles({ id: w });
    return zr(fe, (we) => we.name?.toUpperCase());
  }, I = (fe) => jn(
    Ti({
      realm: i,
      clientId: w,
      tab: fe
    })
  ), k = I("settings"), P = I("keys"), D = I("credentials"), F = I("roles"), A = I("clientScopes"), M = I("authorization"), V = I("serviceAccount"), U = I("sessions"), G = I("permissions"), q = I("advanced"), L = (fe) => jn(
    m0({
      realm: i,
      clientId: w,
      tab: fe
    })
  ), K = L("setup"), B = L("evaluate"), j = (fe) => jn(
    Du({
      realm: i,
      clientId: w,
      tab: fe
    })
  ), W = j("settings"), Q = j("resources"), te = j("scopes"), ie = j("policies"), ce = j("permissions"), Z = j("evaluate"), me = j("export"), [ne, Oe] = ze({
    titleKey: "clientDeleteConfirmTitle",
    messageKey: "clientDeleteConfirm",
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        await e.clients.del({ id: w }), n(t("clientDeletedSuccess"), ue.success), f(Bs({ realm: i }));
      } catch (fe) {
        r("clientDeleteError", fe);
      }
    }
  }), Pe = (fe) => {
    x.reset({ ...fe }), In(fe, x.setValue), fe.attributes?.["acr.loa.map"] && x.setValue(
      Ne("attributes.acr.loa.map"),
      // @ts-ignore
      Object.entries(JSON.parse(fe.attributes["acr.loa.map"])).flatMap(
        ([we, J]) => ({ key: we, value: J })
      )
    );
  };
  Re(
    () => e.clients.findOne({ id: w }),
    (fe) => {
      if (!fe)
        throw new Error(t("notFound"));
      E(wc(fe)), Pe(fe);
    },
    [w, R]
  );
  const $e = async ({ confirmed: fe = !1, messageKey: we = "clientSaveSuccess" } = {
    confirmed: !1,
    messageKey: "clientSaveSuccess"
  }) => {
    if (!await x.trigger())
      return;
    if (!O?.publicClient && O?.clientAuthenticatorType !== _ && !fe) {
      y();
      return;
    }
    const J = Zn(x.getValues()), X = Zn(J);
    X.attributes?.["acr.loa.map"] && (X.attributes["acr.loa.map"] = JSON.stringify(
      Object.fromEntries(
        X.attributes["acr.loa.map"].filter(({ key: Y }) => Y !== "").map(({ key: Y, value: ae }) => [Y, ae])
      )
    ));
    try {
      const Y = {
        ...O,
        ...X
      };
      Y.clientId = Y.clientId?.trim(), await e.clients.update({ id: w }, Y), Pe(Y), E(Y), n(t(we), ue.success);
    } catch (Y) {
      r("clientSaveError", Y);
    }
  };
  return O ? /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(
      ms,
      {
        continueButtonLabel: "yes",
        cancelButtonLabel: "no",
        titleKey: t("changeAuthenticatorConfirmTitle", {
          clientAuthenticatorType: _
        }),
        open: v,
        toggleDialog: y,
        onConfirm: () => $e({ confirmed: !0 }),
        children: /* @__PURE__ */ a(ee, { children: t("changeAuthenticatorConfirm", {
          clientAuthenticatorType: _
        }) })
      }
    ),
    /* @__PURE__ */ a(Oe, {}),
    g && /* @__PURE__ */ a(
      oW,
      {
        id: O.id,
        protocol: O.protocol,
        open: !0,
        toggleDialog: b
      }
    ),
    /* @__PURE__ */ a(
      ge,
      {
        name: "enabled",
        control: x.control,
        defaultValue: !0,
        render: ({ field: fe }) => /* @__PURE__ */ a(
          vW,
          {
            value: fe.value,
            onChange: fe.onChange,
            client: O,
            save: $e,
            toggleDeleteDialog: ne,
            toggleDownloadDialog: b
          }
        )
      }
    ),
    /* @__PURE__ */ a(Te, { variant: "light", className: "pf-v5-u-p-0", children: /* @__PURE__ */ a(Ve, { ...x, children: /* @__PURE__ */ C(
      $n,
      {
        "data-testid": "client-tabs",
        "aria-label": "client-tabs",
        isBox: !0,
        mountOnEnter: !0,
        children: [
          /* @__PURE__ */ a(
            Ee,
            {
              id: "settings",
              "data-testid": "clientSettingsTab",
              title: /* @__PURE__ */ a(Ie, { children: t("settings") }),
              ...k,
              children: /* @__PURE__ */ a(
                fW,
                {
                  client: O,
                  save: () => $e(),
                  reset: () => Pe(O)
                }
              )
            }
          ),
          (!O.publicClient && !nc(O) || O.protocol === "saml") && /* @__PURE__ */ C(
            Ee,
            {
              id: "keys",
              "data-testid": "keysTab",
              title: /* @__PURE__ */ a(Ie, { children: t("keys") }),
              ...P,
              children: [
                O.protocol === "openid-connect" && /* @__PURE__ */ a(
                  kG,
                  {
                    clientId: w,
                    save: $e,
                    hasConfigureAccess: O.access?.configure
                  }
                ),
                O.protocol === "saml" && /* @__PURE__ */ a(IG, { clientId: w, save: $e })
              ]
            }
          ),
          !O.publicClient && !nc(O) && (u || O.access?.configure || O.access?.view) && /* @__PURE__ */ a(
            Ee,
            {
              id: "credentials",
              title: /* @__PURE__ */ a(Ie, { children: t("credentials") }),
              ...D,
              children: /* @__PURE__ */ a(
                pG,
                {
                  client: O,
                  save: $e,
                  refresh: () => S(R + 1)
                },
                R
              )
            }
          ),
          /* @__PURE__ */ a(
            Ee,
            {
              id: "roles",
              "data-testid": "rolesTab",
              title: /* @__PURE__ */ a(Ie, { children: t("roles") }),
              ...F,
              children: /* @__PURE__ */ a(
                WO,
                {
                  loader: T,
                  paginated: !1,
                  messageBundle: "client",
                  toCreate: bW({ realm: i, clientId: O.id }),
                  toDetail: (fe) => lb({
                    realm: i,
                    clientId: O.id,
                    id: fe,
                    tab: "details"
                  }),
                  isReadOnly: !(d || O.access?.configure)
                }
              )
            }
          ),
          !nc(O) && !O.bearerOnly && /* @__PURE__ */ a(
            Ee,
            {
              id: "clientScopes",
              "data-testid": "clientScopesTab",
              title: /* @__PURE__ */ a(Ie, { children: t("clientScopes") }),
              ...A,
              children: /* @__PURE__ */ C(
                $n,
                {
                  defaultLocation: m0({
                    realm: i,
                    clientId: w,
                    tab: "setup"
                  }),
                  children: [
                    /* @__PURE__ */ a(
                      Ee,
                      {
                        id: "setup",
                        "data-testid": "clientScopesSetupTab",
                        title: /* @__PURE__ */ a(Ie, { children: t("setup") }),
                        ...K,
                        children: /* @__PURE__ */ a(
                          JG,
                          {
                            clientName: O.clientId,
                            clientId: w,
                            protocol: O.protocol,
                            fineGrainedAccess: O.access?.manage
                          }
                        )
                      }
                    ),
                    /* @__PURE__ */ a(
                      Ee,
                      {
                        id: "evaluate",
                        "data-testid": "clientScopesEvaluateTab",
                        title: /* @__PURE__ */ a(Ie, { children: t("evaluate") }),
                        ...B,
                        children: /* @__PURE__ */ a(
                          rW,
                          {
                            clientId: w,
                            protocol: O.protocol
                          }
                        )
                      }
                    )
                  ]
                }
              )
            }
          ),
          O.authorizationServicesEnabled && (l || c) && /* @__PURE__ */ a(
            Ee,
            {
              id: "authorization",
              "data-testid": "authorizationTab",
              title: /* @__PURE__ */ a(Ie, { children: t("authorization") }),
              ...M,
              children: /* @__PURE__ */ C(
                $n,
                {
                  mountOnEnter: !0,
                  unmountOnExit: !0,
                  defaultLocation: Du({
                    realm: i,
                    clientId: w,
                    tab: "settings"
                  }),
                  children: [
                    /* @__PURE__ */ a(
                      Ee,
                      {
                        id: "settings",
                        "data-testid": "authorizationSettings",
                        title: /* @__PURE__ */ a(Ie, { children: t("settings") }),
                        ...W,
                        children: /* @__PURE__ */ a(Yz, { clientId: w })
                      }
                    ),
                    /* @__PURE__ */ a(
                      Ee,
                      {
                        id: "resources",
                        "data-testid": "authorizationResources",
                        title: /* @__PURE__ */ a(Ie, { children: t("resources") }),
                        ...Q,
                        children: /* @__PURE__ */ a(
                          Eq,
                          {
                            clientId: w,
                            isDisabled: !l
                          }
                        )
                      }
                    ),
                    /* @__PURE__ */ a(
                      Ee,
                      {
                        id: "scopes",
                        "data-testid": "authorizationScopes",
                        title: /* @__PURE__ */ a(Ie, { children: t("scopes") }),
                        ...te,
                        children: /* @__PURE__ */ a(
                          _q,
                          {
                            clientId: w,
                            isDisabled: !l
                          }
                        )
                      }
                    ),
                    /* @__PURE__ */ a(
                      Ee,
                      {
                        id: "policies",
                        "data-testid": "authorizationPolicies",
                        title: /* @__PURE__ */ a(Ie, { children: t("policies") }),
                        ...ie,
                        children: /* @__PURE__ */ a(
                          Xq,
                          {
                            clientId: w,
                            isDisabled: !l
                          }
                        )
                      }
                    ),
                    /* @__PURE__ */ a(
                      Ee,
                      {
                        id: "permissions",
                        "data-testid": "authorizationPermissions",
                        title: /* @__PURE__ */ a(Ie, { children: t("permissions") }),
                        ...ce,
                        children: /* @__PURE__ */ a(
                          Zq,
                          {
                            clientId: w,
                            isDisabled: !l
                          }
                        )
                      }
                    ),
                    p && /* @__PURE__ */ a(
                      Ee,
                      {
                        id: "evaluate",
                        "data-testid": "authorizationEvaluate",
                        title: /* @__PURE__ */ a(Ie, { children: t("evaluate") }),
                        ...Z,
                        children: /* @__PURE__ */ a(iG, { client: O, save: $e })
                      }
                    ),
                    s("manage-authorization") && /* @__PURE__ */ a(
                      Ee,
                      {
                        id: "export",
                        "data-testid": "authorizationExport",
                        title: /* @__PURE__ */ a(Ie, { children: t("export") }),
                        ...me,
                        children: /* @__PURE__ */ a(oG, {})
                      }
                    )
                  ]
                }
              )
            }
          ),
          O.serviceAccountsEnabled && p && /* @__PURE__ */ a(
            Ee,
            {
              id: "serviceAccount",
              "data-testid": "serviceAccountTab",
              title: /* @__PURE__ */ a(Ie, { children: t("serviceAccount") }),
              ...V,
              children: /* @__PURE__ */ a(sW, { client: O })
            }
          ),
          /* @__PURE__ */ a(
            Ee,
            {
              id: "sessions",
              "data-testid": "sessionsTab",
              title: /* @__PURE__ */ a(Ie, { children: t("sessions") }),
              ...U,
              children: /* @__PURE__ */ a(mW, { client: O })
            }
          ),
          m && (d || O.access?.manage) && /* @__PURE__ */ a(
            Ee,
            {
              id: "permissions",
              "data-testid": "permissionsTab",
              title: /* @__PURE__ */ a(Ie, { children: t("permissions") }),
              ...G,
              children: /* @__PURE__ */ a(dd, { id: O.id, type: "clients" })
            }
          ),
          /* @__PURE__ */ a(
            Ee,
            {
              id: "advanced",
              "data-testid": "advancedTab",
              title: /* @__PURE__ */ a(Ie, { children: t("advanced") }),
              ...q,
              children: /* @__PURE__ */ a(bq, { save: $e, client: O })
            }
          )
        ]
      }
    ) }) })
  ] }) : /* @__PURE__ */ a(gt, {});
}
const pb = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: yW
}, Symbol.toStringTag, { value: "Module" })), ZO = Er(
  "SubGroupsContext",
  void 0
), CW = ({ children: e }) => {
  const [t, n] = N([]), r = () => n([]), i = (o) => n(
    t.slice(0, t.findIndex((l) => l.id === o.id) + 1)
  ), s = () => t[t.length - 1];
  return /* @__PURE__ */ a(
    ZO.Provider,
    {
      value: { subGroups: t, setSubGroups: n, clear: r, remove: i, currentGroup: s },
      children: e
    }
  );
}, vl = () => Ir(ZO), xW = () => {
  const { t: e } = H(), { clear: t, remove: n, subGroups: r } = vl(), { realm: i } = be(), s = cs();
  return He(() => {
    const { pathname: o } = s;
    (!o.includes("/groups") || o.endsWith("/groups")) && t();
  }, [s]), r.length !== 0 ? /* @__PURE__ */ C(Hc, { children: [
    /* @__PURE__ */ a(Ao, { children: /* @__PURE__ */ a(Ae, { to: `/${i}/groups`, children: e("groups") }) }, "home"),
    r.map((o, l) => {
      const c = l === r.length - 1;
      return /* @__PURE__ */ C(Ao, { isActive: c, children: [
        !c && /* @__PURE__ */ a(
          Ae,
          {
            to: s.pathname.substring(
              0,
              s.pathname.indexOf(o.id) + o.id.length
            ),
            onClick: () => n(o),
            children: o.name
          }
        ),
        c && (o.id === "search" ? o.name : e("groupDetails"))
      ] }, o.id);
    })
  ] }) : null;
};
var SW = function(t) {
  return t.join("/").replace(/\/\/+/g, "/");
}, wW = /^:\w+$/, kW = 3, OW = 2, TW = 1, EW = 10, IW = -2, f0 = function(t) {
  return t === "*";
};
function PW(e, t) {
  var n = e.split("/"), r = n.length;
  return n.some(f0) && (r += IW), t && (r += OW), n.filter(function(i) {
    return !f0(i);
  }).reduce(function(i, s) {
    return wW.test(s) ? i + kW : s === "" ? i + TW : i + EW;
  }, r);
}
function _W(e, t) {
  var n = e.length === t.length && e.slice(0, -1).every(function(r, i) {
    return r === t[i];
  });
  return n ? e[e.length - 1] - t[t.length - 1] : 0;
}
function QO(e) {
  var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [], n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [], r = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : "";
  return e.forEach(function(i, s) {
    var o;
    if (typeof i.path != "string" && !i.index && !(!((o = i.children) === null || o === void 0) && o.length))
      throw new Error("useBreadcrumbs: `path` or `index` must be provided in every route object");
    if (i.path && i.index)
      throw new Error("useBreadcrumbs: `path` and `index` cannot be provided at the same time");
    var l = {
      relativePath: i.path || "",
      childrenIndex: s,
      route: i
    };
    if (l.relativePath.charAt(0) === "/") {
      if (!l.relativePath.startsWith(r))
        throw new Error("useBreadcrumbs: The absolute path of the child route must start with the parent path");
      l.relativePath = l.relativePath.slice(r.length);
    }
    var c = SW([r, l.relativePath]), d = n.concat(l);
    if (i.children && i.children.length > 0) {
      if (i.index)
        throw new Error("useBreadcrumbs: Index route cannot have child routes");
      QO(i.children, t, d, c);
    }
    t.push({
      path: c,
      score: PW(c, i.index),
      routesMeta: d
    });
  }), t;
}
function RW(e) {
  return e.sort(function(t, n) {
    return t.score !== n.score ? n.score - t.score : _W(t.routesMeta.map(function(r) {
      return r.childrenIndex;
    }), n.routesMeta.map(function(r) {
      return r.childrenIndex;
    }));
  });
}
var jl = Symbol("NO_BREADCRUMB"), eT = function(t) {
  return t.replace(/^[\s_]+|[\s_]+$/g, "").replace(/[-_\s]+/g, " ").replace(/^[a-z]/, function(n) {
    return n.toUpperCase();
  });
}, tT = function(t) {
  var n = t.breadcrumb, r = t.match, i = t.location, s = t.props, o = Object.assign({
    match: r,
    location: i,
    key: r.pathname
  }, s || {});
  return Object.assign(Object.assign({}, o), {
    breadcrumb: typeof n == "string" ? /* @__PURE__ */ UE("span", {
      key: o.key
    }, n) : /* @__PURE__ */ re.createElement(n, Object.assign({}, o))
  });
}, AW = function(t) {
  var n = t.currentSection, r = t.location, i = t.pathSection, s = t.defaultFormatter, o = qd({
    end: !0,
    path: i
  }, i);
  return tT({
    breadcrumb: s ? s(n) : eT(n),
    match: o,
    location: r
  });
}, LW = function(t) {
  var n = t.currentSection, r = t.disableDefaults, i = t.excludePaths, s = t.defaultFormatter, o = t.location, l = t.pathSection, c = t.branches, d, u = function(m) {
    return qd({
      path: m,
      end: !0
    }, l) != null;
  };
  return i && i.some(u) ? jl : (c.some(function(p) {
    var m = p.path, f = p.routesMeta, g = f[f.length - 1].route, b = g.breadcrumb;
    if (!b && g.index) {
      var v = f[f.length - 2];
      v && v.route.breadcrumb && (b = v.route.breadcrumb);
    }
    var y = g.caseSensitive, x = g.props, w = qd({
      path: m,
      end: !0,
      caseSensitive: y
    }, l);
    return w && b === null ? (d = jl, !0) : w ? !b && r ? (d = jl, !0) : (d = tT({
      breadcrumb: b || (s ? s(n) : eT(n)),
      match: Object.assign(Object.assign({}, w), {
        route: g
      }),
      location: o,
      props: x
    }), !0) : !1;
  }), d || (r ? jl : AW({
    pathSection: l,
    currentSection: l === "/" ? "Home" : n,
    location: o,
    defaultFormatter: s
  })));
}, NW = function(t) {
  var n = t.routes, r = t.location, i = t.options, s = i === void 0 ? {} : i, o = r.pathname, l = RW(QO(n)), c = [];
  return o.split("?")[0].split("/").reduce(function(d, u, p) {
    var m = u ? "".concat(d, "/").concat(u) : "/";
    if (m === "/" && p !== 0)
      return "";
    var f = LW(Object.assign({
      currentSection: u,
      location: r,
      pathSection: m,
      branches: l
    }, s));
    return f !== jl && c.push(f), m === "/" ? "" : m;
  }, ""), c;
}, DW = function(t, n) {
  return NW({
    routes: t || [],
    location: cs(),
    options: n
  });
};
const MW = () => /* @__PURE__ */ a(ee, { children: "Page Not Found" }), FW = () => {
  const [e, t] = N(!1), n = Pr(), { t: r } = H(), i = [
    /* @__PURE__ */ a(
      Ke,
      {
        id: "link",
        href: na.documentationUrl,
        target: "_blank",
        children: /* @__PURE__ */ C(Jn, { children: [
          /* @__PURE__ */ a(Dt, { isFilled: !0, children: r("documentation") }),
          /* @__PURE__ */ a(Dt, { children: /* @__PURE__ */ a(Th, {}) })
        ] })
      },
      "link"
    ),
    /* @__PURE__ */ a(_t, {}, "divide"),
    /* @__PURE__ */ C(Ke, { id: "enable", children: [
      /* @__PURE__ */ C(Jn, { children: [
        /* @__PURE__ */ a(Dt, { isFilled: !0, children: r("enableHelpMode") }),
        /* @__PURE__ */ a(Dt, { children: /* @__PURE__ */ a(
          Ye,
          {
            id: "enableHelp",
            "aria-label": r("enableHelp"),
            isChecked: n.enabled,
            label: "",
            className: "keycloak_help-header-switch",
            onChange: () => n.toggleHelp()
          }
        ) })
      ] }),
      /* @__PURE__ */ a(Pt, { className: "keycloak_help-header-description", children: r("helpToggleInfo") })
    ] }, "enable")
  ];
  return /* @__PURE__ */ a(
    qt,
    {
      popperProps: {
        position: "right"
      },
      isOpen: e,
      toggle: (s) => /* @__PURE__ */ a(
        yt,
        {
          ref: s,
          variant: "plain",
          onClick: () => t(!e),
          "aria-label": "Help",
          id: "help",
          children: /* @__PURE__ */ a(yc, {})
        }
      ),
      children: /* @__PURE__ */ a(Xt, { children: i })
    }
  );
}, nT = () => {
  const { keycloak: e } = Ha(), { t } = H();
  return /* @__PURE__ */ a(
    Ke,
    {
      id: "manage-account",
      onClick: () => e.accountManagement(),
      children: t("manageAccount")
    },
    "manage account"
  );
}, aT = () => {
  const { keycloak: e } = Ha(), { t } = H();
  return /* @__PURE__ */ a(
    Ke,
    {
      id: "sign-out",
      onClick: () => e.logout({ redirectUri: "" }),
      children: t("signOut")
    },
    "sign out"
  );
}, rT = () => {
  const { realm: e } = be(), { t } = H();
  return /* @__PURE__ */ a(
    Ke,
    {
      component: (n) => /* @__PURE__ */ a(Ae, { ...n, to: Fs({ realm: e }) }),
      children: t("realmInfo")
    },
    "server info"
  );
}, $W = () => {
  const { t: e } = H(), { enabled: t, toggleHelp: n } = Pr();
  return /* @__PURE__ */ a(
    Ke,
    {
      "data-testId": "helpIcon",
      icon: /* @__PURE__ */ a(yc, {}),
      onClick: n,
      children: e(t ? "helpEnabled" : "helpDisabled")
    }
  );
}, jW = [
  /* @__PURE__ */ a(nT, {}, "kebab Manage Account"),
  /* @__PURE__ */ a(rT, {}, "kebab Server Info"),
  /* @__PURE__ */ a($W, {}, "kebab Help"),
  /* @__PURE__ */ a(_t, { component: "li" }, "kebab sign out separator"),
  /* @__PURE__ */ a(aT, {}, "kebab Sign out")
], BW = [
  /* @__PURE__ */ a(nT, {}, "Manage Account"),
  /* @__PURE__ */ a(rT, {}, "Server info"),
  /* @__PURE__ */ a(_t, { component: "li" }, "sign out separator"),
  /* @__PURE__ */ a(aT, {}, "Sign out")
], UW = () => {
  const [e, t] = N(!1);
  return /* @__PURE__ */ a(
    qt,
    {
      isPlain: !0,
      onOpenChange: (n) => t(n),
      toggle: (n) => /* @__PURE__ */ a(
        yt,
        {
          id: "user-dropdown-kebab",
          ref: n,
          variant: "plain",
          onClick: () => t(!e),
          isExpanded: e,
          children: /* @__PURE__ */ a(dr, {})
        }
      ),
      isOpen: e,
      children: /* @__PURE__ */ a(Xt, { children: jW })
    }
  );
}, VW = () => {
  const { whoAmI: e } = _a(), [t, n] = N(!1);
  return /* @__PURE__ */ a(
    qt,
    {
      isPlain: !0,
      isOpen: t,
      onOpenChange: (r) => n(r),
      toggle: (r) => /* @__PURE__ */ a(
        yt,
        {
          id: "user-dropdown",
          ref: r,
          onClick: () => n(!t),
          children: e.getDisplayName()
        }
      ),
      children: /* @__PURE__ */ a(Xt, { children: BW })
    }
  );
}, KW = () => {
  const { environment: e, keycloak: t } = Ha(), { t: n } = H(), { realm: r } = be(), i = t.tokenParsed?.picture, s = e.logo ? e.logo : "/logo.svg", o = lh(Fs({ realm: r })), l = e.logoUrl ? e.logoUrl : o;
  return /* @__PURE__ */ C(Dx, { children: [
    /* @__PURE__ */ a($x, { children: /* @__PURE__ */ a(Hx, { variant: "plain", "aria-label": n("navigation"), children: /* @__PURE__ */ a(rL, {}) }) }),
    /* @__PURE__ */ a(Mx, { href: l, children: /* @__PURE__ */ a(
      "img",
      {
        src: e.resourceUrl + s,
        id: "masthead-logo",
        alt: n("logo"),
        "aria-label": n("logo"),
        className: "keycloak__pageheader_brand"
      }
    ) }),
    /* @__PURE__ */ a(Fx, { children: /* @__PURE__ */ a(Sa, { children: /* @__PURE__ */ C(rr, { children: [
      /* @__PURE__ */ a(
        je,
        {
          align: { default: "alignRight" },
          visibility: {
            default: "hidden",
            md: "visible"
          },
          children: /* @__PURE__ */ a(FW, {})
        }
      ),
      /* @__PURE__ */ a(
        je,
        {
          align: { default: "alignLeft" },
          visibility: {
            md: "hidden"
          },
          children: /* @__PURE__ */ a(UW, {})
        }
      ),
      /* @__PURE__ */ a(
        je,
        {
          visibility: {
            default: "hidden",
            md: "visible"
          },
          children: /* @__PURE__ */ a(VW, {})
        }
      ),
      /* @__PURE__ */ a(
        je,
        {
          variant: "overflow-menu",
          align: { default: "alignRight" },
          className: "pf-v5-u-m-0-on-lg",
          children: /* @__PURE__ */ a(
            R1,
            {
              src: i || e.resourceUrl + "/img_avatar.svg",
              alt: n("avatarImage"),
              "aria-label": n("avatarImage")
            }
          )
        }
      )
    ] }) }) })
  ] });
}, HW = 4, iT = Er(
  "RecentRealmsContext",
  void 0
), zW = ({ children: e }) => {
  const { realm: t } = be(), [n, r] = kg(
    localStorage,
    "recentRealms",
    [t]
  );
  return He(() => {
    const i = [.../* @__PURE__ */ new Set([t, ...n])];
    r(i.slice(0, HW));
  }, [t]), /* @__PURE__ */ a(iT.Provider, { value: n, children: e });
}, qW = () => Ir(iT), GW = Be(() => Promise.resolve().then(() => WJ)), mb = {
  path: "/:realm/add-realm",
  element: /* @__PURE__ */ a(GW, {}),
  breadcrumb: (e) => e("createRealm"),
  handle: {
    access: "view-realm"
  }
}, WW = (e) => ({
  pathname: We(mb.path, e)
}), Nd = 10, XW = ({ onClick: e }) => {
  const { realm: t } = be(), { t: n } = H();
  return /* @__PURE__ */ a(
    z,
    {
      "data-testid": "add-realm",
      component: (r) => /* @__PURE__ */ a(Ae, { ...r, to: WW({ realm: t }) }),
      onClick: e,
      isBlock: !0,
      children: n("createRealm")
    }
  );
}, YW = ({ name: e, displayName: t, showIsRecent: n }) => {
  const { realm: r } = be(), { t: i } = H();
  return /* @__PURE__ */ C(Jn, { className: "keycloak__realm_selector__list-item-split", children: [
    /* @__PURE__ */ a(Dt, { isFilled: !0, children: /* @__PURE__ */ C(rl, { children: [
      t ? /* @__PURE__ */ a(va, { className: "pf-v5-u-font-weight-bold", isFilled: !0, children: Pa(i, t) }) : null,
      /* @__PURE__ */ a(va, { isFilled: !0, children: e })
    ] }) }),
    /* @__PURE__ */ a(Dt, { children: e === r && /* @__PURE__ */ a(As, {}) }),
    n ? /* @__PURE__ */ a(Dt, { children: /* @__PURE__ */ a(pn, { children: i("recent") }) }) : null
  ] });
}, JW = () => {
  const { realm: e } = be(), { adminClient: t } = pe(), { whoAmI: n } = _a(), [r, i] = N(!1), [s, o] = N([]), { t: l } = H(), c = qW(), d = Je(), [u, p] = N(""), [m, f] = N(0), g = bn(
    xg((y) => {
      f(0), p(y);
    }, 1e3),
    []
  );
  Re(
    async () => {
      try {
        return await Ko(
          t,
          "ui-ext/realms/names",
          { first: `${m}`, max: `${Nd + 1}`, search: u }
        );
      } catch (y) {
        if (y instanceof Go && y.response.status < 500)
          return [];
        throw y;
      }
    },
    o,
    [r, m, u]
  );
  const b = et(
    () => [
      ...m === 0 && !u ? c.reduce((y, x) => {
        const w = s.find((R) => R.name === x);
        return w && y.push(w), y;
      }, []) : [],
      ...s.filter((y) => !c.includes(y.name))
    ],
    [c, s, m, u]
  ), v = et(
    () => s.find((y) => y.name === e)?.displayName,
    [e, s]
  );
  return /* @__PURE__ */ a(
    qt,
    {
      id: "realm-select",
      className: "keycloak__realm_selector__dropdown",
      isOpen: r,
      toggle: (y) => /* @__PURE__ */ a(
        yt,
        {
          ref: y,
          "data-testid": "realmSelector",
          onClick: () => {
            i(!r);
          },
          isFullWidth: !0,
          children: Pa(l, v, e)
        }
      ),
      children: /* @__PURE__ */ C(Xt, { children: [
        (s.length > 5 || u || m !== 0) && /* @__PURE__ */ C(ee, { children: [
          /* @__PURE__ */ a(Bh, { children: /* @__PURE__ */ a(Xt, { children: /* @__PURE__ */ a(
            Gc,
            {
              value: u,
              onChange: (y, x) => g(x),
              onClear: () => p("")
            }
          ) }) }),
          /* @__PURE__ */ a(_t, { component: "li" })
        ] }),
        (s.length !== 0 ? [
          m !== 0 ? /* @__PURE__ */ C(Ke, { onClick: () => f(m - Nd), children: [
            /* @__PURE__ */ a(Hs, {}),
            " ",
            l("previous")
          ] }) : [],
          ...b.map((y) => /* @__PURE__ */ a(
            Ke,
            {
              onClick: () => {
                d(Fs({ realm: y.name })), i(!1), p("");
              },
              children: /* @__PURE__ */ a(
                YW,
                {
                  ...y,
                  showIsRecent: s.length > 5 && c.includes(y.name)
                }
              )
            },
            y.name
          )),
          s.length > Nd ? /* @__PURE__ */ C(Ke, { onClick: () => f(m + Nd), children: [
            /* @__PURE__ */ a(Nn, {}),
            l("next")
          ] }) : []
        ] : u ? [
          /* @__PURE__ */ a(Ke, { children: l("noResultsFound") }, "no-results")
        ] : [
          /* @__PURE__ */ C(Ke, { children: [
            /* @__PURE__ */ a(ei, { size: "sm" }),
            " ",
            l("loadingRealms")
          ] }, "loader")
        ]).concat([
          /* @__PURE__ */ a(ka, { children: n.canCreateRealm() && /* @__PURE__ */ C(ee, { children: [
            /* @__PURE__ */ a(_t, {}, "divider"),
            /* @__PURE__ */ a(Ke, { component: "div", children: /* @__PURE__ */ a(XW, { onClick: () => i(!1) }) }, "add")
          ] }) }, "add-realm")
        ])
      ] })
    }
  );
}, Aa = ({ title: e, path: t, id: n }) => {
  const { t: r } = H(), { hasAccess: i } = Mt(), { realm: s } = be(), o = encodeURIComponent(s), l = HT.find(
    (d) => d.path.replace(/\/:.+?(\?|(?:(?!\/).)*|$)/g, "") === (n || t)
  );
  return l && (l.handle.access instanceof Array ? i(...l.handle.access) : i(l.handle.access)) ? /* @__PURE__ */ a("li", { children: /* @__PURE__ */ a(
    HE,
    {
      id: "nav-item" + t.replace("/", "-"),
      to: `/${o}${t}`,
      className: ({ isActive: d }) => `pf-v5-c-nav__link${d ? " pf-m-current" : ""}`,
      children: r(e)
    }
  ) }) : null;
}, ZW = () => {
  const { t: e } = H(), { hasSomeAccess: t } = Mt(), { componentTypes: n } = Tt(), r = oa(), i = n?.["org.keycloak.services.ui.extend.UiPageProvider"], s = Je(), { realmRepresentation: o } = be(), l = (p) => {
    s(p.to), p.event.preventDefault();
  }, c = t(
    "view-realm",
    "query-groups",
    "query-users",
    "query-clients",
    "view-events"
  ), d = t(
    "view-realm",
    "query-clients",
    "view-identity-providers"
  ), u = !!Po(mb.path);
  return /* @__PURE__ */ a(jx, { className: "keycloak__page_nav__nav", children: /* @__PURE__ */ a(Kx, { children: /* @__PURE__ */ C(Do, { onSelect: (p, m) => l(m), children: [
    /* @__PURE__ */ a(Xu, { children: /* @__PURE__ */ a(Gh, { className: "keycloak__page_nav__nav_item__realm-selector", children: /* @__PURE__ */ a(JW, {}) }) }),
    /* @__PURE__ */ a(_t, {}),
    c && !u && /* @__PURE__ */ C(vf, { "aria-label": e("manage"), title: e("manage"), children: [
      r(zn.Organizations) && o?.organizationsEnabled && /* @__PURE__ */ a(Aa, { title: "organizations", path: "/organizations" }),
      /* @__PURE__ */ a(Aa, { title: "clients", path: "/clients" }),
      /* @__PURE__ */ a(Aa, { title: "clientScopes", path: "/client-scopes" }),
      /* @__PURE__ */ a(Aa, { title: "realmRoles", path: "/roles" }),
      /* @__PURE__ */ a(Aa, { title: "users", path: "/users" }),
      /* @__PURE__ */ a(Aa, { title: "groups", path: "/groups" }),
      /* @__PURE__ */ a(Aa, { title: "sessions", path: "/sessions" }),
      /* @__PURE__ */ a(Aa, { title: "events", path: "/events" })
    ] }),
    d && !u && /* @__PURE__ */ C(vf, { "aria-label": e("configure"), title: e("configure"), children: [
      /* @__PURE__ */ a(Aa, { title: "realmSettings", path: "/realm-settings" }),
      /* @__PURE__ */ a(Aa, { title: "authentication", path: "/authentication" }),
      /* @__PURE__ */ a(Aa, { title: "identityProviders", path: "/identity-providers" }),
      /* @__PURE__ */ a(Aa, { title: "userFederation", path: "/user-federation" }),
      r(zn.DeclarativeUI) && i?.map((p) => /* @__PURE__ */ a(
        Aa,
        {
          title: p.id,
          path: Mg({ providerId: p.id }).pathname,
          id: "/page-section"
        },
        p.id
      ))
    ] })
  ] }) }) });
}, QW = ({ error: e }) => {
  const { t } = H(), n = () => {
    window.location.href = window.location.origin + window.location.pathname;
  };
  return /* @__PURE__ */ a(Te, { children: /* @__PURE__ */ a(
    _n,
    {
      isInline: !0,
      variant: ue.danger,
      title: e.message,
      actionClose: /* @__PURE__ */ a(wh, { title: e.message, onClose: n }),
      actionLinks: /* @__PURE__ */ a(kh, { onClick: n, children: t("retry") })
    }
  ) });
};
function eX(e, t) {
  return t in e;
}
const tX = ({ children: e }) => {
  const t = zE(), { hasAccess: n } = Mt(), r = t.flatMap(({ handle: i }) => typeof i != "object" || i === null || !eX(i, "access") ? [] : Array.isArray(i.access) ? i.access : [i.access]);
  return n(...r) ? e : /* @__PURE__ */ a(NO, { permissionNeeded: r });
}, nX = ({ children: e }) => /* @__PURE__ */ a(g8, { children: /* @__PURE__ */ a(v8, { children: /* @__PURE__ */ a(y$, { children: /* @__PURE__ */ a(C$, { children: /* @__PURE__ */ a(zW, { children: /* @__PURE__ */ a(x$, { children: /* @__PURE__ */ a(CW, { children: e }) }) }) }) }) }) }), dee = () => {
  const { keycloak: e, environment: t } = Ha(), [n, r] = N();
  return He(() => {
    (async () => {
      const s = await c8(e, t);
      r(s);
    })().catch(console.error);
  }, []), n ? /* @__PURE__ */ a(Pw.Provider, { value: { keycloak: e, adminClient: n }, children: /* @__PURE__ */ a(nX, { children: /* @__PURE__ */ a(
    Yu,
    {
      header: /* @__PURE__ */ a(KW, {}),
      isManagedSidebar: !0,
      sidebar: /* @__PURE__ */ a(ZW, {}),
      breadcrumb: /* @__PURE__ */ a(IY, {}),
      mainContainerId: Tw,
      children: /* @__PURE__ */ a(b8, { fallback: QW, children: /* @__PURE__ */ a(VE, { fallback: /* @__PURE__ */ a(gt, {}), children: /* @__PURE__ */ a(tX, { children: /* @__PURE__ */ a(qE, {}) }) }) })
    }
  ) }) }) : /* @__PURE__ */ a(gt, {});
}, aX = [
  Bg,
  Jk,
  Zk,
  Fg,
  Wk
], rX = [
  gO,
  Vg,
  tO,
  cO
], iX = [
  UO,
  rb,
  VO,
  KO,
  HO,
  Wg,
  CO,
  MO,
  yO,
  qO,
  Ug,
  eO,
  YO,
  ob,
  RO,
  wO,
  Yg,
  kO,
  JO,
  IO,
  Zg,
  TO,
  PO,
  _O,
  Xg,
  SO,
  OO
], sX = [
  hp,
  _g,
  Uw
], oX = Be(() => Promise.resolve().then(() => ZY)), fb = {
  path: "/:realm/events",
  element: /* @__PURE__ */ a(oX, {}),
  breadcrumb: (e) => e("titleEvents"),
  handle: {
    access: "view-events"
  }
}, sT = {
  ...fb,
  path: "/:realm/events/:tab"
}, h0 = (e) => {
  const t = e.tab ? sT.path : fb.path;
  return {
    pathname: We(t, e)
  };
}, lX = [fb, sT], cX = Be(() => Promise.resolve().then(() => mJ)), hb = {
  path: "/:realm/groups/*",
  element: /* @__PURE__ */ a(cX, {}),
  handle: {
    access: "query-groups"
  }
}, oT = {
  ...hb,
  path: "/:realm/groups/:id"
}, zo = (e) => {
  const t = e.id ? oT.path : hb.path;
  return {
    pathname: Bc(t, e)
  };
}, dX = [hb, oT], uX = Be(() => Promise.resolve().then(() => _J)), lT = {
  path: "/:realm/identity-providers/:providerId/:alias/:tab",
  element: /* @__PURE__ */ a(uX, {}),
  breadcrumb: (e) => e("providerDetails"),
  handle: {
    access: "view-identity-providers"
  }
}, Ei = (e) => ({
  pathname: We(lT.path, e)
}), pX = Be(() => Promise.resolve().then(() => iE)), mX = {
  path: "/:realm/identity-providers/keycloak-oidc/add",
  element: /* @__PURE__ */ a(pX, {}),
  breadcrumb: (e) => e("addKeycloakOpenIdProvider"),
  handle: {
    access: "manage-identity-providers"
  }
}, fX = Be(() => Promise.resolve().then(() => iE)), hX = {
  path: "/:realm/identity-providers/oidc/add",
  element: /* @__PURE__ */ a(fX, {}),
  breadcrumb: (e) => e("addOpenIdProvider"),
  handle: {
    access: "manage-identity-providers"
  }
}, gX = Be(() => Promise.resolve().then(() => SJ)), bX = {
  path: "/:realm/identity-providers/saml/add",
  element: /* @__PURE__ */ a(gX, {}),
  breadcrumb: (e) => e("addSamlProvider"),
  handle: {
    access: "manage-identity-providers"
  }
}, vX = Be(
  () => Promise.resolve().then(() => DJ)
), cT = {
  path: "/:realm/identity-providers",
  element: /* @__PURE__ */ a(vX, {}),
  breadcrumb: (e) => e("identityProviders"),
  handle: {
    access: "view-identity-providers"
  }
}, Rp = (e) => ({
  pathname: We(cT.path, e)
}), yX = Be(() => Promise.resolve().then(() => QT)), dT = {
  path: "/:realm/identity-providers/:providerId/:alias/:tab/create",
  element: /* @__PURE__ */ a(yX, {}),
  breadcrumb: (e) => e("addIdPMapper"),
  handle: {
    access: "manage-identity-providers"
  }
}, g0 = (e) => ({
  pathname: We(dT.path, e)
}), CX = Be(() => Promise.resolve().then(() => QT)), uT = {
  path: "/:realm/identity-providers/:providerId/:alias/mappers/:id",
  element: /* @__PURE__ */ a(CX, {}),
  breadcrumb: (e) => e("editIdPMapper"),
  handle: {
    access: "manage-identity-providers"
  }
}, pT = (e) => ({
  pathname: We(uT.path, e)
}), xX = Be(() => Promise.resolve().then(() => hJ)), mT = {
  path: "/:realm/identity-providers/:providerId/add",
  element: /* @__PURE__ */ a(xX, {}),
  breadcrumb: (e) => e("addProvider"),
  handle: {
    access: "manage-identity-providers"
  }
}, b0 = (e) => ({
  pathname: We(mT.path, e)
}), SX = [
  dT,
  uT,
  cT,
  hX,
  bX,
  mX,
  mT,
  lT
], wX = Be(() => import("./NewOrganization-DvCZfOG3.js")), fT = {
  path: "/:realm/organizations/new",
  element: /* @__PURE__ */ a(wX, {}),
  breadcrumb: (e) => e("createOrganization"),
  handle: {
    access: "manage-users"
  }
}, v0 = (e) => ({
  pathname: We(fT.path, e)
}), kX = Be(() => import("./DetailOrganization-D3RRMDYH.js")), hT = {
  path: "/:realm/organizations/:id/:tab",
  element: /* @__PURE__ */ a(kX, {}),
  breadcrumb: (e) => e("organizationDetails"),
  handle: {
    access: "manage-users"
  }
}, gT = (e) => ({
  pathname: We(hT.path, e)
}), OX = Be(() => Promise.resolve().then(() => HJ)), bT = {
  path: "/:realm/organizations",
  element: /* @__PURE__ */ a(OX, {}),
  breadcrumb: (e) => e("organizationsList"),
  handle: {
    access: "query-groups"
  }
}, TX = (e) => {
  const t = bT.path;
  return {
    pathname: We(t, e)
  };
}, EX = [
  bT,
  fT,
  hT
], IX = Be(() => Promise.resolve().then(() => YJ)), vT = {
  path: "/:realm/roles/new",
  element: /* @__PURE__ */ a(IX, {}),
  breadcrumb: (e) => e("createRole"),
  handle: {
    access: "manage-realm"
  }
}, PX = (e) => ({
  pathname: We(vT.path, e)
}), _X = Be(() => Promise.resolve().then(() => lE)), gb = {
  path: "/:realm/roles/:id/:tab",
  element: /* @__PURE__ */ a(_X, {}),
  breadcrumb: (e) => e("roleDetails"),
  handle: {
    access: ["view-realm", "view-users"]
  }
}, Ap = (e) => ({
  pathname: We(gb.path, e)
}), RX = Be(() => Promise.resolve().then(() => ZJ)), yT = {
  path: "/:realm/roles",
  element: /* @__PURE__ */ a(RX, {}),
  breadcrumb: (e) => e("realmRolesList"),
  handle: {
    access: "view-realm"
  }
}, ah = (e) => ({
  pathname: We(yT.path, e)
}), AX = [
  yT,
  vT,
  gb
], LX = Be(
  () => Promise.resolve().then(() => iZ)
), CT = {
  path: "/:realm/realm-settings/keys/providers/:id/:providerType/settings",
  element: /* @__PURE__ */ a(LX, {}),
  breadcrumb: (e) => e("editProvider"),
  handle: {
    access: "view-realm"
  }
}, NX = (e) => ({
  pathname: We(CT.path, e)
}), DX = Be(() => Promise.resolve().then(() => Mp)), xT = {
  path: "/:realm/realm-settings/client-policies/:tab",
  element: /* @__PURE__ */ a(DX, {}),
  breadcrumb: (e) => e("clientPolicies"),
  handle: {
    access: "view-realm"
  }
}, Vr = (e) => ({
  pathname: We(xT.path, e)
}), MX = Be(() => Promise.resolve().then(() => gE)), ST = {
  path: "/:realm/realm-settings/client-policies/:tab/add-profile",
  element: /* @__PURE__ */ a(MX, {}),
  breadcrumb: (e) => e("newClientProfile"),
  handle: {
    access: "manage-realm"
  }
}, FX = (e) => ({
  pathname: We(ST.path, e)
}), $X = Be(() => Promise.resolve().then(() => gE)), wT = {
  path: "/:realm/realm-settings/client-policies/:profileName/edit-profile",
  element: /* @__PURE__ */ a($X, {}),
  breadcrumb: (e) => e("clientProfile"),
  handle: {
    access: ["view-realm", "view-users"]
  }
}, $u = (e) => ({
  pathname: We(wT.path, e)
}), jX = Be(() => import("./ExecutorForm-CJU3ft_m.js")), kT = {
  path: "/:realm/realm-settings/client-policies/:profileName/add-executor",
  element: /* @__PURE__ */ a(jX, {}),
  breadcrumb: (e) => e("addExecutor"),
  handle: {
    access: "manage-realm"
  }
}, BX = (e) => ({
  pathname: We(kT.path, e)
}), UX = Be(() => import("./ExecutorForm-CJU3ft_m.js")), OT = {
  path: "/:realm/realm-settings/client-policies/:profileName/edit-profile/:executorName",
  element: /* @__PURE__ */ a(UX, {}),
  breadcrumb: (e) => e("executorDetails"),
  handle: {
    access: ["manage-realm"]
  }
}, VX = (e) => ({
  pathname: We(OT.path, e)
}), KX = Be(() => Promise.resolve().then(() => vE)), TT = {
  path: "/:realm/realm-settings/client-policies/policies/add-client-policy",
  element: /* @__PURE__ */ a(KX, {}),
  breadcrumb: (e) => e("createPolicy"),
  handle: {
    access: "manage-clients"
  }
}, y0 = (e) => ({
  pathname: We(TT.path, e)
}), HX = Be(() => Promise.resolve().then(() => vE)), ET = {
  path: "/:realm/realm-settings/client-policies/:policyName/edit-policy",
  element: /* @__PURE__ */ a(HX, {}),
  breadcrumb: (e) => e("policyDetails"),
  handle: {
    access: "manage-realm"
  }
}, Xi = (e) => ({
  pathname: We(ET.path, e)
}), zX = Be(
  () => Promise.resolve().then(() => yE)
), IT = {
  path: "/:realm/realm-settings/client-policies/:policyName/edit-policy/create-condition",
  element: /* @__PURE__ */ a(zX, {}),
  breadcrumb: (e) => e("addCondition"),
  handle: {
    access: "manage-clients"
  }
}, qX = (e) => ({
  pathname: We(IT.path, e)
}), GX = Be(
  () => Promise.resolve().then(() => yE)
), PT = {
  path: "/:realm/realm-settings/client-policies/:policyName/edit-policy/:conditionName/edit-condition",
  element: /* @__PURE__ */ a(GX, {}),
  breadcrumb: (e) => e("editCondition"),
  handle: {
    access: "manage-clients"
  }
}, WX = (e) => ({
  pathname: We(PT.path, e)
}), XX = Be(() => Promise.resolve().then(() => Mp)), _T = {
  path: "/:realm/realm-settings/user-profile/:tab",
  element: /* @__PURE__ */ a(XX, {}),
  breadcrumb: (e) => e("userProfile"),
  handle: {
    access: "view-realm"
  }
}, qo = (e) => ({
  pathname: We(_T.path, e)
}), YX = Be(() => Promise.resolve().then(() => mE)), RT = {
  path: "/:realm/realm-settings/user-profile/attributes/add-attribute",
  element: /* @__PURE__ */ a(YX, {}),
  breadcrumb: (e) => e("createAttribute"),
  handle: {
    access: "manage-realm"
  }
}, JX = (e) => ({
  pathname: We(RT.path, e)
}), ZX = Be(() => Promise.resolve().then(() => Mp)), AT = {
  path: "/:realm/realm-settings/keys/:tab",
  element: /* @__PURE__ */ a(ZX, {}),
  breadcrumb: (e) => e("keys"),
  handle: {
    access: "view-realm"
  }
}, ju = (e) => ({
  pathname: We(AT.path, e)
}), QX = Be(() => Promise.resolve().then(() => mE)), LT = {
  path: "/:realm/realm-settings/user-profile/attributes/:attributeName/edit-attribute",
  element: /* @__PURE__ */ a(QX, {}),
  breadcrumb: (e) => e("editAttribute"),
  handle: {
    access: "manage-realm"
  }
}, C0 = (e) => ({
  pathname: We(LT.path, e)
}), eY = Be(
  () => Promise.resolve().then(() => hE)
), NT = {
  path: "/:realm/realm-settings/user-profile/attributesGroup/new",
  element: /* @__PURE__ */ a(eY, {}),
  breadcrumb: (e) => e("createGroupText"),
  handle: {
    access: "view-realm"
  }
}, x0 = (e) => ({
  pathname: We(NT.path, e)
}), tY = Be(
  () => Promise.resolve().then(() => hE)
), DT = {
  path: "/:realm/realm-settings/user-profile/attributesGroup/edit/:name",
  element: /* @__PURE__ */ a(tY, {}),
  breadcrumb: (e) => e("editGroupText"),
  handle: {
    access: "view-realm"
  }
}, nY = (e) => ({
  pathname: We(DT.path, e)
}), aY = [
  db,
  GO,
  AT,
  CT,
  xT,
  ST,
  kT,
  wT,
  OT,
  TT,
  ET,
  IT,
  PT,
  _T,
  RT,
  LT,
  NT,
  DT
], rY = [mb], iY = Be(() => Promise.resolve().then(() => uQ)), sY = {
  path: "/:realm/sessions",
  element: /* @__PURE__ */ a(iY, {}),
  breadcrumb: (e) => e("titleSessions"),
  handle: {
    access: ["view-realm", "view-clients", "view-users"]
  }
}, oY = [sY], lY = Be(
  () => Promise.resolve().then(() => TE)
), MT = {
  path: "/:realm/user-federation/:providerId/:id",
  element: /* @__PURE__ */ a(lY, {}),
  breadcrumb: (e) => e("providerDetails"),
  handle: {
    access: "view-realm"
  }
}, FT = (e) => ({
  pathname: We(MT.path, e)
}), cY = Be(
  () => Promise.resolve().then(() => TE)
), $T = {
  path: "/:realm/user-federation/:providerId/new",
  element: /* @__PURE__ */ a(cY, {}),
  breadcrumb: (e) => e("addCustomProvider"),
  handle: {
    access: "view-realm"
  }
}, S0 = (e) => ({
  pathname: We($T.path, e)
}), dY = Be(
  () => Promise.resolve().then(() => FE)
), uY = {
  path: "/:realm/user-federation/kerberos/new",
  element: /* @__PURE__ */ a(dY, {}),
  breadcrumb: (e) => e("settings"),
  handle: {
    access: "view-realm"
  }
}, pY = Be(
  () => Promise.resolve().then(() => KQ)
), mY = {
  path: "/:realm/user-federation/ldap/new",
  element: /* @__PURE__ */ a(pY, {}),
  breadcrumb: (e) => e("addProvider", { provider: "LDAP", count: 1 }),
  handle: {
    access: "view-realm"
  }
}, fY = Be(() => Promise.resolve().then(() => kb)), jT = {
  path: "/:realm/user-federation",
  element: /* @__PURE__ */ a(fY, {}),
  breadcrumb: (e) => e("userFederation"),
  handle: {
    access: "view-realm"
  }
}, ls = (e) => ({
  pathname: We(jT.path, e)
}), hY = Be(
  () => Promise.resolve().then(() => FE)
), BT = {
  path: "/:realm/user-federation/kerberos/:id",
  element: /* @__PURE__ */ a(hY, {}),
  breadcrumb: (e) => e("settings"),
  handle: {
    access: "view-realm"
  }
}, gY = (e) => ({
  pathname: We(BT.path, e)
}), bY = Be(
  () => Promise.resolve().then(() => WQ)
), bb = {
  path: "/:realm/user-federation/ldap/:id",
  element: /* @__PURE__ */ a(bY, {}),
  breadcrumb: (e) => e("settings"),
  handle: {
    access: "view-realm"
  }
}, UT = {
  ...bb,
  path: "/:realm/user-federation/ldap/:id/:tab"
}, Fc = (e) => {
  const t = e.tab ? UT.path : bb.path;
  return {
    pathname: We(t, e)
  };
}, vY = Be(
  () => Promise.resolve().then(() => FQ)
), VT = {
  path: "/:realm/user-federation/ldap/:id/mappers/:mapperId",
  element: /* @__PURE__ */ a(vY, {}),
  breadcrumb: (e) => e("mappingDetails"),
  handle: {
    access: "view-realm"
  }
}, w0 = (e) => ({
  pathname: We(VT.path, e)
}), yY = Be(() => Promise.resolve().then(() => kb)), CY = {
  path: "/:realm/user-federation/kerberos",
  element: /* @__PURE__ */ a(yY, {}),
  handle: {
    access: "view-realm"
  }
}, xY = Be(() => Promise.resolve().then(() => kb)), SY = {
  path: "/:realm/user-federation/ldap",
  element: /* @__PURE__ */ a(xY, {}),
  handle: {
    access: "view-realm"
  }
}, wY = [
  jT,
  CY,
  uY,
  BT,
  SY,
  mY,
  bb,
  UT,
  VT,
  $T,
  MT
], kY = Be(() => Promise.resolve().then(() => xQ)), KT = {
  path: "/:realm/users/add-user",
  element: /* @__PURE__ */ a(kY, {}),
  breadcrumb: (e) => e("createUser"),
  handle: {
    access: ["query-users", "query-groups"]
  }
}, OY = (e) => ({
  pathname: We(KT.path, e)
}), TY = [
  KT,
  ub,
  XO,
  cb
], EY = {
  path: "*",
  element: /* @__PURE__ */ a(MW, {}),
  handle: {
    access: "anyone"
  }
}, HT = [
  ...aX,
  ...iX,
  ...rX,
  ...lX,
  ...SX,
  ...EX,
  ...AX,
  ...rY,
  ...aY,
  ...oY,
  ...wY,
  ...TY,
  ...dX,
  ...sX,
  ...zH,
  EY
], IY = () => {
  const { t: e } = H(), { realm: t } = be(), n = (s) => Ps(s.breadcrumb) && s.breadcrumb.props.children, r = HT.map((s) => ({
    ...s,
    breadcrumb: s.breadcrumb?.(e)
  })), i = pp(
    DW(r, {
      disableDefaults: !0,
      excludePaths: ["/", `/${t}`]
    }),
    n
  );
  return i.length > 1 ? /* @__PURE__ */ a(Hc, { children: i.map(({ match: s, breadcrumb: o }, l) => /* @__PURE__ */ a(Ao, { isActive: i.length - 1 === l, children: i.length - 1 !== l ? /* @__PURE__ */ a(Ae, { to: s.pathname, children: o }) : o }, l)) }) : null;
}, ud = ({
  buttonText: e,
  children: t,
  setSearchDropdownOpen: n,
  searchDropdownOpen: r,
  marginRight: i,
  width: s
}) => {
  const o = Ct(null);
  return He(() => {
    const l = (c) => {
      o.current && !o.current.contains(c.target) && n(!1);
    };
    return document.addEventListener("mousedown", l), () => document.removeEventListener("mousedown", l);
  }, [n]), He(() => {
    const l = () => {
      document.visibilityState === "hidden" && n(!1);
    };
    return document.addEventListener("visibilitychange", l), () => document.removeEventListener("visibilitychange", l);
  }, [n]), /* @__PURE__ */ C("span", { ref: o, children: [
    /* @__PURE__ */ C(
      "button",
      {
        className: "kc-dropdown-panel",
        onClick: () => n(!r),
        "aria-label": e,
        style: { width: s, marginRight: i },
        "data-testid": "dropdown-panel-btn",
        children: [
          e,
          /* @__PURE__ */ a(wi, { className: "kc-dropdown-panel-icon", children: /* @__PURE__ */ a(Lo, {}) })
        ]
      }
    ),
    r && /* @__PURE__ */ a(
      "div",
      {
        className: Eg?.matches ? "kc-dropdown-panel-content dark-mode" : "kc-dropdown-panel-content light-mode",
        children: t
      }
    )
  ] });
}, uee = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: ud
}, Symbol.toStringTag, { value: "Module" })), vb = ({
  form: e,
  reset: t,
  save: n,
  fineGrainedAccess: r,
  name: i = "attributes",
  isDisabled: s = !1
}) => {
  const o = !n && !t, { handleSubmit: l } = e;
  return /* @__PURE__ */ C(
    Fe,
    {
      role: "manage-realm",
      onSubmit: n ? l(n) : void 0,
      fineGrainedAccess: r,
      children: [
        /* @__PURE__ */ a(Ve, { ...e, children: /* @__PURE__ */ a(ld, { name: i, isDisabled: s }) }),
        !o && /* @__PURE__ */ a(_r, { name: "attributes", reset: t, isActive: !0, isSubmit: !0 })
      ]
    }
  );
}, zT = ({
  onClick: e,
  children: t,
  ...n
}) => {
  const r = Vu();
  return /* @__PURE__ */ a(xa, { id: r, isClickable: !0, onKeyDown: (s) => {
    (s.key === " " || s.key === "Enter" || s.key === "Spacebar") && e();
  }, onClick: e, ...n, children: /* @__PURE__ */ a(
    qc,
    {
      selectableActions: {
        onClickAction: e,
        selectableActionId: `input-${r}`,
        selectableActionAriaLabelledby: r
      },
      children: t
    }
  ) });
}, PY = ({
  title: e,
  dropdownItems: t,
  labelText: n,
  labelColor: r,
  footerText: i,
  to: s
}) => {
  const [o, l] = N(!1), c = () => {
    l(!o);
  };
  return /* @__PURE__ */ C(xa, { isSelectable: !0, isClickable: !0, children: [
    /* @__PURE__ */ a(
      qc,
      {
        actions: {
          actions: t ? /* @__PURE__ */ a(
            qt,
            {
              popperProps: {
                position: "right"
              },
              toggle: (d) => /* @__PURE__ */ a(
                yt,
                {
                  ref: d,
                  onClick: c,
                  variant: "plain",
                  "data-testid": `${e}-dropdown`,
                  children: /* @__PURE__ */ a(dr, {})
                }
              ),
              isOpen: o,
              children: /* @__PURE__ */ a(Xt, { children: t })
            }
          ) : void 0,
          hasNoOffset: !1,
          className: void 0
        },
        children: /* @__PURE__ */ a(br, { "data-testid": "keycloak-card-title", children: /* @__PURE__ */ a(Ae, { to: s, children: e }) })
      }
    ),
    /* @__PURE__ */ a(da, {}),
    /* @__PURE__ */ a(B1, { children: /* @__PURE__ */ C(ra, { children: [
      /* @__PURE__ */ a(Nt, { className: "keycloak--keycloak-card__footer", children: i && i }),
      /* @__PURE__ */ a(Nt, { children: n && /* @__PURE__ */ a(pn, { color: r || "gray", children: n }) })
    ] }) })
  ] });
}, qT = ({
  searchType: e,
  onSelect: t
}) => {
  const { t: n } = H(), [r, i] = N(!1), s = (l) => /* @__PURE__ */ a(
    Ke,
    {
      onClick: () => {
        t(l), i(!1);
      },
      children: n(`searchType.${l}`)
    },
    l
  ), o = [s("default"), s("attribute")];
  return /* @__PURE__ */ a(
    qt,
    {
      className: "keycloak__users__searchtype",
      toggle: (l) => /* @__PURE__ */ a(
        yt,
        {
          ref: l,
          id: "toggle-id",
          onClick: () => i(!r),
          icon: /* @__PURE__ */ a(ss, {}),
          children: n(`searchType.${e}`)
        }
      ),
      isOpen: r,
      children: /* @__PURE__ */ a(Xt, { children: o })
    }
  );
}, pee = ({ searchType: e, onSelect: t }) => {
  const { t: n } = H(), [r, i] = N(!1);
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(qT, { searchType: e, onSelect: t }) }),
    /* @__PURE__ */ a(je, { children: /* @__PURE__ */ C(
      ft,
      {
        className: "keycloak__users__searchtype",
        onToggle: (s) => i(s),
        isOpen: r,
        selections: [n("default"), n("attribute")],
        onSelect: () => i(!1),
        children: [
          /* @__PURE__ */ a(_e, { value: "default", children: n("default") }),
          /* @__PURE__ */ a(_e, { value: "attribute", children: n("attribute") })
        ]
      }
    ) })
  ] });
};
function _Y({
  activeFilters: e,
  setActiveFilters: t,
  profile: n,
  createAttributeSearchChips: r,
  searchUserWithAttributes: i
}) {
  const { t: s } = H(), { addAlert: o } = Se(), [l, c] = N(!1), d = {
    name: "",
    displayName: "",
    value: ""
  }, {
    getValues: u,
    register: p,
    reset: m,
    formState: { errors: f },
    setValue: g,
    setError: b,
    clearErrors: v
  } = Ue({
    mode: "onChange",
    defaultValues: d
  }), y = () => e.some((E) => E.name === u().name), x = () => {
    let E = !1;
    return u().name.length ? e.some((T) => T.name === u().name) ? b("name", {
      type: "conflict",
      message: s("searchUserByAttributeKeyAlreadyInUseError")
    }) : E = !0 : b("name", {
      type: "empty",
      message: s("searchUserByAttributeMissingKeyError")
    }), E;
  }, w = () => {
    let E = !1;
    return u().value.length ? E = !0 : b("value", {
      type: "empty",
      message: s("searchUserByAttributeMissingValueError")
    }), E;
  }, R = () => x() && w(), S = () => {
    R() ? (t([
      ...e,
      {
        ...u()
      }
    ]), m()) : (f.name?.message && o(f.name.message, ue.danger), f.value?.message && o(f.value.message, ue.danger));
  }, _ = () => {
    const E = [...e].filter(
      (T) => T.name !== T.name
    );
    t(E);
  }, O = () => n ? /* @__PURE__ */ a(
    ft,
    {
      "data-testid": "search-attribute-name",
      variant: pt.typeahead,
      onToggle: (E) => c(E),
      selections: u().displayName,
      onSelect: (E) => {
        g("displayName", E.toString()), y() ? b("name", { type: "conflict" }) : v("name");
      },
      isOpen: l,
      placeholderText: s("selectAttribute"),
      validated: f.name && "error",
      maxHeight: 300,
      ...p("displayName", {
        required: !0,
        validate: x
      }),
      children: n.attributes?.map((E) => /* @__PURE__ */ a(
        _e,
        {
          value: Pa(s, E.displayName, E.name),
          onClick: (T) => {
            T.stopPropagation(), c(!1), g("name", E.name);
          },
          children: Pa(s, E.displayName, E.name)
        },
        E.name
      ))
    }
  ) : /* @__PURE__ */ a(
    mt,
    {
      id: "name",
      placeholder: s("keyPlaceholder"),
      validated: f.name && "error",
      onKeyDown: (E) => E.key === "Enter" && S(),
      ...p("name", {
        required: !0,
        validate: x
      })
    }
  );
  return /* @__PURE__ */ C(GE, { className: "user-attribute-search-form", children: [
    /* @__PURE__ */ a(Pt, { className: "user-attribute-search-form-headline", children: /* @__PURE__ */ a(tt, { component: Wt.h2, children: s("selectAttributes") }) }),
    /* @__PURE__ */ a(
      _n,
      {
        isInline: !0,
        className: "user-attribute-search-form-alert",
        variant: "info",
        title: s("searchUserByAttributeDescription"),
        component: "h3"
      }
    ),
    /* @__PURE__ */ C(Pt, { className: "user-attribute-search-form-key-value", children: [
      /* @__PURE__ */ a("div", { className: "user-attribute-search-form-left", children: /* @__PURE__ */ a(tt, { component: Wt.h3, children: s("key") }) }),
      /* @__PURE__ */ a("div", { className: "user-attribute-search-form-right", children: /* @__PURE__ */ a(tt, { component: Wt.h3, children: s("value") }) })
    ] }),
    /* @__PURE__ */ a("div", { className: "user-attribute-search-form-left", children: O() }),
    /* @__PURE__ */ a("div", { className: "user-attribute-search-form-right", children: /* @__PURE__ */ C(Qt, { children: [
      /* @__PURE__ */ a(dt, { children: /* @__PURE__ */ a(
        mt,
        {
          id: "value",
          placeholder: s("valuePlaceholder"),
          validated: f.value && "error",
          onKeyDown: (E) => {
            E.key === "Enter" && (E.preventDefault(), S());
          },
          ...p("value", {
            required: !0,
            validate: w
          })
        }
      ) }),
      /* @__PURE__ */ a(dt, { children: /* @__PURE__ */ a(
        z,
        {
          variant: "control",
          icon: /* @__PURE__ */ a(As, {}),
          onClick: S,
          "aria-label": s("addToFilter")
        }
      ) })
    ] }) }),
    r(),
    /* @__PURE__ */ C(st, { className: "user-attribute-search-form-action-group", children: [
      /* @__PURE__ */ a(
        z,
        {
          "data-testid": "search-user-attribute-btn",
          variant: "primary",
          type: "submit",
          isDisabled: !e.length,
          onClick: i,
          children: s("search")
        }
      ),
      /* @__PURE__ */ a(
        z,
        {
          variant: xe.link,
          onClick: () => {
            m(), _();
          },
          children: s("reset")
        }
      )
    ] })
  ] });
}
function RY({
  searchDropdownOpen: e,
  setSearchDropdownOpen: t,
  realm: n,
  hasSelectedRows: r,
  toggleDeleteDialog: i,
  toggleUnlockUsersDialog: s,
  goToCreate: o,
  searchType: l,
  setSearchType: c,
  searchUser: d,
  setSearchUser: u,
  activeFilters: p,
  setActiveFilters: m,
  refresh: f,
  profile: g,
  clearAllFilters: b,
  createAttributeSearchChips: v,
  searchUserWithAttributes: y
}) {
  const { t: x } = H(), [w, R] = N(!1), { hasAccess: S } = Mt(), _ = S("query-users"), O = () => /* @__PURE__ */ a(je, { children: /* @__PURE__ */ C(Qt, { children: [
    /* @__PURE__ */ a(dt, { children: /* @__PURE__ */ a(
      qT,
      {
        searchType: l,
        onSelect: (P) => {
          b(), c(P);
        }
      }
    ) }),
    l === "default" && E(),
    l === "attribute" && T()
  ] }) }), E = () => /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(
    Gc,
    {
      "data-testid": "table-search-input",
      placeholder: x("searchForUser"),
      "aria-label": x("search"),
      value: d,
      onSearch: (P, D, F) => {
        u(F.haswords), f();
      },
      onKeyDown: (P) => {
        if (P.key === "Enter") {
          const D = P.target;
          u(D.value), f();
        }
      },
      onClear: () => {
        u(""), f();
      }
    }
  ) }), T = () => /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(
      ud,
      {
        buttonText: x("selectAttributes"),
        setSearchDropdownOpen: t,
        searchDropdownOpen: e,
        width: "15vw",
        children: /* @__PURE__ */ a(
          _Y,
          {
            activeFilters: p,
            setActiveFilters: m,
            profile: g,
            createAttributeSearchChips: v,
            searchUserWithAttributes: () => {
              y(), t(!1);
            }
          }
        )
      }
    ),
    /* @__PURE__ */ a(
      z,
      {
        icon: /* @__PURE__ */ a(mx, {}),
        variant: "control",
        onClick: () => {
          y(), t(!1);
        },
        "aria-label": x("searchAttributes")
      }
    )
  ] }), I = n.bruteForceProtected ? /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(
    qt,
    {
      toggle: (P) => /* @__PURE__ */ a(
        yt,
        {
          ref: P,
          isExpanded: w,
          variant: "plain",
          onClick: () => R(!w),
          children: /* @__PURE__ */ a(dr, {})
        }
      ),
      isOpen: w,
      shouldFocusToggleOnSelect: !0,
      children: /* @__PURE__ */ C(Xt, { children: [
        /* @__PURE__ */ a(
          Ke,
          {
            component: "button",
            isDisabled: r,
            onClick: () => {
              i(), R(!1);
            },
            children: x("deleteUser")
          },
          "deleteUser"
        ),
        /* @__PURE__ */ a(
          Ke,
          {
            component: "button",
            onClick: () => {
              s(), R(!1);
            },
            children: x("unlockAllUsers")
          },
          "unlock"
        )
      ] })
    }
  ) }) : /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(
    z,
    {
      variant: xe.link,
      onClick: i,
      "data-testid": "delete-user-btn",
      isDisabled: r,
      children: x("deleteUser")
    }
  ) }), k = /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(z, { "data-testid": "add-user", onClick: o, children: x("addUser") }) }),
    I
  ] });
  return /* @__PURE__ */ C(ee, { children: [
    O(),
    _ ? k : null
  ] });
}
const AY = (e) => {
  const { realm: t } = be();
  return /* @__PURE__ */ C(Ae, { to: ai({ realm: t, id: e.id, tab: "settings" }), children: [
    e.username,
    " ",
    /* @__PURE__ */ a(LY, { user: e })
  ] });
}, LY = ({ user: e }) => {
  const { t } = H();
  return /* @__PURE__ */ C(ee, { children: [
    !e.enabled && /* @__PURE__ */ a(pn, { color: "red", icon: /* @__PURE__ */ a(_i, {}), children: t("disabled") }),
    e.bruteForceStatus?.disabled && /* @__PURE__ */ a(pn, { color: "orange", icon: /* @__PURE__ */ a(pS, {}), children: t("temporaryLocked") })
  ] });
}, NY = (e) => {
  const { t } = H();
  return /* @__PURE__ */ C(ee, { children: [
    !e.emailVerified && /* @__PURE__ */ a(Yt, { content: t("notVerified"), children: /* @__PURE__ */ a(ds, { className: "keycloak__user-section__email-verified" }) }),
    " ",
    on()(e.email)
  ] });
};
function DY() {
  const { adminClient: e } = pe(), { t } = H(), { addAlert: n, addError: r } = Se(), { realm: i, realmRepresentation: s } = be(), o = Je(), [l, c] = N(), [d, u] = N(""), [p, m] = N([]), [f, g] = N("default"), [b, v] = N(!1), [y, x] = N([]), [w, R] = N({}), [S, _] = N(""), [O, E] = N(0), T = () => E(O + 1);
  Re(
    async () => {
      const B = {
        type: "org.keycloak.storage.UserStorageProvider"
      };
      try {
        return await Promise.all([
          e.components.find(B),
          e.users.getProfile()
        ]);
      } catch {
        return [[], {}];
      }
    },
    ([B, j]) => {
      c(
        B.filter((W) => W.config?.enabled?.[0] === "true")
      ), R(j);
    },
    []
  );
  const I = async (B, j, W) => {
    const Q = {
      first: B,
      max: j,
      q: S
    }, te = W || d || "";
    if (te && (Q.search = te), !M && !(Q.search || Q.q))
      return [];
    try {
      return await TK(e, {
        briefRepresentation: !0,
        ...Q
      });
    } catch (ie) {
      return l?.length ? r("noUsersFoundErrorStorage", ie) : r("noUsersFoundError", ie), [];
    }
  }, [k, P] = ze({
    titleKey: "unlockAllUsers",
    messageKey: "unlockUsersConfirm",
    continueButtonLabel: "unlock",
    onConfirm: async () => {
      try {
        await e.attackDetection.delAll(), T(), n(t("unlockUsersSuccess"), ue.success);
      } catch (B) {
        r("unlockUsersError", B);
      }
    }
  }), [D, F] = ze({
    titleKey: "deleteConfirmUsers",
    messageKey: t("deleteConfirmDialog", { count: p.length }),
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        for (const B of p)
          await e.users.del({ id: B.id });
        m([]), V(), n(t("userDeletedSuccess"), ue.success);
      } catch (B) {
        r("userDeletedError", B);
      }
    }
  }), A = () => o(OY({ realm: i }));
  if (!l || !s)
    return /* @__PURE__ */ a(gt, {});
  const M = !(l.length > 0), V = () => {
    const B = [...y].filter(
      (j) => j.name !== j.name
    );
    x(B), u(""), _(""), T();
  }, U = (B) => B.map((j) => `${j.name}:${j.value}`).join(" "), G = () => {
    const B = U(y);
    _(B), T();
  }, q = () => /* @__PURE__ */ a(Nt, { children: y.length > 0 && /* @__PURE__ */ a(ee, { children: Object.values(y).map((B) => /* @__PURE__ */ a(
    vn,
    {
      className: "pf-v5-u-mt-md pf-v5-u-mr-md",
      categoryName: B.displayName.length ? B.displayName : B.name,
      isClosable: !0,
      onClick: (j) => {
        j.stopPropagation();
        const W = [...y].filter(
          (te) => te.name !== B.name
        ), Q = U(W);
        x(W), _(Q), T();
      },
      children: /* @__PURE__ */ a(Ut, { isReadOnly: !0, children: B.value }, B.name)
    },
    B.name
  )) }) }), L = () => /* @__PURE__ */ a(
    RY,
    {
      searchDropdownOpen: b,
      setSearchDropdownOpen: v,
      realm: s,
      hasSelectedRows: p.length === 0,
      toggleDeleteDialog: D,
      toggleUnlockUsersDialog: k,
      goToCreate: A,
      searchType: f,
      setSearchType: g,
      searchUser: d,
      setSearchUser: u,
      activeFilters: y,
      setActiveFilters: x,
      refresh: T,
      profile: w,
      clearAllFilters: V,
      createAttributeSearchChips: q,
      searchUserWithAttributes: G
    }
  ), K = () => {
    if (y.length)
      return /* @__PURE__ */ C("div", { className: "user-attribute-search-form-subtoolbar", children: [
        /* @__PURE__ */ a(je, { children: q() }),
        /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(
          z,
          {
            variant: "link",
            onClick: () => {
              V();
            },
            children: t("clearAllFilters")
          }
        ) })
      ] });
  };
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(F, {}),
    /* @__PURE__ */ a(P, {}),
    /* @__PURE__ */ a(
      St,
      {
        isSearching: d !== "" || y.length !== 0,
        loader: I,
        isPaginated: !0,
        ariaLabelKey: "titleUsers",
        canSelectAll: !0,
        onSelect: (B) => m([...B]),
        emptyState: M ? /* @__PURE__ */ a(
          ct,
          {
            message: t("noUsersFound"),
            instructions: t("emptyInstructions"),
            primaryActionText: t("createNewUser"),
            onPrimaryAction: A
          }
        ) : /* @__PURE__ */ C(ee, { children: [
          /* @__PURE__ */ a(Sa, { children: /* @__PURE__ */ a(rr, { children: L() }) }),
          /* @__PURE__ */ a(Sr, { "data-testid": "empty-state", variant: "lg", children: /* @__PURE__ */ a(Pt, { className: "kc-search-users-text", children: /* @__PURE__ */ a(tt, { children: t("searchForUserDescription") }) }) })
        ] }),
        toolbarItem: L(),
        subToolbar: K(),
        actionResolver: (B) => {
          const j = B.data;
          return j.access?.manage ? [
            {
              title: t("delete"),
              onClick: () => {
                m([j]), D();
              }
            }
          ] : [];
        },
        columns: [
          {
            name: "username",
            displayKey: "username",
            cellRenderer: AY
          },
          {
            name: "email",
            displayKey: "email",
            cellRenderer: NY
          },
          {
            name: "lastName",
            displayKey: "lastName",
            cellFormatters: [on()]
          },
          {
            name: "firstName",
            displayKey: "firstName",
            cellFormatters: [on()]
          }
        ]
      },
      O
    )
  ] });
}
const bs = ({
  title: e,
  description: t,
  showDescription: n = !1
}) => /* @__PURE__ */ C(ee, { children: [
  /* @__PURE__ */ a(
    nr,
    {
      size: "xl",
      headingLevel: "h2",
      className: n ? "kc-wizard-section-header__title--has-description" : "kc-wizard-section-header__title",
      children: e
    }
  ),
  n && /* @__PURE__ */ a(Pt, { className: "kc-wizard-section-header__description", children: /* @__PURE__ */ a(tt, { children: t }) })
] });
var rc;
(function(e) {
  e.Default = "DEFAULT", e.DisabledByDefault = "DISABLED_BY_DEFAULT", e.Preview = "PREVIEW", e.PreviewDisabledByDefault = "PREVIEW_DISABLED_BY_DEFAULT", e.Experimental = "EXPERIMENTAL", e.Deprecated = "DEPRECATED";
})(rc || (rc = {}));
const MY = () => {
  const { t: e } = H(), t = Tt(), [n, r] = N(""), [i, s] = N([]), o = et(
    () => Object.entries(t.providers || []).filter(
      ([c]) => c.toLowerCase().includes(n.toLowerCase())
    ),
    [n]
  ), l = (c) => {
    i.includes(c) ? s(i.filter((d) => d !== c)) : s([...i, c]);
  };
  return /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ a(
    Bw,
    {
      inputGroupName: "search",
      inputGroupPlaceholder: e("search"),
      inputGroupOnEnter: r,
      children: /* @__PURE__ */ C(Cn, { variant: "compact", children: [
        /* @__PURE__ */ a(wn, { children: /* @__PURE__ */ C(rt, { children: [
          /* @__PURE__ */ a(De, { width: 20, children: e("spi") }),
          /* @__PURE__ */ a(De, { children: e("providers") })
        ] }) }),
        /* @__PURE__ */ a(yn, { children: o.map(([c, { providers: d }]) => /* @__PURE__ */ C(rt, { children: [
          /* @__PURE__ */ a(ke, { children: c }),
          /* @__PURE__ */ a(ke, { children: /* @__PURE__ */ a("ul", { children: Object.entries(d).map(
            ([u, { operationalInfo: p }]) => /* @__PURE__ */ C("li", { children: [
              u,
              p ? /* @__PURE__ */ a(
                us,
                {
                  isExpanded: i.includes(u),
                  onToggle: () => l(u),
                  toggleText: i.includes(u) ? e("showLess") : e("showMore"),
                  children: /* @__PURE__ */ a(Cn, { borders: !1, children: /* @__PURE__ */ a(yn, { children: Object.entries(p).map(
                    ([m, f]) => /* @__PURE__ */ C(rt, { children: [
                      /* @__PURE__ */ a(ke, { children: m }),
                      /* @__PURE__ */ a(ke, { children: f })
                    ] }, m)
                  ) }) })
                },
                u
              ) : null
            ] }, u)
          ) }) })
        ] }, c)) })
      ] })
    }
  ) });
}, FY = () => {
  const { environment: e } = Ha(), { t } = H(), { realm: n, realmRepresentation: r } = be(), i = e.logo ? e.logo : "/icon.svg", s = Pa(t, r?.displayName, n);
  return /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ C(Sr, { variant: "lg", children: [
    /* @__PURE__ */ a(
      A1,
      {
        src: e.resourceUrl + i,
        alt: "Keycloak icon",
        className: "keycloak__dashboard_icon"
      }
    ),
    /* @__PURE__ */ a(ki, { titleText: /* @__PURE__ */ a(ee, { children: t("welcome") }), headingLevel: "h2" }),
    /* @__PURE__ */ a(ki, { titleText: s, headingLevel: "h1" }),
    /* @__PURE__ */ a(Ri, { children: t("introduction") })
  ] }) });
}, k0 = ({ feature: e }) => {
  const { t } = H();
  return /* @__PURE__ */ C(zh, { className: "pf-v5-u-mb-sm", children: [
    e.name,
    " ",
    e.type === rc.Experimental && /* @__PURE__ */ a(pn, { color: "orange", children: t("experimental") }),
    e.type === rc.Preview && /* @__PURE__ */ a(pn, { color: "blue", children: t("preview") }),
    e.type === rc.Default && /* @__PURE__ */ a(pn, { color: "green", children: t("supported") })
  ] });
}, $Y = () => {
  const { t: e } = H(), { realm: t, realmRepresentation: n } = be(), r = Tt(), i = pa(), s = et(
    () => i(r.features ?? [], or("name")),
    [r.features]
  ), o = et(
    () => s.filter((f) => !f.enabled) || [],
    [r.features]
  ), l = et(
    () => s.filter((f) => f.enabled) || [],
    [r.features]
  ), c = (f) => jn(
    Fs({
      realm: t,
      tab: f
    })
  ), d = Pa(e, n?.displayName, t), u = c("welcome"), p = c("info"), m = c("providers");
  return Object.keys(r).length === 0 ? /* @__PURE__ */ a(gt, {}) : /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ a(Pt, { className: "pf-v5-u-mr-sm", children: /* @__PURE__ */ a(tt, { component: "h1", children: e("realmNameTitle", { name: t }) }) }) }),
    /* @__PURE__ */ a(Te, { variant: "light", className: "pf-v5-u-p-0", children: /* @__PURE__ */ C(
      $n,
      {
        "data-testid": "dashboard-tabs",
        defaultLocation: Fs({
          realm: t,
          tab: "welcome"
        }),
        isBox: !0,
        mountOnEnter: !0,
        children: [
          /* @__PURE__ */ a(
            Ee,
            {
              id: "welcome",
              "data-testid": "welcomeTab",
              title: /* @__PURE__ */ a(Ie, { children: e("welcomeTabTitle") }),
              ...u,
              children: /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ C("div", { className: "pf-v5-l-grid pf-v5-u-ml-lg", children: [
                /* @__PURE__ */ a("div", { className: "pf-v5-l-grid__item pf-m-12-col", children: /* @__PURE__ */ a(
                  nr,
                  {
                    className: "pf-v5-u-font-weight-bold",
                    headingLevel: "h2",
                    size: "3xl",
                    children: e("welcomeTo", { realmDisplayInfo: d })
                  }
                ) }),
                /* @__PURE__ */ a("div", { className: "pf-v5-l-grid__item keycloak__dashboard_welcome_tab", children: /* @__PURE__ */ a(tt, { component: Wt.h3, children: e("welcomeText") }) }),
                /* @__PURE__ */ a("div", { className: "pf-v5-l-grid__item pf-m-10-col pf-v5-u-mt-md", children: /* @__PURE__ */ a(
                  z,
                  {
                    className: "pf-v5-u-px-lg pf-v5-u-py-sm",
                    component: "a",
                    href: na.documentation,
                    target: "_blank",
                    variant: "primary",
                    children: e("viewDocumentation")
                  }
                ) }),
                /* @__PURE__ */ C(qu, { className: "pf-v5-u-mt-sm", children: [
                  /* @__PURE__ */ a(yi, { children: /* @__PURE__ */ a(
                    z,
                    {
                      component: "a",
                      href: na.guides,
                      target: "_blank",
                      variant: "tertiary",
                      children: e("viewGuides")
                    }
                  ) }),
                  /* @__PURE__ */ a(yi, { children: /* @__PURE__ */ a(
                    z,
                    {
                      component: "a",
                      href: na.community,
                      target: "_blank",
                      variant: "tertiary",
                      children: e("joinCommunity")
                    }
                  ) }),
                  /* @__PURE__ */ a(yi, { children: /* @__PURE__ */ a(
                    z,
                    {
                      component: "a",
                      href: na.blog,
                      target: "_blank",
                      variant: "tertiary",
                      children: e("readBlog")
                    }
                  ) })
                ] })
              ] }) })
            }
          ),
          /* @__PURE__ */ a(
            Ee,
            {
              id: "info",
              "data-testid": "infoTab",
              title: /* @__PURE__ */ a(Ie, { children: e("serverInfo") }),
              ...p,
              children: /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ C(Va, { hasGutter: !0, children: [
                /* @__PURE__ */ a(zt, { lg: 2, sm: 12, children: /* @__PURE__ */ C(xa, { className: "keycloak__dashboard_card", children: [
                  /* @__PURE__ */ a(br, { children: e("serverInfo") }),
                  /* @__PURE__ */ a(da, { children: /* @__PURE__ */ a(vr, { children: /* @__PURE__ */ C(qi, { children: [
                    /* @__PURE__ */ a(Mr, { children: e("version") }),
                    /* @__PURE__ */ a(Dr, { children: r.systemInfo?.version })
                  ] }) }) }),
                  /* @__PURE__ */ a(br, { children: e("memory") }),
                  /* @__PURE__ */ a(da, { children: /* @__PURE__ */ a(vr, { children: /* @__PURE__ */ C(qi, { children: [
                    /* @__PURE__ */ a(Mr, { children: e("totalMemory") }),
                    /* @__PURE__ */ a(Dr, { children: r.memoryInfo?.totalFormated }),
                    /* @__PURE__ */ a(Mr, { children: e("freeMemory") }),
                    /* @__PURE__ */ a(Dr, { children: r.memoryInfo?.freeFormated }),
                    /* @__PURE__ */ a(Mr, { children: e("usedMemory") }),
                    /* @__PURE__ */ a(Dr, { children: r.memoryInfo?.usedFormated })
                  ] }) }) })
                ] }) }),
                /* @__PURE__ */ a(zt, { lg: 10, sm: 12, children: /* @__PURE__ */ C(xa, { className: "keycloak__dashboard_card", children: [
                  /* @__PURE__ */ a(br, { children: e("profile") }),
                  /* @__PURE__ */ a(da, { children: /* @__PURE__ */ C(vr, { children: [
                    /* @__PURE__ */ C(qi, { children: [
                      /* @__PURE__ */ C(Mr, { children: [
                        e("enabledFeatures"),
                        " ",
                        /* @__PURE__ */ a(
                          le,
                          {
                            fieldLabelId: "enabledFeatures",
                            helpText: e("infoEnabledFeatures")
                          }
                        )
                      ] }),
                      /* @__PURE__ */ a(Dr, { children: /* @__PURE__ */ a(lu, { variant: hc.inline, children: l.map((f) => /* @__PURE__ */ a(
                        k0,
                        {
                          feature: f
                        },
                        f.name
                      )) }) })
                    ] }),
                    /* @__PURE__ */ C(qi, { children: [
                      /* @__PURE__ */ C(Mr, { children: [
                        e("disabledFeatures"),
                        " ",
                        /* @__PURE__ */ a(
                          le,
                          {
                            fieldLabelId: "disabledFeatures",
                            helpText: e("infoDisabledFeatures")
                          }
                        )
                      ] }),
                      /* @__PURE__ */ a(Dr, { children: /* @__PURE__ */ a(lu, { variant: hc.inline, children: o.map((f) => /* @__PURE__ */ a(
                        k0,
                        {
                          feature: f
                        },
                        f.name
                      )) }) })
                    ] })
                  ] }) })
                ] }) })
              ] }) })
            }
          ),
          /* @__PURE__ */ a(
            Ee,
            {
              id: "providers",
              "data-testid": "providersTab",
              title: /* @__PURE__ */ a(Ie, { children: e("providerInfo") }),
              ...m,
              children: /* @__PURE__ */ a(MY, {})
            }
          )
        ]
      }
    ) })
  ] });
};
function jY() {
  const { realm: e } = be(), t = e === "master";
  return /* @__PURE__ */ C(ee, { children: [
    !t && /* @__PURE__ */ a(FY, {}),
    t && /* @__PURE__ */ a($Y, {})
  ] });
}
const BY = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: jY
}, Symbol.toStringTag, { value: "Module" })), O0 = 38, UY = ({
  text: e,
  children: t
}) => {
  const n = e || "", r = n.length > O0, i = n.substring(0, O0);
  return r ? /* @__PURE__ */ a(Yt, { content: e, children: t(i + "…") }) : t(n);
}, VY = (e) => e.operationType === "DELETE" ? !1 : e.resourceType === "USER" || e.resourceType === "GROUP_MEMBERSHIP" || e.resourceType === "GROUP" || e.resourceType === "CLIENT" || e.resourceType?.startsWith("AUTHORIZATION_RESOURCE") || e.resourceType === "CLIENT_SCOPE" || e.resourceType === "AUTH_FLOW" || e.resourcePath?.startsWith("roles-by-id"), KY = new RegExp(
  /([0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12})/
), HY = (e, t) => {
  const n = KY.exec(t.resourcePath);
  if (!n)
    return console.warn("event didn't contain a valid link", t), "";
  const r = n[1];
  return t.resourceType === "CLIENT" || t.resourceType?.startsWith("AUTHORIZATION_RESOURCE") ? Ti({
    realm: e,
    clientId: r,
    tab: t.resourceType === "CLIENT" ? "settings" : "authorization"
  }) : t.resourceType === "GROUP" ? zo({ realm: e, id: r }) : t.resourceType === "CLIENT_SCOPE" ? od({ realm: e, id: r, tab: "settings" }) : t.resourceType === "USER" || t.resourceType === "GROUP_MEMBERSHIP" ? ai({ realm: e, id: r, tab: "settings" }) : t.resourceType === "AUTH_FLOW" ? $g({ realm: e, id: r, usedBy: "-" }) : t.resourcePath?.startsWith("roles-by-id") ? Ap({ realm: e, id: r, tab: "details" }) : "";
}, zY = ({ event: e }) => {
  const { realm: t } = be();
  return /* @__PURE__ */ a(UY, { text: e.resourcePath, children: (n) => VY(e) ? /* @__PURE__ */ a(Ae, { to: HY(t, e), children: n }) : /* @__PURE__ */ a("span", { children: n }) });
}, qY = (e) => /* @__PURE__ */ a(zY, { event: e }), T0 = {
  resourceTypes: [],
  operationTypes: [],
  resourcePath: "",
  dateFrom: "",
  dateTo: "",
  authClient: "",
  authUser: "",
  authRealm: "",
  authIpAddress: ""
}, E0 = ({
  titleKey: e,
  onClose: t,
  children: n
}) => {
  const { t: r } = H();
  return /* @__PURE__ */ a(
    ht,
    {
      variant: Rt.medium,
      title: r(e),
      isOpen: !0,
      onClose: t,
      children: n
    }
  );
}, GY = () => {
  const { adminClient: e } = pe(), { t } = H(), { realm: n } = be(), r = Tt(), i = ni(), s = r.enums?.resourceType, o = r.enums?.operationType, [l, c] = N(0), [d, u] = N(!1), [p, m] = N(!1), [f, g] = N(!1), [b, v] = N({}), [y, x] = N(), [w, R] = N(), S = {
    resourceTypes: t("resourceTypes"),
    operationTypes: t("operationTypes"),
    resourcePath: t("resourcePath"),
    dateFrom: t("dateFrom"),
    dateTo: t("dateTo"),
    authClient: t("client"),
    authUser: t("userId"),
    authRealm: t("realm"),
    authIpAddress: t("ipAddress")
  }, _ = Ue({
    mode: "onChange",
    defaultValues: T0
  }), {
    getValues: O,
    reset: E,
    formState: { isDirty: T },
    control: I
  } = _;
  function k(U, G) {
    return e.realms.findAdminEvents({
      // The admin client wants 'dateFrom' and 'dateTo' to be Date objects, however it cannot actually handle them so we need to cast to any.
      ...b,
      realm: n,
      first: U,
      max: G
    });
  }
  function P() {
    u(!1), M();
  }
  function D() {
    E(), M();
  }
  function F(U) {
    const G = { ...O() };
    delete G[U], E({ ...T0, ...G }), M();
  }
  function A(U, G) {
    const q = O(), L = q[U], K = Array.isArray(L) ? L.filter((B) => B !== G) : L;
    E({ ...q, [U]: K }), M();
  }
  function M() {
    const U = Sg(
      O(),
      (G) => G !== "" || Array.isArray(G) && G.length > 0
    );
    v(U), c(l + 1);
  }
  const V = et(
    () => w?.representation ? Fa(JSON.parse(w.representation)) : "",
    [w?.representation]
  );
  return /* @__PURE__ */ C(ee, { children: [
    y && /* @__PURE__ */ a(E0, { titleKey: "auth", onClose: () => x(void 0), children: /* @__PURE__ */ C(
      Cn,
      {
        "aria-label": "authData",
        "data-testid": "auth-dialog",
        variant: Rc.compact,
        children: [
          /* @__PURE__ */ a(wn, { children: /* @__PURE__ */ C(rt, { children: [
            /* @__PURE__ */ a(De, { children: t("attribute") }),
            /* @__PURE__ */ a(De, { children: t("value") })
          ] }) }),
          /* @__PURE__ */ C(yn, { children: [
            /* @__PURE__ */ C(rt, { children: [
              /* @__PURE__ */ a(ke, { children: t("realm") }),
              /* @__PURE__ */ a(ke, { children: y.authDetails?.realmId })
            ] }),
            /* @__PURE__ */ C(rt, { children: [
              /* @__PURE__ */ a(ke, { children: t("client") }),
              /* @__PURE__ */ a(ke, { children: y.authDetails?.clientId })
            ] }),
            /* @__PURE__ */ C(rt, { children: [
              /* @__PURE__ */ a(ke, { children: t("user") }),
              /* @__PURE__ */ a(ke, { children: y.authDetails?.userId })
            ] }),
            /* @__PURE__ */ C(rt, { children: [
              /* @__PURE__ */ a(ke, { children: t("ipAddress") }),
              /* @__PURE__ */ a(ke, { children: y.authDetails?.ipAddress })
            ] })
          ] })
        ]
      }
    ) }),
    w && /* @__PURE__ */ a(
      E0,
      {
        titleKey: "representation",
        "data-testid": "representation-dialog",
        onClose: () => R(void 0),
        children: /* @__PURE__ */ a(
          lr,
          {
            isLineNumbersVisible: !0,
            isReadOnly: !0,
            code: V,
            language: Ln.json,
            height: "8rem"
          }
        )
      }
    ),
    /* @__PURE__ */ a(
      St,
      {
        loader: k,
        isPaginated: !0,
        ariaLabelKey: "adminEvents",
        toolbarItem: /* @__PURE__ */ a(Ve, { ..._, children: /* @__PURE__ */ C(
          ra,
          {
            direction: { default: "column" },
            spaceItems: { default: "spaceItemsNone" },
            children: [
              /* @__PURE__ */ a(Nt, { children: /* @__PURE__ */ a(
                ud,
                {
                  buttonText: t("searchForAdminEvent"),
                  setSearchDropdownOpen: u,
                  searchDropdownOpen: d,
                  marginRight: "2.5rem",
                  width: "15vw",
                  children: /* @__PURE__ */ C(
                    xt,
                    {
                      isHorizontal: !0,
                      className: "keycloak__events_search__form",
                      "data-testid": "searchForm",
                      children: [
                        /* @__PURE__ */ a(
                          se,
                          {
                            label: t("resourceTypes"),
                            fieldId: "kc-resourceTypes",
                            className: "keycloak__events_search__form_label",
                            children: /* @__PURE__ */ a(
                              ge,
                              {
                                name: "resourceTypes",
                                control: I,
                                render: ({ field: U }) => /* @__PURE__ */ a(
                                  ft,
                                  {
                                    className: "keycloak__events_search__type_select",
                                    "data-testid": "resource-types-searchField",
                                    chipGroupProps: {
                                      numChips: 1,
                                      expandedText: t("hide"),
                                      collapsedText: t("showRemaining")
                                    },
                                    variant: pt.typeaheadMulti,
                                    typeAheadAriaLabel: "Select",
                                    onToggle: (G) => m(G),
                                    selections: U.value,
                                    onSelect: (G) => {
                                      const q = G.toString(), L = U.value.includes(q) ? U.value.filter((K) => K !== q) : [...U.value, q];
                                      U.onChange(L);
                                    },
                                    onClear: () => {
                                      U.onChange([]);
                                    },
                                    isOpen: p,
                                    "aria-labelledby": "resourceTypes",
                                    chipGroupComponent: /* @__PURE__ */ a(vn, { children: U.value.map((G) => /* @__PURE__ */ a(
                                      Ut,
                                      {
                                        onClick: (q) => {
                                          q.stopPropagation(), U.onChange(
                                            U.value.filter(
                                              (L) => L !== G
                                            )
                                          );
                                        },
                                        children: G
                                      },
                                      G
                                    )) }),
                                    children: s?.map((G) => /* @__PURE__ */ a(_e, { value: G, children: G }, G))
                                  }
                                )
                              }
                            )
                          }
                        ),
                        /* @__PURE__ */ a(
                          se,
                          {
                            label: t("operationTypes"),
                            fieldId: "kc-operationTypes",
                            className: "keycloak__events_search__form_label",
                            children: /* @__PURE__ */ a(
                              ge,
                              {
                                name: "operationTypes",
                                control: I,
                                render: ({ field: U }) => /* @__PURE__ */ a(
                                  ft,
                                  {
                                    className: "keycloak__events_search__type_select",
                                    "data-testid": "operation-types-searchField",
                                    chipGroupProps: {
                                      numChips: 1,
                                      expandedText: t("hide"),
                                      collapsedText: t("showRemaining")
                                    },
                                    variant: pt.typeaheadMulti,
                                    typeAheadAriaLabel: "Select",
                                    onToggle: (G) => g(G),
                                    selections: U.value,
                                    onSelect: (G) => {
                                      const q = G.toString(), L = U.value.includes(q) ? U.value.filter((K) => K !== q) : [...U.value, q];
                                      U.onChange(L);
                                    },
                                    onClear: () => {
                                      U.onChange([]);
                                    },
                                    isOpen: f,
                                    "aria-labelledby": "operationTypes",
                                    chipGroupComponent: /* @__PURE__ */ a(vn, { children: U.value.map((G) => /* @__PURE__ */ a(
                                      Ut,
                                      {
                                        onClick: (q) => {
                                          q.stopPropagation(), U.onChange(
                                            U.value.filter(
                                              (L) => L !== G
                                            )
                                          );
                                        },
                                        children: G
                                      },
                                      G
                                    )) }),
                                    children: o?.map((G) => /* @__PURE__ */ a(
                                      _e,
                                      {
                                        value: G,
                                        children: G
                                      },
                                      G.toString()
                                    ))
                                  }
                                )
                              }
                            )
                          }
                        ),
                        /* @__PURE__ */ a(
                          ve,
                          {
                            name: "resourcePath",
                            label: t("resourcePath")
                          }
                        ),
                        /* @__PURE__ */ a(ve, { name: "authRealm", label: t("realm") }),
                        /* @__PURE__ */ a(ve, { name: "authClient", label: t("client") }),
                        /* @__PURE__ */ a(ve, { name: "authUser", label: t("user") }),
                        /* @__PURE__ */ a(ve, { name: "authIpAddress", label: t("ipAddress") }),
                        /* @__PURE__ */ a(
                          se,
                          {
                            label: t("dateFrom"),
                            fieldId: "kc-dateFrom",
                            className: "keycloak__events_search__form_label",
                            children: /* @__PURE__ */ a(
                              ge,
                              {
                                name: "dateFrom",
                                control: I,
                                render: ({ field: U }) => /* @__PURE__ */ a(
                                  No,
                                  {
                                    className: "pf-v5-u-w-100",
                                    value: U.value,
                                    onChange: (G, q) => U.onChange(q),
                                    inputProps: { id: "kc-dateFrom" }
                                  }
                                )
                              }
                            )
                          }
                        ),
                        /* @__PURE__ */ a(
                          se,
                          {
                            label: t("dateTo"),
                            fieldId: "kc-dateTo",
                            className: "keycloak__events_search__form_label",
                            children: /* @__PURE__ */ a(
                              ge,
                              {
                                name: "dateTo",
                                control: I,
                                render: ({ field: U }) => /* @__PURE__ */ a(
                                  No,
                                  {
                                    className: "pf-v5-u-w-100",
                                    value: U.value,
                                    onChange: (G, q) => U.onChange(q),
                                    inputProps: { id: "kc-dateTo" }
                                  }
                                )
                              }
                            )
                          }
                        ),
                        /* @__PURE__ */ C(st, { children: [
                          /* @__PURE__ */ a(
                            z,
                            {
                              variant: "primary",
                              onClick: P,
                              "data-testid": "search-events-btn",
                              isDisabled: !T,
                              children: t("searchAdminEventsBtn")
                            }
                          ),
                          /* @__PURE__ */ a(
                            z,
                            {
                              variant: "secondary",
                              onClick: D,
                              isDisabled: !T,
                              children: t("resetBtn")
                            }
                          )
                        ] })
                      ]
                    }
                  )
                }
              ) }),
              /* @__PURE__ */ a(Nt, { children: Object.entries(b).length > 0 && /* @__PURE__ */ a("div", { className: "keycloak__searchChips pf-v5-u-ml-md", children: Object.entries(b).map((U) => {
                const [G, q] = U;
                return /* @__PURE__ */ a(
                  vn,
                  {
                    className: "pf-v5-u-mt-md pf-v5-u-mr-md",
                    categoryName: S[G],
                    isClosable: !0,
                    onClick: () => F(G),
                    children: typeof q == "string" ? /* @__PURE__ */ a(Ut, { isReadOnly: !0, children: q }) : q.map((L) => /* @__PURE__ */ a(
                      Ut,
                      {
                        onClick: () => A(G, L),
                        children: L
                      },
                      L
                    ))
                  },
                  G
                );
              }) }) })
            ]
          }
        ) }),
        actions: [
          {
            title: t("auth"),
            onRowClick: (U) => x(U)
          },
          {
            title: t("representation"),
            onRowClick: (U) => R(U)
          }
        ],
        columns: [
          {
            name: "time",
            displayKey: "time",
            cellRenderer: (U) => i(new Date(U.time), Dc)
          },
          {
            name: "resourcePath",
            displayKey: "resourcePath",
            cellRenderer: qY
          },
          {
            name: "resourceType",
            displayKey: "resourceType"
          },
          {
            name: "operationType",
            displayKey: "operationType",
            transforms: [Ft(10)]
          },
          {
            name: "",
            displayKey: "user",
            cellRenderer: (U) => U.authDetails?.userId || ""
          }
        ],
        emptyState: /* @__PURE__ */ a(
          ct,
          {
            message: t("emptyAdminEvents"),
            instructions: t("emptyAdminEventsInstructions")
          }
        ),
        isSearching: Object.keys(b).length > 0
      },
      l
    )
  ] });
}, I0 = {
  client: "",
  dateFrom: "",
  dateTo: "",
  user: "",
  type: [],
  ipAddress: ""
}, WY = (e) => e.error ? /* @__PURE__ */ a(Yt, { content: e.error, children: /* @__PURE__ */ C("span", { children: [
  /* @__PURE__ */ a(wi, { status: "warning", children: /* @__PURE__ */ a(pS, {}) }),
  e.type
] }) }) : /* @__PURE__ */ C("span", { children: [
  /* @__PURE__ */ a(wi, { status: "success", children: /* @__PURE__ */ a(Ks, {}) }),
  e.type
] }), XY = (e) => /* @__PURE__ */ C(vr, { isHorizontal: !0, className: "keycloak_eventsection_details", children: [
  e.details && Object.entries(e.details).map(([t, n]) => /* @__PURE__ */ C(qi, { children: [
    /* @__PURE__ */ a(Mr, { children: t }),
    /* @__PURE__ */ a(Dr, { children: n })
  ] }, t)),
  e.error && /* @__PURE__ */ C(qi, { children: [
    /* @__PURE__ */ a(Mr, { children: "error" }),
    /* @__PURE__ */ a(Dr, { children: e.error })
  ] }, "error")
] }), YY = (e) => {
  const { t } = H(), { realm: n } = be();
  return /* @__PURE__ */ C(ee, { children: [
    e.userId && /* @__PURE__ */ a(
      Ae,
      {
        to: ai({
          realm: n,
          id: e.userId,
          tab: "settings"
        }),
        children: e.userId
      },
      `link-${e.time}-${e.type}`
    ),
    !e.userId && t("noUserDetails")
  ] });
};
function JY() {
  const { adminClient: e } = pe(), { t } = H(), { realm: n } = be(), r = ni(), [i, s] = N(0), [o, l] = N(!1), [c, d] = N(!1), [u, p] = N(), [m, f] = N({}), g = {
    client: t("client"),
    dateFrom: t("dateFrom"),
    dateTo: t("dateTo"),
    user: t("userId"),
    type: t("eventType"),
    ipAddress: t("ipAddress")
  }, b = Ue({
    mode: "onChange",
    defaultValues: I0
  }), {
    getValues: v,
    reset: y,
    formState: { isDirty: x },
    control: w,
    handleSubmit: R
  } = b;
  Re(
    () => e.realms.getConfigEvents({ realm: n }),
    (A) => p(A),
    []
  );
  function S(A, M) {
    return e.realms.findEvents({
      // The admin client wants 'dateFrom' and 'dateTo' to be Date objects, however it cannot actually handle them so we need to cast to any.
      ...m,
      realm: n,
      first: A,
      max: M
    });
  }
  const _ = (A) => jn(h0({ realm: n, tab: A })), O = _("user-events"), E = _("admin-events");
  function T() {
    l(!1), D();
  }
  function I() {
    y(), D();
  }
  function k(A) {
    const M = { ...v() };
    delete M[A], y({ ...I0, ...M }), D();
  }
  function P(A, M) {
    const V = v(), U = V[A], G = Array.isArray(U) ? U.filter((q) => q !== M) : U;
    y({ ...V, [A]: G }), D();
  }
  function D() {
    const A = Sg(
      v(),
      (M) => M !== "" || Array.isArray(M) && M.length > 0
    );
    f(A), s(i + 1);
  }
  const F = () => /* @__PURE__ */ a(Ve, { ...b, children: /* @__PURE__ */ C(
    ra,
    {
      direction: { default: "column" },
      spaceItems: { default: "spaceItemsNone" },
      children: [
        /* @__PURE__ */ a(Nt, { children: /* @__PURE__ */ a(
          ud,
          {
            buttonText: t("searchForUserEvent"),
            setSearchDropdownOpen: l,
            searchDropdownOpen: o,
            marginRight: "2.5rem",
            width: "15vw",
            children: /* @__PURE__ */ C(
              xt,
              {
                "data-testid": "searchForm",
                className: "keycloak__events_search__form",
                onSubmit: R(T),
                isHorizontal: !0,
                children: [
                  /* @__PURE__ */ a(
                    ve,
                    {
                      name: "user",
                      label: t("userId"),
                      "data-testid": "userId-searchField"
                    }
                  ),
                  /* @__PURE__ */ a(
                    se,
                    {
                      label: t("eventType"),
                      fieldId: "kc-eventType",
                      className: "keycloak__events_search__form_label",
                      children: /* @__PURE__ */ a(
                        ge,
                        {
                          name: "type",
                          control: w,
                          render: ({ field: A }) => /* @__PURE__ */ a(
                            ft,
                            {
                              className: "keycloak__events_search__type_select",
                              "data-testid": "event-type-searchField",
                              chipGroupProps: {
                                numChips: 1,
                                expandedText: t("hide"),
                                collapsedText: t("showRemaining")
                              },
                              variant: pt.typeaheadMulti,
                              typeAheadAriaLabel: "Select",
                              onToggle: (M) => d(M),
                              selections: A.value,
                              onSelect: (M) => {
                                const V = M.toString(), U = A.value.includes(V) ? A.value.filter((G) => G !== V) : [...A.value, V];
                                A.onChange(U);
                              },
                              onClear: () => {
                                A.onChange([]);
                              },
                              isOpen: c,
                              "aria-labelledby": "eventType",
                              chipGroupComponent: /* @__PURE__ */ a(vn, { children: A.value.map((M) => /* @__PURE__ */ a(
                                Ut,
                                {
                                  onClick: (V) => {
                                    V.stopPropagation(), A.onChange(
                                      A.value.filter((U) => U !== M)
                                    );
                                  },
                                  children: t(`eventTypes.${M}.name`)
                                },
                                M
                              )) }),
                              children: u?.enabledEventTypes?.map((M) => /* @__PURE__ */ a(_e, { value: M, children: t(`eventTypes.${M}.name`) }, M))
                            }
                          )
                        }
                      )
                    }
                  ),
                  /* @__PURE__ */ a(
                    ve,
                    {
                      name: "client",
                      label: t("client"),
                      "data-testid": "client-searchField"
                    }
                  ),
                  /* @__PURE__ */ a(
                    se,
                    {
                      label: t("dateFrom"),
                      fieldId: "kc-dateFrom",
                      className: "keycloak__events_search__form_label",
                      children: /* @__PURE__ */ a(
                        ge,
                        {
                          name: "dateFrom",
                          control: w,
                          render: ({ field: A }) => /* @__PURE__ */ a(
                            No,
                            {
                              className: "pf-v5-u-w-100",
                              value: A.value,
                              onChange: (M, V) => A.onChange(V),
                              inputProps: { id: "kc-dateFrom" }
                            }
                          )
                        }
                      )
                    }
                  ),
                  /* @__PURE__ */ a(
                    se,
                    {
                      label: t("dateTo"),
                      fieldId: "kc-dateTo",
                      className: "keycloak__events_search__form_label",
                      children: /* @__PURE__ */ a(
                        ge,
                        {
                          name: "dateTo",
                          control: w,
                          render: ({ field: A }) => /* @__PURE__ */ a(
                            No,
                            {
                              className: "pf-v5-u-w-100",
                              value: A.value,
                              onChange: (M, V) => A.onChange(V),
                              inputProps: { id: "kc-dateTo" }
                            }
                          )
                        }
                      )
                    }
                  ),
                  /* @__PURE__ */ a(
                    ve,
                    {
                      name: "ipAddress",
                      label: t("ipAddress"),
                      "data-testid": "ipAddress-searchField"
                    }
                  ),
                  /* @__PURE__ */ C(st, { children: [
                    /* @__PURE__ */ a(
                      z,
                      {
                        "data-testid": "search-events-btn",
                        variant: "primary",
                        type: "submit",
                        isDisabled: !x,
                        children: t("searchUserEventsBtn")
                      }
                    ),
                    /* @__PURE__ */ a(
                      z,
                      {
                        variant: "secondary",
                        onClick: I,
                        isDisabled: !x,
                        children: t("resetBtn")
                      }
                    )
                  ] })
                ]
              }
            )
          }
        ) }),
        /* @__PURE__ */ a(Nt, { children: Object.entries(m).length > 0 && /* @__PURE__ */ a("div", { className: "keycloak__searchChips pf-v5-u-ml-md", children: Object.entries(m).map((A) => {
          const [M, V] = A;
          return /* @__PURE__ */ a(
            vn,
            {
              className: "pf-v5-u-mt-md pf-v5-u-mr-md",
              categoryName: g[M],
              isClosable: !0,
              onClick: () => k(M),
              children: typeof V == "string" ? /* @__PURE__ */ a(Ut, { isReadOnly: !0, children: V }) : V.map((U) => /* @__PURE__ */ a(
                Ut,
                {
                  onClick: () => P(M, U),
                  children: t(`eventTypes.${U}.name`)
                },
                U
              ))
            },
            M
          );
        }) }) })
      ]
    }
  ) });
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(
      wt,
      {
        titleKey: "titleEvents",
        subKey: /* @__PURE__ */ C(ns, { i18nKey: "eventExplain", children: [
          "If you want to configure user events, Admin events or Event listeners, please enter",
          /* @__PURE__ */ a(Ae, { to: ac({ realm: n, tab: "events" }), children: t("eventConfig") }),
          "page realm settings to configure."
        ] }),
        helpUrl: na.eventsUrl,
        divider: !1
      }
    ),
    /* @__PURE__ */ a(Te, { variant: "light", className: "pf-v5-u-p-0", children: /* @__PURE__ */ C(
      $n,
      {
        isBox: !0,
        defaultLocation: h0({ realm: n, tab: "user-events" }),
        children: [
          /* @__PURE__ */ a(
            Ee,
            {
              title: /* @__PURE__ */ a(Ie, { children: t("userEvents") }),
              ...O,
              children: /* @__PURE__ */ a("div", { className: "keycloak__events_table", children: /* @__PURE__ */ a(
                St,
                {
                  loader: S,
                  detailColumns: [
                    {
                      name: "details",
                      enabled: (A) => A.details !== void 0,
                      cellRenderer: XY
                    }
                  ],
                  isPaginated: !0,
                  ariaLabelKey: "titleEvents",
                  toolbarItem: F(),
                  columns: [
                    {
                      name: "time",
                      displayKey: "time",
                      cellRenderer: (A) => r(new Date(A.time), Dc)
                    },
                    {
                      name: "userId",
                      displayKey: "user",
                      cellRenderer: YY
                    },
                    {
                      name: "type",
                      displayKey: "eventType",
                      cellRenderer: WY
                    },
                    {
                      name: "ipAddress",
                      displayKey: "ipAddress",
                      transforms: [Ft(10)]
                    },
                    {
                      name: "clientId",
                      displayKey: "client"
                    }
                  ],
                  emptyState: /* @__PURE__ */ a(
                    ct,
                    {
                      message: t("emptyUserEvents"),
                      instructions: t("emptyUserEventsInstructions")
                    }
                  ),
                  isSearching: Object.keys(m).length > 0
                },
                i
              ) })
            }
          ),
          /* @__PURE__ */ a(
            Ee,
            {
              title: /* @__PURE__ */ a(Ie, { children: t("adminEvents") }),
              "data-testid": "admin-events-tab",
              ...E,
              children: /* @__PURE__ */ a(GY, {})
            }
          )
        ]
      }
    ) })
  ] });
}
const ZY = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: JY
}, Symbol.toStringTag, { value: "Module" })), mee = ({
  data: e,
  onSelect: t
}) => {
  const [n, r] = N({ options: [], checkedItems: [] });
  He(() => {
    t(n.checkedItems.filter((u) => u.checkProps?.checked === !0));
  }, [n]), He(() => {
    r({ options: e, checkedItems: [] });
  }, [e]);
  const i = (u) => {
    let p = [];
    return u.forEach((m) => {
      p.push(m), m.children && (p = p.concat(i(m.children)));
    }), p;
  }, s = (u, p) => {
    const m = u.target.checked, f = i([p]);
    r((g) => ({
      options: g.options,
      checkedItems: m ? g.checkedItems.concat(
        f.filter(
          (b) => !g.checkedItems.some((v) => v.id === b.id)
        )
      ) : g.checkedItems.filter(
        (b) => !f.some((v) => v.id === b.id)
      )
    }));
  }, o = (u) => n.checkedItems.some((p) => p.id === u.id), l = (u) => u.children ? u.children.some((p) => l(p)) : o(u), c = (u) => {
    const p = o(u);
    return u.checkProps.checked = !1, p ? u.checkProps.checked = !0 : l(u) && (u.checkProps.checked = null), u.children ? {
      ...u,
      children: u.children.map((m) => c(m))
    } : u;
  }, d = n.options.map((u) => c(u));
  return /* @__PURE__ */ a(Zu, { data: d, onCheck: s, hasCheckboxes: !0 });
}, yb = ({
  selectedRows: e,
  show: t,
  toggleDialog: n,
  refresh: r
}) => {
  const { adminClient: i } = pe(), { t: s } = H(), { addAlert: o, addError: l } = Se(), c = async () => {
    try {
      for (const d of e)
        await i.groups.del({
          id: d.id
        });
      r(), o(s("groupDeleted", { count: e.length }));
    } catch (d) {
      l("groupDeleteError", d);
    }
  };
  return /* @__PURE__ */ a(
    ms,
    {
      titleKey: s("deleteConfirmTitle", { count: e.length }),
      messageKey: s("deleteConfirmGroup", {
        count: e.length,
        groupName: e[0]?.name
      }),
      continueButtonLabel: "delete",
      continueButtonVariant: xe.danger,
      onConfirm: c,
      open: t,
      toggleDialog: n
    }
  );
}, QY = ({
  toggleCreate: e,
  toggleDelete: t,
  kebabDisabled: n
}) => {
  const { t: r } = H(), { currentGroup: i } = vl(), { hasAccess: s } = Mt(), o = s("manage-users") || i()?.access?.manage, [l, c] = ot();
  return o ? /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(
      z,
      {
        "data-testid": "openCreateGroupModal",
        variant: "primary",
        onClick: e,
        children: r("createGroup")
      }
    ) }),
    /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(
      qt,
      {
        toggle: (d) => /* @__PURE__ */ a(
          yt,
          {
            ref: d,
            isExpanded: l,
            onClick: c,
            isDisabled: n,
            variant: "plain",
            "aria-label": "Actions",
            children: /* @__PURE__ */ a(dr, {})
          }
        ),
        isOpen: l,
        children: /* @__PURE__ */ a(Xt, { children: /* @__PURE__ */ a(
          Ke,
          {
            component: "button",
            onClick: () => {
              t(), c();
            },
            children: r("delete")
          },
          "action"
        ) })
      }
    ) })
  ] }) : /* @__PURE__ */ a("div", {});
}, $c = ({
  id: e,
  rename: t,
  handleModalToggle: n,
  refresh: r
}) => {
  const { adminClient: i } = pe(), { t: s } = H(), { addAlert: o, addError: l } = Se(), c = Ue({
    defaultValues: { name: t?.name }
  }), { handleSubmit: d, formState: u } = c, p = async (m) => {
    m.name = m.name?.trim();
    try {
      e ? t ? await i.groups.update(
        { id: e },
        { ...t, name: m.name }
      ) : await (m.id ? i.groups.updateChildGroup({ id: e }, m) : i.groups.createChildGroup({ id: e }, m)) : await i.groups.create(m), r(t ? { ...t, name: m.name } : void 0), n(), o(
        s(t ? "groupUpdated" : "groupCreated"),
        ue.success
      );
    } catch (f) {
      l("couldNotCreateGroup", f);
    }
  };
  return /* @__PURE__ */ a(
    ht,
    {
      variant: Rt.small,
      title: s(t ? "renameAGroup" : "createAGroup"),
      isOpen: !0,
      onClose: n,
      actions: [
        /* @__PURE__ */ a(
          eo,
          {
            formState: u,
            "data-testid": `${t ? "rename" : "create"}Group`,
            form: "group-form",
            allowInvalid: !0,
            allowNonDirty: !0,
            children: s(t ? "rename" : "create")
          },
          "confirm"
        ),
        /* @__PURE__ */ a(
          z,
          {
            id: "modal-cancel",
            "data-testid": "cancel",
            variant: xe.link,
            onClick: () => {
              n();
            },
            children: s("cancel")
          },
          "cancel"
        )
      ],
      children: /* @__PURE__ */ a(Ve, { ...c, children: /* @__PURE__ */ a(xt, { id: "group-form", isHorizontal: !0, onSubmit: d(p), children: /* @__PURE__ */ a(
        ve,
        {
          name: "name",
          label: s("name"),
          rules: { required: s("required") },
          autoFocus: !0
        }
      ) }) })
    }
  );
}, eJ = (e, t) => t.id ? e.groups.updateRoot(t) : e.groups.create(t), tJ = async (e, t, n) => e.groups.updateChildGroup({ id: n.id }, t), GT = ({ source: e, onClose: t, refresh: n }) => {
  const { adminClient: r } = pe(), { t: i } = H(), { addAlert: s, addError: o } = Se();
  return /* @__PURE__ */ a(
    cl,
    {
      type: "selectOne",
      filterGroups: [e],
      text: {
        title: "moveToGroup",
        ok: "moveHere"
      },
      onClose: t,
      onConfirm: async (c) => {
        try {
          await (c ? tJ(r, e, c[0]) : eJ(r, e)), n(), s(i("moveGroupSuccess"));
        } catch (d) {
          o("moveGroupError", d);
        }
      },
      isMove: !0
    }
  );
};
function WT(e) {
  let t = e.length;
  for (const n of e)
    n.subGroups && (t += WT(n.subGroups));
  return t;
}
const nJ = ({
  group: e,
  refresh: t
}) => {
  const { t: n } = H(), [r, i] = ot(), [s, o] = ot(), [l, c] = ot(), [d, u] = ot(), [p, m] = ot(), f = Je(), { realm: g } = be();
  return /* @__PURE__ */ C(ee, { children: [
    s && /* @__PURE__ */ a(
      $c,
      {
        id: e.id,
        rename: e,
        refresh: () => {
          f(zo({ realm: g })), t();
        },
        handleModalToggle: o
      }
    ),
    l && /* @__PURE__ */ a(
      $c,
      {
        id: e.id,
        handleModalToggle: c,
        refresh: t
      }
    ),
    d && /* @__PURE__ */ a(GT, { source: e, refresh: t, onClose: u }),
    /* @__PURE__ */ a(
      yb,
      {
        show: p,
        toggleDialog: m,
        selectedRows: [e],
        refresh: () => {
          f(zo({ realm: g })), t();
        }
      }
    ),
    /* @__PURE__ */ a(
      qt,
      {
        popperProps: {
          position: "right"
        },
        toggle: (b) => /* @__PURE__ */ a(
          yt,
          {
            ref: b,
            onClick: i,
            isExpanded: r,
            variant: "plain",
            "aria-label": "Actions",
            children: /* @__PURE__ */ a(dr, {})
          }
        ),
        isOpen: r,
        children: /* @__PURE__ */ C(Xt, { children: [
          /* @__PURE__ */ a(Ke, { onClick: o, children: n("rename") }, "rename"),
          /* @__PURE__ */ a(Ke, { onClick: u, children: n("moveTo") }, "move"),
          /* @__PURE__ */ a(Ke, { onClick: c, children: n("createChildGroup") }, "create"),
          /* @__PURE__ */ a(_t, {}, "separator"),
          ",",
          /* @__PURE__ */ a(Ke, { onClick: m, children: n("delete") }, "delete")
        ] })
      }
    )
  ] });
}, Dd = 50, aJ = () => {
  const { t: e } = H();
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(ei, { size: "sm" }),
    " ",
    e("spinnerLoading")
  ] });
}, rJ = [
  {
    name: /* @__PURE__ */ a(aJ, {})
  }
], iJ = ({
  refresh: e,
  canViewDetails: t
}) => {
  const { adminClient: n } = pe(), { t: r } = H(), { realm: i } = be(), s = Je(), { addAlert: o } = Se(), { hasAccess: l } = Mt(), [c, d] = N(), { subGroups: u, clear: p } = vl(), [m, f] = N(""), [g, b] = N(20), [v, y] = N(0), x = Ct(0), w = Ct(20), [R, S] = N(0), [_, O] = N(!1), [E, T] = N(), [I, k] = N(0), [P, D] = N(0), F = () => {
    D(P + 1), e();
  }, A = (U, G) => {
    const q = U.subGroupCount;
    return {
      id: U.id,
      name: /* @__PURE__ */ a(Yt, { content: U.name, children: /* @__PURE__ */ a("span", { children: U.name }) }),
      access: U.access || {},
      children: q ? m.length === 0 ? rJ : U.subGroups?.map((L) => A(L, G)) : void 0,
      action: (l("manage-users") || U.access?.manage) && /* @__PURE__ */ a(nJ, { group: U, refresh: G }),
      defaultExpanded: u.map((L) => L.id).includes(U.id)
    };
  };
  Re(
    async () => {
      const U = await Ko(
        n,
        "groups",
        Object.assign(
          {
            first: `${v}`,
            max: `${g + 1}`,
            exact: `${_}`,
            global: `${m !== ""}`
          },
          m === "" ? null : { search: m }
        )
      );
      let G = [];
      return E && (G = await Ko(
        n,
        `groups/${E.id}/children`,
        {
          first: `${I}`,
          max: `${Dd}`
        }
      )), { groups: U, subGroups: G };
    },
    ({ groups: U, subGroups: G }) => {
      if (E) {
        const q = M(c || [], E.id, []);
        if (q.length && G.length) {
          const L = q.pop();
          L.children = [
            ...(Iy(L.children || []).splice(0, Dd), G.map((K) => A(K, F), "id")),
            ...G.length === Dd ? [
              {
                id: "next",
                name: /* @__PURE__ */ a(
                  z,
                  {
                    variant: "plain",
                    onClick: () => k(I + Dd),
                    children: /* @__PURE__ */ a(Nn, {})
                  }
                )
              }
            ] : []
          ];
        }
      }
      m || x.current !== v || w.current !== g ? d(U.map((q) => A(q, F))) : d(
        Iy(
          c,
          U.map((q) => A(q, F)),
          "id"
        )
      ), S(WT(U)), x.current = v, w.current = g;
    },
    [P, v, I, g, m, _, E]
  );
  const M = (U, G, q) => {
    for (let L = 0; L < U.length; L++) {
      const K = U[L];
      if (K.id === G)
        return q.push(K), q;
      K.children && (q.push(K), M(K.children, G, q), q[q.length - 1].id !== G && q.pop());
    }
    return q;
  }, V = (U, G) => {
    if (U.id === "next") return;
    T(U);
    const q = M(G, U.id, []);
    u.every(({ id: L }) => q.find((K) => K.id === L)) || p(), t || q.at(-1)?.access?.view || u.at(-1)?.access?.view ? s(
      zo({
        realm: i,
        id: q.map((L) => L.id).join("/")
      })
    ) : (o(r("noViewRights"), ue.warning), s(zo({ realm: i })));
  };
  return c ? /* @__PURE__ */ a(
    Fi,
    {
      count: R,
      first: v,
      max: g,
      onNextClick: y,
      onPreviousClick: y,
      onPerPageSelect: (U, G) => {
        y(U), b(G);
      },
      inputGroupName: "searchForGroups",
      inputGroupPlaceholder: r("searchForGroups"),
      inputGroupOnEnter: f,
      toolbarItem: /* @__PURE__ */ C(Qt, { className: "pf-v5-u-pt-sm", children: [
        /* @__PURE__ */ a(dt, { children: /* @__PURE__ */ a(
          rn,
          {
            id: "exact",
            "data-testid": "exact-search",
            name: "exact",
            isChecked: _,
            onChange: (U, G) => O(G)
          }
        ) }),
        /* @__PURE__ */ a(dt, { children: /* @__PURE__ */ a("label", { htmlFor: "exact", className: "pf-v5-u-pl-sm", children: r("exactSearch") }) })
      ] }),
      children: c.length > 0 && /* @__PURE__ */ a(
        Zu,
        {
          data: c.slice(0, g),
          allExpanded: m.length > 0,
          activeItems: E ? [E] : void 0,
          hasGuides: !0,
          hasSelectableNodes: !0,
          className: "keycloak_groups_treeview",
          onExpand: (U, G) => {
            V(G, c);
          },
          onSelect: (U, G) => {
            V(G, c);
          }
        }
      )
    }
  ) : /* @__PURE__ */ a(gt, {});
}, XT = (e) => {
  const t = e.substr(1).split("/");
  return t.length > 1 ? t.splice(2) : void 0;
}, Lp = (e) => {
  const t = XT(e);
  return t ? t[t.length - 1] : void 0;
}, sJ = () => {
  const { adminClient: e } = pe(), { t } = H(), { addAlert: n, addError: r } = Se(), i = Ue({
    mode: "onChange"
  }), s = cs(), o = Lp(s.pathname), [l, c] = N();
  Re(
    () => e.groups.findOne({ id: o }),
    (u) => {
      i.reset({
        attributes: Ec(u?.attributes)
      }), c(u);
    },
    [o]
  );
  const d = async (u) => {
    try {
      const p = Zn(u).attributes;
      await e.groups.update(
        { id: o },
        { ...l, attributes: p }
      ), c({ ...l, attributes: p }), n(t("groupUpdated"), ue.success);
    } catch (p) {
      r("groupUpdateError", p);
    }
  };
  return /* @__PURE__ */ a(Te, { variant: hr.light, children: /* @__PURE__ */ a(
    vb,
    {
      form: i,
      save: d,
      fineGrainedAccess: l?.access?.manage,
      reset: () => i.reset({
        attributes: Ec(l?.attributes)
      })
    }
  ) });
}, oJ = ({ id: e, name: t }) => {
  const { adminClient: n } = pe(), { t: r } = H(), { addAlert: i, addError: s } = Se();
  return /* @__PURE__ */ a(ao, { name: t, id: e, type: "groups", save: async (l) => {
    try {
      const c = l.filter((d) => d.client === void 0).map((d) => d.role).flat();
      await n.groups.addRealmRoleMappings({
        id: e,
        roles: c
      }), await Promise.all(
        l.filter((d) => d.client !== void 0).map(
          (d) => n.groups.addClientRoleMappings({
            id: e,
            clientUniqueId: d.client.id,
            roles: [d.role]
          })
        )
      ), i(r("roleMappingUpdatedSuccess"), ue.success);
    } catch (c) {
      s("roleMappingUpdatedError", c);
    }
  } });
}, P0 = ({ refresh: e }) => {
  const { adminClient: t } = pe(), { t: n } = H(), [r, i] = N([]), [s, o] = N(), [l, c] = ot(), [d, u] = ot(), [p, m] = N(), { currentGroup: f } = vl(), [g, b] = N(0), v = () => b(g + 1), [y, x] = N(), w = cs(), R = Lp(w.pathname), { hasAccess: S } = Mt(), _ = S("manage-users") || f()?.access?.manage, O = async (E, T) => {
    let I;
    if (R) {
      const k = {
        search: y || "",
        first: E,
        max: T,
        parentId: R
      };
      I = await t.groups.listSubGroups(k);
    } else {
      const k = {
        search: y || "",
        first: E || void 0,
        max: T || void 0
      };
      I = await t.groups.find(k);
    }
    return I;
  };
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(
      yb,
      {
        show: d,
        toggleDialog: u,
        selectedRows: r,
        refresh: () => {
          v(), e(), i([]);
        }
      }
    ),
    s && /* @__PURE__ */ a(
      $c,
      {
        id: s.id,
        rename: s,
        refresh: () => {
          v(), e();
        },
        handleModalToggle: () => o(void 0)
      }
    ),
    l && /* @__PURE__ */ a(
      $c,
      {
        id: r[0]?.id || R,
        handleModalToggle: c,
        refresh: () => {
          i([]), v(), e();
        }
      }
    ),
    p && /* @__PURE__ */ a(
      GT,
      {
        source: p,
        refresh: () => {
          m(void 0), v(), e();
        },
        onClose: () => m(void 0)
      }
    ),
    /* @__PURE__ */ a(
      St,
      {
        onSelect: (E) => i([...E]),
        canSelectAll: !0,
        loader: O,
        ariaLabelKey: "groups",
        isPaginated: !0,
        isSearching: !!y,
        toolbarItem: /* @__PURE__ */ C(ee, { children: [
          /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(
            Gc,
            {
              "data-testid": "group-search",
              placeholder: n("filterGroups"),
              value: y,
              onChange: (E, T) => {
                x(T);
              },
              onSearch: v,
              onClear: () => {
                x(""), v();
              }
            }
          ) }),
          /* @__PURE__ */ a(
            QY,
            {
              toggleCreate: c,
              toggleDelete: u,
              kebabDisabled: r.length === 0
            }
          )
        ] }),
        actions: _ ? [
          {
            title: n("rename"),
            onRowClick: async (E) => (o(E), !1)
          },
          {
            title: n("moveTo"),
            onRowClick: async (E) => (m(E), !1)
          },
          {
            title: n("createChildGroup"),
            onRowClick: async (E) => (i([E]), c(), !1)
          },
          {
            isSeparator: !0
          },
          {
            title: n("delete"),
            onRowClick: async (E) => (i([E]), u(), !0)
          }
        ] : [],
        columns: [
          {
            name: "name",
            displayKey: "groupName",
            cellRenderer: (E) => E.access?.view ? /* @__PURE__ */ a(Ae, { to: `${w.pathname}/${E.id}`, children: E.name }, E.id) : /* @__PURE__ */ a("span", { children: E.name })
          }
        ],
        emptyState: /* @__PURE__ */ a(
          ct,
          {
            hasIcon: !0,
            message: n(`noGroupsInThis${R ? "SubGroup" : "Realm"}`),
            instructions: n(
              `noGroupsInThis${R ? "SubGroup" : "Realm"}Instructions`
            ),
            primaryActionText: n("createGroup"),
            onPrimaryAction: c
          }
        )
      },
      `${R}${g}`
    )
  ] });
}, lJ = (e) => {
  const { t } = H();
  return /* @__PURE__ */ C(ee, { children: [
    e.username,
    " ",
    !e.enabled && /* @__PURE__ */ a(pn, { color: "red", icon: /* @__PURE__ */ a(_i, {}), children: t("disabled") })
  ] });
}, YT = ({
  membersQuery: e,
  onAdd: t,
  onClose: n
}) => {
  const { adminClient: r } = pe(), { t: i } = H(), { addError: s } = Se(), [o, l] = N([]), c = async (d, u, p) => {
    const m = await e(d, u), f = {
      first: d,
      max: u + m.length,
      search: p || ""
    };
    try {
      const g = await r.users.find({ ...f });
      return Cw(g, m, "id").slice(0, u);
    } catch (g) {
      return s("noUsersFoundError", g), [];
    }
  };
  return /* @__PURE__ */ a(
    ht,
    {
      variant: Rt.large,
      title: i("addMember"),
      isOpen: !0,
      onClose: n,
      actions: [
        /* @__PURE__ */ a(
          z,
          {
            "data-testid": "add",
            variant: "primary",
            onClick: async () => {
              await t(o), n();
            },
            children: i("add")
          },
          "confirm"
        ),
        /* @__PURE__ */ a(
          z,
          {
            "data-testid": "cancel",
            variant: "link",
            onClick: n,
            children: i("cancel")
          },
          "cancel"
        )
      ],
      children: /* @__PURE__ */ a(
        St,
        {
          loader: c,
          isPaginated: !0,
          ariaLabelKey: "titleUsers",
          searchPlaceholderKey: "searchForUser",
          canSelectAll: !0,
          onSelect: (d) => l([...d]),
          emptyState: /* @__PURE__ */ a(
            ct,
            {
              message: i("noUsersFound"),
              instructions: i("emptyInstructions")
            }
          ),
          columns: [
            {
              name: "username",
              displayKey: "username",
              cellRenderer: lJ
            },
            {
              name: "email",
              displayKey: "email",
              cellFormatters: [on()]
            },
            {
              name: "lastName",
              displayKey: "lastName",
              cellFormatters: [on()]
            },
            {
              name: "firstName",
              displayKey: "firstName",
              cellFormatters: [on()]
            }
          ]
        }
      )
    }
  );
}, cJ = (e) => /* @__PURE__ */ a(ee, { children: e.membership.map((t, n) => /* @__PURE__ */ C(ee, { children: [
  /* @__PURE__ */ a(Pg, { group: t }, t.id + "-" + e.id),
  e.membership[n + 1] ? ", " : ""
] })) }), dJ = (e) => {
  const { realm: t } = be(), { t: n } = H();
  return /* @__PURE__ */ C(Ae, { to: ai({ realm: t, id: e.id, tab: "settings" }), children: [
    e.username,
    " ",
    !e.enabled && /* @__PURE__ */ a(pn, { color: "red", icon: /* @__PURE__ */ a(_i, {}), children: n("disabled") })
  ] }, e.id);
}, uJ = () => {
  const { adminClient: e } = pe(), { t } = H(), { addAlert: n, addError: r } = Se(), i = cs(), s = Lp(i.pathname), [o, l] = N(!1), { currentGroup: c } = vl(), [d, u] = N(), [p, m] = N(!1), [f, g] = N(!1), [b, v] = N([]), { hasAccess: y } = Mt();
  Re(
    () => e.groups.findOne({ id: c().id }),
    u,
    []
  );
  const x = y("manage-users") || d?.access.manageMembership, [w, R] = N(0), S = () => R((/* @__PURE__ */ new Date()).getTime()), _ = async (T) => await e.users.listGroups({ id: T }), O = async (T, I = 0) => {
    let k = [];
    if (!I || !T)
      return k;
    const P = {
      parentId: T,
      first: 0,
      max: I
    }, D = await e.groups.listSubGroups(P);
    return k = k.concat(D), await Promise.all(
      D.map((F) => O(F.id, F.subGroupCount))
    ).then((F) => {
      F.forEach((A) => k = k.concat(A));
    }), k;
  }, E = async (T, I) => {
    if (!s)
      return [];
    let k = await e.groups.listMembers({
      id: s,
      first: T,
      max: I
    });
    if (o && d?.subGroupCount && d.id) {
      const D = await O(
        d.id,
        d.subGroupCount
      );
      await Promise.all(
        D.map((F) => e.groups.listMembers({ id: F.id }))
      ).then((F) => {
        F.forEach((A) => k = k.concat(A));
      }), k = pp(k, (F) => F.username);
    }
    const P = await Promise.all(
      k.map((D) => _(D.id))
    );
    return k.map((D, F) => ({ ...D, membership: P[F] }));
  };
  return d ? /* @__PURE__ */ C(ee, { children: [
    p && /* @__PURE__ */ a(
      YT,
      {
        membersQuery: (T, I) => e.groups.listMembers({ id: s, first: T, max: I }),
        onAdd: async (T) => {
          try {
            await Promise.all(
              T.map(
                (I) => e.users.addToGroup({ id: I.id, groupId: s })
              )
            ), n(t("usersAdded", { count: T.length }));
          } catch (I) {
            r("usersAddedError", I);
          }
        },
        onClose: () => {
          m(!1), S();
        }
      }
    ),
    /* @__PURE__ */ a(
      St,
      {
        "data-testid": "members-table",
        loader: E,
        ariaLabelKey: "members",
        isPaginated: !0,
        canSelectAll: !0,
        onSelect: (T) => v([...T]),
        toolbarItem: x && /* @__PURE__ */ C(ee, { children: [
          /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(
            z,
            {
              "data-testid": "addMember",
              variant: "primary",
              onClick: () => m(!0),
              children: t("addMember")
            }
          ) }),
          /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(
            rn,
            {
              "data-testid": "includeSubGroupsCheck",
              label: t("includeSubGroups"),
              id: "kc-include-sub-groups",
              isChecked: o,
              onChange: () => l(!o)
            }
          ) }),
          /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(
            qt,
            {
              toggle: (T) => /* @__PURE__ */ a(
                yt,
                {
                  ref: T,
                  variant: "plain",
                  onClick: () => g(!f),
                  isExpanded: f,
                  isDisabled: b.length === 0,
                  "aria-label": "Actions",
                  children: /* @__PURE__ */ a(dr, {})
                }
              ),
              shouldFocusToggleOnSelect: !0,
              isOpen: f,
              children: /* @__PURE__ */ a(Xt, { children: /* @__PURE__ */ a(
                Ke,
                {
                  component: "button",
                  onClick: async () => {
                    try {
                      await Promise.all(
                        b.map(
                          (T) => e.users.delFromGroup({
                            id: T.id,
                            groupId: s
                          })
                        )
                      ), g(!1), n(
                        t("usersLeft", { count: b.length })
                      );
                    } catch (T) {
                      r("usersLeftError", T);
                    }
                    S();
                  },
                  children: t("leave")
                },
                "action"
              ) })
            }
          ) })
        ] }),
        actions: x ? [
          {
            title: t("leave"),
            onRowClick: async (T) => {
              try {
                await e.users.delFromGroup({
                  id: T.id,
                  groupId: s
                }), n(t("usersLeft", { count: 1 }));
              } catch (I) {
                r("usersLeftError", I);
              }
              return !0;
            }
          }
        ] : [],
        columns: [
          {
            name: "username",
            displayKey: "name",
            cellRenderer: dJ
          },
          {
            name: "email",
            displayKey: "email",
            cellFormatters: [on()]
          },
          {
            name: "firstName",
            displayKey: "firstName",
            cellFormatters: [on()]
          },
          {
            name: "lastName",
            displayKey: "lastName",
            cellFormatters: [on()]
          },
          {
            name: "membership",
            displayKey: "membership",
            cellRenderer: cJ
          }
        ],
        emptyState: /* @__PURE__ */ a(
          ct,
          {
            message: t("noUsersFound"),
            instructions: x ? t("emptyInstructions") : void 0,
            primaryActionText: x ? t("addMember") : void 0,
            onPrimaryAction: () => m(!0),
            secondaryActions: [
              {
                text: t("includeSubGroups"),
                onClick: () => l(!0)
              }
            ]
          }
        )
      },
      `${s}${w}${o}`
    )
  ] }) : /* @__PURE__ */ a(gt, {});
};
function pJ() {
  const { adminClient: e } = pe(), { t } = H(), [n, r] = N(0), { subGroups: i, setSubGroups: s, currentGroup: o } = vl(), { realm: l } = be(), [c, d] = N(), [u, p] = ot(), m = Je(), f = cs(), g = Lp(f.pathname), [b, v] = ot(!0), [y, x] = N(0), w = () => x(y + 1), { hasAccess: R } = Mt(), _ = oa()(zn.AdminFineGrainedAuthz) && R("manage-authorization", "manage-users", "manage-clients"), O = R("manage-users") || o()?.access?.manage, E = R("manage-users"), T = R("query-groups", "view-users") || R("manage-users", "query-groups"), I = R("view-users") || o()?.access?.viewMembers || o()?.access?.manageMembers;
  return Re(
    async () => {
      const k = XT(f.pathname);
      if (k && k.length > i.length) {
        const D = [];
        for (const F of k) {
          let A;
          if (F !== "search" ? A = await e.groups.findOne({ id: F }) : A = { name: t("searchGroups"), id: "search" }, A)
            D.push(A);
          else
            throw new Error(t("notFound"));
        }
        return D;
      }
      return [];
    },
    (k) => {
      k.length && s(k);
    },
    [g]
  ), /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(
      yb,
      {
        show: u,
        toggleDialog: p,
        selectedRows: [o()],
        refresh: () => {
          m(zo({ realm: l })), w();
        }
      }
    ),
    c && /* @__PURE__ */ a(
      $c,
      {
        id: g,
        rename: c,
        refresh: (k) => {
          w(), s([...i.slice(0, i.length - 1), k]);
        },
        handleModalToggle: () => d(void 0)
      }
    ),
    /* @__PURE__ */ a(Te, { variant: hr.light, className: "pf-v5-u-p-0", children: /* @__PURE__ */ a(Mh, { isInline: !0, isExpanded: b, position: "left", children: /* @__PURE__ */ a(
      Fh,
      {
        panelContent: /* @__PURE__ */ a(jh, { isResizable: !0, children: /* @__PURE__ */ a(px, { children: /* @__PURE__ */ a(
          iJ,
          {
            refresh: w,
            canViewDetails: T
          }
        ) }) }),
        children: /* @__PURE__ */ C($h, { children: [
          /* @__PURE__ */ a(Yt, { content: t(b ? "hide" : "show"), children: /* @__PURE__ */ a(
            z,
            {
              "aria-label": t(b ? "hide" : "show"),
              variant: "plain",
              icon: b ? /* @__PURE__ */ a(Hs, {}) : /* @__PURE__ */ a(aN, {}),
              onClick: v
            }
          ) }),
          /* @__PURE__ */ a(xW, {}),
          /* @__PURE__ */ a(
            wt,
            {
              titleKey: g ? o()?.name : "groups",
              subKey: g ? "" : "groupsDescription",
              helpUrl: g ? "" : na.groupsUrl,
              divider: !g,
              dropdownItems: g && O ? [
                /* @__PURE__ */ a(
                  Ke,
                  {
                    "data-testid": "renameGroupAction",
                    onClick: () => d(o()),
                    children: t("renameGroup")
                  },
                  "renameGroup"
                ),
                /* @__PURE__ */ a(
                  Ke,
                  {
                    "data-testid": "deleteGroup",
                    onClick: p,
                    children: t("deleteGroup")
                  },
                  "deleteGroup"
                )
              ] : void 0
            }
          ),
          i.length > 0 && /* @__PURE__ */ C(
            Ua,
            {
              inset: {
                default: "insetNone",
                md: "insetSm",
                xl: "insetLg",
                "2xl": "inset2xl"
              },
              activeKey: n,
              onSelect: (k, P) => r(P),
              isBox: !0,
              mountOnEnter: !0,
              unmountOnExit: !0,
              children: [
                /* @__PURE__ */ a(
                  Ee,
                  {
                    "data-testid": "groups",
                    eventKey: 0,
                    title: /* @__PURE__ */ a(Ie, { children: t("childGroups") }),
                    children: /* @__PURE__ */ a(P0, { refresh: w })
                  }
                ),
                I && /* @__PURE__ */ a(
                  Ee,
                  {
                    "data-testid": "members",
                    eventKey: 1,
                    title: /* @__PURE__ */ a(Ie, { children: t("members") }),
                    children: /* @__PURE__ */ a(uJ, {})
                  }
                ),
                /* @__PURE__ */ a(
                  Ee,
                  {
                    "data-testid": "attributes",
                    eventKey: 2,
                    title: /* @__PURE__ */ a(Ie, { children: t("attributes") }),
                    children: /* @__PURE__ */ a(sJ, {})
                  }
                ),
                E && /* @__PURE__ */ a(
                  Ee,
                  {
                    eventKey: 3,
                    "data-testid": "role-mapping-tab",
                    title: /* @__PURE__ */ a(Ie, { children: t("roleMapping") }),
                    children: /* @__PURE__ */ a(oJ, { id: g, name: o()?.name })
                  }
                ),
                _ && /* @__PURE__ */ a(
                  Ee,
                  {
                    eventKey: 4,
                    "data-testid": "permissionsTab",
                    title: /* @__PURE__ */ a(Ie, { children: t("permissions") }),
                    children: /* @__PURE__ */ a(dd, { id: g, type: "groups" })
                  }
                )
              ]
            }
          ),
          i.length === 0 && /* @__PURE__ */ a(P0, { refresh: w })
        ] })
      }
    ) }, y) })
  ] });
}
const mJ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: pJ
}, Symbol.toStringTag, { value: "Module" })), JT = ({
  secretRequired: e = !0,
  create: t = !0
}) => {
  const { t: n } = H();
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(
      ve,
      {
        name: "config.clientId",
        label: n("clientId"),
        labelIcon: n("clientIdHelp"),
        rules: {
          required: n("required")
        }
      }
    ),
    /* @__PURE__ */ a(
      jo,
      {
        name: "config.clientSecret",
        label: n("clientSecret"),
        labelIcon: n("clientSecretHelp"),
        hasReveal: t,
        rules: { required: { value: e, message: n("required") } }
      }
    )
  ] });
}, Cb = () => {
  const { t: e } = H(), { control: t } = Le();
  return /* @__PURE__ */ a(
    se,
    {
      label: e("displayOrder"),
      labelIcon: /* @__PURE__ */ a(
        le,
        {
          helpText: e("displayOrderHelp"),
          fieldLabelId: "displayOrder"
        }
      ),
      fieldId: "kc-display-order",
      children: /* @__PURE__ */ a(
        ge,
        {
          name: "config.guiOrder",
          control: t,
          defaultValue: "",
          render: ({ field: n }) => /* @__PURE__ */ a(
            mt,
            {
              id: "kc-display-order",
              type: "number",
              value: n.value,
              "data-testid": "displayOrder",
              min: 0,
              onChange: (r, i) => {
                const s = Number(i);
                n.onChange(i === "" ? i : s < 0 ? 0 : s);
              }
            }
          )
        }
      )
    }
  );
}, xb = ({ id: e }) => {
  const { environment: t } = Ha(), { t: n } = H(), { realm: r } = be(), i = `${os(
    t.serverBaseUrl
  )}realms/${r}/broker`;
  return /* @__PURE__ */ a(
    se,
    {
      label: n("redirectURI"),
      labelIcon: /* @__PURE__ */ a(le, { helpText: n("redirectURIHelp"), fieldLabelId: "redirectURI" }),
      fieldId: "kc-redirect-uri",
      children: /* @__PURE__ */ a(
        ti,
        {
          isReadOnly: !0,
          children: `${i}/${e}/endpoint`
        }
      )
    }
  );
}, ZT = ({
  create: e = !0,
  id: t
}) => {
  const { t: n } = H(), { control: r } = Le(), i = nt({ control: r, name: "alias" }), { tab: s } = Qn();
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(xb, { id: i || t }),
    /* @__PURE__ */ a(
      ve,
      {
        name: "alias",
        label: n("alias"),
        labelIcon: n("aliasHelp"),
        readOnly: s === "settings",
        rules: {
          required: n("required")
        }
      }
    ),
    /* @__PURE__ */ a(ve, { name: "displayName", label: n("displayName") }),
    /* @__PURE__ */ a(JT, { create: e }),
    /* @__PURE__ */ a(Cb, {})
  ] });
};
function fJ() {
  const { adminClient: e } = pe(), { t } = H(), { providerId: n } = Vt(), r = Ue({ mode: "onChange" }), i = Tt(), s = et(() => {
    const g = [
      "org.keycloak.broker.social.SocialIdentityProvider",
      "org.keycloak.broker.provider.IdentityProvider"
    ];
    for (const b of g) {
      const v = i.componentTypes?.[b]?.find(
        ({ id: y }) => y === n
      );
      if (v)
        return v;
    }
  }, [i, n]), {
    handleSubmit: o,
    formState: { isValid: l }
  } = r, { addAlert: c, addError: d } = Se(), u = Je(), { realm: p } = be(), m = async (g) => {
    try {
      await e.identityProviders.create({
        ...g,
        providerId: n,
        alias: g.alias
      }), c(t("createIdentityProviderSuccess"), ue.success), u(
        Ei({
          realm: p,
          providerId: n,
          alias: g.alias,
          tab: "settings"
        })
      );
    } catch (b) {
      d("createError", b);
    }
  };
  return r.getValues("alias") || r.setValue("alias", n), /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(
      wt,
      {
        titleKey: t("addIdentityProvider", {
          provider: wa(n)
        })
      }
    ),
    /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ C(
      Fe,
      {
        role: "manage-identity-providers",
        isHorizontal: !0,
        onSubmit: o(m),
        children: [
          /* @__PURE__ */ C(Ve, { ...r, children: [
            /* @__PURE__ */ a(ZT, { id: n }),
            s && /* @__PURE__ */ a(
              ur,
              {
                stringify: !0,
                properties: s.properties
              }
            )
          ] }),
          /* @__PURE__ */ C(st, { children: [
            /* @__PURE__ */ a(
              z,
              {
                isDisabled: !l,
                variant: "primary",
                type: "submit",
                "data-testid": "createProvider",
                children: t("add")
              }
            ),
            /* @__PURE__ */ a(
              z,
              {
                variant: "link",
                "data-testid": "cancel",
                component: (g) => /* @__PURE__ */ a(Ae, { ...g, to: Rp({ realm: p }) }),
                children: t("cancel")
              }
            )
          ] })
        ]
      }
    ) })
  ] });
}
const hJ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: fJ
}, Symbol.toStringTag, { value: "Module" })), gJ = ({
  mapperTypes: e,
  mapperType: t,
  form: n,
  id: r,
  updateMapperType: i
}) => {
  const { t: s } = H(), { control: o } = n, [l, c] = N(!1), d = ["inherit", "import", "legacy", "force"];
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(
      ve,
      {
        name: "name",
        label: s("name"),
        labelIcon: s("addIdpMapperNameHelp"),
        readOnly: !!r,
        rules: {
          required: s("required")
        }
      }
    ),
    /* @__PURE__ */ a(
      at,
      {
        name: "config.syncMode",
        label: s("syncModeOverride"),
        labelIcon: s("syncModeOverrideHelp"),
        options: d.map((u) => ({
          key: u.toUpperCase(),
          value: s(`syncModes.${u}`)
        })),
        controller: { defaultValue: d[0].toUpperCase() }
      }
    ),
    /* @__PURE__ */ a(
      se,
      {
        label: s("mapperType"),
        labelIcon: /* @__PURE__ */ a(le, { helpText: t.helpText, fieldLabelId: "mapperType" }),
        fieldId: "identityProviderMapper",
        children: /* @__PURE__ */ a(
          ge,
          {
            name: "identityProviderMapper",
            defaultValue: e[0].id,
            control: o,
            render: ({ field: u }) => /* @__PURE__ */ a(
              ft,
              {
                toggleId: "identityProviderMapper",
                "data-testid": "idp-mapper-select",
                isDisabled: !!r,
                onToggle: () => c(!l),
                onSelect: (p) => {
                  const m = p;
                  i(m), u.onChange(m.id), c(!1);
                },
                selections: t.name,
                variant: pt.single,
                "aria-label": s("mapperType"),
                isOpen: l,
                children: e.map((p) => /* @__PURE__ */ a(
                  _e,
                  {
                    selected: p === u.value,
                    "datatest-id": p.id,
                    value: p,
                    children: p.name
                  },
                  p.name
                ))
              }
            )
          }
        )
      }
    )
  ] });
};
function bJ() {
  const { adminClient: e } = pe(), { t } = H(), n = Ue({
    shouldUnregister: !0
  }), { handleSubmit: r } = n, { addAlert: i, addError: s } = Se(), o = Je(), l = pa(), { realm: c } = be(), { id: d, providerId: u, alias: p } = Vt(), [m, f] = N(), [g, b] = N(), v = async (R) => {
    const S = Zn(R), _ = {
      ...S,
      config: {
        ...S.config
      },
      identityProviderAlias: p
    };
    if (d)
      try {
        await e.identityProviders.updateMapper(
          {
            id: d,
            alias: p
          },
          { ..._, id: d }
        ), i(t("mapperSaveSuccess"), ue.success);
      } catch (O) {
        s(t("mapperSaveError"), O);
      }
    else
      try {
        const O = await e.identityProviders.createMapper({
          identityProviderMapper: _,
          alias: p
        });
        i(t("mapperCreateSuccess"), ue.success), o(
          pT({
            realm: c,
            alias: p,
            providerId: u,
            id: O.id
          })
        );
      } catch (O) {
        s(t("mapperCreateError"), O);
      }
  }, [y, x] = ze({
    titleKey: "deleteProviderMapper",
    messageKey: t("deleteMapperConfirm", {
      mapper: g?.name
    }),
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        await e.identityProviders.delMapper({
          alias: p,
          id: d
        }), i(t("deleteMapperSuccess"), ue.success), o(
          Ei({ providerId: u, alias: p, tab: "mappers", realm: c })
        );
      } catch (R) {
        s("deleteErrorIdentityProvider", R);
      }
    }
  });
  Re(
    () => Promise.all([
      d ? e.identityProviders.findOneMapper({ alias: p, id: d }) : null,
      e.identityProviders.findMapperTypes({ alias: p })
    ]),
    ([R, S]) => {
      const _ = l(Object.values(S), or("name"));
      R ? (b(
        _.find(({ id: O }) => O === R.identityProviderMapper)
      ), w(R)) : b(_[0]), f(_);
    },
    [d]
  );
  const w = (R) => {
    In(R, n.setValue);
  };
  return !m || !g ? /* @__PURE__ */ a(gt, {}) : /* @__PURE__ */ C(Te, { variant: "light", children: [
    /* @__PURE__ */ a(x, {}),
    /* @__PURE__ */ a(
      wt,
      {
        className: "kc-add-mapper-title",
        titleKey: d ? t("editIdPMapper", {
          providerId: u[0].toUpperCase() + u.substring(1)
        }) : t("addIdPMapper", {
          providerId: u[0].toUpperCase() + u.substring(1)
        }),
        dropdownItems: d ? [
          /* @__PURE__ */ a(Ke, { onClick: y, children: t("delete") }, "delete")
        ] : void 0,
        divider: !0
      }
    ),
    /* @__PURE__ */ C(
      Fe,
      {
        role: "manage-identity-providers",
        isHorizontal: !0,
        onSubmit: r(v),
        className: "pf-v5-u-mt-lg",
        children: [
          /* @__PURE__ */ C(Ve, { ...n, children: [
            d && /* @__PURE__ */ a(
              ve,
              {
                name: "id",
                label: t("id"),
                readOnly: !0,
                rules: {
                  required: t("required")
                }
              }
            ),
            g.properties && /* @__PURE__ */ C(ee, { children: [
              /* @__PURE__ */ a(
                gJ,
                {
                  form: n,
                  id: d,
                  mapperTypes: m,
                  updateMapperType: b,
                  mapperType: g
                }
              ),
              /* @__PURE__ */ a(ur, { properties: g.properties })
            ] })
          ] }),
          /* @__PURE__ */ C(st, { children: [
            /* @__PURE__ */ a(
              z,
              {
                "data-testid": "new-mapper-save-button",
                variant: "primary",
                type: "submit",
                children: t("save")
              }
            ),
            /* @__PURE__ */ a(
              z,
              {
                "data-testid": "new-mapper-cancel-button",
                variant: "link",
                component: (R) => /* @__PURE__ */ a(
                  Ae,
                  {
                    ...R,
                    to: Ei({
                      realm: c,
                      providerId: u,
                      alias: p,
                      tab: "mappers"
                    })
                  }
                ),
                children: t("cancel")
              }
            )
          ] })
        ]
      }
    )
  ] });
}
const QT = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: bJ
}, Symbol.toStringTag, { value: "Module" })), jc = ({
  label: e,
  children: t
}) => {
  const { t: n } = H();
  return /* @__PURE__ */ a(
    se,
    {
      label: n(e),
      fieldId: e,
      labelIcon: /* @__PURE__ */ a(le, { helpText: n(`${e}Help`), fieldLabelId: e }),
      children: t
    }
  );
}, Fn = ({
  label: e,
  field: t,
  fieldType: n = "string",
  isReadOnly: r = !1,
  defaultValue: i
}) => {
  const { t: s } = H(), { control: o } = Le();
  return /* @__PURE__ */ a(jc, { label: e, children: /* @__PURE__ */ a(
    ge,
    {
      name: t,
      defaultValue: i || (n === "string" ? "false" : !1),
      control: o,
      render: ({ field: l }) => /* @__PURE__ */ a(
        Ye,
        {
          id: e,
          label: s("on"),
          labelOff: s("off"),
          isChecked: n === "string" ? l.value === "true" : l.value,
          onChange: (c, d) => l.onChange(n === "string" ? "" + d : d),
          isDisabled: r,
          "aria-label": e
        }
      )
    }
  ) });
}, Bu = ({ label: e, field: t, isReadOnly: n = !1 }) => {
  const { register: r } = Le();
  return /* @__PURE__ */ a(jc, { label: e, children: /* @__PURE__ */ a(
    mt,
    {
      id: e,
      "data-testid": e,
      readOnly: n,
      ...r(t)
    }
  ) });
}, _0 = [
  "client_secret_post",
  "client_secret_basic",
  "client_secret_jwt",
  "private_key_jwt"
], eE = ({ create: e = !0 }) => {
  const t = Tt().providers.clientSignature.providers, { t: n } = H(), { control: r } = Le(), [i, s] = N(!1), [o, l] = N(!1), c = nt({
    control: r,
    name: "config.clientAuthMethod"
  });
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(
      se,
      {
        label: n("clientAuthentication"),
        labelIcon: /* @__PURE__ */ a(
          le,
          {
            helpText: n("clientAuthenticationHelp"),
            fieldLabelId: "clientAuthentication"
          }
        ),
        fieldId: "clientAuthentication",
        children: /* @__PURE__ */ a(
          ge,
          {
            name: "config.clientAuthMethod",
            defaultValue: _0[0],
            control: r,
            render: ({ field: d }) => /* @__PURE__ */ a(
              ft,
              {
                toggleId: "clientAuthentication",
                onToggle: () => s(!i),
                onSelect: (u) => {
                  d.onChange(u), s(!1);
                },
                selections: d.value,
                variant: pt.single,
                "aria-label": n("clientAuthentication"),
                isOpen: i,
                children: _0.map((u) => /* @__PURE__ */ a(
                  _e,
                  {
                    selected: u === d.value,
                    value: u,
                    children: n(`clientAuthentications.${u}`)
                  },
                  u
                ))
              }
            )
          }
        )
      }
    ),
    /* @__PURE__ */ a(
      JT,
      {
        secretRequired: c !== "private_key_jwt",
        create: e
      }
    ),
    /* @__PURE__ */ a(
      se,
      {
        label: n("clientAssertionSigningAlg"),
        labelIcon: /* @__PURE__ */ a(
          le,
          {
            helpText: n("clientAssertionSigningAlgHelp"),
            fieldLabelId: "clientAssertionSigningAlg"
          }
        ),
        fieldId: "clientAssertionSigningAlg",
        children: /* @__PURE__ */ a(
          ge,
          {
            name: "config.clientAssertionSigningAlg",
            defaultValue: "",
            control: r,
            render: ({ field: d }) => /* @__PURE__ */ a(
              ft,
              {
                maxHeight: 200,
                toggleId: "clientAssertionSigningAlg",
                onToggle: () => l(!o),
                onSelect: (u) => {
                  d.onChange(u.toString()), l(!1);
                },
                selections: d.value || n("algorithmNotSpecified"),
                variant: pt.single,
                "aria-label": n("selectClientAssertionSigningAlg"),
                isOpen: o,
                children: [
                  /* @__PURE__ */ a(_e, { selected: d.value === "", value: "", children: n("algorithmNotSpecified") }, ""),
                  ...fp(t).map((u) => /* @__PURE__ */ a(
                    _e,
                    {
                      selected: u === d.value,
                      value: u,
                      children: u
                    },
                    u
                  ))
                ]
              }
            )
          }
        )
      }
    ),
    (c === "private_key_jwt" || c === "client_secret_jwt") && /* @__PURE__ */ a(
      Bu,
      {
        field: "config.clientAssertionAudience",
        label: "clientAssertionAudience"
      }
    ),
    c === "private_key_jwt" && /* @__PURE__ */ a(
      Fn,
      {
        field: "config.jwtX509HeadersEnabled",
        label: "jwtX509HeadersEnabled"
      }
    )
  ] });
}, tE = () => {
  const { t: e } = H(), { tab: t } = Qn(), { control: n } = Le(), r = nt({ control: n, name: "alias" });
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(xb, { id: r }),
    /* @__PURE__ */ a(
      ve,
      {
        name: "alias",
        label: e("alias"),
        labelIcon: e("aliasHelp"),
        readOnly: t === "settings",
        rules: {
          required: e("required")
        }
      }
    ),
    /* @__PURE__ */ a(ve, { name: "displayName", label: e("displayName") }),
    /* @__PURE__ */ a(Cb, {})
  ] });
}, nE = (e, t, n = {}) => {
  if (!Number.isFinite(t))
    throw new TypeError("Expected `wait` to be a finite number");
  let r, i, s = [];
  return function(...o) {
    return new Promise((l) => {
      const c = n.before && !i;
      clearTimeout(i), i = setTimeout(() => {
        i = null;
        const d = n.before ? r : e.apply(this, o);
        for (l of s)
          l(d);
        s = [];
      }, t), c ? (r = e.apply(this, o), l(r)) : s.push(l);
    });
  };
};
nE.promise = (e) => {
  let t;
  return async function(...n) {
    if (t)
      return t;
    try {
      return t = e.apply(this, n), await t;
    } finally {
      t = void 0;
    }
  };
};
const aE = ({
  id: e,
  fileUpload: t,
  children: n
}) => {
  const { adminClient: r } = pe(), { t: i } = H(), {
    setValue: s,
    clearErrors: o,
    formState: { errors: l }
  } = Le(), [c, d] = N(!0), [u, p] = N(!1), [m, f] = N(), g = (y) => {
    Object.keys(y).map((x) => s(`config.${x}`, y[x]));
  }, b = async (y) => {
    p(!0);
    try {
      const x = await r.identityProviders.importFromUrl({
        providerId: e,
        fromUrl: y
      });
      g(x), f(x);
    } catch (x) {
      return x.message;
    } finally {
      p(!1);
    }
  }, v = et(() => nE(b, 1e3), []);
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(
      se,
      {
        label: i(
          e === "oidc" ? "useDiscoveryEndpoint" : "useEntityDescriptor"
        ),
        fieldId: "kc-discovery-endpoint",
        labelIcon: /* @__PURE__ */ a(
          le,
          {
            helpText: i(
              e === "oidc" ? "useDiscoveryEndpointHelp" : "useEntityDescriptorHelp"
            ),
            fieldLabelId: "discoveryEndpoint"
          }
        ),
        children: /* @__PURE__ */ a(
          Ye,
          {
            id: "kc-discovery-endpoint-switch",
            label: i("on"),
            labelOff: i("off"),
            isChecked: c,
            onChange: (y, x) => {
              o("discoveryError"), d(x);
            },
            "aria-label": i(
              e === "oidc" ? "useDiscoveryEndpoint" : "useEntityDescriptor"
            )
          }
        )
      }
    ),
    c && /* @__PURE__ */ a(
      ve,
      {
        name: "discoveryEndpoint",
        label: i(
          e === "oidc" ? "discoveryEndpoint" : "samlEntityDescriptor"
        ),
        labelIcon: i(
          e === "oidc" ? "discoveryEndpointHelp" : "samlEntityDescriptorHelp"
        ),
        type: "url",
        placeholder: e === "oidc" ? "https://hostname/realms/master/.well-known/openid-configuration" : "",
        validated: l.discoveryError || l.discoveryEndpoint ? "error" : m ? "success" : "default",
        customIcon: u ? /* @__PURE__ */ a(ei, { isInline: !0 }) : void 0,
        rules: {
          required: i("required"),
          validate: (y) => v(y)
        }
      }
    ),
    !c && t,
    c && !l.discoveryError && n(!0),
    !c && n(!1)
  ] });
}, R0 = ["plain", "S256"], A0 = ({ readOnly: e }) => {
  const { t } = H(), { control: n } = Le(), r = nt({
    control: n,
    name: "config.validateSignature"
  }), i = nt({
    control: n,
    name: "config.useJwksUrl"
  }), s = nt({
    control: n,
    name: "config.pkceEnabled"
  });
  return /* @__PURE__ */ C("div", { className: "pf-v5-c-form pf-m-horizontal", children: [
    /* @__PURE__ */ a(
      ve,
      {
        name: "config.authorizationUrl",
        label: t("authorizationUrl"),
        type: "url",
        readOnly: e,
        rules: {
          required: t("required")
        }
      }
    ),
    /* @__PURE__ */ a(
      ve,
      {
        name: "config.tokenUrl",
        label: t("tokenUrl"),
        type: "url",
        readOnly: e,
        rules: {
          required: t("required")
        }
      }
    ),
    /* @__PURE__ */ a(
      ve,
      {
        name: "config.logoutUrl",
        label: t("logoutUrl"),
        readOnly: e
      }
    ),
    /* @__PURE__ */ a(
      ve,
      {
        name: "config.userInfoUrl",
        label: t("userInfoUrl"),
        readOnly: e
      }
    ),
    /* @__PURE__ */ a(
      ve,
      {
        name: "config.issuer",
        label: t("issuer"),
        readOnly: e
      }
    ),
    /* @__PURE__ */ a(
      bt,
      {
        name: "config.validateSignature",
        label: t("validateSignature"),
        isDisabled: e,
        stringify: !0
      }
    ),
    r === "true" && /* @__PURE__ */ C(ee, { children: [
      /* @__PURE__ */ a(
        bt,
        {
          name: "config.useJwksUrl",
          label: t("useJwksUrl"),
          isDisabled: e,
          stringify: !0
        }
      ),
      i === "true" ? /* @__PURE__ */ a(
        wr,
        {
          name: "config.jwksUrl",
          label: t("jwksUrl"),
          readOnly: e
        }
      ) : /* @__PURE__ */ C(ee, { children: [
        /* @__PURE__ */ a(
          ve,
          {
            name: "config.publicKeySignatureVerifier",
            label: "validatingPublicKey"
          }
        ),
        /* @__PURE__ */ a(
          ve,
          {
            name: "config.publicKeySignatureVerifierKeyId",
            label: t("validatingPublicKeyId"),
            readOnly: e
          }
        )
      ] })
    ] }),
    /* @__PURE__ */ a(
      bt,
      {
        name: "config.pkceEnabled",
        label: t("pkceEnabled"),
        isDisabled: e,
        stringify: !0
      }
    ),
    s === "true" && /* @__PURE__ */ a(
      at,
      {
        name: "config.pkceMethod",
        label: t("pkceMethod"),
        labelIcon: t("pkceMethodHelp"),
        controller: {
          defaultValue: R0[0]
        },
        options: R0.map((o) => ({
          key: o,
          value: t(o)
        }))
      }
    )
  ] });
}, rE = ({ readOnly: e }) => {
  const { t } = H(), [n, r] = N(!1);
  return /* @__PURE__ */ C(ee, { children: [
    e && /* @__PURE__ */ a(
      us,
      {
        className: "keycloak__discovery-settings__metadata",
        toggleText: t(n ? "hideMetaData" : "showMetaData"),
        onToggle: () => r(!n),
        isExpanded: n,
        children: /* @__PURE__ */ a(A0, { readOnly: e })
      }
    ),
    !e && /* @__PURE__ */ a(A0, { readOnly: e })
  ] });
}, vJ = () => {
  const { adminClient: e } = pe(), { t } = H(), n = "oidc", {
    setValue: r,
    setError: i,
    clearErrors: s,
    formState: { errors: o }
  } = Le(), l = (d) => {
    Object.keys(d).map((u) => r(`config.${u}`, d[u]));
  }, c = async (d) => {
    if (s("discoveryError"), !d)
      return;
    const u = new FormData();
    u.append("providerId", n), u.append("file", new Blob([JSON.stringify(d)]));
    try {
      const p = await e.identityProviders.importFromUrl(u);
      l(p);
    } catch (p) {
      i("discoveryError", {
        type: "manual",
        message: p.message
      });
    }
  };
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(nr, { headingLevel: "h2", size: "xl", className: "kc-form-panel__title", children: t("oidcSettings") }),
    /* @__PURE__ */ a(
      aE,
      {
        id: "oidc",
        fileUpload: /* @__PURE__ */ C(
          se,
          {
            label: t("importConfig"),
            fieldId: "kc-import-config",
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: t("importConfigHelp"),
                fieldLabelId: "importConfig"
              }
            ),
            children: [
              /* @__PURE__ */ a(
                Ip,
                {
                  id: "kc-import-config",
                  helpText: t("identity=providers-help:jsonFileUpload"),
                  hideDefaultPreview: !0,
                  unWrap: !0,
                  validated: o.discoveryError ? "error" : "default",
                  onChange: (d) => c(d)
                }
              ),
              o.discoveryError && /* @__PURE__ */ a(
                En,
                {
                  message: o.discoveryError.message
                }
              )
            ]
          }
        ),
        children: (d) => /* @__PURE__ */ a(rE, { readOnly: d })
      }
    )
  ] });
};
function yJ() {
  const { adminClient: e } = pe(), { t } = H(), n = Je(), { pathname: r } = cs(), i = r.includes("keycloak-oidc"), s = `${i ? "keycloak-" : ""}oidc`, o = Ue({
    defaultValues: { alias: s },
    mode: "onChange"
  }), {
    handleSubmit: l,
    formState: { isDirty: c }
  } = o, { addAlert: d, addError: u } = Se(), { realm: p } = be(), m = async (f) => {
    delete f.discoveryEndpoint;
    try {
      await e.identityProviders.create({
        ...f,
        providerId: s
      }), d(t("createIdentityProviderSuccess"), ue.success), n(
        Ei({
          realm: p,
          providerId: s,
          alias: f.alias,
          tab: "settings"
        })
      );
    } catch (g) {
      u("createIdentityProviderError", g);
    }
  };
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(
      wt,
      {
        titleKey: t(
          i ? "addKeycloakOpenIdProvider" : "addOpenIdProvider"
        )
      }
    ),
    /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ a(Ve, { ...o, children: /* @__PURE__ */ C(
      Fe,
      {
        role: "manage-identity-providers",
        isHorizontal: !0,
        onSubmit: l(m),
        children: [
          /* @__PURE__ */ a(tE, {}),
          /* @__PURE__ */ a(vJ, {}),
          /* @__PURE__ */ a(eE, {}),
          /* @__PURE__ */ C(st, { children: [
            /* @__PURE__ */ a(
              z,
              {
                isDisabled: !c,
                variant: "primary",
                type: "submit",
                "data-testid": "createProvider",
                children: t("add")
              }
            ),
            /* @__PURE__ */ a(
              z,
              {
                variant: "link",
                "data-testid": "cancel",
                component: (f) => /* @__PURE__ */ a(Ae, { ...f, to: Rp({ realm: p }) }),
                children: t("cancel")
              }
            )
          ] })
        ]
      }
    ) }) })
  ] });
}
const iE = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: yJ
}, Symbol.toStringTag, { value: "Module" })), L0 = ({ readOnly: e }) => {
  const { t } = H(), n = Le(), { control: r } = n, i = nt({
    control: r,
    name: "config.wantAuthnRequestsSigned"
  }), s = nt({
    control: r,
    name: "config.wantAssertionsEncrypted"
  }), o = nt({
    control: r,
    name: "config.validateSignature"
  }), l = nt({
    control: r,
    name: "config.useMetadataDescriptorUrl"
  }), c = nt({
    control: r,
    name: "config.principalType"
  });
  return /* @__PURE__ */ a("div", { className: "pf-v5-c-form pf-m-horizontal", children: /* @__PURE__ */ C(Ve, { ...n, children: [
    /* @__PURE__ */ a(
      ve,
      {
        name: "config.entityId",
        label: t("serviceProviderEntityId"),
        labelIcon: t("serviceProviderEntityIdHelp")
      }
    ),
    /* @__PURE__ */ a(
      ve,
      {
        name: "config.idpEntityId",
        label: t("identityProviderEntityId"),
        labelIcon: t("identityProviderEntityIdHelp"),
        "data-testid": "identityProviderEntityId",
        id: "kc-identity-provider-entity-id"
      }
    ),
    /* @__PURE__ */ a(
      ve,
      {
        name: "config.singleSignOnServiceUrl",
        label: t("ssoServiceUrl"),
        labelIcon: t("ssoServiceUrlHelp"),
        type: "url",
        readOnly: e,
        rules: { required: t("required") }
      }
    ),
    /* @__PURE__ */ a(
      ve,
      {
        name: "config.artifactResolutionServiceUrl",
        label: t("artifactResolutionServiceUrl"),
        labelIcon: t("artifactResolutionServiceUrlHelp"),
        type: "url",
        isDisabled: e
      }
    ),
    /* @__PURE__ */ a(
      ve,
      {
        name: "config.singleLogoutServiceUrl",
        label: t("singleLogoutServiceUrl"),
        labelIcon: t("singleLogoutServiceUrlHelp"),
        type: "url",
        readOnly: e,
        rules: { required: t("required") }
      }
    ),
    /* @__PURE__ */ a(
      bt,
      {
        name: "config.backchannelSupported",
        label: t("backchannelLogout"),
        isDisabled: e,
        stringify: !0
      }
    ),
    /* @__PURE__ */ a(
      bt,
      {
        name: "config.sendIdTokenOnLogout",
        label: t("sendIdTokenOnLogout"),
        defaultValue: "true",
        isDisabled: e,
        stringify: !0
      }
    ),
    /* @__PURE__ */ a(
      bt,
      {
        name: "config.sendClientIdOnLogout",
        label: t("sendClientIdOnLogout"),
        isDisabled: e,
        stringify: !0
      }
    ),
    /* @__PURE__ */ a(
      at,
      {
        name: "config.nameIDPolicyFormat",
        label: t("nameIdPolicyFormat"),
        labelIcon: t("nameIdPolicyFormatHelp"),
        controller: {
          defaultValue: "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent"
        },
        isDisabled: e,
        options: [
          {
            key: "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
            value: t("persistent")
          },
          {
            key: "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
            value: t("transient")
          },
          {
            key: "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
            value: t("email")
          },
          {
            key: "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
            value: t("kerberos")
          },
          {
            key: "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
            value: t("x509")
          },
          {
            key: "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
            value: t("windowsDomainQN")
          },
          {
            key: "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
            value: t("unspecified")
          }
        ]
      }
    ),
    /* @__PURE__ */ a(
      at,
      {
        name: "config.principalType",
        label: t("principalType"),
        labelIcon: t("principalTypeHelp"),
        controller: {
          defaultValue: "SUBJECT"
        },
        isDisabled: e,
        options: [
          { key: "SUBJECT", value: t("subjectNameId") },
          { key: "ATTRIBUTE", value: t("attributeName") },
          { key: "FRIENDLY_ATTRIBUTE", value: t("attributeFriendlyName") }
        ]
      }
    ),
    c?.includes("ATTRIBUTE") && /* @__PURE__ */ a(
      ve,
      {
        name: "config.principalAttribute",
        label: t("principalAttribute"),
        labelIcon: t("principalAttributeHelp"),
        readOnly: e
      }
    ),
    /* @__PURE__ */ a(
      bt,
      {
        name: "config.allowCreate",
        label: t("allowCreate"),
        isDisabled: e,
        stringify: !0
      }
    ),
    /* @__PURE__ */ a(
      bt,
      {
        name: "config.postBindingResponse",
        label: t("httpPostBindingResponse"),
        isDisabled: e,
        stringify: !0
      }
    ),
    /* @__PURE__ */ a(
      bt,
      {
        name: "config.artifactBindingResponse",
        label: t("artifactBindingResponse"),
        isDisabled: e,
        stringify: !0
      }
    ),
    /* @__PURE__ */ a(
      bt,
      {
        name: "config.postBindingAuthnRequest",
        label: t("httpPostBindingAuthnRequest"),
        isDisabled: e,
        stringify: !0
      }
    ),
    /* @__PURE__ */ a(
      bt,
      {
        name: "config.postBindingLogout",
        label: t("httpPostBindingLogout"),
        isDisabled: e,
        stringify: !0
      }
    ),
    /* @__PURE__ */ a(
      bt,
      {
        name: "config.wantAuthnRequestsSigned",
        label: t("wantAuthnRequestsSigned"),
        isDisabled: e,
        stringify: !0
      }
    ),
    i === "true" && /* @__PURE__ */ C(ee, { children: [
      /* @__PURE__ */ a(
        at,
        {
          name: "config.signatureAlgorithm",
          label: t("signatureAlgorithm"),
          labelIcon: t("signatureAlgorithmHelp"),
          isDisabled: e,
          controller: {
            defaultValue: "RSA_SHA256"
          },
          options: [
            "RSA_SHA1",
            "RSA_SHA256",
            "RSA_SHA256_MGF1",
            "RSA_SHA512",
            "RSA_SHA512_MGF1",
            "DSA_SHA1"
          ]
        }
      ),
      /* @__PURE__ */ a(
        at,
        {
          name: "config.xmlSigKeyInfoKeyNameTransformer",
          label: t("samlSignatureKeyName"),
          labelIcon: t("samlSignatureKeyNameHelp"),
          isDisabled: e,
          controller: {
            defaultValue: t("keyID")
          },
          options: ["NONE", t("keyID"), t("certSubject")]
        }
      )
    ] }),
    /* @__PURE__ */ a(
      bt,
      {
        name: "config.wantAssertionsSigned",
        label: t("wantAssertionsSigned"),
        isDisabled: e,
        stringify: !0
      }
    ),
    /* @__PURE__ */ a(
      bt,
      {
        name: "config.wantAssertionsEncrypted",
        label: t("wantAssertionsEncrypted"),
        isDisabled: e,
        stringify: !0
      }
    ),
    s === "true" && /* @__PURE__ */ a(
      at,
      {
        name: "config.encryptionAlgorithm",
        label: t("encryptionAlgorithm"),
        labelIcon: t("encryptionAlgorithmHelp"),
        isDisabled: e,
        controller: {
          defaultValue: "RSA-OAEP"
        },
        options: ["RSA-OAEP", "RSA1_5"]
      }
    ),
    /* @__PURE__ */ a(
      bt,
      {
        name: "config.forceAuthn",
        label: t("forceAuthentication"),
        isDisabled: e,
        stringify: !0
      }
    ),
    /* @__PURE__ */ a(
      bt,
      {
        name: "config.validateSignature",
        label: t("validateSignature"),
        isDisabled: e,
        stringify: !0
      }
    ),
    o === "true" && /* @__PURE__ */ C(ee, { children: [
      /* @__PURE__ */ a(
        ve,
        {
          name: "config.metadataDescriptorUrl",
          label: t("metadataDescriptorUrl"),
          labelIcon: t("metadataDescriptorUrlHelp"),
          type: "url",
          readOnly: e,
          rules: {
            required: {
              value: l === "true",
              message: t("required")
            }
          }
        }
      ),
      /* @__PURE__ */ a(
        bt,
        {
          name: "config.useMetadataDescriptorUrl",
          label: t("useMetadataDescriptorUrl"),
          isDisabled: e
        }
      ),
      l !== "true" && /* @__PURE__ */ a(
        wr,
        {
          name: "config.signingCertificate",
          label: t("validatingX509Certs"),
          labelIcon: t("validatingX509CertsHelp"),
          readOnly: e
        }
      )
    ] }),
    /* @__PURE__ */ a(
      bt,
      {
        name: "config.signSpMetadata",
        label: t("signServiceProviderMetadata"),
        isDisabled: e,
        stringify: !0
      }
    ),
    /* @__PURE__ */ a(
      bt,
      {
        name: "config.loginHint",
        label: t("passSubject"),
        isDisabled: e,
        stringify: !0
      }
    ),
    /* @__PURE__ */ a(
      es,
      {
        name: "config.allowedClockSkew",
        label: t("allowedClockSkew"),
        labelIcon: t("allowedClockSkewHelp"),
        controller: { defaultValue: 0, rules: { min: 0, max: 2147483 } },
        isDisabled: e
      }
    ),
    /* @__PURE__ */ a(
      es,
      {
        name: "config.attributeConsumingServiceIndex",
        label: t("attributeConsumingServiceIndex"),
        labelIcon: t("attributeConsumingServiceIndexHelp"),
        controller: { defaultValue: 0, rules: { min: 0, max: 2147483 } },
        isDisabled: e
      }
    ),
    /* @__PURE__ */ a(
      ve,
      {
        name: "config.attributeConsumingServiceName",
        label: t("attributeConsumingServiceName"),
        labelIcon: t("attributeConsumingServiceNameHelp"),
        readOnly: e
      }
    )
  ] }) });
}, sE = ({ readOnly: e }) => {
  const { t } = H(), [n, r] = N(!1);
  return e ? /* @__PURE__ */ a(
    us,
    {
      className: "keycloak__discovery-settings__metadata",
      toggleText: t(n ? "hideMetaData" : "showMetaData"),
      onToggle: (i, s) => r(s),
      isExpanded: n,
      children: /* @__PURE__ */ a(L0, { readOnly: e })
    }
  ) : /* @__PURE__ */ a(L0, { readOnly: e });
}, CJ = () => {
  const { adminClient: e } = pe(), { environment: t } = Ha(), { t: n } = H(), r = "saml", { realm: i } = be(), {
    setValue: s,
    setError: o,
    clearErrors: l,
    formState: { errors: c }
  } = Le(), d = (p) => {
    Object.entries(p).map(
      ([m, f]) => s(`config.${m}`, f)
    );
  }, u = async (p) => {
    if (l("discoveryError"), !p)
      return;
    const m = new FormData();
    m.append("providerId", r), m.append("file", new Blob([p]));
    try {
      const f = await Ii(
        `${os(
          e.baseUrl
        )}admin/realms/${i}/identity-provider/import-config`,
        {
          method: "POST",
          body: m,
          headers: no(await e.getAccessToken())
        }
      );
      if (f.ok) {
        const g = await f.json();
        d(g);
      } else
        o("discoveryError", {
          type: "manual",
          message: f.statusText
        });
    } catch (f) {
      o("discoveryError", {
        type: "manual",
        message: f.message
      });
    }
  };
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(nr, { headingLevel: "h2", size: "xl", className: "kc-form-panel__title", children: n("samlSettings") }),
    /* @__PURE__ */ a(
      ve,
      {
        name: "config.entityId",
        label: n("serviceProviderEntityId"),
        labelIcon: n("serviceProviderEntityIdHelp"),
        defaultValue: `${t.serverBaseUrl}/realms/${i}`,
        rules: {
          required: n("required")
        }
      }
    ),
    /* @__PURE__ */ a(
      aE,
      {
        id: "saml",
        fileUpload: /* @__PURE__ */ C(
          se,
          {
            label: n("importConfig"),
            fieldId: "kc-import-config",
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: n("importConfigHelp"),
                fieldLabelId: "importConfig"
              }
            ),
            children: [
              /* @__PURE__ */ a(
                zg,
                {
                  id: "kc-import-config",
                  extension: ".xml",
                  hideDefaultPreview: !0,
                  unWrap: !0,
                  validated: c.discoveryError ? "error" : "default",
                  onChange: (p) => u(p)
                }
              ),
              c.discoveryError && /* @__PURE__ */ a(
                En,
                {
                  message: c.discoveryError.message
                }
              )
            ]
          }
        ),
        children: (p) => /* @__PURE__ */ a(sE, { readOnly: p })
      }
    )
  ] });
}, oE = ({
  isAliasReadonly: e = !1
}) => {
  const { t } = H(), { realm: n } = be(), { environment: r } = Ha(), { control: i } = Le(), s = nt({ control: i, name: "alias" });
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(xb, { id: s }),
    /* @__PURE__ */ a(
      ve,
      {
        name: "alias",
        label: t("alias"),
        labelIcon: t("aliasHelp"),
        readOnly: e,
        rules: {
          required: t("required")
        }
      }
    ),
    /* @__PURE__ */ a(ve, { name: "displayName", label: t("displayName") }),
    /* @__PURE__ */ a(Cb, {}),
    e && /* @__PURE__ */ a(
      se,
      {
        label: t("endpoints"),
        fieldId: "endpoints",
        labelIcon: /* @__PURE__ */ a(le, { helpText: t("aliasHelp"), fieldLabelId: "alias" }),
        className: "keycloak__identity-providers__saml_link",
        children: /* @__PURE__ */ a(
          js,
          {
            title: t("samlEndpointsLabel"),
            href: `${r.adminBaseUrl}/realms/${n}/broker/${s}/endpoint/descriptor`,
            isInline: !0
          }
        )
      }
    )
  ] });
};
function xJ() {
  const { adminClient: e } = pe(), { t } = H(), n = Je(), r = "saml", i = Ue({
    defaultValues: { alias: r, config: { allowCreate: "true" } },
    mode: "onChange"
  }), {
    handleSubmit: s,
    formState: { isDirty: o }
  } = i, { addAlert: l, addError: c } = Se(), { realm: d } = be(), u = async (p) => {
    delete p.discoveryEndpoint;
    try {
      await e.identityProviders.create({
        ...p,
        providerId: r
      }), l(t("createIdentityProviderSuccess"), ue.success), n(
        Ei({
          realm: d,
          providerId: r,
          alias: p.alias,
          tab: "settings"
        })
      );
    } catch (m) {
      c("createIdentityProviderError", m);
    }
  };
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(wt, { titleKey: t("addSamlProvider") }),
    /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ a(Ve, { ...i, children: /* @__PURE__ */ C(
      Fe,
      {
        role: "manage-identity-providers",
        isHorizontal: !0,
        onSubmit: s(u),
        children: [
          /* @__PURE__ */ a(oE, {}),
          /* @__PURE__ */ a(CJ, {}),
          /* @__PURE__ */ C(st, { children: [
            /* @__PURE__ */ a(
              z,
              {
                isDisabled: !o,
                variant: "primary",
                type: "submit",
                "data-testid": "createProvider",
                children: t("add")
              }
            ),
            /* @__PURE__ */ a(
              z,
              {
                variant: "link",
                "data-testid": "cancel",
                component: (p) => /* @__PURE__ */ a(Ae, { ...p, to: Rp({ realm: d }) }),
                children: t("cancel")
              }
            )
          ] })
        ]
      }
    ) }) })
  ] });
}
const SJ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: xJ
}, Symbol.toStringTag, { value: "Module" })), N0 = ({
  field: e,
  label: t,
  defaultValue: n,
  labelForEmpty: r = "none"
}) => {
  const { adminClient: i } = pe(), { t: s } = H(), { control: o } = Le(), [l, c] = N(), [d, u] = N(!1);
  return Re(
    () => i.authenticationManagement.getFlows(),
    (p) => c(p.filter((m) => m.providerId === "basic-flow")),
    []
  ), /* @__PURE__ */ a(
    se,
    {
      label: s(t),
      labelIcon: /* @__PURE__ */ a(le, { helpText: s(`${t}Help`), fieldLabelId: t }),
      fieldId: t,
      children: /* @__PURE__ */ a(
        ge,
        {
          name: e,
          defaultValue: n,
          control: o,
          render: ({ field: p }) => /* @__PURE__ */ a(
            ft,
            {
              toggleId: t,
              onToggle: () => u(!d),
              onSelect: (m) => {
                p.onChange(m), u(!1);
              },
              selections: p.value || s(r),
              variant: pt.single,
              "aria-label": s(t),
              isOpen: d,
              children: [
                ...n === "" ? [
                  /* @__PURE__ */ a(_e, { value: "", children: s(r) }, "empty")
                ] : [],
                ...l?.map((m) => /* @__PURE__ */ a(
                  _e,
                  {
                    selected: m.alias === p.value,
                    value: m.alias,
                    children: m.alias
                  },
                  m.id
                )) || []
              ]
            }
          )
        }
      )
    }
  );
}, D0 = ["IMPORT", "LEGACY", "FORCE"], wJ = ({ isOIDC: e, isSAML: t }) => {
  const { t: n } = H(), {
    control: r,
    register: i,
    setValue: s,
    formState: { errors: o }
  } = Le(), c = nt({
    control: r,
    name: "config.filteredByClaim",
    defaultValue: "false"
  }) === "true", u = oa()(zn.TransientUsers), m = nt({
    control: r,
    name: "config.doNotStoreUsers",
    defaultValue: "false"
  }) === "false";
  return /* @__PURE__ */ C(ee, { children: [
    !e && !t && /* @__PURE__ */ a(Bu, { field: "config.defaultScope", label: "scopes" }),
    /* @__PURE__ */ a(Fn, { field: "storeToken", label: "storeTokens", fieldType: "boolean" }),
    (t || e) && /* @__PURE__ */ a(
      Fn,
      {
        field: "addReadTokenRoleOnCreate",
        label: "storedTokensReadable",
        fieldType: "boolean"
      }
    ),
    !e && !t && /* @__PURE__ */ C(ee, { children: [
      /* @__PURE__ */ a(
        Fn,
        {
          field: "config.acceptsPromptNoneForwardFromClient",
          label: "acceptsPromptNone"
        }
      ),
      /* @__PURE__ */ a(Fn, { field: "config.disableUserInfo", label: "disableUserInfo" })
    ] }),
    e && /* @__PURE__ */ a(Fn, { field: "config.isAccessTokenJWT", label: "isAccessTokenJWT" }),
    /* @__PURE__ */ a(Fn, { field: "trustEmail", label: "trustEmail", fieldType: "boolean" }),
    /* @__PURE__ */ a(
      Fn,
      {
        field: "linkOnly",
        label: "accountLinkingOnly",
        fieldType: "boolean"
      }
    ),
    /* @__PURE__ */ a(Fn, { field: "config.hideOnLoginPage", label: "hideOnLoginPage" }),
    (!t || e) && /* @__PURE__ */ a(jc, { label: "filteredByClaim", children: /* @__PURE__ */ a(
      ge,
      {
        name: "config.filteredByClaim",
        defaultValue: "false",
        control: r,
        render: ({ field: f }) => /* @__PURE__ */ a(
          Ye,
          {
            id: "filteredByClaim",
            label: n("on"),
            labelOff: n("off"),
            isChecked: f.value === "true",
            onChange: (g, b) => {
              f.onChange(b.toString());
            }
          }
        )
      }
    ) }),
    (!t || e) && c && /* @__PURE__ */ C(ee, { children: [
      /* @__PURE__ */ C(
        se,
        {
          label: n("claimFilterName"),
          labelIcon: /* @__PURE__ */ a(
            le,
            {
              helpText: n("claimFilterNameHelp"),
              fieldLabelId: "claimFilterName"
            }
          ),
          fieldId: "kc-claim-filter-name",
          isRequired: !0,
          children: [
            /* @__PURE__ */ a(
              mt,
              {
                isRequired: !0,
                id: "kc-claim-filter-name",
                "data-testid": "claimFilterName",
                validated: o.config?.claimFilterName ? Pn.error : Pn.default,
                ...i("config.claimFilterName", { required: !0 })
              }
            ),
            o.config?.claimFilterName && /* @__PURE__ */ a(En, { message: n("required") })
          ]
        }
      ),
      /* @__PURE__ */ C(
        se,
        {
          label: n("claimFilterValue"),
          labelIcon: /* @__PURE__ */ a(
            le,
            {
              helpText: n("claimFilterValueHelp"),
              fieldLabelId: "claimFilterName"
            }
          ),
          fieldId: "kc-claim-filter-value",
          isRequired: !0,
          children: [
            /* @__PURE__ */ a(
              mt,
              {
                isRequired: !0,
                id: "kc-claim-filter-value",
                "data-testid": "claimFilterValue",
                validated: o.config?.claimFilterValue ? Pn.error : Pn.default,
                ...i("config.claimFilterValue", { required: !0 })
              }
            ),
            o.config?.claimFilterValue && /* @__PURE__ */ a(En, { message: n("required") })
          ]
        }
      )
    ] }),
    /* @__PURE__ */ a(
      N0,
      {
        field: "firstBrokerLoginFlowAlias",
        label: "firstBrokerLoginFlowAliasOverride",
        defaultValue: "",
        labelForEmpty: ""
      }
    ),
    /* @__PURE__ */ a(
      N0,
      {
        field: "postBrokerLoginFlowAlias",
        label: "postBrokerLoginFlowAlias",
        defaultValue: ""
      }
    ),
    u && /* @__PURE__ */ a(jc, { label: "doNotStoreUsers", children: /* @__PURE__ */ a(
      ge,
      {
        name: "config.doNotStoreUsers",
        defaultValue: "false",
        control: r,
        render: ({ field: f }) => /* @__PURE__ */ a(
          Ye,
          {
            id: "doNotStoreUsers",
            label: n("on"),
            labelOff: n("off"),
            isChecked: f.value === "true",
            onChange: (g, b) => {
              f.onChange(b.toString()), b && s("config.syncMode", "IMPORT");
            }
          }
        )
      }
    ) }),
    m && /* @__PURE__ */ a(
      at,
      {
        name: "config.syncMode",
        label: n("syncMode"),
        labelIcon: n("syncModeHelp"),
        options: D0.map((f) => ({
          key: f,
          value: n(`syncModes.${f.toLocaleLowerCase()}`)
        })),
        controller: {
          defaultValue: D0[0],
          rules: { required: n("required") }
        }
      }
    ),
    /* @__PURE__ */ a(
      Fn,
      {
        field: "config.caseSensitiveOriginalUsername",
        label: "caseSensitiveOriginalUsername"
      }
    )
  ] });
}, kJ = {
  unspecified: "",
  none: "none",
  consent: "consent",
  login: "login",
  select_account: "select_account"
}, OJ = () => {
  const { t: e } = H(), { control: t } = Le(), [n, r] = N(!1), [i, s] = N(!1);
  return /* @__PURE__ */ a(
    us,
    {
      toggleText: e("advanced"),
      onToggle: () => r(!n),
      isExpanded: n,
      children: /* @__PURE__ */ C(xt, { isHorizontal: !0, children: [
        /* @__PURE__ */ a(Fn, { label: "passLoginHint", field: "config.loginHint" }),
        /* @__PURE__ */ a(Fn, { label: "passMaxAge", field: "config.passMaxAge" }),
        /* @__PURE__ */ a(Fn, { label: "passCurrentLocale", field: "config.uiLocales" }),
        /* @__PURE__ */ a(
          Fn,
          {
            field: "config.backchannelSupported",
            label: "backchannelLogout"
          }
        ),
        /* @__PURE__ */ a(
          Fn,
          {
            field: "config.sendIdTokenOnLogout",
            label: "sendIdTokenOnLogout",
            defaultValue: "true"
          }
        ),
        /* @__PURE__ */ a(
          Fn,
          {
            field: "config.sendClientIdOnLogout",
            label: "sendClientIdOnLogout"
          }
        ),
        /* @__PURE__ */ a(Fn, { field: "config.disableUserInfo", label: "disableUserInfo" }),
        /* @__PURE__ */ a(Fn, { field: "config.disableNonce", label: "disableNonce" }),
        /* @__PURE__ */ a(Bu, { field: "config.defaultScope", label: "scopes" }),
        /* @__PURE__ */ a(jc, { label: "prompt", children: /* @__PURE__ */ a(
          ge,
          {
            name: "config.prompt",
            defaultValue: "",
            control: t,
            render: ({ field: o }) => /* @__PURE__ */ a(
              ft,
              {
                toggleId: "prompt",
                onToggle: () => s(!i),
                onSelect: (l) => {
                  o.onChange(l), s(!1);
                },
                selections: o.value || e("prompts.unspecified"),
                variant: pt.single,
                "aria-label": e("prompt"),
                isOpen: i,
                children: Object.entries(kJ).map(([l, c]) => /* @__PURE__ */ a(
                  _e,
                  {
                    selected: c === o.value,
                    value: c,
                    children: e(`prompts.${l}`)
                  },
                  l
                ))
              }
            )
          }
        ) }),
        /* @__PURE__ */ a(
          Fn,
          {
            field: "config.acceptsPromptNoneForwardFromClient",
            label: "acceptsPromptNone"
          }
        ),
        /* @__PURE__ */ a(
          se,
          {
            label: e("allowedClockSkew"),
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: e("allowedClockSkewHelp"),
                fieldLabelId: "allowedClockSkew"
              }
            ),
            fieldId: "allowedClockSkew",
            children: /* @__PURE__ */ a(
              ge,
              {
                name: "config.allowedClockSkew",
                defaultValue: 0,
                control: t,
                render: ({ field: o }) => {
                  const l = Number(o.value);
                  return /* @__PURE__ */ a(
                    is,
                    {
                      "data-testid": "allowedClockSkew",
                      inputName: "allowedClockSkew",
                      min: 0,
                      max: 2147483,
                      value: l,
                      readOnly: !0,
                      onPlus: () => o.onChange(l + 1),
                      onMinus: () => o.onChange(l - 1),
                      onChange: (c) => {
                        const d = Number(
                          c.target.value
                        );
                        o.onChange(d < 0 ? 0 : d);
                      }
                    }
                  );
                }
              }
            )
          }
        ),
        /* @__PURE__ */ a(Bu, { field: "config.forwardParameters", label: "forwardParameters" })
      ] })
    }
  );
}, M0 = ["exact", "minimum", "maximum", "better"], TJ = () => {
  const { t: e } = H(), { control: t } = Le(), [n, r] = N(!1);
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(
      se,
      {
        label: e("comparison"),
        labelIcon: /* @__PURE__ */ a(le, { helpText: e("comparisonHelp"), fieldLabelId: "comparison" }),
        fieldId: "comparison",
        children: /* @__PURE__ */ a(
          ge,
          {
            name: "config.authnContextComparisonType",
            defaultValue: M0[0],
            control: t,
            render: ({ field: i }) => /* @__PURE__ */ a(
              ft,
              {
                toggleId: "comparison",
                direction: "up",
                onToggle: (s) => r(s),
                onSelect: (s) => {
                  i.onChange(s.toString()), r(!1);
                },
                selections: i.value,
                variant: pt.single,
                "aria-label": e("comparison"),
                isOpen: n,
                children: M0.map((s) => /* @__PURE__ */ a(
                  _e,
                  {
                    selected: s === i.value,
                    value: s,
                    children: e(s)
                  },
                  s
                ))
              }
            )
          }
        )
      }
    ),
    /* @__PURE__ */ a(
      se,
      {
        label: e("authnContextClassRefs"),
        fieldId: "kc-authnContextClassRefs",
        labelIcon: /* @__PURE__ */ a(
          le,
          {
            helpText: e("authnContextClassRefsHelp"),
            fieldLabelId: "authnContextClassRefs"
          }
        ),
        children: /* @__PURE__ */ a(
          yr,
          {
            name: "config.authnContextClassRefs",
            "aria-label": e("identify-providers:authnContextClassRefs"),
            addButtonLabel: "addAuthnContextClassRef",
            "data-testid": "classref-field"
          }
        )
      }
    ),
    /* @__PURE__ */ a(
      se,
      {
        label: e("authnContextDeclRefs"),
        fieldId: "kc-authnContextDeclRefs",
        labelIcon: /* @__PURE__ */ a(
          le,
          {
            helpText: e("authnContextDeclRefsHelp"),
            fieldLabelId: "authnContextDeclRefs"
          }
        ),
        children: /* @__PURE__ */ a(
          yr,
          {
            name: "config.authnContextDeclRefs",
            "aria-label": e("identify-providers:authnContextDeclRefs"),
            addButtonLabel: "addAuthnContextDeclRef",
            "data-testid": "declref-field"
          }
        )
      }
    )
  ] });
}, EJ = ({ onChange: e, value: t, save: n, toggleDeleteDialog: r }) => {
  const { adminClient: i } = pe(), { t: s } = H(), { alias: o } = Vt(), [l, c] = N(), { addAlert: d, addError: u } = Se(), { setValue: p, formState: m, control: f } = Le(), g = nt({
    control: f,
    name: "config.validateSignature"
  }), b = nt({
    control: f,
    name: "config.useMetadataDescriptorUrl"
  }), v = nt({
    control: f,
    name: "config.metadataDescriptorUrl"
  });
  Re(
    () => i.identityProviders.findOne({ alias: o }),
    (S) => {
      if (!S)
        throw new Error(s("notFound"));
      c(S);
    },
    []
  );
  const [y, x] = ze({
    titleKey: "disableProvider",
    messageKey: s("disableConfirmIdentityProvider", { provider: o }),
    continueButtonLabel: "disable",
    onConfirm: () => {
      e(!t), n();
    }
  }), w = async (S, _) => {
    try {
      const O = await i.identityProviders.importFromUrl({
        providerId: S,
        fromUrl: _
      });
      O.signingCertificate ? (p("config.signingCertificate", O.signingCertificate), d(s("importKeysSuccess"), ue.success)) : u("importKeysError", s("importKeysErrorNoSigningCertificate"));
    } catch (O) {
      u("importKeysError", O);
    }
  }, R = async (S) => {
    try {
      await i.identityProviders.reloadKeys({
        alias: S
      }) ? d(s("reloadKeysSuccess"), ue.success) : d(s("reloadKeysSuccessButFalse"), ue.warning);
    } catch (_) {
      u("reloadKeysError", _);
    }
  };
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(x, {}),
    /* @__PURE__ */ a(
      wt,
      {
        titleKey: wa(
          l ? l.displayName ? l.displayName : l.providerId : ""
        ),
        divider: !1,
        dropdownItems: [
          ...l?.providerId?.includes("saml") && g === "true" && b === "true" && v && !m.isDirty && t ? [
            /* @__PURE__ */ a(
              Ke,
              {
                onClick: () => R(l.alias),
                children: s("reloadKeys")
              },
              "reloadKeys"
            )
          ] : l?.providerId?.includes("saml") && g === "true" && b !== "true" && v && !m.isDirty ? [
            /* @__PURE__ */ a(
              Ke,
              {
                onClick: () => w(
                  l.providerId,
                  v
                ),
                children: s("importKeys")
              },
              "importKeys"
            )
          ] : [],
          /* @__PURE__ */ a(_t, {}, "separator"),
          /* @__PURE__ */ a(Ke, { onClick: () => r(), children: s("delete") }, "delete")
        ],
        isEnabled: t,
        onToggle: (S) => {
          S ? (e(S), n()) : y();
        }
      }
    )
  ] });
}, IJ = ({ name: e, mapperId: t, provider: n }) => {
  const { realm: r } = be(), { alias: i } = Vt();
  return /* @__PURE__ */ a(
    Ae,
    {
      to: pT({
        realm: r,
        alias: i,
        providerId: n?.providerId,
        id: t
      }),
      children: e
    }
  );
};
function PJ() {
  const { adminClient: e } = pe(), { t } = H(), { alias: n, providerId: r } = Vt(), i = oa(), s = Ue(), { handleSubmit: o, getValues: l, reset: c } = s, [d, u] = N(), [p, m] = N(), f = Tt(), g = et(() => {
    const L = [
      "org.keycloak.broker.social.SocialIdentityProvider",
      "org.keycloak.broker.provider.IdentityProvider"
    ];
    for (const K of L) {
      const B = f.componentTypes?.[K]?.find(
        ({ id: j }) => j === r
      );
      if (B)
        return B;
    }
  }, [f, r]), { addAlert: b, addError: v } = Se(), y = Je(), { realm: x } = be(), [w, R] = N(0), S = () => R(w + 1);
  Re(
    () => e.identityProviders.findOne({ alias: n }),
    (L) => {
      if (!L)
        throw new Error(t("notFound"));
      c(L), u(L), L.config.authnContextClassRefs && s.setValue(
        "config.authnContextClassRefs",
        JSON.parse(L.config?.authnContextClassRefs)
      ), L.config.authnContextDeclRefs && s.setValue(
        "config.authnContextDeclRefs",
        JSON.parse(L.config?.authnContextDeclRefs)
      );
    },
    []
  );
  const _ = (L) => Ei({
    realm: x,
    alias: n,
    providerId: r,
    tab: L
  }), O = (L) => jn(_(L)), E = O("settings"), T = O("mappers"), I = O("permissions"), k = async (L) => {
    const K = L || l(), B = K.config?.authnContextClassRefs;
    K.config?.authnContextClassRefs && (K.config.authnContextClassRefs = JSON.stringify(
      K.config.authnContextClassRefs
    ));
    const j = K.config?.authnContextDeclRefs;
    K.config?.authnContextDeclRefs && (K.config.authnContextDeclRefs = JSON.stringify(
      K.config.authnContextDeclRefs
    ));
    try {
      await e.identityProviders.update(
        { alias: n },
        {
          ...K,
          config: { ...d?.config, ...K.config },
          alias: n,
          providerId: r
        }
      ), B && (K.config.authnContextClassRefs = B), j && (K.config.authnContextDeclRefs = j), c(K), b(t("updateSuccessIdentityProvider"), ue.success);
    } catch (W) {
      v("updateErrorIdentityProvider", W);
    }
  }, [P, D] = ze({
    titleKey: "deleteProvider",
    messageKey: t("deleteConfirmIdentityProvider", { provider: n }),
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        await e.identityProviders.del({ alias: n }), b(t("deletedSuccessIdentityProvider"), ue.success), y(Rp({ realm: x }));
      } catch (L) {
        v("deleteErrorIdentityProvider", L);
      }
    }
  }), [F, A] = ze({
    titleKey: "deleteProviderMapper",
    messageKey: t("deleteMapperConfirm", {
      mapper: p?.name
    }),
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        await e.identityProviders.delMapper({
          alias: n,
          id: p?.mapperId
        }), b(t("deleteMapperSuccess"), ue.success), S(), y(
          Ei({ providerId: r, alias: n, tab: "mappers", realm: x })
        );
      } catch (L) {
        v("deleteErrorIdentityProvider", L);
      }
    }
  });
  if (!d)
    return /* @__PURE__ */ a(gt, {});
  const M = d.providerId.includes("oidc"), V = d.providerId.includes("saml"), U = !M && !V, G = async () => {
    const [L, K] = await Promise.all([
      e.identityProviders.findMappers({ alias: n }),
      e.identityProviders.findMapperTypes({ alias: n })
    ]);
    return L.map((j) => {
      const W = Object.values(K).find(
        (te) => j.identityProviderMapper === te.id
      );
      return {
        ...W,
        name: j.name,
        type: W?.name,
        mapperId: j.id
      };
    });
  }, q = [
    {
      title: t("generalSettings"),
      panel: /* @__PURE__ */ C(
        Fe,
        {
          role: "manage-identity-providers",
          isHorizontal: !0,
          onSubmit: o(k),
          children: [
            U && /* @__PURE__ */ a(ZT, { create: !1, id: r }),
            M && /* @__PURE__ */ a(tE, {}),
            V && /* @__PURE__ */ a(oE, { isAliasReadonly: !0 }),
            g && /* @__PURE__ */ a(ur, { stringify: !0, properties: g.properties })
          ]
        }
      )
    },
    {
      title: t("oidcSettings"),
      isHidden: !M,
      panel: /* @__PURE__ */ C(ee, { children: [
        /* @__PURE__ */ a(rE, { readOnly: !1 }),
        /* @__PURE__ */ C(xt, { isHorizontal: !0, className: "pf-v5-u-py-lg", children: [
          /* @__PURE__ */ a(_t, {}),
          /* @__PURE__ */ a(eE, { create: !1 })
        ] }),
        /* @__PURE__ */ a(OJ, {})
      ] })
    },
    {
      title: t("samlSettings"),
      isHidden: !V,
      panel: /* @__PURE__ */ a(sE, { readOnly: !1 })
    },
    {
      title: t("reqAuthnConstraints"),
      isHidden: !V,
      panel: /* @__PURE__ */ a(
        Fe,
        {
          role: "manage-identity-providers",
          isHorizontal: !0,
          onSubmit: o(k),
          children: /* @__PURE__ */ a(TJ, {})
        }
      )
    },
    {
      title: t("advancedSettings"),
      panel: /* @__PURE__ */ C(
        Fe,
        {
          role: "manage-identity-providers",
          isHorizontal: !0,
          onSubmit: o(k),
          children: [
            /* @__PURE__ */ a(wJ, { isOIDC: M, isSAML: V }),
            /* @__PURE__ */ a(_r, { name: "idp-details", isSubmit: !0, reset: c })
          ]
        }
      )
    }
  ];
  return /* @__PURE__ */ C(Ve, { ...s, children: [
    /* @__PURE__ */ a(D, {}),
    /* @__PURE__ */ a(A, {}),
    /* @__PURE__ */ a(
      ge,
      {
        name: "enabled",
        control: s.control,
        defaultValue: !0,
        render: ({ field: L }) => /* @__PURE__ */ a(
          EJ,
          {
            value: L.value || !1,
            onChange: L.onChange,
            save: k,
            toggleDeleteDialog: P
          }
        )
      }
    ),
    /* @__PURE__ */ a(Te, { variant: "light", className: "pf-v5-u-p-0", children: /* @__PURE__ */ C($n, { isBox: !0, defaultLocation: _("settings"), children: [
      /* @__PURE__ */ a(
        Ee,
        {
          id: "settings",
          title: /* @__PURE__ */ a(Ie, { children: t("settings") }),
          ...E,
          children: /* @__PURE__ */ a(
            ll,
            {
              label: t("jumpToSection"),
              className: "pf-v5-u-px-lg",
              sections: q
            }
          )
        }
      ),
      /* @__PURE__ */ a(
        Ee,
        {
          id: "mappers",
          "data-testid": "mappers-tab",
          title: /* @__PURE__ */ a(Ie, { children: t("mappers") }),
          ...T,
          children: /* @__PURE__ */ a(
            St,
            {
              emptyState: /* @__PURE__ */ a(
                ct,
                {
                  message: t("noMappers"),
                  instructions: t("noMappersInstructions"),
                  primaryActionText: t("addMapper"),
                  onPrimaryAction: () => y(
                    g0({
                      realm: x,
                      alias: n,
                      providerId: d.providerId,
                      tab: "mappers"
                    })
                  )
                }
              ),
              loader: G,
              ariaLabelKey: "mappersList",
              searchPlaceholderKey: "searchForMapper",
              toolbarItem: /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(
                z,
                {
                  id: "add-mapper-button",
                  component: (L) => /* @__PURE__ */ a(
                    Ae,
                    {
                      ...L,
                      to: g0({
                        realm: x,
                        alias: n,
                        providerId: d.providerId,
                        tab: "mappers"
                      })
                    }
                  ),
                  "data-testid": "addMapper",
                  children: t("addMapper")
                }
              ) }),
              columns: [
                {
                  name: "name",
                  displayKey: "name",
                  cellRenderer: (L) => /* @__PURE__ */ a(IJ, { ...L, provider: d })
                },
                {
                  name: "category",
                  displayKey: "category"
                },
                {
                  name: "type",
                  displayKey: "type"
                }
              ],
              actions: [
                {
                  title: t("delete"),
                  onRowClick: (L) => {
                    m(L), F();
                  }
                }
              ]
            },
            w
          )
        }
      ),
      i(zn.AdminFineGrainedAuthz) && /* @__PURE__ */ a(
        Ee,
        {
          id: "permissions",
          "data-testid": "permissionsTab",
          title: /* @__PURE__ */ a(Ie, { children: t("permissions") }),
          ...I,
          children: /* @__PURE__ */ a(dd, { id: n, type: "identityProviders" })
        }
      )
    ] }) })
  ] });
}
const _J = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: PJ
}, Symbol.toStringTag, { value: "Module" })), RJ = ({ onClose: e }) => {
  const { adminClient: t } = pe(), { t: n } = H(), { addAlert: r, addError: i } = Se(), [s, o] = N(""), [l, c] = N(), [d, u] = N([]), p = ({ index: g }) => (o(n("onDragStart", { item: d[g] })), !0), m = ({ index: g }) => {
    o(n("onDragMove", { item: d[g] }));
  }, f = (g, b) => {
    if (b) {
      const v = [...d], [y] = v.splice(g.index, 1);
      return v.splice(b.index, 0, y), o(n("onDragFinish", { list: v })), u(v), !0;
    } else
      return o(n("onDragCancel")), !1;
  };
  return Re(
    () => t.identityProviders.find(),
    (g) => {
      c(g), u(
        zr(g, ["config.guiOrder", "alias"]).map(
          (b) => b.alias
        )
      );
    },
    []
  ), l ? /* @__PURE__ */ C(
    ht,
    {
      variant: Rt.small,
      title: n("manageDisplayOrder"),
      isOpen: !0,
      onClose: e,
      actions: [
        /* @__PURE__ */ a(
          z,
          {
            id: "modal-confirm",
            "data-testid": "confirm",
            onClick: async () => {
              const g = d.map((b, v) => {
                const y = l.find((x) => x.alias === b);
                return y.config.guiOrder = v, t.identityProviders.update({ alias: b }, y);
              });
              try {
                await Promise.all(g), r(n("orderChangeSuccess"));
              } catch (b) {
                i("orderChangeError", b);
              }
              e();
            },
            children: n("save")
          },
          "confirm"
        ),
        /* @__PURE__ */ a(
          z,
          {
            id: "modal-cancel",
            "data-testid": "cancel",
            variant: xe.link,
            onClick: e,
            children: n("cancel")
          },
          "cancel"
        )
      ],
      children: [
        /* @__PURE__ */ a(Pt, { className: "pf-v5-u-pb-lg", children: /* @__PURE__ */ a(tt, { children: n("orderDialogIntro") }) }),
        /* @__PURE__ */ a(
          Ah,
          {
            onDrag: p,
            onDragMove: m,
            onDrop: f,
            children: /* @__PURE__ */ a(Nh, { hasNoWrapper: !0, children: /* @__PURE__ */ a(
              ar,
              {
                "aria-label": n("manageOrderTableAria"),
                "data-testid": "manageOrderDataList",
                isCompact: !0,
                children: d.map((g) => /* @__PURE__ */ a(Lh, { hasNoWrapper: !0, children: /* @__PURE__ */ a(Ta, { "aria-label": g, id: g, children: /* @__PURE__ */ C(Ba, { children: [
                  /* @__PURE__ */ a(_h, { children: /* @__PURE__ */ a(Rh, { "aria-label": n("dragHelp") }) }),
                  /* @__PURE__ */ a(
                    ja,
                    {
                      dataListCells: [
                        /* @__PURE__ */ a(aa, { "data-testid": g, children: g }, g)
                      ]
                    }
                  )
                ] }) }) }, g))
              }
            ) })
          }
        ),
        /* @__PURE__ */ a("div", { className: "pf-v5-screen-reader", "aria-live": "assertive", children: s })
      ]
    }
  ) : /* @__PURE__ */ a(gt, {});
}, AJ = (e) => {
  const { t } = H(), { realm: n } = be();
  return /* @__PURE__ */ C(
    Ae,
    {
      to: Ei({
        realm: n,
        providerId: e.providerId,
        alias: e.alias,
        tab: "settings"
      }),
      children: [
        e.displayName || e.alias,
        !e.enabled && /* @__PURE__ */ a(
          Wr,
          {
            isRead: !0,
            className: "pf-v5-u-ml-sm",
            children: t("disabled")
          },
          `${e.providerId}-disabled`
        )
      ]
    },
    e.providerId
  );
}, LJ = (e) => {
  const { t } = H(), { realm: n } = be();
  return e.config?.["kc.org"] ? /* @__PURE__ */ a(
    Ae,
    {
      to: gT({
        realm: n,
        id: e.config["kc.org"],
        tab: "identityProviders"
      }),
      children: t("organization")
    },
    e.providerId
  ) : "—";
};
function NJ() {
  const { adminClient: e } = pe(), { t } = H(), n = J6(
    Tt().identityProviders,
    "groupName"
  ), { realm: r } = be(), i = Je(), [s, o] = N(0), l = () => o(s + 1), [c, d] = N(!1), [u, p] = N(!1), [m, f] = N(!1), [g, b] = N(), { addAlert: v, addError: y } = Se();
  Re(
    async () => e.identityProviders.find({ max: 1 }),
    (O) => {
      f(O.length === 1);
    },
    [s]
  );
  const x = async (O, E, T) => {
    const I = {
      first: O,
      max: E
    };
    T && (I.search = T);
    const k = await e.identityProviders.find(I);
    return zr(k, ["config.guiOrder", "alias"]);
  }, w = (O) => i(
    b0({
      realm: r,
      providerId: O
    })
  ), R = () => Object.keys(n).map((O) => /* @__PURE__ */ a(Bh, { label: O, children: zr(n[O], "name").map((E) => /* @__PURE__ */ a(
    Ke,
    {
      value: E.id,
      component: "a",
      "data-testid": E.id,
      onClick: () => i(
        b0({
          realm: r,
          providerId: E.id
        })
      ),
      children: E.name
    },
    E.id
  )) }, O)), [S, _] = ze({
    titleKey: "deleteProvider",
    messageKey: t("deleteConfirm", { provider: g?.alias }),
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        await e.identityProviders.del({
          alias: g.alias
        }), l(), v(t("deletedSuccessIdentityProvider"), ue.success);
      } catch (O) {
        y("deleteErrorIdentityProvider", O);
      }
    }
  });
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(_, {}),
    u && /* @__PURE__ */ a(
      RJ,
      {
        onClose: () => {
          p(!1), l();
        }
      }
    ),
    /* @__PURE__ */ a(
      wt,
      {
        titleKey: "identityProviders",
        subKey: "listExplain",
        helpUrl: na.identityProvidersUrl
      }
    ),
    /* @__PURE__ */ C(
      Te,
      {
        variant: m ? "light" : "default",
        className: m ? "pf-v5-u-p-0" : "",
        children: [
          !m && /* @__PURE__ */ C(ee, { children: [
            /* @__PURE__ */ a(Pt, { children: /* @__PURE__ */ a(tt, { component: Wt.p, children: t("getStarted") }) }),
            Object.keys(n).map((O) => /* @__PURE__ */ C(ka, { children: [
              /* @__PURE__ */ a(Pt, { children: /* @__PURE__ */ C(tt, { className: "pf-v5-u-mt-lg", component: Wt.h2, children: [
                O,
                ":"
              ] }) }),
              /* @__PURE__ */ a("hr", { className: "pf-v5-u-mb-lg" }),
              /* @__PURE__ */ a(du, { hasGutter: !0, children: zr(n[O], "name").map((E) => /* @__PURE__ */ a(
                zT,
                {
                  "data-testid": `${E.id}-card`,
                  onClick: () => w(E.id),
                  children: /* @__PURE__ */ a(br, { children: /* @__PURE__ */ C(Jn, { hasGutter: !0, children: [
                    /* @__PURE__ */ a(Dt, { children: /* @__PURE__ */ a(BF, { icon: E.id }) }),
                    /* @__PURE__ */ a(Dt, { isFilled: !0, children: E.name })
                  ] }) })
                },
                E.id
              )) })
            ] }, O))
          ] }),
          m && /* @__PURE__ */ a(
            St,
            {
              loader: x,
              isPaginated: !0,
              ariaLabelKey: "identityProviders",
              searchPlaceholderKey: "searchForProvider",
              toolbarItem: /* @__PURE__ */ C(ee, { children: [
                /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(
                  qt,
                  {
                    "data-testid": "addProviderDropdown",
                    toggle: (O) => /* @__PURE__ */ a(
                      yt,
                      {
                        ref: O,
                        onClick: () => d(!c),
                        variant: "primary",
                        children: t("addProvider")
                      }
                    ),
                    isOpen: c,
                    children: /* @__PURE__ */ a(Xt, { children: R() })
                  }
                ) }),
                /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(
                  z,
                  {
                    "data-testid": "manageDisplayOrder",
                    variant: "link",
                    onClick: () => p(!0),
                    children: t("manageDisplayOrder")
                  }
                ) })
              ] }),
              actions: [
                {
                  title: t("delete"),
                  onRowClick: (O) => {
                    b(O), S();
                  }
                }
              ],
              columns: [
                {
                  name: "alias",
                  displayKey: "name",
                  cellRenderer: AJ
                },
                {
                  name: "providerId",
                  displayKey: "providerDetails",
                  cellFormatters: [rd()]
                },
                {
                  name: "config['kc.org']",
                  displayKey: "linkedOrganization",
                  cellRenderer: LJ
                }
              ]
            },
            s
          )
        ]
      }
    )
  ] });
}
const DJ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: NJ
}, Symbol.toStringTag, { value: "Module" })), fee = ({
  save: e
}) => {
  const { adminClient: t } = pe(), { realm: n } = be(), r = Je(), { t: i } = H(), { addAlert: s, addError: o } = Se(), l = nt({ name: "id" }), c = nt({ name: "name" }), { setValue: d } = Le(), [u, p] = ze({
    titleKey: "disableConfirmOrganizationTitle",
    messageKey: "disableConfirmOrganization",
    continueButtonLabel: "disable",
    onConfirm: () => {
      d("enabled", !1), e();
    }
  }), [m, f] = ze({
    titleKey: "organizationDelete",
    messageKey: "organizationDeleteConfirm",
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        await t.organizations.delById({ id: l }), s(i("organizationDeletedSuccess")), r(TX({ realm: n }));
      } catch (g) {
        o("organizationDeleteError", g);
      }
    }
  });
  return /* @__PURE__ */ a(
    ge,
    {
      name: "enabled",
      render: ({ field: { value: g, onChange: b } }) => /* @__PURE__ */ C(ee, { children: [
        /* @__PURE__ */ a(f, {}),
        /* @__PURE__ */ a(p, {}),
        /* @__PURE__ */ a(
          wt,
          {
            titleKey: c || "",
            divider: !1,
            dropdownItems: [
              /* @__PURE__ */ a(
                Ke,
                {
                  "data-testid": "delete-client",
                  onClick: m,
                  children: i("delete")
                },
                "delete"
              )
            ],
            isEnabled: g,
            onToggle: (v) => {
              v ? (b(v), e()) : u();
            }
          }
        )
      ] })
    }
  );
}, MJ = ({
  name: e,
  label: t,
  helpText: n,
  defaultValue: r,
  isRequired: i,
  variant: s = "typeahead",
  isDisabled: o
}) => {
  const { adminClient: l } = pe(), { t: c } = H(), {
    control: d,
    getValues: u,
    formState: { errors: p }
  } = Le(), m = u(e), [f, g, b] = ot(), [v, y] = N(""), x = Ct(), [w, R] = N([]), [S, _] = N(""), O = bn(xg(_, 1e3), []);
  Re(
    async () => {
      const T = {
        max: 20
      };
      return S && (T.search = S), (await l.identityProviders.find(T)).filter((k) => !k.config?.["kc.org"]);
    },
    R,
    [S]
  );
  const E = (T) => {
    const I = T.map((k) => /* @__PURE__ */ a(
      _e,
      {
        value: k.alias,
        selected: m?.includes(k.alias),
        children: k.alias
      },
      k.alias
    ));
    return I.length === 0 ? /* @__PURE__ */ a(_e, { value: "", children: c("noResultsFound") }) : I;
  };
  return w ? /* @__PURE__ */ C(
    se,
    {
      label: c(t),
      isRequired: i,
      labelIcon: n ? /* @__PURE__ */ a(le, { helpText: n, fieldLabelId: t }) : void 0,
      fieldId: e,
      children: [
        /* @__PURE__ */ a(
          ge,
          {
            name: e,
            defaultValue: r,
            control: d,
            rules: {
              validate: (T) => i && T.filter((I) => I !== void 0).length === 0 ? c("required") : void 0
            },
            render: ({ field: T }) => /* @__PURE__ */ a(
              Bn,
              {
                id: e,
                toggle: (I) => /* @__PURE__ */ a(
                  yt,
                  {
                    "data-testid": e,
                    ref: I,
                    variant: "typeahead",
                    onClick: g,
                    isExpanded: f,
                    isFullWidth: !0,
                    isDisabled: o,
                    status: p[e] ? "danger" : void 0,
                    children: /* @__PURE__ */ C(Qo, { isPlain: !0, children: [
                      /* @__PURE__ */ a(
                        el,
                        {
                          value: v || T.value,
                          onClick: g,
                          onChange: (k, P) => {
                            b(!0), y(P), O(P);
                          },
                          autoComplete: "off",
                          innerRef: x,
                          placeholderText: c("selectAUser"),
                          ...T.value && {
                            "aria-activedescendant": T.value
                          },
                          role: "combobox",
                          isExpanded: f,
                          "aria-controls": "select-create-typeahead-listbox",
                          children: s === "typeaheadMulti" && Array.isArray(T.value) && /* @__PURE__ */ a(vn, { "aria-label": "Current selections", children: T.value.map(
                            (k, P) => /* @__PURE__ */ a(
                              Ut,
                              {
                                onClick: (D) => {
                                  D.stopPropagation(), T.onChange(
                                    T.value.filter(
                                      (F) => F !== k
                                    )
                                  );
                                },
                                children: k
                              },
                              P
                            )
                          ) })
                        }
                      ),
                      /* @__PURE__ */ a(tl, { children: !!S && /* @__PURE__ */ a(
                        z,
                        {
                          variant: "plain",
                          onClick: () => {
                            y(""), _(""), T.onChange([]), x?.current?.focus();
                          },
                          "aria-label": c("clear"),
                          children: /* @__PURE__ */ a(Oa, { "aria-hidden": !0 })
                        }
                      ) })
                    ] })
                  }
                ),
                isOpen: f,
                selected: T.value,
                onSelect: (I, k) => {
                  const P = k?.toString();
                  if (s !== "typeaheadMulti") {
                    const D = T.value.includes(P);
                    D ? T.onChange([]) : T.onChange([P]), y(D ? "" : P || ""), b(!1);
                  } else {
                    const D = T.value.find(
                      (F) => F === P
                    ) ? T.value.filter((F) => F !== P) : [...T.value, P];
                    T.onChange(D);
                  }
                },
                "aria-label": c(e),
                children: /* @__PURE__ */ a(ia, { children: E(w) })
              }
            )
          }
        ),
        p[e] && /* @__PURE__ */ a(En, { message: c("required") })
      ]
    }
  ) : /* @__PURE__ */ a(gt, {});
}, FJ = ({
  orgId: e,
  identityProvider: t,
  onClose: n
}) => {
  const { adminClient: r } = pe(), { t: i } = H(), { addAlert: s, addError: o } = Se(), l = Ue({ mode: "onChange" }), { handleSubmit: c, formState: d, setValue: u } = l, { getValues: p } = Le();
  He(
    () => In(
      { ...t, alias: [t?.alias] },
      u
    ),
    []
  );
  const m = async (f) => {
    try {
      const g = await r.identityProviders.findOne(
        {
          alias: f.alias[0]
        }
      );
      if (!g)
        throw new Error(i("notFound"));
      const { config: b } = Zn(f);
      g.config = {
        ...g.config,
        ...b
      }, await r.identityProviders.update(
        { alias: f.alias[0] },
        g
      ), t || await r.organizations.linkIdp({
        orgId: e,
        alias: f.alias[0]
      }), s(
        i(t ? "linkUpdatedSuccessful" : "linkSuccessful")
      ), n();
    } catch (g) {
      o(t ? "linkUpdatedError" : "linkError", g);
    }
  };
  return /* @__PURE__ */ a(
    ht,
    {
      variant: Rt.small,
      title: i("linkIdentityProvider"),
      isOpen: !0,
      onClose: n,
      actions: [
        /* @__PURE__ */ a(
          eo,
          {
            formState: d,
            "data-testid": "confirm",
            form: "form",
            allowInvalid: !0,
            allowNonDirty: !0,
            children: i("save")
          },
          "confirm"
        ),
        /* @__PURE__ */ a(
          z,
          {
            id: "modal-cancel",
            "data-testid": "cancel",
            variant: xe.link,
            onClick: n,
            children: i("cancel")
          },
          "cancel"
        )
      ],
      children: /* @__PURE__ */ a(Ve, { ...l, children: /* @__PURE__ */ C(xt, { id: "form", onSubmit: c(m), children: [
        /* @__PURE__ */ a(
          MJ,
          {
            name: "alias",
            label: i("identityProvider"),
            defaultValue: [],
            isRequired: !0,
            isDisabled: !!t
          }
        ),
        /* @__PURE__ */ a(
          at,
          {
            name: Ne("config.kc.org.domain"),
            label: i("domain"),
            controller: { defaultValue: "" },
            options: [
              { key: "", value: i("none") },
              ...p("domains").map((f) => ({ key: f, value: f }))
            ],
            menuAppendTo: "parent"
          }
        ),
        /* @__PURE__ */ a(
          bt,
          {
            name: Ne("config.kc.org.broker.public"),
            label: i("shownOnLoginPage"),
            labelIcon: i("shownOnLoginPageHelp"),
            stringify: !0
          }
        ),
        /* @__PURE__ */ a(
          bt,
          {
            name: Ne(
              "config.kc.org.broker.redirect.mode.email-matches"
            ),
            label: i("redirectWhenEmailMatches"),
            labelIcon: i("redirectWhenEmailMatchesHelp"),
            stringify: !0
          }
        )
      ] }) })
    }
  );
}, $J = ({
  row: e,
  refresh: t
}) => {
  const { adminClient: n } = pe(), { addAlert: r, addError: i } = Se(), { t: s } = H(), o = async (l) => {
    try {
      await n.identityProviders.update(
        { alias: e.alias },
        {
          ...e,
          config: {
            ...e.config,
            "kc.org.broker.public": `${l}`
          }
        }
      ), r(s("linkUpdatedSuccessful")), t();
    } catch (c) {
      i("linkUpdatedError", c);
    }
  };
  return /* @__PURE__ */ a(
    Ye,
    {
      label: s("on"),
      labelOff: s("off"),
      isChecked: e.config?.["kc.org.broker.public"] === "true",
      onChange: (l, c) => o(c)
    }
  );
}, hee = () => {
  const { adminClient: e } = pe(), { t } = H(), { id: n } = Qn(), { addAlert: r, addError: i } = Se(), [s, o] = N(0), l = () => o(s + 1), [c, d] = N(!1), [u, p] = N(), [m, f] = ot();
  Re(
    async () => e.identityProviders.find({ max: 1 }),
    (y) => {
      d(y.length === 1);
    },
    []
  );
  const g = () => e.organizations.listIdentityProviders({ orgId: n }), [b, v] = ze({
    titleKey: "identityProviderUnlink",
    messageKey: "identityProviderUnlinkConfirm",
    continueButtonLabel: "unLinkIdentityProvider",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        await e.organizations.unLinkIdp({
          orgId: n,
          alias: u.alias
        }), p(void 0), r(t("unLinkSuccessful")), l();
      } catch (y) {
        i("unLinkError", y);
      }
    }
  });
  return /* @__PURE__ */ C(Te, { variant: "light", children: [
    /* @__PURE__ */ a(v, {}),
    m && /* @__PURE__ */ a(
      FJ,
      {
        orgId: n,
        identityProvider: u,
        onClose: () => {
          f(), l();
        }
      }
    ),
    c ? /* @__PURE__ */ a(
      St,
      {
        loader: g,
        ariaLabelKey: "identityProviders",
        searchPlaceholderKey: "searchProvider",
        toolbarItem: /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(
          z,
          {
            onClick: () => {
              p(void 0), f();
            },
            children: t("linkIdentityProvider")
          }
        ) }),
        actions: [
          {
            title: t("edit"),
            onRowClick: (y) => {
              p(y), f();
            }
          },
          {
            title: t("unLinkIdentityProvider"),
            onRowClick: (y) => {
              p(y), b();
            }
          }
        ],
        columns: [
          {
            name: "alias"
          },
          {
            name: "config['kc.org.domain']",
            displayKey: "domain"
          },
          {
            name: "providerId",
            displayKey: "providerDetails"
          },
          {
            name: "config['kc.org.broker.public']",
            displayKey: "shownOnLoginPage",
            cellRenderer: (y) => /* @__PURE__ */ a($J, { row: y, refresh: l })
          }
        ],
        emptyState: /* @__PURE__ */ a(
          ct,
          {
            message: t("emptyIdentityProviderLink"),
            instructions: t("emptyIdentityProviderLinkInstructions"),
            primaryActionText: t("linkIdentityProvider"),
            onPrimaryAction: f
          }
        )
      },
      s
    ) : /* @__PURE__ */ a(
      ct,
      {
        icon: xh,
        message: t("noIdentityProvider"),
        instructions: t("noIdentityProviderInstructions")
      }
    )
  ] });
}, jJ = ({
  orgId: e,
  onClose: t
}) => {
  const { adminClient: n } = pe(), { addAlert: r, addError: i } = Se(), { t: s } = H(), o = Ue(), { handleSubmit: l, formState: c } = o, d = async (u) => {
    try {
      const p = new FormData();
      for (const m in u)
        p.append(m, u[m]);
      await n.organizations.invite({ orgId: e }, p), r(s("inviteSent")), t();
    } catch (p) {
      i("inviteSentError", p);
    }
  };
  return /* @__PURE__ */ a(
    ht,
    {
      variant: Rt.small,
      title: s("inviteMember"),
      isOpen: !0,
      onClose: t,
      actions: [
        /* @__PURE__ */ a(
          eo,
          {
            formState: c,
            "data-testid": "save",
            form: "form",
            allowInvalid: !0,
            allowNonDirty: !0,
            children: s("send")
          },
          "confirm"
        ),
        /* @__PURE__ */ a(
          z,
          {
            id: "modal-cancel",
            "data-testid": "cancel",
            variant: xe.link,
            onClick: t,
            children: s("cancel")
          },
          "cancel"
        )
      ],
      children: /* @__PURE__ */ a(Ve, { ...o, children: /* @__PURE__ */ C(xt, { id: "form", onSubmit: l(d), children: [
        /* @__PURE__ */ a(
          ve,
          {
            name: "email",
            label: s("email"),
            rules: { required: s("required") },
            autoFocus: !0
          }
        ),
        /* @__PURE__ */ a(ve, { name: "firstName", label: s("firstName") }),
        /* @__PURE__ */ a(ve, { name: "lastName", label: s("lastName") })
      ] }) })
    }
  );
}, BJ = (e) => {
  const { realm: t } = be();
  return /* @__PURE__ */ a(Ae, { to: ai({ realm: t, id: e.id, tab: "settings" }), children: e.username });
}, gee = () => {
  const { t: e } = H(), { adminClient: t } = pe(), { id: n } = Vt(), { addAlert: r, addError: i } = Se(), [s, o] = N(0), l = () => o(s + 1), [c, d] = ot(), [u, p] = ot(), [m, f] = ot(), [g, b] = N(
    []
  ), v = (x, w, R) => t.organizations.listMembers({ orgId: n, first: x, max: w, search: R }), y = async (x) => {
    try {
      await Promise.all(
        x.map(
          (w) => t.organizations.delMember({
            orgId: n,
            userId: w.id
          })
        )
      ), r(e("organizationUsersLeft", { count: x.length }));
    } catch (w) {
      i("organizationUsersLeftError", w);
    }
    l();
  };
  return /* @__PURE__ */ C(Te, { variant: "light", children: [
    u && /* @__PURE__ */ a(
      YT,
      {
        membersQuery: () => t.organizations.listMembers({ orgId: n }),
        onAdd: async (x) => {
          try {
            await Promise.all(
              x.map(
                (w) => t.organizations.addMember({
                  orgId: n,
                  userId: w.id
                })
              )
            ), r(
              e("organizationUsersAdded", { count: x.length })
            );
          } catch (w) {
            i("organizationUsersAddedError", w);
          }
        },
        onClose: () => {
          p(), l();
        }
      }
    ),
    m && /* @__PURE__ */ a(jJ, { orgId: n, onClose: f }),
    /* @__PURE__ */ a(
      St,
      {
        loader: v,
        isPaginated: !0,
        ariaLabelKey: "membersList",
        searchPlaceholderKey: "searchMember",
        onSelect: (x) => b([...x]),
        canSelectAll: !0,
        toolbarItem: /* @__PURE__ */ C(ee, { children: [
          /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(
            qt,
            {
              toggle: (x) => /* @__PURE__ */ a(
                yt,
                {
                  ref: x,
                  onClick: d,
                  isExpanded: c,
                  variant: "primary",
                  children: e("addMember")
                }
              ),
              isOpen: c,
              children: /* @__PURE__ */ C(Xt, { children: [
                /* @__PURE__ */ a(
                  Ke,
                  {
                    onClick: () => {
                      p(), d();
                    },
                    children: e("addRealmUser")
                  }
                ),
                /* @__PURE__ */ a(
                  Ke,
                  {
                    onClick: () => {
                      f(), d();
                    },
                    children: e("inviteMember")
                  }
                )
              ] })
            }
          ) }),
          /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(
            z,
            {
              variant: "plain",
              isDisabled: g.length === 0,
              onClick: () => y(g),
              children: e("removeMember")
            }
          ) })
        ] }),
        actions: [
          {
            title: e("remove"),
            onRowClick: async (x) => {
              await y([x]);
            }
          }
        ],
        columns: [
          {
            name: "username",
            cellRenderer: BJ
          },
          {
            name: "email"
          },
          {
            name: "firstName"
          },
          {
            name: "lastName"
          }
        ],
        emptyState: /* @__PURE__ */ a(
          ct,
          {
            message: e("emptyMembers"),
            instructions: e("emptyMembersInstructions"),
            secondaryActions: [
              {
                text: e("addRealmUser"),
                onClick: p
              },
              {
                text: e("inviteMember"),
                onClick: f
              }
            ]
          }
        )
      },
      s
    )
  ] });
}, bee = (e) => ({
  ...e,
  domains: e.domains?.map((t) => ({ name: t, verified: !1 })),
  attributes: Bo(e.attributes)
}), vee = () => {
  const { t: e } = H(), { tab: t } = Qn(), { setValue: n, getFieldState: r } = Le(), i = nt({ name: "name" }), s = t !== "settings";
  return He(() => {
    const { isDirty: o } = r("alias");
    s && !o && n("alias", i);
  }, [i, s]), /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(
      ve,
      {
        label: e("name"),
        name: "name",
        rules: { required: e("required") }
      }
    ),
    /* @__PURE__ */ a(
      ve,
      {
        label: e("alias"),
        name: "alias",
        labelIcon: e("organizationAliasHelp"),
        isDisabled: !s
      }
    ),
    /* @__PURE__ */ a(
      se,
      {
        label: e("domain"),
        fieldId: "domain",
        labelIcon: /* @__PURE__ */ a(
          le,
          {
            helpText: e("organizationDomainHelp"),
            fieldLabelId: "domain"
          }
        ),
        children: /* @__PURE__ */ a(
          yr,
          {
            id: "domain",
            name: "domains",
            "aria-label": e("domain"),
            addButtonLabel: "addDomain"
          }
        )
      }
    ),
    /* @__PURE__ */ a(wr, { name: "description", label: e("description") })
  ] });
}, UJ = (e) => {
  const { t } = H(), { realm: n } = be();
  return /* @__PURE__ */ a(gs, { wrapModifier: "truncate", children: /* @__PURE__ */ C(
    Ae,
    {
      to: gT({
        realm: n,
        id: e.id,
        tab: "settings"
      }),
      children: [
        e.name,
        !e.enabled && /* @__PURE__ */ a(
          Wr,
          {
            isRead: !0,
            className: "pf-v5-u-ml-sm",
            children: t("disabled")
          },
          `${e.id}-disabled`
        )
      ]
    },
    e.id
  ) });
}, VJ = (e) => {
  const { t } = H();
  return /* @__PURE__ */ a(
    vn,
    {
      numChips: 2,
      expandedText: t("hide"),
      collapsedText: t("showRemaining"),
      children: e.domains?.map((n) => /* @__PURE__ */ a(Ut, { isReadOnly: !0, children: n.name }, n.name))
    }
  );
};
function KJ() {
  const { adminClient: e } = pe(), { realm: t } = be(), { t: n } = H(), { addAlert: r, addError: i } = Se(), s = Je(), [o, l] = N(0), c = () => l(o + 1), [d, u] = N();
  async function p(g, b, v) {
    return await e.organizations.find({ first: g, max: b, search: v });
  }
  const [m, f] = ze({
    titleKey: "organizationDelete",
    messageKey: "organizationDeleteConfirm",
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        await e.organizations.delById({
          id: d.id
        }), r(n("organizationDeletedSuccess")), c();
      } catch (g) {
        i("organizationDeleteError", g);
      }
    }
  });
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(
      wt,
      {
        titleKey: "organizationsList",
        subKey: "organizationsExplain",
        divider: !0
      }
    ),
    /* @__PURE__ */ C(Te, { variant: "light", className: "pf-v5-u-p-0", children: [
      /* @__PURE__ */ a(f, {}),
      /* @__PURE__ */ a(
        St,
        {
          loader: p,
          isPaginated: !0,
          ariaLabelKey: "organizationList",
          searchPlaceholderKey: "searchOrganization",
          toolbarItem: /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(
            z,
            {
              "data-testid": "addOrganization",
              component: (g) => /* @__PURE__ */ a(Ae, { ...g, to: v0({ realm: t }) }),
              children: n("createOrganization")
            }
          ) }),
          actions: [
            {
              title: n("delete"),
              onRowClick: (g) => {
                u(g), m();
              }
            }
          ],
          columns: [
            {
              name: "name",
              displayKey: "name",
              cellRenderer: UJ
            },
            {
              name: "domains",
              displayKey: "domains",
              cellRenderer: VJ
            },
            {
              name: "description",
              displayKey: "description"
            }
          ],
          emptyState: /* @__PURE__ */ a(
            ct,
            {
              message: n("emptyOrganizations"),
              instructions: n("emptyOrganizationsInstructions"),
              primaryActionText: n("createOrganization"),
              onPrimaryAction: () => s(v0({ realm: t }))
            }
          )
        },
        o
      )
    ] })
  ] });
}
const HJ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: KJ
}, Symbol.toStringTag, { value: "Module" }));
function zJ() {
  const { adminClient: e } = pe(), { t } = H(), { componentTypes: n } = Tt(), { realm: r } = be(), i = n?.[Lc], s = Je(), { id: o, providerId: l } = Qn(), { addAlert: c, addError: d } = Se(), u = i?.find((f) => f.id === l);
  if (!u)
    throw new Error(t("notFound"));
  const [p, m] = ze({
    titleKey: "itemDeleteConfirmTitle",
    messageKey: "itemDeleteConfirm",
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        await e.components.del({
          id: o
        }), c(t("itemDeletedSuccess")), s(Mg({ realm: r, providerId: l }));
      } catch (f) {
        d("itemSaveError", f);
      }
    }
  });
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(m, {}),
    /* @__PURE__ */ a(
      wt,
      {
        titleKey: o || t("createItem"),
        dropdownItems: o ? [
          /* @__PURE__ */ a(
            Ke,
            {
              "data-testid": "delete-item",
              onClick: () => p(),
              children: t("delete")
            },
            "delete"
          )
        ] : void 0
      }
    ),
    /* @__PURE__ */ a(Gk, { providerType: Lc, id: o, page: u })
  ] });
}
const qJ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: zJ
}, Symbol.toStringTag, { value: "Module" }));
function GJ() {
  const { adminClient: e } = pe(), { t } = H(), n = Je(), { refresh: r, whoAmI: i } = _a(), { addAlert: s, addError: o } = Se(), [l, c] = N(), d = Ue({
    mode: "onChange"
  }), { handleSubmit: u, setValue: p, formState: m } = d, f = (b) => {
    const v = { id: "", realm: "", enabled: !0 };
    In(b || v, p), c(b || v);
  };
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(wt, { titleKey: "createRealm", subKey: "realmExplain" }),
    /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ a(Ve, { ...d, children: /* @__PURE__ */ C(
      Fe,
      {
        isHorizontal: !0,
        onSubmit: u(async (b) => {
          try {
            await e.realms.create({
              ...l,
              ...Zn(b)
            }), s(t("saveRealmSuccess")), r(), n(Fs({ realm: b.realm }));
          } catch (v) {
            o("saveRealmError", v);
          }
        }),
        role: "view-realm",
        isReadOnly: !i.canCreateRealm(),
        children: [
          /* @__PURE__ */ a(
            Ip,
            {
              id: "kc-realm-filename",
              allowEditingUploadedText: !0,
              onChange: f
            }
          ),
          /* @__PURE__ */ a(
            ve,
            {
              name: "realm",
              label: t("realmNameField"),
              rules: { required: t("required") }
            }
          ),
          /* @__PURE__ */ a(
            bt,
            {
              name: "enabled",
              label: t("enabled"),
              defaultValue: !0
            }
          ),
          /* @__PURE__ */ C(st, { children: [
            /* @__PURE__ */ a(
              eo,
              {
                formState: m,
                allowInvalid: !0,
                allowNonDirty: !0,
                children: t("create")
              }
            ),
            /* @__PURE__ */ a(z, { variant: "link", onClick: () => n(-1), children: t("cancel") })
          ] })
        ]
      }
    ) }) })
  ] });
}
const WJ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: GJ
}, Symbol.toStringTag, { value: "Module" }));
function XJ() {
  const { adminClient: e } = pe(), { t } = H(), n = Ue({ mode: "onChange" }), r = Je(), { realm: i } = be(), { addAlert: s, addError: o } = Se();
  return /* @__PURE__ */ a(Ve, { ...n, children: /* @__PURE__ */ a(
    sb,
    {
      form: n,
      onSubmit: async (c) => {
        const d = {
          ...c,
          name: c.name?.trim(),
          attributes: {}
        };
        try {
          await e.roles.create(d);
          const u = await e.roles.findOneByName({
            name: c.name
          });
          if (!u)
            throw new Error(t("notFound"));
          s(t("roleCreated"), ue.success), r(Ap({ realm: i, id: u.id, tab: "details" }));
        } catch (u) {
          o("roleCreateError", u);
        }
      },
      cancelLink: ah({ realm: i }),
      role: "manage-realm",
      editMode: !1
    }
  ) });
}
const YJ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: XJ
}, Symbol.toStringTag, { value: "Module" }));
function JJ() {
  const { adminClient: e } = pe(), { realm: t } = be(), { hasAccess: n } = Mt(), r = n("manage-realm"), i = (s, o, l) => {
    const c = {
      first: s,
      max: o
    }, d = l || "";
    return d && (c.search = d), e.roles.find(c);
  };
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(
      wt,
      {
        titleKey: "titleRoles",
        subKey: "roleExplain",
        helpUrl: na.realmRolesUrl
      }
    ),
    /* @__PURE__ */ a(Te, { variant: "light", padding: { default: "noPadding" }, children: /* @__PURE__ */ a(
      WO,
      {
        loader: i,
        toCreate: PX({ realm: t }),
        toDetail: (s) => Ap({ realm: t, id: s, tab: "details" }),
        isReadOnly: !r
      }
    ) })
  ] });
}
const ZJ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: JJ
}, Symbol.toStringTag, { value: "Module" })), QJ = () => {
  const { adminClient: e } = pe(), t = Je(), { realm: n } = be(), { t: r } = H(), { id: i, clientId: s } = Vt(), o = async (c, d) => {
    const u = await e.roles.findOneById({ id: i });
    if (!u)
      throw new Error(r("notFound"));
    return u.clientRole ? e.clients.findUsersWithRole({
      roleName: u.name,
      id: s,
      briefRepresentation: !0,
      first: c,
      max: d
    }) : e.roles.findUsersWithRole({
      name: u.name,
      briefRepresentation: !0,
      first: c,
      max: d
    });
  }, { enabled: l } = Pr();
  return /* @__PURE__ */ a(Te, { "data-testid": "users-page", variant: "light", children: /* @__PURE__ */ a(
    St,
    {
      isPaginated: !0,
      loader: o,
      ariaLabelKey: "roleList",
      searchPlaceholderKey: "",
      "data-testid": "users-in-role-table",
      toolbarItem: l && /* @__PURE__ */ a(
        Or,
        {
          "aria-label": "Basic popover",
          position: "bottom",
          bodyContent: /* @__PURE__ */ C("div", { children: [
            r("whoWillAppearPopoverTextRoles"),
            /* @__PURE__ */ a(
              z,
              {
                className: "kc-groups-link",
                variant: "link",
                onClick: () => t(`/${n}/groups`),
                children: r("groups")
              }
            ),
            r("or"),
            /* @__PURE__ */ C(
              z,
              {
                className: "kc-users-link",
                variant: "link",
                onClick: () => t(`/${n}/users`),
                children: [
                  r("users"),
                  "."
                ]
              }
            )
          ] }),
          footerContent: r("whoWillAppearPopoverFooterText"),
          children: /* @__PURE__ */ a(
            z,
            {
              variant: "link",
              className: "kc-who-will-appear-button",
              icon: /* @__PURE__ */ a(Yc, {}),
              children: r("whoWillAppearLinkTextRoles")
            },
            "who-will-appear-button"
          )
        }
      ),
      emptyState: /* @__PURE__ */ a(
        ct,
        {
          hasIcon: !0,
          message: r("noDirectUsers"),
          instructions: /* @__PURE__ */ C("div", { children: [
            r("noUsersEmptyStateDescription"),
            /* @__PURE__ */ a(
              z,
              {
                className: "kc-groups-link-empty-state",
                variant: "link",
                onClick: () => t(`/${n}/groups`),
                children: r("groups")
              }
            ),
            r("or"),
            /* @__PURE__ */ a(
              z,
              {
                className: "kc-users-link-empty-state",
                variant: "link",
                onClick: () => t(`/${n}/users`),
                children: r("users")
              }
            ),
            r("noUsersEmptyStateDescriptionContinued")
          ] })
        }
      ),
      columns: [
        {
          name: "username",
          displayKey: "userName",
          cellFormatters: [on()]
        },
        {
          name: "email",
          displayKey: "email",
          cellFormatters: [on()]
        },
        {
          name: "lastName",
          displayKey: "lastName",
          cellFormatters: [on()]
        },
        {
          name: "firstName",
          displayKey: "firstName",
          cellFormatters: [rd(), on()]
        }
      ]
    }
  ) });
};
function eZ() {
  const { adminClient: e } = pe(), t = oa(), { t: n } = H(), r = Ue({
    mode: "onChange"
  }), { control: i, reset: s, setValue: o } = r, l = Je(), { id: c, clientId: d } = Vt(), { realm: u, realmRepresentation: p } = be(), [m, f] = N(0), [g, b] = N(), v = () => f(m + 1), { addAlert: y, addError: x } = Se(), { hasAccess: w } = Mt(), R = w(
    "query-clients",
    "manage-authorization"
  ), [S, _] = N(!1), O = (W) => {
    const { attributes: Q, ...te } = W;
    return {
      attributes: Ec(Q),
      ...te
    };
  }, E = nt({
    control: i,
    defaultValue: void 0,
    name: "name"
  }), T = nt({
    control: i,
    defaultValue: !1,
    name: "composite"
  });
  Re(
    async () => e.roles.findOneById({ id: c }),
    (W) => {
      if (!W)
        throw new Error(n("notFound"));
      const Q = O(W);
      s(Q), b(Q.attributes);
    },
    [m]
  );
  const I = async (W) => {
    try {
      const { attributes: Q, ...te } = W, ie = te;
      ie.name = ie.name?.trim(), ie.attributes = Bo(Q), d ? await e.clients.updateRole(
        { id: d, roleName: W.name },
        ie
      ) : await e.roles.updateById({ id: c }, ie), b(Q), y(n("roleSaveSuccess"), ue.success);
    } catch (Q) {
      x("roleSaveError", Q);
    }
  }, k = Po(gb.path), P = Po(ob.path), D = () => {
    if (k)
      return ah({ realm: u });
    if (P)
      return Ti({
        realm: u,
        clientId: P.params.clientId,
        tab: "roles"
      });
    throw new Error("Roles overview route could not be determined.");
  }, F = (W) => {
    if (k)
      return Ap({
        realm: u,
        id: c,
        tab: W
      });
    if (P)
      return lb({
        realm: u,
        id: c,
        clientId: P.params.clientId,
        tab: W
      });
    throw new Error("Route could not be determined.");
  }, A = (W) => jn(F(W)), M = A("details"), V = A("associated-roles"), U = A("attributes"), G = A("users-in-role"), q = A("permissions"), [L, K] = ze({
    titleKey: "roleDeleteConfirm",
    messageKey: n("roleDeleteConfirmDialog", {
      selectedRoleName: E || n("createRole")
    }),
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        d ? await e.clients.delRole({
          id: d,
          roleName: E
        }) : await e.roles.delById({ id: c }), y(n("roleDeletedSuccess"), ue.success), l(D());
      } catch (W) {
        x("roleDeleteError", W);
      }
    }
  }), B = async (W) => {
    try {
      await e.roles.createComposite(
        { roleId: c, realm: p.realm },
        W
      ), v(), l(F("associated-roles")), y(n("addAssociatedRolesSuccess"), ue.success);
    } catch (Q) {
      x("addAssociatedRolesError", Q);
    }
  }, j = (W) => p?.defaultRole && p.defaultRole.name === W;
  return p ? /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(K, {}),
    S && /* @__PURE__ */ a(
      Op,
      {
        id: c,
        type: "roles",
        name: E,
        onAssign: (W) => B(W.map((Q) => Q.role)),
        onClose: () => _(!1)
      }
    ),
    /* @__PURE__ */ a(
      wt,
      {
        titleKey: E,
        badges: [
          {
            id: "composite-role-badge",
            text: T ? n("composite") : "",
            readonly: !0
          }
        ],
        actionsDropdownId: "roles-actions-dropdown",
        dropdownItems: [
          /* @__PURE__ */ a(
            Ke,
            {
              component: "button",
              onClick: () => {
                L();
              },
              children: n("deleteRole")
            },
            "delete-role"
          )
        ],
        divider: !1
      }
    ),
    /* @__PURE__ */ a(Te, { variant: "light", className: "pf-v5-u-p-0", children: /* @__PURE__ */ a(Ve, { ...r, children: /* @__PURE__ */ C($n, { isBox: !0, mountOnEnter: !0, defaultLocation: F("details"), children: [
      /* @__PURE__ */ a(
        Ee,
        {
          title: /* @__PURE__ */ a(Ie, { children: n("details") }),
          ...M,
          children: /* @__PURE__ */ a(
            sb,
            {
              form: r,
              onSubmit: I,
              role: P ? "manage-clients" : "manage-realm",
              cancelLink: P ? Ti({ realm: u, clientId: d, tab: "roles" }) : ah({ realm: u }),
              editMode: !0
            }
          )
        }
      ),
      /* @__PURE__ */ a(
        Ee,
        {
          "data-testid": "associatedRolesTab",
          title: /* @__PURE__ */ a(Ie, { children: n("associatedRolesText") }),
          ...V,
          children: /* @__PURE__ */ a(
            ao,
            {
              name: E,
              id: c,
              type: "roles",
              isManager: !0,
              save: (W) => B(W.map((Q) => Q.role))
            }
          )
        }
      ),
      !j(E) && /* @__PURE__ */ a(
        Ee,
        {
          "data-testid": "attributesTab",
          className: "kc-attributes-tab",
          title: /* @__PURE__ */ a(Ie, { children: n("attributes") }),
          ...U,
          children: /* @__PURE__ */ a(
            vb,
            {
              form: r,
              save: I,
              reset: () => o("attributes", g, { shouldDirty: !1 })
            }
          )
        }
      ),
      !j(E) && /* @__PURE__ */ a(
        Ee,
        {
          title: /* @__PURE__ */ a(Ie, { children: n("usersInRole") }),
          ...G,
          children: /* @__PURE__ */ a(QJ, { "data-cy": "users-in-role-tab" })
        }
      ),
      t(zn.AdminFineGrainedAuthz) && R && /* @__PURE__ */ a(
        Ee,
        {
          title: /* @__PURE__ */ a(Ie, { children: n("permissions") }),
          ...q,
          children: /* @__PURE__ */ a(dd, { id: c, type: "roles" })
        }
      )
    ] }) }) })
  ] }) : /* @__PURE__ */ a(gt, {});
}
const lE = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: eZ
}, Symbol.toStringTag, { value: "Module" }));
function cE({
  ariaLabelKey: e = "userEventsRegistered",
  eventTypes: t,
  addTypes: n,
  onSelect: r,
  onDelete: i
}) {
  const { t: s } = H(), o = t.map((l) => ({
    id: l,
    name: s(`eventTypes.${l}.name`),
    description: s(`eventTypes.${l}.description`)
  }));
  return /* @__PURE__ */ a(
    St,
    {
      ariaLabelKey: e,
      searchPlaceholderKey: "searchEventType",
      loader: o,
      onSelect: r || void 0,
      canSelectAll: !!r,
      toolbarItem: n && /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(z, { id: "addTypes", onClick: n, "data-testid": "addTypes", children: s("addSavedTypes") }) }),
      actions: i ? [
        {
          title: s("remove"),
          onRowClick: i
        }
      ] : [],
      columns: [
        {
          name: "name",
          displayKey: "eventType"
        },
        {
          name: "description",
          cellFormatters: [ro(s)]
        }
      ],
      emptyState: /* @__PURE__ */ a(
        ct,
        {
          message: s("emptyEvents"),
          instructions: s("emptyEventsInstructions")
        }
      )
    }
  );
}
const tZ = ({
  onConfirm: e,
  onClose: t,
  configured: n
}) => {
  const { t: r } = H(), { enums: i } = Tt(), [s, o] = N([]);
  return /* @__PURE__ */ a(
    ht,
    {
      variant: Rt.medium,
      title: r("addTypes"),
      isOpen: !0,
      onClose: t,
      actions: [
        /* @__PURE__ */ a(
          z,
          {
            "data-testid": "addEventTypeConfirm",
            variant: "primary",
            onClick: () => e(s),
            children: r("add")
          },
          "confirm"
        ),
        /* @__PURE__ */ a(
          z,
          {
            "data-testid": "moveCancel",
            variant: "link",
            onClick: t,
            children: r("cancel")
          },
          "cancel"
        )
      ],
      children: /* @__PURE__ */ a(
        cE,
        {
          ariaLabelKey: "addTypes",
          onSelect: (l) => o(l),
          eventTypes: i.eventType.filter(
            (l) => !n.includes(l)
          )
        }
      )
    }
  );
}, F0 = ({
  type: e,
  form: t,
  reset: n,
  clear: r
}) => {
  const { t: i } = H(), {
    control: s,
    watch: o,
    setValue: l,
    formState: { isDirty: c }
  } = t, d = e === "admin" ? "adminEventsEnabled" : "eventsEnabled", u = o(d), [p, m] = ze({
    titleKey: "events-disable-title",
    messageKey: "events-disable-confirm",
    continueButtonLabel: "confirm",
    onConfirm: () => l(d, !1, { shouldDirty: !0 })
  });
  return /* @__PURE__ */ C(Ve, { ...t, children: [
    /* @__PURE__ */ a(m, {}),
    /* @__PURE__ */ a(
      se,
      {
        hasNoPaddingTop: !0,
        label: i("saveEvents"),
        fieldId: d,
        labelIcon: /* @__PURE__ */ a(
          le,
          {
            helpText: i(`save-${e}-eventsHelp`),
            fieldLabelId: "saveEvents"
          }
        ),
        children: /* @__PURE__ */ a(
          ge,
          {
            name: d,
            defaultValue: !1,
            control: s,
            render: ({ field: f }) => /* @__PURE__ */ a(
              Ye,
              {
                "data-testid": d,
                id: `${d}-switch`,
                label: i("on"),
                labelOff: i("off"),
                isChecked: f.value,
                onChange: (g, b) => {
                  b ? f.onChange(b) : p();
                },
                "aria-label": i("saveEvents")
              }
            )
          }
        )
      }
    ),
    u && /* @__PURE__ */ C(ee, { children: [
      e === "admin" && /* @__PURE__ */ a(
        bt,
        {
          name: "adminEventsDetailsEnabled",
          label: i("includeRepresentation"),
          labelIcon: i("includeRepresentationHelp")
        }
      ),
      /* @__PURE__ */ a(
        gl,
        {
          name: e === "user" ? "eventsExpiration" : "adminEventsExpiration",
          label: i("expiration"),
          labelIcon: i("expirationHelp"),
          defaultValue: "",
          units: ["minute", "hour", "day"],
          controller: {
            defaultValue: ""
          }
        }
      )
    ] }),
    /* @__PURE__ */ C(st, { children: [
      /* @__PURE__ */ a(
        z,
        {
          variant: "primary",
          type: "submit",
          id: `save-${e}`,
          "data-testid": `save-${e}`,
          isDisabled: !c,
          children: i("save")
        }
      ),
      /* @__PURE__ */ a(z, { variant: "link", onClick: n, children: i("revert") })
    ] }),
    /* @__PURE__ */ a(_t, {}),
    /* @__PURE__ */ a(
      se,
      {
        label: i(e === "user" ? "clearUserEvents" : "clearAdminEvents"),
        fieldId: `clear-${e}-events`,
        labelIcon: /* @__PURE__ */ a(
          le,
          {
            helpText: i(`${e}-clearEventsHelp`),
            fieldLabelId: `clear-${e}-events`
          }
        ),
        children: /* @__PURE__ */ a(
          z,
          {
            variant: "danger",
            id: `clear-${e}-events`,
            "data-testid": `clear-${e}-events`,
            onClick: () => r(),
            children: i(e === "user" ? "clearUserEvents" : "clearAdminEvents")
          }
        )
      }
    )
  ] });
}, nZ = ({
  form: e,
  reset: t
}) => {
  const { t: n } = H(), i = Tt().providers?.eventsListener.providers;
  return /* @__PURE__ */ C(Ve, { ...e, children: [
    /* @__PURE__ */ a(
      at,
      {
        name: "eventsListeners",
        label: n("eventListeners"),
        labelIcon: n("eventListenersHelpTextHelp"),
        controller: {
          defaultValue: ""
        },
        className: "kc_eventListeners_select",
        chipGroupProps: {
          numChips: 3,
          expandedText: n("hide"),
          collapsedText: n("showRemaining")
        },
        variant: pt.typeaheadMulti,
        options: Object.keys(i)
      }
    ),
    /* @__PURE__ */ C(st, { children: [
      /* @__PURE__ */ a(
        z,
        {
          variant: "primary",
          type: "submit",
          "data-testid": "saveEventListenerBtn",
          children: n("save")
        }
      ),
      /* @__PURE__ */ a(
        z,
        {
          variant: "link",
          "data-testid": "revertEventListenerBtn",
          onClick: t,
          children: n("revert")
        }
      )
    ] })
  ] });
}, aZ = ({ realm: e }) => {
  const { adminClient: t } = pe(), { t: n } = H(), r = Ue(), { setValue: i, handleSubmit: s } = r, [o, l] = N(0), c = () => l((/* @__PURE__ */ new Date()).getTime()), [d, u] = N(0), p = () => u((/* @__PURE__ */ new Date()).getTime()), [m, f] = N("event"), [g, b] = N(), [v, y] = N(), [x, w] = N(!1), { addAlert: R, addError: S } = Se(), { realm: _ } = be(), O = (F) => {
    b(F), In(F || {}, i);
  }, E = async (F) => {
    y(F), T();
  }, [T, I] = ze({
    titleKey: "deleteEvents",
    messageKey: "deleteEventsConfirm",
    continueButtonLabel: "clear",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        switch (v) {
          case "admin":
            await t.realms.clearAdminEvents({ realm: _ });
            break;
          case "user":
            await t.realms.clearEvents({ realm: _ });
            break;
        }
        R(n(`${v}-events-cleared`), ue.success);
      } catch (F) {
        S(`${v}-events-cleared-error`, F);
      }
    }
  });
  Re(
    () => t.realms.getConfigEvents({ realm: _ }),
    (F) => {
      O({
        ...F,
        adminEventsExpiration: e.attributes?.adminEventsExpiration
      }), p();
    },
    [o]
  );
  const k = async (F) => {
    const A = !bi(
      g?.eventsListeners,
      F.eventsListeners
    ), { adminEventsExpiration: M, ...V } = F;
    e.attributes?.adminEventsExpiration !== M && await t.realms.update(
      { realm: _ },
      {
        ...e,
        attributes: { ...e.attributes || {}, adminEventsExpiration: M }
      }
    );
    try {
      await t.realms.updateConfigEvents(
        { realm: _ },
        V
      ), O({ ...g, ...V, adminEventsExpiration: M }), R(
        n(A ? "saveEventListenersSuccess" : "eventConfigSuccessfully"),
        ue.success
      );
    } catch (U) {
      S(
        n(A ? "saveEventListenersError" : "eventConfigError"),
        U
      );
    }
  }, P = async (F) => {
    const A = F.map((V) => V.id), M = g.enabledEventTypes?.concat(A);
    await D(M);
  }, D = async (F = []) => {
    const A = { ...r.getValues(), enabledEventTypes: F };
    await k(A), w(!1), c();
  };
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(I, {}),
    x && /* @__PURE__ */ a(
      tZ,
      {
        onConfirm: (F) => P(F),
        configured: g?.enabledEventTypes || [],
        onClose: () => w(!1)
      }
    ),
    /* @__PURE__ */ C(
      Ua,
      {
        activeKey: m,
        onSelect: (F, A) => f(A),
        children: [
          /* @__PURE__ */ a(
            Ee,
            {
              eventKey: "event",
              title: /* @__PURE__ */ a(Ie, { children: n("eventListeners") }),
              "data-testid": "rs-event-listeners-tab",
              children: /* @__PURE__ */ a(Te, { children: /* @__PURE__ */ a(
                Fe,
                {
                  role: "manage-events",
                  isHorizontal: !0,
                  onSubmit: s(k),
                  children: /* @__PURE__ */ a(nZ, { form: r, reset: () => O(g) })
                }
              ) })
            }
          ),
          /* @__PURE__ */ C(
            Ee,
            {
              eventKey: "user",
              title: /* @__PURE__ */ a(Ie, { children: n("userEventsSettings") }),
              "data-testid": "rs-events-tab",
              children: [
                /* @__PURE__ */ a(Te, { children: /* @__PURE__ */ a(
                  Fe,
                  {
                    role: "manage-events",
                    isHorizontal: !0,
                    onSubmit: s(k),
                    children: /* @__PURE__ */ a(
                      F0,
                      {
                        type: "user",
                        form: r,
                        reset: () => O(g),
                        clear: () => E("user")
                      }
                    )
                  }
                ) }),
                /* @__PURE__ */ a(Te, { children: /* @__PURE__ */ a(
                  cE,
                  {
                    addTypes: () => w(!0),
                    eventTypes: g?.enabledEventTypes || [],
                    onDelete: (F) => {
                      const A = g?.enabledEventTypes?.filter(
                        (M) => M !== F.id
                      );
                      D(A), b({ ...g, enabledEventTypes: A });
                    }
                  },
                  d
                ) })
              ]
            }
          ),
          /* @__PURE__ */ a(
            Ee,
            {
              eventKey: "admin",
              title: /* @__PURE__ */ a(Ie, { children: n("adminEventsSettings") }),
              "data-testid": "rs-admin-events-tab",
              children: /* @__PURE__ */ a(Te, { children: /* @__PURE__ */ a(
                Fe,
                {
                  role: "manage-events",
                  isHorizontal: !0,
                  onSubmit: s(k),
                  children: /* @__PURE__ */ a(
                    F0,
                    {
                      type: "admin",
                      form: r,
                      reset: () => O(g),
                      clear: () => E("admin")
                    }
                  )
                }
              ) })
            }
          )
        ]
      }
    )
  ] });
}, Sb = ({
  providerType: e,
  onClose: t
}) => {
  const { adminClient: n } = pe(), { t: r } = H(), { id: i } = Vt(), { addAlert: s, addError: o } = Se(), c = Tt().componentTypes?.[Oo] ?? [], d = Ue({
    mode: "onChange"
  }), { handleSubmit: u, reset: p } = d, m = async (f) => {
    f.config && Object.entries(f.config).forEach(
      ([g, b]) => f.config[g] = Array.isArray(b) ? b : [b]
    );
    try {
      i ? (await n.components.update(
        { id: i },
        {
          ...f,
          providerType: Oo
        }
      ), s(r("saveProviderSuccess"), ue.success)) : (await n.components.create({
        ...f,
        providerId: e,
        providerType: Oo
      }), s(r("saveProviderSuccess"), ue.success), t?.());
    } catch (g) {
      o("saveProviderError", g);
    }
  };
  return Re(
    async () => {
      if (i) return await n.components.findOne({ id: i });
    },
    (f) => {
      f && p({ ...f });
    },
    []
  ), /* @__PURE__ */ a(Fe, { isHorizontal: !0, role: "manage-realm", onSubmit: u(m), children: /* @__PURE__ */ C(Ve, { ...d, children: [
    i && /* @__PURE__ */ a(
      ve,
      {
        name: "id",
        label: r("providerId"),
        labelIcon: r("providerIdHelp"),
        rules: {
          required: r("required")
        },
        readOnly: !0
      }
    ),
    /* @__PURE__ */ a(
      ve,
      {
        name: "name",
        defaultValue: e,
        label: r("name"),
        labelIcon: r("keyProviderMapperNameHelp"),
        rules: {
          required: r("required")
        }
      }
    ),
    /* @__PURE__ */ a(
      ur,
      {
        properties: c.find((f) => f.id === e)?.properties || []
      }
    ),
    /* @__PURE__ */ C(st, { children: [
      /* @__PURE__ */ a(
        z,
        {
          "data-testid": "add-provider-button",
          variant: "primary",
          type: "submit",
          children: r("save")
        }
      ),
      /* @__PURE__ */ a(z, { onClick: () => t?.(), variant: "link", children: r("cancel") })
    ] })
  ] }) });
};
function rZ() {
  const { t: e } = H(), t = Vt(), n = Je();
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(wt, { titleKey: e("editProvider"), subKey: t.providerType }),
    /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ a(
      Sb,
      {
        ...t,
        onClose: () => n(ju({ realm: t.realm, tab: "providers" }))
      }
    ) })
  ] });
}
const iZ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  KeyProviderForm: Sb,
  default: rZ
}, Symbol.toStringTag, { value: "Module" })), sZ = "_dialog_121se_2", oZ = {
  dialog: sZ
}, lZ = ({
  providerType: e,
  onClose: t
}) => {
  const { t: n } = H();
  return /* @__PURE__ */ a(
    ht,
    {
      className: oZ.dialog,
      variant: Rt.medium,
      title: n("addProvider"),
      isOpen: !0,
      onClose: t,
      children: /* @__PURE__ */ a(Sb, { providerType: e, onClose: t })
    }
  );
}, cZ = ({
  onConfirm: e,
  onClose: t
}) => {
  const { t: n } = H(), i = Tt().componentTypes?.[Oo] ?? [];
  return /* @__PURE__ */ a(ht, { variant: "medium", title: n("addProvider"), isOpen: !0, onClose: t, children: /* @__PURE__ */ a(
    ar,
    {
      onSelectDataListItem: (s, o) => {
        e(o);
      },
      "aria-label": n("addPredefinedMappers"),
      isCompact: !0,
      children: i.map((s) => /* @__PURE__ */ a(
        Ta,
        {
          "aria-label": s.id,
          id: s.id,
          children: /* @__PURE__ */ a(Ba, { children: /* @__PURE__ */ a(
            ja,
            {
              dataListCells: [
                /* @__PURE__ */ a(
                  aa,
                  {
                    "data-testid": `option-${s.id}`,
                    children: s.id
                  },
                  `name-${s.id}`
                ),
                /* @__PURE__ */ a(aa, { width: 2, children: s.helpText }, `helpText-${s.helpText}`)
              ]
            }
          ) })
        },
        s.id
      ))
    }
  ) });
}, Bl = ["ACTIVE", "PASSIVE", "DISABLED"], dZ = ({ onFilter: e }) => {
  const { t } = H(), [n, r] = N(Bl[0]), [i, s] = ot();
  return /* @__PURE__ */ a(
    ft,
    {
      width: 300,
      "data-testid": "filter-type-select",
      isOpen: i,
      className: "kc-filter-type-select",
      variant: pt.single,
      onToggle: s,
      toggleIcon: /* @__PURE__ */ a(ss, {}),
      onSelect: (o) => {
        const l = Bl.find((c) => c === o.toString()) || Bl[0];
        r(l), e(l), s();
      },
      selections: n,
      "aria-label": t("selectFilterType"),
      children: Bl.map((o) => /* @__PURE__ */ a(
        _e,
        {
          "data-testid": `${o}-option`,
          value: o,
          children: t(`keysFilter.${o}`)
        },
        o
      ))
    }
  );
}, uZ = ({ realmComponents: e }) => {
  const { adminClient: t } = pe(), { t: n } = H(), r = Je(), i = ni(), [s, o] = N(""), [l, c] = N(""), { realm: d } = be(), [u, p] = N(), [m, f] = N();
  Re(
    async () => (await t.realms.getKeys({ realm: d })).keys?.map((w) => {
      const R = e.find(
        (S) => S.id === w.providerId
      );
      return { ...w, provider: R?.name };
    }),
    p,
    []
  );
  const [g, b] = ze({
    titleKey: n("publicKey"),
    messageKey: s,
    continueButtonLabel: "close",
    continueButtonVariant: xe.primary,
    onConfirm: () => Promise.resolve()
  }), [v, y] = ze({
    titleKey: n("certificate"),
    messageKey: l,
    continueButtonLabel: "close",
    continueButtonVariant: xe.primary,
    onConfirm: () => Promise.resolve()
  });
  return u ? /* @__PURE__ */ C(Te, { variant: "light", padding: { default: "noPadding" }, children: [
    /* @__PURE__ */ a(b, {}),
    /* @__PURE__ */ a(y, {}),
    /* @__PURE__ */ a(
      St,
      {
        isNotCompact: !0,
        className: "kc-keys-list",
        loader: m || u,
        ariaLabelKey: "keysList",
        searchPlaceholderKey: "searchKey",
        searchTypeComponent: /* @__PURE__ */ a(
          dZ,
          {
            onFilter: (x) => f(
              x !== Bl[0] ? u.filter(({ status: w }) => w === x) : void 0
            )
          }
        ),
        columns: [
          {
            name: "algorithm",
            displayKey: "algorithm",
            cellFormatters: [on()],
            transforms: [Ft(15)]
          },
          {
            name: "type",
            displayKey: "type",
            cellFormatters: [on()],
            transforms: [Ft(10)]
          },
          {
            name: "kid",
            displayKey: "kid",
            cellFormatters: [on()],
            transforms: [Ft(10)]
          },
          {
            name: "use",
            displayKey: "use",
            cellFormatters: [on()],
            transforms: [Ft(10)]
          },
          {
            name: "provider",
            displayKey: "provider",
            cellRenderer: ({ provider: x }) => x || "-",
            transforms: [Ft(10)]
          },
          {
            name: "validTo",
            displayKey: "validTo",
            cellRenderer: ({ validTo: x }) => x ? i(new Date(x)) : "-",
            transforms: [Ft(10)]
          },
          {
            name: "publicKeys",
            displayKey: "publicKeys",
            cellRenderer: ({ type: x, publicKey: w, certificate: R }) => x === "EC" ? /* @__PURE__ */ a(
              z,
              {
                onClick: () => {
                  g(), o(w);
                },
                variant: "secondary",
                id: "kc-public-key",
                children: n("publicKey")
              }
            ) : x === "RSA" ? /* @__PURE__ */ C("div", { className: "button-wrapper", children: [
              /* @__PURE__ */ a(
                z,
                {
                  onClick: () => {
                    g(), o(w);
                  },
                  variant: "secondary",
                  id: w,
                  children: n("publicKey")
                }
              ),
              /* @__PURE__ */ a(
                z,
                {
                  onClick: () => {
                    v(), c(R);
                  },
                  variant: "secondary",
                  id: R,
                  className: "kc-certificate",
                  children: n("certificate")
                }
              )
            ] }) : x === "OKP" ? /* @__PURE__ */ a(
              z,
              {
                onClick: () => {
                  g(), o(w);
                },
                variant: "secondary",
                id: "kc-public-key",
                children: n("publicKey")
              }
            ) : "",
            transforms: [Ft(20)]
          }
        ],
        isSearching: !!m,
        emptyState: /* @__PURE__ */ a(
          ct,
          {
            hasIcon: !0,
            message: n("noKeys"),
            instructions: n("noKeysDescription"),
            primaryActionText: n("addProvider"),
            onPrimaryAction: () => r(ju({ realm: d, tab: "providers" }))
          }
        )
      }
    )
  ] }) : /* @__PURE__ */ a(gt, {});
}, pZ = ({
  realmComponents: e,
  refresh: t
}) => {
  const { adminClient: n } = pe(), { t: r } = H(), { addAlert: i, addError: s } = Se(), { realm: o } = be(), [l, c] = N(""), [d, u] = N(
    []
  ), [p, m] = ot(), g = Tt().componentTypes?.[Oo] ?? [], [b, v] = ot(), [y, x] = N(), [w, R] = N(), S = et(
    () => e.map((k) => {
      const P = g.find(
        (D) => k.providerId === D.id
      );
      return {
        ...k,
        providerDescription: P?.helpText
      };
    }),
    [e]
  ), [_, O] = ze({
    titleKey: "deleteProviderTitle",
    messageKey: r("deleteProviderConfirm", {
      provider: w?.name
    }),
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        await n.components.del({
          id: w.id,
          realm: o
        }), t(), i(r("deleteProviderSuccess"), ue.success);
      } catch (k) {
        s("deleteProviderError", k);
      }
    }
  }), E = () => {
    if (l !== "") {
      c(l);
      const k = S.filter(
        (P) => P.name?.includes(l) || P.providerId?.includes(l)
      );
      u(k);
    } else
      c(""), u(S);
  }, T = (k) => {
    k.key === "Enter" && E();
  }, I = (k) => {
    c(k);
  };
  return /* @__PURE__ */ C(ee, { children: [
    b && /* @__PURE__ */ a(
      cZ,
      {
        onClose: () => v(),
        onConfirm: (k) => {
          m(), x(k), v();
        }
      }
    ),
    p && y && /* @__PURE__ */ a(
      lZ,
      {
        providerType: y,
        onClose: () => {
          m(), t();
        }
      }
    ),
    /* @__PURE__ */ a(O, {}),
    /* @__PURE__ */ C(Te, { variant: "light", padding: { default: "noPadding" }, children: [
      /* @__PURE__ */ a(Sa, { children: /* @__PURE__ */ C(cu, { className: "providers-toolbar", children: [
        /* @__PURE__ */ a(je, { children: /* @__PURE__ */ C(Qt, { children: [
          /* @__PURE__ */ a(dt, { isFill: !0, children: /* @__PURE__ */ a(
            mt,
            {
              name: "inputGroupName",
              id: "inputGroupName",
              "data-testid": "provider-search-input",
              type: "search",
              "aria-label": r("search"),
              placeholder: r("search"),
              onChange: (k, P) => I(P),
              onKeyDown: T
            }
          ) }),
          /* @__PURE__ */ a(dt, { children: /* @__PURE__ */ a(
            z,
            {
              variant: xe.control,
              "aria-label": r("search"),
              onClick: E,
              children: /* @__PURE__ */ a(Ls, {})
            }
          ) })
        ] }) }),
        /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(
          z,
          {
            "data-testid": "addProviderDropdown",
            className: "add-provider-dropdown",
            onClick: () => v(),
            children: r("addProvider")
          }
        ) })
      ] }) }),
      /* @__PURE__ */ a(
        jg,
        {
          variant: "compact",
          className: "kc-draggable-table",
          keyField: "id",
          data: d.length === 0 ? S : d,
          onDragFinish: async (k, P) => {
            const D = S.map((F) => {
              const A = { ...F };
              return delete A.providerDescription, n.components.update(
                { id: F.id },
                {
                  ...A,
                  config: {
                    priority: [
                      (P.length - P.indexOf(F.id) + 100).toString()
                    ]
                  }
                }
              );
            });
            try {
              await Promise.all(D), t(), i(r("saveProviderListSuccess"), ue.success);
            } catch (F) {
              s("saveProviderError", F);
            }
          },
          columns: [
            {
              name: "name",
              displayKey: "name",
              cellRenderer: (k) => /* @__PURE__ */ a(
                Ae,
                {
                  "data-testid": "provider-name-link",
                  to: NX({
                    realm: o,
                    id: k.id,
                    providerType: k.providerId
                  }),
                  children: k.name
                },
                k.name
              )
            },
            {
              name: "providerId",
              displayKey: "provider"
            },
            {
              name: "providerDescription",
              displayKey: "providerDescription"
            }
          ],
          actions: [
            {
              title: r("delete"),
              onClick: (k, P, D) => {
                R(D), _();
              }
            }
          ]
        }
      )
    ] })
  ] });
}, mZ = (e) => [...e].sort((n, r) => {
  const i = Number(n.config?.priority), s = Number(r.config?.priority);
  return (isNaN(s) ? 0 : s) - (isNaN(i) ? 0 : i);
}), fZ = () => {
  const { adminClient: e } = pe(), { t } = H(), { realm: n } = be(), [r, i] = N(), [s, o] = N(0), l = () => {
    o(s + 1);
  };
  Re(
    () => e.components.find({
      type: Oo,
      realm: n
    }),
    (p) => i(mZ(p)),
    [s]
  );
  const c = (p) => jn(ju({ realm: n, tab: p })), d = c("list"), u = c("providers");
  return r ? /* @__PURE__ */ C(
    $n,
    {
      mountOnEnter: !0,
      unmountOnExit: !0,
      defaultLocation: ju({ realm: n, tab: "list" }),
      children: [
        /* @__PURE__ */ a(
          Ee,
          {
            id: "keysList",
            "data-testid": "rs-keys-list-tab",
            "aria-label": "keys-list-subtab",
            title: /* @__PURE__ */ a(Ie, { children: t("keysList") }),
            ...d,
            children: /* @__PURE__ */ a(uZ, { realmComponents: r })
          }
        ),
        /* @__PURE__ */ a(
          Ee,
          {
            id: "providers",
            "data-testid": "rs-providers-tab",
            "aria-label": "rs-providers-tab",
            title: /* @__PURE__ */ a(Ie, { children: t("providers") }),
            ...u,
            children: /* @__PURE__ */ a(pZ, { realmComponents: r, refresh: l })
          }
        )
      ]
    }
  ) : /* @__PURE__ */ a(gt, {});
}, $0 = {
  theme: "",
  themeType: "",
  locale: "",
  hasWords: []
}, hZ = ({
  defaultSupportedLocales: e,
  defaultLocales: t
}) => {
  const { adminClient: n } = pe(), { t: r } = H(), { realm: i } = be(), s = Tt(), { whoAmI: o } = _a(), l = pa(), [c, d] = N(!1), [u, p] = N(!1), [m, f] = N(!1), [g, b] = N(!1), [v, y] = N(!1), [x, w] = N({}), [R, S] = N(0), _ = s.themes, O = et(() => _ ? l(Object.keys(_), (B) => B) : [], [_]), E = et(() => _ ? l(
    Object.values(_).flatMap((B) => B.map((j) => j.name)).filter((B, j, W) => W.indexOf(B) === j),
    (B) => B
  ) : [], [_]), T = et(() => Array.from(/* @__PURE__ */ new Set([...t, ...e])), [t, e]), I = {
    theme: r("theme"),
    themeType: r("themeType"),
    locale: r("language"),
    hasWords: r("hasWords")
  }, {
    getValues: k,
    reset: P,
    formState: { isDirty: D, isValid: F },
    control: A
  } = Ue({
    mode: "onChange",
    defaultValues: $0
  }), M = async () => {
    try {
      const B = k();
      if (["theme", "themeType", "locale"].some(
        (ce) => !B[ce]
      ))
        return [];
      const Q = await n.serverInfo.findEffectiveMessageBundles(
        {
          realm: i,
          ...B,
          locale: B.locale || Na,
          source: !0
        }
      ), te = B.hasWords.length > 0 ? Q.filter(
        (ce) => B.hasWords.some(
          (Z) => ce.value.includes(Z) || ce.key.includes(Z)
        )
      ) : Q;
      return l([...te], or("key"));
    } catch {
      return [];
    }
  };
  function V() {
    d(!1), L();
  }
  function U() {
    P(), L();
  }
  function G(B) {
    const j = { ...k() };
    delete j[B], P({ ...$0, ...j }), L();
  }
  function q(B, j) {
    const W = k(), Q = W[B], te = Array.isArray(Q) ? Q.filter((ie) => ie !== j) : Q;
    P({ ...W, [B]: te }), L();
  }
  function L() {
    const B = Sg(
      k(),
      (j) => j !== "" || Array.isArray(j) && j.length > 0
    );
    w(B), S(R + 1);
  }
  const K = () => /* @__PURE__ */ C(
    ra,
    {
      direction: { default: "column" },
      spaceItems: { default: "spaceItemsNone" },
      children: [
        /* @__PURE__ */ a(Nt, { children: /* @__PURE__ */ a(Pt, { children: /* @__PURE__ */ a(
          tt,
          {
            className: "pf-v5-u-mb-md pf-v5-u-mt-0 pf-v5-u-mr-md",
            component: Wt.p,
            children: r("effectiveMessageBundlesDescription")
          }
        ) }) }),
        /* @__PURE__ */ a(Nt, { children: /* @__PURE__ */ a(
          ud,
          {
            buttonText: r("searchForEffectiveMessageBundles"),
            setSearchDropdownOpen: d,
            searchDropdownOpen: c,
            marginRight: "2.5rem",
            width: "15vw",
            children: /* @__PURE__ */ C(
              xt,
              {
                isHorizontal: !0,
                className: "pf-v5-u-w-25vw",
                "data-testid": "effectiveMessageBundlesSearchForm",
                onSubmit: (B) => B.preventDefault(),
                children: [
                  /* @__PURE__ */ a(se, { label: r("theme"), fieldId: "kc-theme", isRequired: !0, children: /* @__PURE__ */ a(
                    ge,
                    {
                      name: "theme",
                      control: A,
                      defaultValue: "",
                      rules: {
                        validate: (B) => (B || "").length > 0
                      },
                      render: ({ field: B }) => /* @__PURE__ */ a(
                        ft,
                        {
                          "data-testid": "effective_message_bundles-theme-searchField",
                          chipGroupProps: {
                            numChips: 1,
                            expandedText: r("hide"),
                            collapsedText: r("showRemaining")
                          },
                          variant: pt.single,
                          typeAheadAriaLabel: "Select",
                          onToggle: (j) => f(j),
                          selections: B.value,
                          onSelect: (j) => {
                            B.onChange(j.toString()), f(!1);
                          },
                          onClear: () => {
                            B.onChange("");
                          },
                          isOpen: m,
                          "aria-label": r("selectTheme"),
                          chipGroupComponent: /* @__PURE__ */ a(vn, { children: /* @__PURE__ */ a(
                            Ut,
                            {
                              onClick: (j) => {
                                j.stopPropagation(), B.onChange("");
                              },
                              children: B.value
                            },
                            B.value
                          ) }),
                          children: [
                            /* @__PURE__ */ a(
                              _e,
                              {
                                label: r("selectTheme"),
                                isDisabled: !0,
                                children: r("selectTheme")
                              },
                              "theme_placeholder"
                            )
                          ].concat(
                            E.map((j) => /* @__PURE__ */ a(_e, { value: j, children: j }, j))
                          )
                        }
                      )
                    }
                  ) }),
                  /* @__PURE__ */ a(
                    se,
                    {
                      label: r("themeType"),
                      fieldId: "kc-themeType",
                      isRequired: !0,
                      children: /* @__PURE__ */ a(
                        ge,
                        {
                          name: "themeType",
                          control: A,
                          defaultValue: "",
                          rules: {
                            validate: (B) => (B || "").length > 0
                          },
                          render: ({ field: B }) => /* @__PURE__ */ a(
                            ft,
                            {
                              "data-testid": "effective-message-bundles-feature-searchField",
                              chipGroupProps: {
                                numChips: 1,
                                expandedText: r("hide"),
                                collapsedText: r("showRemaining")
                              },
                              variant: pt.single,
                              typeAheadAriaLabel: "Select",
                              onToggle: (j) => b(j),
                              selections: B.value,
                              onSelect: (j) => {
                                B.onChange(j.toString()), b(!1);
                              },
                              onClear: () => {
                                B.onChange("");
                              },
                              isOpen: g,
                              "aria-label": r("selectThemeType"),
                              chipGroupComponent: /* @__PURE__ */ a(vn, { children: /* @__PURE__ */ a(
                                Ut,
                                {
                                  onClick: (j) => {
                                    j.stopPropagation(), B.onChange("");
                                  },
                                  children: B.value
                                },
                                B.value
                              ) }),
                              children: [
                                /* @__PURE__ */ a(
                                  _e,
                                  {
                                    label: r("selectThemeType"),
                                    isDisabled: !0,
                                    children: r("selectThemeType")
                                  },
                                  "themeType_placeholder"
                                )
                              ].concat(
                                O.map((j) => /* @__PURE__ */ a(_e, { value: j, children: j }, j))
                              )
                            }
                          )
                        }
                      )
                    }
                  ),
                  /* @__PURE__ */ a(se, { label: r("language"), fieldId: "kc-language", isRequired: !0, children: /* @__PURE__ */ a(
                    ge,
                    {
                      name: "locale",
                      control: A,
                      defaultValue: "",
                      rules: {
                        validate: (B) => (B || "").length > 0
                      },
                      render: ({ field: B }) => /* @__PURE__ */ a(
                        ft,
                        {
                          "data-testid": "effective-message-bundles-language-searchField",
                          chipGroupProps: {
                            numChips: 1,
                            expandedText: r("hide"),
                            collapsedText: r("showRemaining")
                          },
                          variant: pt.single,
                          typeAheadAriaLabel: "Select",
                          onToggle: (j) => y(j),
                          selections: B.value,
                          onSelect: (j) => {
                            B.onChange(j.toString()), y(!1);
                          },
                          onClear: () => {
                            B.onChange("");
                          },
                          isOpen: v,
                          "aria-label": r("selectLanguage"),
                          chipGroupComponent: /* @__PURE__ */ a(vn, { children: B.value ? /* @__PURE__ */ a(
                            Ut,
                            {
                              onClick: (j) => {
                                j.stopPropagation(), B.onChange("");
                              },
                              children: gr(
                                B.value,
                                o.getLocale()
                              )
                            },
                            B.value
                          ) : null }),
                          children: [
                            /* @__PURE__ */ a(
                              _e,
                              {
                                label: r("selectLanguage"),
                                isDisabled: !0,
                                children: r("selectLanguage")
                              },
                              "language_placeholder"
                            )
                          ].concat(
                            T.map((j) => /* @__PURE__ */ a(_e, { value: j, children: gr(j, o.getLocale()) }, j))
                          )
                        }
                      )
                    }
                  ) }),
                  /* @__PURE__ */ a(se, { label: r("hasWords"), fieldId: "kc-hasWords", children: /* @__PURE__ */ a(
                    ge,
                    {
                      name: "hasWords",
                      control: A,
                      render: ({ field: B }) => /* @__PURE__ */ C("div", { children: [
                        /* @__PURE__ */ a(
                          mt,
                          {
                            id: "kc-hasWords",
                            "data-testid": "effective-message-bundles-hasWords-searchField",
                            value: B.value.join(" "),
                            onChange: (j) => {
                              const Q = j.target.value;
                              if (Q.trim().length === 0)
                                B.onChange([]);
                              else {
                                const te = Q.split(" ").map((ie) => ie.trim());
                                B.onChange(te);
                              }
                            }
                          }
                        ),
                        /* @__PURE__ */ a(vn, { children: B.value.map((j, W) => /* @__PURE__ */ a(
                          Ut,
                          {
                            onClick: (Q) => {
                              Q.stopPropagation();
                              const te = B.value.filter(
                                (ie, ce) => ce !== W
                              );
                              B.onChange(te);
                            },
                            children: j
                          },
                          W
                        )) })
                      ] })
                    }
                  ) }),
                  /* @__PURE__ */ C(st, { className: "pf-v5-u-mt-sm", children: [
                    /* @__PURE__ */ a(
                      z,
                      {
                        variant: "primary",
                        onClick: () => {
                          p(!0), V();
                        },
                        "data-testid": "search-effective-message-bundles-btn",
                        isDisabled: !F,
                        children: r("search")
                      }
                    ),
                    /* @__PURE__ */ a(
                      z,
                      {
                        variant: "secondary",
                        onClick: U,
                        "data-testid": "reset-search-effective-message-bundles-btn",
                        isDisabled: !D,
                        children: r("reset")
                      }
                    )
                  ] })
                ]
              }
            )
          }
        ) }),
        /* @__PURE__ */ a(Nt, { children: Object.entries(x).length > 0 && /* @__PURE__ */ a(ee, { children: Object.entries(x).map((B) => {
          const [j, W] = B;
          return /* @__PURE__ */ a(
            vn,
            {
              className: "pf-v5-u-mt-md pf-v5-u-mr-md",
              categoryName: I[j],
              isClosable: !0,
              onClick: () => G(j),
              children: typeof W == "string" ? /* @__PURE__ */ a(Ut, { isReadOnly: !0, children: j === "locale" ? gr(
                W,
                o.getLocale()
              )?.toLowerCase() : W }) : W.map((Q) => /* @__PURE__ */ a(
                Ut,
                {
                  onClick: () => q(j, Q),
                  children: Q
                },
                Q
              ))
            },
            j
          );
        }) }) })
      ]
    }
  );
  return u ? /* @__PURE__ */ a(
    St,
    {
      loader: M,
      ariaLabelKey: "effectiveMessageBundles",
      toolbarItem: K(),
      columns: [
        {
          name: "key",
          displayKey: "key"
        },
        {
          name: "value",
          displayKey: "value"
        }
      ],
      emptyState: /* @__PURE__ */ a(
        ct,
        {
          message: r("noSearchResults"),
          instructions: r("noSearchResultsInstructions")
        }
      ),
      isSearching: Object.keys(x).length > 0
    },
    R
  ) : /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a("div", { className: "pf-v5-u-py-lg pf-v5-u-pl-md", children: K() }),
    /* @__PURE__ */ a(_t, {}),
    /* @__PURE__ */ a(
      ct,
      {
        message: r("emptyEffectiveMessageBundles"),
        instructions: r("emptyEffectiveMessageBundlesInstructions"),
        isSearchVariant: !0
      }
    )
  ] });
}, gZ = ({
  handleModalToggle: e,
  save: t,
  form: n
}) => {
  const { t: r } = H();
  return /* @__PURE__ */ a(
    ht,
    {
      variant: Rt.small,
      title: r("addTranslation"),
      isOpen: !0,
      onClose: e,
      actions: [
        /* @__PURE__ */ a(
          z,
          {
            "data-testid": "add-translation-confirm-button",
            variant: "primary",
            type: "submit",
            form: "translation-form",
            children: r("create")
          },
          "confirm"
        ),
        /* @__PURE__ */ a(
          z,
          {
            id: "modal-cancel",
            "data-testid": "cancel",
            variant: xe.link,
            onClick: () => {
              e();
            },
            children: r("cancel")
          },
          "cancel"
        )
      ],
      children: /* @__PURE__ */ a(
        xt,
        {
          id: "translation-form",
          isHorizontal: !0,
          onSubmit: n.handleSubmit(t),
          children: /* @__PURE__ */ C(Ve, { ...n, children: [
            /* @__PURE__ */ a(
              ve,
              {
                name: "key",
                label: r("key"),
                autoFocus: !0,
                rules: {
                  required: r("required")
                }
              }
            ),
            /* @__PURE__ */ a(
              ve,
              {
                name: "value",
                label: r("value"),
                rules: {
                  required: r("required")
                }
              }
            )
          ] })
        }
      )
    }
  );
}, bZ = ({
  internationalizationEnabled: e,
  watchSupportedLocales: t,
  realm: n,
  tableData: r
}) => {
  const { adminClient: i } = pe(), { t: s } = H(), [o, l] = N(!1), [c, d] = N(!1), [u, p] = N([]), [m, f] = N(Na), [g, b] = N(!1), { getValues: v, handleSubmit: y } = Ue(), [x, w] = N(!1), [R, S] = N([]), [_, O] = N(0), [E, T] = N(10), [I, k] = N(0), [P, D] = N(""), F = Ue({ mode: "onChange" }), { addAlert: A, addError: M } = Se(), { realm: V } = be(), { whoAmI: U } = _a(), [G, q] = N([]), [L, K] = N(!1), [B, j] = N({}), [W, Q] = N(""), te = () => {
    O(_ + 1);
  };
  He(() => {
    (async () => {
      try {
        let J = await i.realms.getRealmLocalizationTexts({
          first: I,
          max: E,
          realm: n.realm,
          selectedLocale: m || v("defaultLocale") || U.getLocale()
        });
        if (P) {
          const X = (ae) => Object.entries(J).filter(
            (de) => de[ae].includes(P)
          ), Y = xF(
            X(0).concat(X(1)),
            bi
          );
          J = Object.fromEntries(Y);
        }
        return Object.entries(J).slice(I, I + E);
      } catch {
        return [];
      }
    })().then((J) => {
      p(J);
      const X = J.map(
        (Y) => ({
          rowEditBtnAriaLabel: () => s("rowEditBtnAriaLabel", {
            translation: Y[1]
          }),
          rowSaveBtnAriaLabel: () => s("rowSaveBtnAriaLabel", {
            translation: Y[1]
          }),
          rowCancelBtnAriaLabel: () => s("rowCancelBtnAriaLabel", {
            translation: Y[1]
          }),
          cells: [
            {
              title: Y[0],
              props: {
                value: Y[0]
              }
            },
            {
              title: Y[1],
              props: {
                value: Y[1]
              }
            }
          ]
        })
      );
      S(X);
    });
  }, [_, r, I, E, P]);
  const ie = () => {
    l(!o);
  }, ce = [
    /* @__PURE__ */ a(of, { label: s("defaultLocale"), children: /* @__PURE__ */ a(_e, { value: Na, children: gr(Na, U.getDisplayName()) }, Na) }, "group1"),
    /* @__PURE__ */ a(_t, {}, "divider"),
    /* @__PURE__ */ a(of, { label: s("supportedLocales"), children: t.map((we) => /* @__PURE__ */ a(_e, { value: we, children: gr(we, U.getLocale()) }, we)) }, "group2")
  ], Z = async (we) => {
    try {
      await i.realms.addLocalization(
        {
          realm: V,
          selectedLocale: m || v("defaultLocale") || Na,
          key: we.key
        },
        we.value
      ), i.setConfig({
        realmName: V
      }), te(), F.setValue("key", ""), F.setValue("value", ""), qr.reloadResources(), A(s("addTranslationSuccess"), ue.success);
    } catch (J) {
      M(s("addTranslationError"), J);
    }
  }, [me, ne] = ze({
    titleKey: "deleteConfirmTranslationTitle",
    messageKey: s("translationDeleteConfirmDialog", {
      count: G.length
    }),
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onCancel: () => {
      q([]), K(!1);
    },
    onConfirm: async () => {
      try {
        for (const we of G)
          delete qr.store.data[U.getLocale()][V][we], await i.realms.deleteRealmLocalizationTexts({
            realm: V,
            selectedLocale: m,
            key: we
          });
        K(!1), q([]), te(), A(s("deleteAllTranslationsSuccess"), ue.success);
      } catch (we) {
        M("deleteAllTranslationsError", we);
      }
    }
  }), Oe = (we, J) => {
    const X = (R[J].cells?.[0]).props.value;
    we.target.checked ? q((Y) => [...Y, X]) : q(
      (Y) => Y.filter((ae) => ae !== X)
    ), K(
      R.length === G.length + (we.target.checked ? 1 : -1)
    );
  }, Pe = () => {
    q(L ? [] : R.map((we) => (we.cells?.[0]).props.value)), K(!L);
  }, $e = (we) => G.includes(we), fe = async (we, J) => {
    const X = wc(R), Y = wc(X[J]);
    (Y.cells?.[1]).props.value = we, X[J] = Y;
    try {
      const ae = (Y.cells?.[0]).props.value, de = (Y.cells?.[1]).props.value;
      await i.realms.addLocalization(
        {
          realm: n.realm,
          selectedLocale: m || v("defaultLocale") || Na,
          key: ae
        },
        de
      ), qr.reloadResources(), A(s("updateTranslationSuccess"), ue.success), S(X);
    } catch {
      A(s("updateTranslationError"), ue.danger);
    }
    j((ae) => ({
      ...ae,
      [J]: !1
    }));
  };
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(ne, {}),
    o && /* @__PURE__ */ a(
      gZ,
      {
        handleModalToggle: ie,
        save: (we) => {
          Z(we), ie();
        },
        form: F
      }
    ),
    /* @__PURE__ */ a(Pt, { children: /* @__PURE__ */ a(
      tt,
      {
        className: "pf-v5-u-mt-lg pf-v5-u-ml-md",
        component: Wt.p,
        children: s("realmOverridesDescription")
      }
    ) }),
    /* @__PURE__ */ C(
      Fi,
      {
        count: u.length,
        first: I,
        max: E,
        onNextClick: k,
        onPreviousClick: k,
        onPerPageSelect: (we, J) => {
          k(we), T(J);
        },
        inputGroupName: "search",
        inputGroupOnEnter: (we) => {
          D(we), k(0), T(10);
        },
        inputGroupPlaceholder: s("searchForTranslation"),
        toolbarItem: /* @__PURE__ */ C(ee, { children: [
          /* @__PURE__ */ a(
            z,
            {
              "data-testid": "add-translationBtn",
              onClick: () => {
                l(!0), K(!1), q([]);
              },
              children: s("addTranslation")
            }
          ),
          /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(
            qt,
            {
              toggle: (we) => /* @__PURE__ */ a(
                yt,
                {
                  ref: we,
                  onClick: () => b(!g),
                  variant: "plain",
                  isExpanded: g,
                  "data-testid": "toolbar-deleteBtn",
                  "aria-label": "kebab",
                  children: /* @__PURE__ */ a(dr, {})
                }
              ),
              isOpen: g,
              isPlain: !0,
              children: /* @__PURE__ */ a(Xt, { children: /* @__PURE__ */ a(
                Ke,
                {
                  component: "button",
                  "data-testid": "delete-selected-TranslationBtn",
                  isDisabled: u.length === 0 || G.length === 0,
                  onClick: () => {
                    me(), b(!1);
                  },
                  children: s("delete")
                },
                "action"
              ) })
            }
          ) })
        ] }),
        searchTypeComponent: /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(
          ft,
          {
            width: 180,
            isOpen: c,
            className: "kc-filter-by-locale-select",
            variant: pt.single,
            isDisabled: !e,
            onToggle: (we) => d(we),
            onSelect: (we) => {
              f(we.toString()), w(!0), te(), d(!1);
            },
            selections: x ? gr(m, U.getLocale()) : n.defaultLocale !== "" ? gr(Na, U.getLocale()) : s("placeholderText"),
            children: ce
          }
        ) }),
        children: [
          u.length === 0 && !P && /* @__PURE__ */ a(
            ct,
            {
              hasIcon: !0,
              message: s("noTranslations"),
              instructions: s("noTranslationsInstructions"),
              onPrimaryAction: ie
            }
          ),
          u.length === 0 && P && /* @__PURE__ */ a(
            ct,
            {
              hasIcon: !0,
              icon: Ls,
              isSearchVariant: !0,
              message: s("noSearchResults"),
              instructions: s("noRealmOverridesSearchResultsInstructions")
            }
          ),
          u.length !== 0 && /* @__PURE__ */ C(
            Cn,
            {
              "aria-label": s("editableRowsTable"),
              "data-testid": "editable-rows-table",
              children: [
                /* @__PURE__ */ a(wn, { children: /* @__PURE__ */ C(rt, { children: [
                  /* @__PURE__ */ a(De, { className: "pf-v5-u-px-lg", children: /* @__PURE__ */ a(
                    "input",
                    {
                      type: "checkbox",
                      "aria-label": s("selectAll"),
                      checked: L,
                      onChange: Pe,
                      "data-testid": "selectAll"
                    }
                  ) }),
                  /* @__PURE__ */ a(De, { className: "pf-v5-u-py-lg", children: s("key") }),
                  /* @__PURE__ */ a(De, { className: "pf-v5-u-py-lg", children: s("value") }),
                  /* @__PURE__ */ a(De, { "aria-hidden": "true" })
                ] }) }),
                /* @__PURE__ */ a(yn, { children: R.map((we, J) => /* @__PURE__ */ C(rt, { children: [
                  /* @__PURE__ */ a(
                    ke,
                    {
                      className: "pf-v5-u-px-lg",
                      select: {
                        rowIndex: J,
                        onSelect: (X) => Oe(
                          X,
                          J
                        ),
                        isSelected: $e(
                          (we.cells?.[0]).props.value
                        )
                      }
                    }
                  ),
                  /* @__PURE__ */ a(ke, { className: "pf-m-sm pf-v5-u-px-sm", dataLabel: s("key"), children: (we.cells?.[0]).props.value }),
                  /* @__PURE__ */ a(
                    ke,
                    {
                      className: "pf-m-sm pf-v5-u-px-sm",
                      dataLabel: s("value"),
                      children: /* @__PURE__ */ a(
                        xt,
                        {
                          isHorizontal: !0,
                          className: "kc-form-translationValue",
                          onSubmit: y(() => {
                            fe(W, J);
                          }),
                          children: /* @__PURE__ */ a(
                            se,
                            {
                              fieldId: "kc-translationValue",
                              className: "pf-v5-u-display-inline-block",
                              children: B[J] ? /* @__PURE__ */ C(ee, { children: [
                                /* @__PURE__ */ a(
                                  mt,
                                  {
                                    "aria-label": s("editTranslationValue"),
                                    type: "text",
                                    className: "pf-v5-u-w-initial",
                                    "data-testid": `editTranslationValueInput-${J}`,
                                    value: W,
                                    onChange: (X, Y) => {
                                      Q(Y);
                                    }
                                  },
                                  `edit-input-${J}`
                                ),
                                /* @__PURE__ */ a(
                                  z,
                                  {
                                    variant: "link",
                                    className: "pf-m-plain",
                                    "data-testid": `editTranslationAcceptBtn-${J}`,
                                    type: "submit",
                                    "aria-label": s("acceptBtn"),
                                    icon: /* @__PURE__ */ a(As, {})
                                  }
                                ),
                                /* @__PURE__ */ a(
                                  z,
                                  {
                                    variant: "link",
                                    className: "pf-m-plain",
                                    "data-testid": `editTranslationCancelBtn-${J}`,
                                    icon: /* @__PURE__ */ a(Oa, {}),
                                    "aria-label": s("cancelBtn"),
                                    onClick: () => {
                                      j((X) => ({
                                        ...X,
                                        [J]: !1
                                      }));
                                    }
                                  }
                                )
                              ] }) : /* @__PURE__ */ C(ee, { children: [
                                /* @__PURE__ */ a("span", { children: (we.cells?.[1]).props.value }),
                                /* @__PURE__ */ a(
                                  z,
                                  {
                                    onClick: () => {
                                      const X = (R[J].cells?.[1]).props.value;
                                      Q(X), j((Y) => ({
                                        ...Y,
                                        [J]: !0
                                      }));
                                    },
                                    "aria-label": s("editBtn"),
                                    variant: "link",
                                    className: "pf-m-plain",
                                    "data-testid": `editTranslationBtn-${J}`,
                                    children: /* @__PURE__ */ a(uS, {})
                                  },
                                  `edit-button-${J}`
                                )
                              ] })
                            }
                          )
                        }
                      )
                    },
                    J
                  ),
                  /* @__PURE__ */ a(ke, { isActionCell: !0, children: /* @__PURE__ */ a(
                    dl,
                    {
                      items: [
                        {
                          title: s("delete"),
                          onClick: () => {
                            q([
                              (we.cells?.[0]).props.value
                            ]), u.length === 1 && K(!0), me(), b(!1);
                          }
                        }
                      ]
                    }
                  ) })
                ] }, (we.cells?.[0]).props.value)) })
              ]
            }
          )
        ]
      }
    )
  ] });
}, vZ = ({
  save: e,
  realm: t,
  tableData: n
}) => {
  const { t: r } = H(), { whoAmI: i } = _a(), [s, o] = N(0), l = Ue(), { setValue: c, control: d, handleSubmit: u, formState: p } = l, m = t.supportedLocales?.length ? t.supportedLocales : [Na], f = Tt().themes, g = et(() => {
    const w = Object.values(f).flatMap(
      (R) => R.flatMap(({ locales: S }) => S || [])
    );
    return Array.from(new Set(w));
  }, [f]), b = () => {
    In(t, c), c("supportedLocales", m);
  };
  He(b, []);
  const v = nt({
    control: d,
    name: "supportedLocales",
    defaultValue: m
  }), y = nt({
    control: d,
    name: "internationalizationEnabled",
    defaultValue: t.internationalizationEnabled
  }), x = nt({
    name: "defaultLocale",
    control: d,
    defaultValue: t.defaultLocale ? [t.defaultLocale] : []
  });
  return /* @__PURE__ */ C(
    Ua,
    {
      activeKey: s,
      onSelect: (w, R) => o(R),
      children: [
        /* @__PURE__ */ a(
          Ee,
          {
            id: "locales",
            eventKey: 0,
            title: /* @__PURE__ */ a(Ie, { children: r("locales") }),
            "data-testid": "rs-localization-locales-tab",
            children: /* @__PURE__ */ C(
              Fe,
              {
                isHorizontal: !0,
                role: "manage-realm",
                className: "pf-v5-u-mt-lg pf-v5-u-ml-md",
                onSubmit: u(e),
                children: [
                  /* @__PURE__ */ C(Ve, { ...l, children: [
                    /* @__PURE__ */ a(
                      Qs,
                      {
                        name: "internationalizationEnabled",
                        label: r("internationalization"),
                        labelIcon: r("internationalizationHelp"),
                        labelOn: r("enabled"),
                        labelOff: r("disabled"),
                        "aria-label": r("internationalization")
                      }
                    ),
                    y && /* @__PURE__ */ C(ee, { children: [
                      /* @__PURE__ */ a(
                        at,
                        {
                          name: "supportedLocales",
                          isScrollable: !0,
                          label: r("supportedLocales"),
                          controller: {
                            defaultValue: m
                          },
                          variant: "typeaheadMulti",
                          placeholderText: r("selectLocales"),
                          options: g.map((w) => ({
                            key: w,
                            value: gr(w, i.getLocale()) || w
                          }))
                        }
                      ),
                      /* @__PURE__ */ a(
                        at,
                        {
                          name: "defaultLocale",
                          label: r("defaultLocale"),
                          controller: {
                            defaultValue: Na
                          },
                          "data-testid": "select-default-locale",
                          options: v.map((w) => ({
                            key: w,
                            value: gr(w, i.getLocale()) || w
                          }))
                        }
                      )
                    ] })
                  ] }),
                  /* @__PURE__ */ C(st, { children: [
                    /* @__PURE__ */ a(
                      z,
                      {
                        variant: "primary",
                        isDisabled: !p.isDirty,
                        type: "submit",
                        "data-testid": "localization-tab-save",
                        children: r("save")
                      }
                    ),
                    /* @__PURE__ */ a(z, { variant: "link", onClick: b, children: r("revert") })
                  ] })
                ]
              }
            )
          }
        ),
        /* @__PURE__ */ a(
          Ee,
          {
            id: "realm-overrides",
            eventKey: 1,
            title: /* @__PURE__ */ C(Ie, { children: [
              r("realmOverrides"),
              " "
            ] }),
            "data-testid": "rs-localization-realm-overrides-tab",
            children: /* @__PURE__ */ a(
              bZ,
              {
                internationalizationEnabled: y,
                watchSupportedLocales: v,
                realm: t,
                tableData: n
              }
            )
          }
        ),
        /* @__PURE__ */ a(
          Ee,
          {
            id: "effective-message-bundles",
            eventKey: 2,
            title: /* @__PURE__ */ a(Ie, { children: r("effectiveMessageBundles") }),
            "data-testid": "rs-localization-effective-message-bundles-tab",
            children: /* @__PURE__ */ a(
              hZ,
              {
                defaultSupportedLocales: m,
                defaultLocales: x
              }
            )
          }
        )
      ]
    }
  );
}, Md = ({
  name: e,
  style: t
}) => {
  const { t: n } = H();
  return /* @__PURE__ */ a(
    gl,
    {
      name: e,
      style: t,
      label: n(e),
      labelIcon: n(`${e}Help`),
      controller: {
        defaultValue: "",
        rules: { required: n("required") }
      }
    }
  );
}, yZ = ({
  realm: e,
  save: t
}) => {
  const { t: n } = H(), r = Ue(), {
    setValue: i,
    handleSubmit: s,
    formState: { isDirty: o }
  } = r, [l, c] = N(!1), [d, u] = N(!1);
  let p;
  ((b) => {
    b.Disabled = "Disabled", b.PermanentLockout = "PermanentLockout", b.TemporaryLockout = "TemporaryLockout", b.PermanentAfterTemporaryLockout = "PermanentAfterTemporaryLockout";
  })(p || (p = {}));
  const m = [
    "Disabled",
    "PermanentLockout",
    "TemporaryLockout",
    "PermanentAfterTemporaryLockout"
    /* PermanentAfterTemporaryLockout */
  ], f = () => {
    In(e, i), u(!1);
  };
  He(f, []);
  const g = r.getValues("bruteForceProtected") ? r.getValues("permanentLockout") ? r.getValues("maxTemporaryLockouts") == 0 ? "PermanentLockout" : "PermanentAfterTemporaryLockout" : "TemporaryLockout" : "Disabled";
  return /* @__PURE__ */ a(Ve, { ...r, children: /* @__PURE__ */ C(
    Fe,
    {
      role: "manage-realm",
      isHorizontal: !0,
      onSubmit: s(t),
      children: [
        /* @__PURE__ */ a(
          se,
          {
            label: n("bruteForceMode"),
            fieldId: "kc-brute-force-mode",
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: n("bruteForceModeHelpText"),
                fieldLabelId: "bruteForceMode"
              }
            ),
            children: /* @__PURE__ */ a(
              ft,
              {
                toggleId: "kc-brute-force-mode",
                onToggle: () => c(!l),
                onSelect: (b) => {
                  switch (b) {
                    case "Disabled":
                      r.setValue("bruteForceProtected", !1), r.setValue("permanentLockout", !1), r.setValue("maxTemporaryLockouts", 0);
                      break;
                    case "TemporaryLockout":
                      r.setValue("bruteForceProtected", !0), r.setValue("permanentLockout", !1), r.setValue("maxTemporaryLockouts", 0);
                      break;
                    case "PermanentLockout":
                      r.setValue("bruteForceProtected", !0), r.setValue("permanentLockout", !0), r.setValue("maxTemporaryLockouts", 0);
                      break;
                    case "PermanentAfterTemporaryLockout":
                      r.setValue("bruteForceProtected", !0), r.setValue("permanentLockout", !0), r.setValue("maxTemporaryLockouts", 1);
                      break;
                  }
                  u(!0), c(!1);
                },
                selections: g,
                variant: pt.single,
                isOpen: l,
                "data-testid": "select-brute-force-mode",
                "aria-label": n("selectUnmanagedAttributePolicy"),
                children: m.map((b) => /* @__PURE__ */ a(_e, { value: b, children: n(`bruteForceMode.${b}`) }, b))
              }
            )
          }
        ),
        g !== "Disabled" && /* @__PURE__ */ C(ee, { children: [
          /* @__PURE__ */ a(
            es,
            {
              name: "failureFactor",
              label: n("failureFactor"),
              labelIcon: n("failureFactorHelp"),
              controller: {
                defaultValue: 0,
                rules: { required: n("required") }
              }
            }
          ),
          g === "PermanentAfterTemporaryLockout" && /* @__PURE__ */ a(
            es,
            {
              name: "maxTemporaryLockouts",
              label: n("maxTemporaryLockouts"),
              labelIcon: n("maxTemporaryLockoutsHelp"),
              controller: {
                defaultValue: 0
              }
            }
          ),
          (g === "TemporaryLockout" || g === "PermanentAfterTemporaryLockout") && /* @__PURE__ */ C(ee, { children: [
            /* @__PURE__ */ a(Md, { name: "waitIncrementSeconds" }),
            /* @__PURE__ */ a(Md, { name: "maxFailureWaitSeconds" }),
            /* @__PURE__ */ a(Md, { name: "maxDeltaTimeSeconds" })
          ] }),
          /* @__PURE__ */ a(
            es,
            {
              name: "quickLoginCheckMilliSeconds",
              label: n("quickLoginCheckMilliSeconds"),
              labelIcon: n("quickLoginCheckMilliSecondsHelp"),
              controller: {
                defaultValue: 0
              }
            }
          ),
          /* @__PURE__ */ a(Md, { name: "minimumQuickLoginWaitSeconds" })
        ] }),
        /* @__PURE__ */ C(st, { children: [
          /* @__PURE__ */ a(
            z,
            {
              variant: "primary",
              type: "submit",
              "data-testid": "brute-force-tab-save",
              isDisabled: !o && !d,
              children: n("save")
            }
          ),
          /* @__PURE__ */ a(z, { variant: "link", onClick: f, children: n("revert") })
        ] })
      ]
    }
  ) });
}, Hi = ({
  fieldName: e,
  url: t
}) => {
  const { t: n } = H(), r = e.substr(e.indexOf(".") + 1);
  return /* @__PURE__ */ a(
    ve,
    {
      name: e,
      label: n(r),
      labelIcon: /* @__PURE__ */ C(ns, { i18nKey: `${r}Help`, children: [
        "Default value prevents pages from being included",
        /* @__PURE__ */ a(js, { href: t, title: n("learnMore") })
      ] })
    }
  );
}, CZ = ({ realm: e, save: t }) => {
  const { t: n } = H(), r = Ue(), {
    setValue: i,
    formState: { isDirty: s },
    handleSubmit: o
  } = r, l = () => In(e, i);
  return He(l, []), /* @__PURE__ */ a(Ve, { ...r, children: /* @__PURE__ */ C(
    Fe,
    {
      isHorizontal: !0,
      role: "manage-realm",
      className: "keycloak__security-defences__form",
      onSubmit: o(t),
      children: [
        /* @__PURE__ */ a(
          Hi,
          {
            fieldName: "browserSecurityHeaders.xFrameOptions",
            url: "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options"
          }
        ),
        /* @__PURE__ */ a(
          Hi,
          {
            fieldName: "browserSecurityHeaders.contentSecurityPolicy",
            url: "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy"
          }
        ),
        /* @__PURE__ */ a(
          Hi,
          {
            fieldName: "browserSecurityHeaders.contentSecurityPolicyReportOnly",
            url: "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy-Report-Only"
          }
        ),
        /* @__PURE__ */ a(
          Hi,
          {
            fieldName: "browserSecurityHeaders.xContentTypeOptions",
            url: "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Content-Type-Options"
          }
        ),
        /* @__PURE__ */ a(
          Hi,
          {
            fieldName: "browserSecurityHeaders.xRobotsTag",
            url: "https://developers.google.com/search/docs/advanced/robots/robots_meta_tag"
          }
        ),
        /* @__PURE__ */ a(
          Hi,
          {
            fieldName: "browserSecurityHeaders.xXSSProtection",
            url: "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-XSS-Protection"
          }
        ),
        /* @__PURE__ */ a(
          Hi,
          {
            fieldName: "browserSecurityHeaders.strictTransportSecurity",
            url: "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security"
          }
        ),
        /* @__PURE__ */ a(
          Hi,
          {
            fieldName: "browserSecurityHeaders.referrerPolicy",
            url: "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referrer-Policy"
          }
        ),
        /* @__PURE__ */ C(st, { children: [
          /* @__PURE__ */ a(
            z,
            {
              variant: "primary",
              type: "submit",
              "data-testid": "headers-form-tab-save",
              isDisabled: !s,
              children: n("save")
            }
          ),
          /* @__PURE__ */ a(z, { variant: "link", onClick: l, children: n("revert") })
        ] })
      ]
    }
  ) });
}, xZ = ({ realm: e, save: t }) => {
  const { t: n } = H(), [r, i] = N(10);
  return /* @__PURE__ */ C(
    Ua,
    {
      activeKey: r,
      onSelect: (s, o) => i(o),
      children: [
        /* @__PURE__ */ a(
          Ee,
          {
            id: "headers",
            eventKey: 10,
            "data-testid": "security-defenses-headers-tab",
            title: /* @__PURE__ */ a(Ie, { children: n("headers") }),
            children: /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ a(CZ, { realm: e, save: t }) })
          }
        ),
        /* @__PURE__ */ a(
          Ee,
          {
            id: "bruteForce",
            eventKey: 20,
            "data-testid": "security-defenses-brute-force-tab",
            title: /* @__PURE__ */ a(Ie, { children: n("bruteForceDetection") }),
            children: /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ a(yZ, { realm: e, save: t }) })
          }
        )
      ]
    }
  );
};
function yl() {
  const { realmRepresentation: e } = be(), t = et(() => e?.supportedLocales?.length ? e.supportedLocales : [Na], [e]), n = et(() => e?.defaultLocale?.length ? [e.defaultLocale] : [], [e]);
  return et(() => Array.from(/* @__PURE__ */ new Set([...n, ...t])), [n, t]);
}
const dE = ({
  translationKey: e,
  translations: t,
  type: n,
  onCancel: r,
  toggleDialog: i,
  onTranslationsAdded: s
}) => {
  const { adminClient: o } = pe(), { t: l } = H(), { realm: c, realmRepresentation: d } = be(), u = yl(), { whoAmI: p } = _a(), [m, f] = N(10), [g, b] = N(0), [v, y] = N(""), [x, w] = N({}), R = Ue({
    mode: "onChange"
  }), {
    getValues: S,
    handleSubmit: _,
    setValue: O,
    formState: { isValid: E }
  } = R, T = et(() => d?.defaultLocale.length ? [d.defaultLocale] : [], [d]), I = et(() => u.filter(
    (D) => gr(D, p.getLocale()).toLowerCase().includes(v.toLowerCase())
  ), [u, v, p]);
  Re(
    async () => {
      const D = u.map((V) => V);
      return (await Promise.all(
        D.map(
          (V) => o.realms.getRealmLocalizationTexts({
            realm: c,
            selectedLocale: V
          })
        )
      )).map((V, U) => {
        const G = D[U], q = V[e];
        return {
          key: e,
          translations: [{ locale: G, value: q }]
        };
      }).reduce((V, U) => {
        const G = U.translations[0].locale, q = U.translations[0].value;
        return { ...V, [G]: q };
      }, {});
    },
    (D) => {
      w((F) => F !== D ? D : F);
    },
    [u, e, c]
  ), He(() => {
    u.forEach((D, F) => {
      O(`translations.${F}.locale`, D), O(
        `translations.${F}.value`,
        t.translations.length > 0 ? t.translations[F].value : x[D] || ""
      );
    }), O("key", e);
  }, [
    u,
    x,
    e,
    O,
    t
  ]);
  const k = () => {
    const D = S(), F = D.translations.map((A) => A.locale === v ? {
      ...A,
      value: D.translations.find((M) => M.locale === v)?.value ?? ""
    } : A);
    s({
      key: D.key,
      translations: F
    }), i();
  }, P = nt({
    control: R.control,
    name: "translations.0.value"
  });
  return /* @__PURE__ */ a(
    ht,
    {
      variant: Rt.medium,
      title: l("addTranslationsModalTitle"),
      isOpen: !0,
      onClose: i,
      actions: [
        /* @__PURE__ */ a(
          z,
          {
            "data-testid": "okTranslationBtn",
            variant: "primary",
            type: "submit",
            form: "add-translation",
            isDisabled: !E || !P,
            children: l("addTranslationDialogOkBtn")
          },
          "ok"
        ),
        /* @__PURE__ */ a(
          z,
          {
            "data-testid": "cancelTranslationBtn",
            variant: "link",
            onClick: r,
            children: l("cancel")
          },
          "cancel"
        )
      ],
      children: /* @__PURE__ */ C(
        ra,
        {
          direction: { default: "column" },
          spaceItems: { default: "spaceItemsNone" },
          children: [
            /* @__PURE__ */ a(Nt, { children: /* @__PURE__ */ a(Pt, { children: /* @__PURE__ */ C(tt, { component: Wt.p, children: [
              l(n !== "displayHeader" ? "addTranslationsModalSubTitleDescription" : "addTranslationsModalSubTitle"),
              " ",
              /* @__PURE__ */ a("strong", { children: l("addTranslationsModalSubTitleBolded") })
            ] }) }) }),
            /* @__PURE__ */ a(Nt, { children: /* @__PURE__ */ a(Ve, { ...R, children: /* @__PURE__ */ C(
              xt,
              {
                id: "add-translation",
                "data-testid": "addTranslationForm",
                onSubmit: _(k),
                children: [
                  /* @__PURE__ */ a(
                    ve,
                    {
                      name: "key",
                      label: l("translationKey"),
                      className: "pf-v5-u-mt-md",
                      "data-testid": "translation-key",
                      isDisabled: !0
                    }
                  ),
                  /* @__PURE__ */ C(Nt, { children: [
                    /* @__PURE__ */ a(Pt, { children: /* @__PURE__ */ a(
                      tt,
                      {
                        className: "pf-v5-u-font-size-sm pf-v5-u-font-weight-bold",
                        component: Wt.p,
                        children: l("translationsTableHeading")
                      }
                    ) }),
                    /* @__PURE__ */ C(
                      Fi,
                      {
                        count: u.length,
                        first: g,
                        max: m,
                        onNextClick: b,
                        onPreviousClick: b,
                        onPerPageSelect: (D, F) => {
                          b(D), f(F);
                        },
                        inputGroupName: "search",
                        inputGroupOnEnter: (D) => {
                          y(D), b(0), f(10);
                        },
                        inputGroupPlaceholder: l("searchForLanguage"),
                        children: [
                          I.length === 0 && !v && /* @__PURE__ */ a(
                            ct,
                            {
                              hasIcon: !0,
                              message: l("noLanguages"),
                              instructions: l("noLanguagesInstructions")
                            }
                          ),
                          I.length === 0 && v && /* @__PURE__ */ a(
                            ct,
                            {
                              hasIcon: !0,
                              icon: Ls,
                              isSearchVariant: !0,
                              message: l("noSearchResults"),
                              instructions: l("noLanguagesSearchResultsInstructions")
                            }
                          ),
                          I.length !== 0 && /* @__PURE__ */ C(
                            Cn,
                            {
                              "aria-label": l("addTranslationsDialogRowsTable"),
                              "data-testid": "add-translations-dialog-rows-table",
                              children: [
                                /* @__PURE__ */ a(wn, { children: /* @__PURE__ */ C(rt, { children: [
                                  /* @__PURE__ */ a(De, { className: "pf-v5-u-py-lg", children: l("supportedLanguagesTableColumnName") }),
                                  /* @__PURE__ */ a(De, { className: "pf-v5-u-py-lg", children: l("translationTableColumnName") }),
                                  /* @__PURE__ */ a(De, { "aria-hidden": "true" })
                                ] }) }),
                                /* @__PURE__ */ a(yn, { children: I.map((D, F) => {
                                  const A = u.findIndex(
                                    (M) => M === D
                                  );
                                  return /* @__PURE__ */ C(rt, { children: [
                                    /* @__PURE__ */ a(
                                      ke,
                                      {
                                        className: "pf-m-sm pf-v5-u-px-sm",
                                        dataLabel: l("supportedLanguage"),
                                        children: /* @__PURE__ */ C(se, { fieldId: "kc-supportedLanguage", children: [
                                          gr(
                                            D,
                                            p.getLocale()
                                          ),
                                          D === T.toString() && /* @__PURE__ */ a(
                                            pn,
                                            {
                                              className: "pf-v5-u-ml-xs",
                                              color: "blue",
                                              children: l("defaultLanguage")
                                            }
                                          )
                                        ] })
                                      }
                                    ),
                                    /* @__PURE__ */ C(ke, { children: [
                                      D === T.toString() && /* @__PURE__ */ a(
                                        ve,
                                        {
                                          name: `translations.${A}.value`,
                                          label: l("translationValue"),
                                          "data-testid": `translation-value-${A}`,
                                          rules: {
                                            required: {
                                              value: !0,
                                              message: l("required")
                                            }
                                          }
                                        }
                                      ),
                                      D !== T.toString() && /* @__PURE__ */ a(
                                        ve,
                                        {
                                          name: `translations.${A}.value`,
                                          label: l("translationValue"),
                                          "data-testid": `translation-value-${A}`
                                        }
                                      )
                                    ] })
                                  ] }, F);
                                }) })
                              ]
                            }
                          )
                        ]
                      }
                    )
                  ] })
                ]
              }
            ) }) })
          ]
        }
      )
    }
  );
}, SZ = ({
  selectedValidators: e,
  onChange: t
}) => {
  const { t: n } = H(), r = Tt().componentTypes?.["org.keycloak.validate.Validator"] || [], i = et(
    () => r.filter(({ id: d }) => !e.includes(d)),
    [e]
  ), [s, o] = ot(), [l, c] = N();
  return /* @__PURE__ */ a(se, { label: n("validatorType"), fieldId: "validator", children: /* @__PURE__ */ a(
    ft,
    {
      toggleId: "validator",
      onToggle: o,
      onSelect: (d) => {
        const u = d;
        t(u), c(u), o();
      },
      selections: l?.id,
      variant: "single",
      "aria-label": n("selectOne"),
      isOpen: s,
      placeholderText: n("choose"),
      menuAppendTo: "parent",
      maxHeight: 300,
      children: i.map((d) => /* @__PURE__ */ a(
        _e,
        {
          selected: l?.id === d.id,
          value: d,
          description: d.helpText,
          children: d.id
        },
        d.id
      ))
    }
  ) });
}, wZ = ({
  selectedValidators: e,
  toggleDialog: t,
  onConfirm: n
}) => {
  const { t: r } = H(), [i, s] = N(), o = Tt().componentTypes?.["org.keycloak.validate.Validator"].length === e.length, l = Ue(), { handleSubmit: c } = l, d = (u) => {
    n({ ...u, id: i?.id }), t();
  };
  return /* @__PURE__ */ a(
    ht,
    {
      variant: Rt.small,
      title: r("addValidator"),
      isOpen: !0,
      onClose: t,
      actions: [
        /* @__PURE__ */ a(
          z,
          {
            "data-testid": "save-validator-role-button",
            variant: "primary",
            type: "submit",
            form: "add-validator",
            children: r("save")
          },
          "save"
        ),
        /* @__PURE__ */ a(
          z,
          {
            "data-testid": "cancel-validator-role-button",
            variant: "link",
            onClick: t,
            children: r("cancel")
          },
          "cancel"
        )
      ],
      children: o ? r("emptyValidators") : /* @__PURE__ */ C(xt, { id: "add-validator", onSubmit: c(d), children: [
        /* @__PURE__ */ a(
          SZ,
          {
            selectedValidators: e.map(
              (u) => u.key
            ),
            onChange: s
          }
        ),
        i && /* @__PURE__ */ a(Ve, { ...l, children: /* @__PURE__ */ a(ur, { properties: i.properties }) })
      ] })
    }
  );
}, kZ = () => {
  const { t: e } = H();
  return /* @__PURE__ */ a(Fe, { role: "manage-realm", isHorizontal: !0, children: /* @__PURE__ */ a(
    se,
    {
      hasNoPaddingTop: !0,
      label: e("annotations"),
      fieldId: "kc-annotations",
      className: "kc-annotations-label",
      children: /* @__PURE__ */ a(Va, { className: "kc-annotations", children: /* @__PURE__ */ a(zt, { children: /* @__PURE__ */ a(
        ld,
        {
          name: "annotations",
          label: e("annotations"),
          defaultKeyValue: [
            {
              key: "inputType",
              label: e("inputType"),
              values: [
                "text",
                "textarea",
                "select",
                "select-radiobuttons",
                "multiselect",
                "multiselect-checkboxes",
                "html5-email",
                "html5-tel",
                "html5-url",
                "html5-number",
                "html5-range",
                "html5-datetime-local",
                "html5-date",
                "html5-month",
                "html5-week",
                "html5-time"
              ]
            },
            {
              key: "inputHelperTextBefore",
              label: e("inputHelperTextBefore")
            },
            {
              key: "inputHelperTextAfter",
              label: e("inputHelperTextAfter")
            },
            {
              key: "inputOptionLabelsI18nPrefix",
              label: e("inputOptionLabelsI18nPrefix")
            },
            {
              key: "inputTypePlaceholder",
              label: e("inputTypePlaceholder")
            },
            {
              key: "inputTypeSize",
              label: e("inputTypeSize")
            },
            {
              key: "inputTypeCols",
              label: e("inputTypeCols")
            },
            {
              key: "inputTypeRows",
              label: e("inputTypeRows")
            },
            {
              key: "inputTypeStep",
              label: e("inputTypeStep")
            },
            {
              key: "kcNumberFormat",
              label: e("kcNumberFormat")
            },
            {
              key: "kcNumberUnFormat",
              label: e("kcNumberUnFormat")
            }
          ]
        }
      ) }) })
    }
  ) });
}, uE = Er("UserProfileContext", void 0), Np = ({ children: e }) => {
  const { adminClient: t } = pe(), { realm: n } = be(), { addAlert: r, addError: i } = Se(), { t: s } = H(), [o, l] = N(null), [c, d] = N(0), [u, p] = N(!1);
  Re(
    () => t.users.getProfile({ realm: n }),
    (f) => l(f),
    [c]
  );
  const m = async (f, g) => {
    p(!0);
    try {
      return await t.users.updateProfile({
        ...f,
        realm: n
      }), p(!1), d(c + 1), r(
        s(g?.successMessageKey ?? "userProfileSuccess"),
        ue.success
      ), !0;
    } catch (b) {
      return p(!1), i(g?.errorMessageKey ?? "userProfileError", b), !1;
    }
  };
  return /* @__PURE__ */ a(uE.Provider, { value: { config: o, save: m, isSaving: u }, children: e });
}, Dp = () => Ir(uE), j0 = ({ name: e }) => {
  const { t } = H(), { control: n } = Le();
  return /* @__PURE__ */ a(Va, { children: /* @__PURE__ */ a(
    ge,
    {
      name: `permissions.${e}`,
      control: n,
      defaultValue: [],
      render: ({ field: r }) => /* @__PURE__ */ C(ee, { children: [
        /* @__PURE__ */ a(zt, { lg: 4, sm: 6, children: /* @__PURE__ */ a(
          rn,
          {
            id: `user-${e}`,
            label: t("user"),
            value: "user",
            "data-testid": `user-${e}`,
            isChecked: r.value.includes("user"),
            onChange: () => {
              const i = "user", s = r.value.includes(i) ? r.value.filter((o) => o !== i) : [...r.value, i];
              r.onChange(s);
            }
          }
        ) }),
        /* @__PURE__ */ a(zt, { lg: 8, sm: 6, children: /* @__PURE__ */ a(
          rn,
          {
            id: `admin-${e}`,
            label: t("admin"),
            value: "admin",
            "data-testid": `admin-${e}`,
            isChecked: r.value.includes("admin"),
            onChange: () => {
              const i = "admin", s = r.value.includes(i) ? r.value.filter((o) => o !== i) : [...r.value, i];
              r.onChange(s);
            }
          }
        ) })
      ] })
    }
  ) });
}, OZ = () => {
  const { t: e } = H();
  return /* @__PURE__ */ C(Fe, { role: "manage-realm", isHorizontal: !0, children: [
    /* @__PURE__ */ a(
      se,
      {
        hasNoPaddingTop: !0,
        label: e("whoCanEdit"),
        labelIcon: /* @__PURE__ */ a(le, { helpText: e("whoCanEditHelp"), fieldLabelId: "whoCanEdit" }),
        fieldId: "kc-who-can-edit",
        children: /* @__PURE__ */ a(j0, { name: "edit" })
      }
    ),
    /* @__PURE__ */ a(
      se,
      {
        hasNoPaddingTop: !0,
        label: e("whoCanView"),
        labelIcon: /* @__PURE__ */ a(le, { helpText: e("whoCanViewHelp"), fieldLabelId: "whoCanView" }),
        fieldId: "kc-who-can-view",
        children: /* @__PURE__ */ a(j0, { name: "view" })
      }
    )
  ] });
}, TZ = () => {
  const { t: e } = H(), [t, n] = ot(), [r, i] = N(), { setValue: s, control: o, register: l, getValues: c } = Le(), d = nt({
    name: "validations",
    control: o,
    defaultValue: []
  });
  He(() => {
    l("validations");
  }, [l]);
  const [u, p] = ze({
    titleKey: e("deleteValidatorConfirmTitle"),
    messageKey: e("deleteValidatorConfirmMsg", {
      validatorName: r
    }),
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      const m = d.filter(
        (f) => f.key !== r
      );
      s("validations", [...m]);
    }
  });
  return /* @__PURE__ */ C(ee, { children: [
    t && /* @__PURE__ */ a(
      wZ,
      {
        selectedValidators: d,
        onConfirm: (m) => {
          const f = c("annotations");
          m.id === "options" && !f.find((g) => g.key === "inputType") && s("annotations", [
            ...f,
            { key: "inputType", value: "select" }
          ]), s("validations", [
            ...d,
            { key: m.id, value: m.config }
          ]);
        },
        toggleDialog: n
      }
    ),
    /* @__PURE__ */ a(p, {}),
    /* @__PURE__ */ C("div", { className: "kc-attributes-validations", children: [
      /* @__PURE__ */ a(
        z,
        {
          id: "addValidator",
          onClick: () => n(),
          variant: "link",
          "data-testid": "addValidator",
          className: "kc--attributes-validations--add-validation-button",
          icon: /* @__PURE__ */ a(Ea, {}),
          children: e("addValidator")
        }
      ),
      /* @__PURE__ */ a(_t, {}),
      d.length !== 0 ? /* @__PURE__ */ C(Cn, { children: [
        /* @__PURE__ */ a(wn, { children: /* @__PURE__ */ C(rt, { children: [
          /* @__PURE__ */ a(De, { children: e("validatorColNames.colName") }),
          /* @__PURE__ */ a(De, { children: e("validatorColNames.colConfig") }),
          /* @__PURE__ */ a(De, { "aria-hidden": "true" })
        ] }) }),
        /* @__PURE__ */ a(yn, { children: d.map((m) => /* @__PURE__ */ C(rt, { children: [
          /* @__PURE__ */ a(ke, { dataLabel: e("validatorColNames.colName"), children: m.key }),
          /* @__PURE__ */ a(ke, { dataLabel: e("validatorColNames.colConfig"), children: JSON.stringify(m.value) }),
          /* @__PURE__ */ a(ke, { className: "kc--attributes-validations--action-cell", children: /* @__PURE__ */ a(
            z,
            {
              variant: "link",
              "data-testid": "deleteValidator",
              onClick: () => {
                u(), i(m.key);
              },
              children: e("delete")
            },
            "validator"
          ) })
        ] }, m.key)) })
      ] }) : /* @__PURE__ */ a(tt, { className: "kc-emptyValidators", component: Wt.p, children: e("emptyValidators") })
    ] })
  ] });
}, pE = ["username", "email"], EZ = ({
  onHandlingTranslationsData: e,
  onHandlingGeneratedDisplayName: t,
  save: n
}) => {
  const { t: r } = H(), i = Le(), { realm: s, attributeName: o } = Vt(), l = !!o, c = (u) => {
    e(u);
  }, d = (u) => {
    t(u);
  };
  return /* @__PURE__ */ C(Np, { children: [
    /* @__PURE__ */ a(
      ll,
      {
        label: r("jumpToSection"),
        sections: [
          {
            title: r("generalSettings"),
            panel: /* @__PURE__ */ a(
              PZ,
              {
                onHandlingTranslationData: c,
                onHandlingGeneratedDisplayName: d
              }
            )
          },
          { title: r("permission"), panel: /* @__PURE__ */ a(OZ, {}) },
          { title: r("validations"), panel: /* @__PURE__ */ a(TZ, {}) },
          { title: r("annotations"), panel: /* @__PURE__ */ a(kZ, {}) }
        ]
      }
    ),
    /* @__PURE__ */ a(xt, { onSubmit: i.handleSubmit(n), children: /* @__PURE__ */ C(_r, { name: "attribute-settings", children: [
      /* @__PURE__ */ a(
        z,
        {
          variant: "primary",
          type: "submit",
          "data-testid": "attribute-create",
          children: r(l ? "save" : "create")
        }
      ),
      /* @__PURE__ */ a(
        Ae,
        {
          to: qo({ realm: s, tab: "attributes" }),
          "data-testid": "attribute-cancel",
          className: "kc-attributeCancel",
          children: r("cancel")
        }
      )
    ] }) })
  ] });
};
function IZ() {
  const { adminClient: e } = pe(), { realm: t, attributeName: n } = Vt(), { realmRepresentation: r } = be(), i = Ue(), { t: s } = H(), o = yl(), l = Je(), { addAlert: c, addError: d } = Se(), [u, p] = N(null), m = !!n, [f, g] = N({
    key: "",
    translations: []
  }), [b, v] = N("");
  Re(
    async () => {
      const w = [];
      return await Promise.all(
        o.map(async (R) => {
          try {
            const S = await e.realms.getRealmLocalizationTexts({
              realm: t,
              selectedLocale: R
            }), _ = i.getValues(), O = _.displayName?.substring(
              2,
              _.displayName.length - 1
            ), E = [];
            Object.entries(S).map(
              ([k, P]) => ({
                key: k,
                value: P
              })
            ).forEach((k) => {
              k.key === O && E.push({
                locale: R,
                value: k.value
              });
            });
            const I = {
              key: O,
              translations: E
            };
            w.push(I);
          } catch (S) {
            console.error(
              `Error fetching translations for ${R}:`,
              S
            );
          }
        })
      ), w;
    },
    (w) => {
      g(() => ({
        key: w[0].key,
        translations: w.flatMap(
          (R) => R.translations
        )
      }));
    },
    [o]
  ), Re(
    () => e.users.getProfile(),
    (w) => {
      p(w);
      const {
        annotations: R,
        validations: S,
        permissions: _,
        selector: O,
        required: E,
        multivalued: T,
        ...I
      } = w.attributes.find(
        (k) => k.name === n
      ) || { permissions: { edit: ["admin"] } };
      In(
        {
          ...I,
          hasSelector: typeof O < "u",
          hasRequiredScopes: typeof E?.scopes < "u"
        },
        i.setValue
      ), Object.entries(
        Rw({ permissions: _, selector: O, required: E }, { safe: !0 })
      ).map(([k, P]) => i.setValue(k, P)), i.setValue(
        "annotations",
        Object.entries(R || {}).map(([k, P]) => ({
          key: k,
          value: P
        }))
      ), i.setValue(
        "validations",
        Object.entries(S || {}).map(([k, P]) => ({
          key: k,
          value: P
        }))
      ), i.setValue("isRequired", E !== void 0), i.setValue("multivalued", T === !0);
    },
    []
  );
  const y = async () => {
    try {
      const w = f.translations.map(
        async (R) => {
          try {
            await e.realms.addLocalization(
              {
                realm: t,
                selectedLocale: R.locale,
                key: f.key
              },
              R.value
            );
          } catch {
            console.error(`Error saving translation for ${R.locale}`);
          }
        }
      );
      await Promise.all(w);
    } catch (w) {
      console.error(`Error saving translations: ${w}`);
    }
  }, x = async ({
    hasSelector: w,
    hasRequiredScopes: R,
    ...S
  }) => {
    w || delete S.selector, R || delete S.required?.scopes;
    const _ = S.validations.reduce(
      (I, k) => (I[k.key] = k.value || {}, I),
      {}
    ), O = S.annotations.reduce(
      (I, k) => Object.assign(I, { [k.key]: k.value }),
      {}
    ), E = () => (u?.attributes || []).map((I) => I.name !== n ? I : (delete I.required, Object.assign(
      {
        ...I,
        name: n,
        displayName: S.displayName,
        selector: S.selector,
        permissions: S.permissions,
        multivalued: S.multivalued,
        annotations: O,
        validations: _
      },
      S.isRequired ? { required: S.required } : void 0,
      S.group ? { group: S.group } : { group: null }
    ))), T = () => (u?.attributes || []).concat([
      Object.assign(
        {
          name: S.name,
          displayName: S.displayName || b,
          required: S.isRequired ? S.required : void 0,
          selector: S.selector,
          permissions: S.permissions,
          multivalued: S.multivalued,
          annotations: O,
          validations: _
        },
        S.isRequired ? { required: S.required } : void 0,
        S.group ? { group: S.group } : void 0
      )
    ]);
    if (r?.internationalizationEnabled && !f.translations.some(
      (k) => k.value.trim() !== ""
    ) && !S.displayName) {
      d("createAttributeError", s("translationError"));
      return;
    }
    try {
      const I = m ? E() : T();
      await e.users.updateProfile({
        ...u,
        attributes: I,
        realm: t
      }), await y(), qr.reloadResources(), l(qo({ realm: t, tab: "attributes" })), c(s("createAttributeSuccess"), ue.success);
    } catch (I) {
      d("createAttributeError", I);
    }
  };
  return /* @__PURE__ */ C(Ve, { ...i, children: [
    /* @__PURE__ */ a(
      wt,
      {
        titleKey: m ? n : s("createAttribute"),
        subKey: m ? "" : s("createAttributeSubTitle")
      }
    ),
    /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ a(
      EZ,
      {
        save: () => i.handleSubmit(x)(),
        onHandlingTranslationsData: g,
        onHandlingGeneratedDisplayName: v
      }
    ) })
  ] });
}
const mE = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  USERNAME_EMAIL: pE,
  default: IZ
}, Symbol.toStringTag, { value: "Module" })), B0 = [
  { label: "requiredForLabel.both", value: ["admin", "user"] },
  { label: "requiredForLabel.users", value: ["user"] },
  { label: "requiredForLabel.admins", value: ["admin"] }
], PZ = ({
  onHandlingTranslationData: e,
  onHandlingGeneratedDisplayName: t
}) => {
  const { adminClient: n } = pe(), { t: r } = H(), { realmRepresentation: i } = be(), s = Le(), [o, l] = N(), [c, d] = N(), [u, p] = N(!1), [m, f] = N(!1), [g, b] = ot(), { attributeName: v } = Vt(), y = !!v, [x, w] = N(""), [R, S] = N(""), [_, O] = N(), [E, T] = N({
    key: "",
    translations: []
  }), I = /\$\{([^}]+)\}/, k = (j, W) => {
    w(W);
    const Q = W !== "" && i?.internationalizationEnabled ? `\${profile.attributes.${W}}` : "";
    S(Q);
  }, P = nt({
    control: s.control,
    name: "hasSelector"
  }), D = nt({
    control: s.control,
    name: "hasRequiredScopes"
  }), F = nt({
    control: s.control,
    name: "isRequired",
    defaultValue: !1
  }), A = nt({
    control: s.control,
    name: "displayName"
  }), M = I.test(A);
  Re(() => n.clientScopes.find(), l, []), Re(() => n.users.getProfile(), d, []);
  const V = (j) => {
    e(j);
  }, U = (j) => {
    t(j);
  };
  if (He(() => {
    V(E), U(R);
  }, [E, R]), !o)
    return /* @__PURE__ */ a(gt, {});
  function G(j) {
    s.setValue("hasSelector", j);
  }
  function q(j) {
    s.setValue("hasRequiredScopes", j);
  }
  const L = (j) => {
    T(j);
  }, K = () => {
    b(), V(E), U(R);
  }, B = A?.substring(
    2,
    A.length - 1
  );
  return /* @__PURE__ */ C(ee, { children: [
    g && /* @__PURE__ */ a(
      dE,
      {
        translationKey: y ? B : `profile.attributes.${x}`,
        translations: E,
        type: _ ?? "displayName",
        onTranslationsAdded: L,
        toggleDialog: K,
        onCancel: () => {
          b();
        }
      }
    ),
    /* @__PURE__ */ a(Fe, { role: "manage-realm", isHorizontal: !0, children: /* @__PURE__ */ C(Ve, { ...s, children: [
      /* @__PURE__ */ C(
        se,
        {
          label: r("attributeName"),
          labelIcon: /* @__PURE__ */ a(
            le,
            {
              helpText: r("upAttributeNameHelp"),
              fieldLabelId: "attributeName"
            }
          ),
          fieldId: "kc-attribute-name",
          isRequired: !0,
          children: [
            /* @__PURE__ */ a(
              mt,
              {
                isRequired: !0,
                id: "kc-attribute-name",
                defaultValue: "",
                "data-testid": "attribute-name",
                isDisabled: y,
                validated: s.formState.errors.name ? "error" : "default",
                ...s.register("name", { required: !0 }),
                onChange: k
              }
            ),
            s.formState.errors.name && /* @__PURE__ */ a(En, { message: r("validateAttributeName") })
          ]
        }
      ),
      /* @__PURE__ */ a(
        se,
        {
          label: r("attributeDisplayName"),
          labelIcon: /* @__PURE__ */ a(
            le,
            {
              helpText: r("attributeDisplayNameHelp"),
              fieldLabelId: "attributeDisplayName"
            }
          ),
          fieldId: "kc-attribute-display-name",
          children: /* @__PURE__ */ C(Va, { hasGutter: !0, children: [
            /* @__PURE__ */ C(zt, { span: i?.internationalizationEnabled ? 11 : 12, children: [
              /* @__PURE__ */ a(
                mt,
                {
                  id: "kc-attribute-display-name",
                  "data-testid": "attribute-display-name",
                  isDisabled: i?.internationalizationEnabled && x !== "" || y && M,
                  value: y ? A : i?.internationalizationEnabled ? R : void 0,
                  ...s.register("displayName")
                }
              ),
              R && /* @__PURE__ */ a(
                _n,
                {
                  className: "pf-v5-u-mt-sm",
                  variant: "info",
                  isInline: !0,
                  isPlain: !0,
                  title: r("addAttributeTranslationInfo")
                }
              )
            ] }),
            i?.internationalizationEnabled && /* @__PURE__ */ a(zt, { span: 1, children: /* @__PURE__ */ a(
              z,
              {
                variant: "link",
                className: "pf-m-plain kc-attribute-display-name-iconBtn",
                "data-testid": "addAttributeTranslationBtn",
                "aria-label": r("addAttributeTranslationBtn"),
                isDisabled: !x && !y,
                onClick: () => {
                  O("displayName"), b();
                },
                icon: /* @__PURE__ */ a(Of, {})
              }
            ) })
          ] })
        }
      ),
      /* @__PURE__ */ a(
        bt,
        {
          name: "multivalued",
          label: r("multivalued"),
          labelIcon: r("multivaluedHelp")
        }
      ),
      /* @__PURE__ */ a(
        at,
        {
          name: "group",
          label: r("attributeGroup"),
          labelIcon: r("attributeGroupHelp"),
          controller: {
            defaultValue: ""
          },
          options: [
            { key: "", value: r("none") },
            ...c?.groups?.map((j) => ({
              key: j.name,
              value: j.name
            })) || []
          ]
        }
      ),
      !pE.includes(v) && /* @__PURE__ */ C(ee, { children: [
        /* @__PURE__ */ a(_t, {}),
        /* @__PURE__ */ C(
          se,
          {
            label: r("enabledWhen"),
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: r("enabledWhenTooltip"),
                fieldLabelId: "enabled-when"
              }
            ),
            fieldId: "enabledWhen",
            hasNoPaddingTop: !0,
            children: [
              /* @__PURE__ */ a(
                sn,
                {
                  id: "always",
                  "data-testid": "always",
                  isChecked: !P,
                  name: "enabledWhen",
                  label: r("always"),
                  onChange: () => G(!1),
                  className: "pf-v5-u-mb-md"
                }
              ),
              /* @__PURE__ */ a(
                sn,
                {
                  id: "scopesAsRequested",
                  "data-testid": "scopesAsRequested",
                  isChecked: P,
                  name: "enabledWhen",
                  label: r("scopesAsRequested"),
                  onChange: () => G(!0),
                  className: "pf-v5-u-mb-md"
                }
              )
            ]
          }
        ),
        P && /* @__PURE__ */ a(se, { fieldId: "kc-scope-enabled-when", children: /* @__PURE__ */ a(
          ge,
          {
            name: "selector.scopes",
            control: s.control,
            defaultValue: [],
            render: ({ field: j }) => /* @__PURE__ */ a(
              ft,
              {
                "data-testid": "enabled-when-scope-field",
                variant: pt.typeaheadMulti,
                typeAheadAriaLabel: "Select",
                chipGroupProps: {
                  numChips: 3,
                  expandedText: r("hide"),
                  collapsedText: r("showRemaining")
                },
                onToggle: (W) => p(W),
                selections: j.value,
                onSelect: (W) => {
                  const Q = W.toString();
                  let te = [""];
                  j.value ? te = j.value.includes(Q) ? j.value.filter(
                    (ie) => ie !== Q
                  ) : [...j.value, Q] : te = [Q], j.onChange(te);
                },
                onClear: () => {
                  j.onChange([]);
                },
                isOpen: u,
                "aria-labelledby": "scope",
                children: o.map((W) => /* @__PURE__ */ a(_e, { value: W.name, children: W.name }, W.name))
              }
            )
          }
        ) })
      ] }),
      v !== "username" && /* @__PURE__ */ C(ee, { children: [
        /* @__PURE__ */ a(_t, {}),
        /* @__PURE__ */ a(
          se,
          {
            label: r("required"),
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: r("requiredHelp"),
                fieldLabelId: "required"
              }
            ),
            fieldId: "kc-required",
            hasNoPaddingTop: !0,
            children: /* @__PURE__ */ a(
              ge,
              {
                name: "isRequired",
                "data-testid": "required",
                defaultValue: !1,
                control: s.control,
                render: ({ field: j }) => /* @__PURE__ */ a(
                  Ye,
                  {
                    id: "kc-required",
                    onChange: j.onChange,
                    isChecked: j.value,
                    label: r("on"),
                    labelOff: r("off"),
                    "aria-label": r("required")
                  }
                )
              }
            )
          }
        ),
        F && /* @__PURE__ */ C(ee, { children: [
          /* @__PURE__ */ a(
            se,
            {
              label: r("requiredFor"),
              fieldId: "requiredFor",
              hasNoPaddingTop: !0,
              children: /* @__PURE__ */ a(
                ge,
                {
                  name: "required.roles",
                  "data-testid": "requiredFor",
                  defaultValue: B0[0].value,
                  control: s.control,
                  render: ({ field: j }) => /* @__PURE__ */ a("div", { className: "kc-requiredFor", children: B0.map((W) => /* @__PURE__ */ a(
                    sn,
                    {
                      id: W.label,
                      "data-testid": W.label,
                      isChecked: bi(j.value, W.value),
                      name: "roles",
                      onChange: () => {
                        j.onChange(W.value);
                      },
                      label: r(W.label),
                      className: "kc-requiredFor-option"
                    },
                    W.label
                  )) })
                }
              )
            }
          ),
          /* @__PURE__ */ C(
            se,
            {
              label: r("requiredWhen"),
              labelIcon: /* @__PURE__ */ a(
                le,
                {
                  helpText: r("requiredWhenTooltip"),
                  fieldLabelId: "required-when"
                }
              ),
              fieldId: "requiredWhen",
              hasNoPaddingTop: !0,
              children: [
                /* @__PURE__ */ a(
                  sn,
                  {
                    id: "requiredAlways",
                    "data-testid": "requiredAlways",
                    isChecked: !D,
                    name: "requiredWhen",
                    label: r("always"),
                    onChange: () => q(!1),
                    className: "pf-v5-u-mb-md"
                  }
                ),
                /* @__PURE__ */ a(
                  sn,
                  {
                    id: "requiredScopesAsRequested",
                    "data-testid": "requiredScopesAsRequested",
                    isChecked: D,
                    name: "requiredWhen",
                    label: r("scopesAsRequested"),
                    onChange: () => q(!0),
                    className: "pf-v5-u-mb-md"
                  }
                )
              ]
            }
          ),
          D && /* @__PURE__ */ a(se, { fieldId: "kc-scope-required-when", children: /* @__PURE__ */ a(
            ge,
            {
              name: "required.scopes",
              control: s.control,
              defaultValue: [],
              render: ({ field: j }) => /* @__PURE__ */ a(
                ft,
                {
                  "data-testid": "required-when-scope-field",
                  variant: pt.typeaheadMulti,
                  typeAheadAriaLabel: "Select",
                  chipGroupProps: {
                    numChips: 3,
                    expandedText: r("hide"),
                    collapsedText: r("showRemaining")
                  },
                  onToggle: (W) => f(W),
                  selections: j.value,
                  onSelect: (W) => {
                    const Q = W.toString();
                    let te = [""];
                    j.value ? te = j.value.includes(Q) ? j.value.filter(
                      (ie) => ie !== Q
                    ) : [...j.value, Q] : te = [Q], j.onChange(te);
                  },
                  onClear: () => {
                    j.onChange([]);
                  },
                  isOpen: m,
                  "aria-labelledby": "scope",
                  children: o.map((W) => /* @__PURE__ */ a(
                    _e,
                    {
                      value: W.name,
                      children: W.name
                    },
                    W.name
                  ))
                }
              )
            }
          ) })
        ] })
      ] })
    ] }) })
  ] });
};
function _Z(e) {
  return Object.entries(e).reduce((t, [n, r]) => typeof r == "string" ? [...t, { key: n, value: r }] : [...t], []);
}
function RZ(e) {
  return Object.fromEntries(
    e.filter((t) => t.key.length > 0).map((t) => [t.key, t.value])
  );
}
const U0 = {
  annotations: [],
  displayDescription: "",
  displayHeader: "",
  name: ""
};
function fE() {
  const { adminClient: e } = pe(), { t } = H(), { realm: n, realmRepresentation: r } = be(), { config: i, save: s } = Dp(), o = Je(), l = yl(), c = Qn(), d = Ue({ defaultValues: U0 }), { addError: u } = Se(), p = !!c.name, [m, f] = N(""), [
    g,
    b
  ] = N(""), [
    v,
    y
  ] = N(""), [x, w] = ot(), R = /\$\{([^}]+)\}/, [S, _] = N(), [O, E] = N({
    displayHeader: {
      key: "",
      translations: []
    },
    displayDescription: {
      key: "",
      translations: []
    }
  }), T = et(
    () => i?.groups?.find(({ name: B }) => B === c.name),
    [i?.groups]
  );
  He(() => {
    if (!T)
      return;
    const B = T.annotations ? _Z(T.annotations) : [];
    d.reset({ ...U0, ...T, annotations: B });
  }, [T]), He(() => {
    d.setValue(
      "displayHeader",
      T ? T.displayHeader : g
    ), d.setValue(
      "displayDescription",
      T ? T.displayDescription : v
    );
  }, [
    g,
    v
  ]), Re(
    async () => {
      const B = [], j = [], W = d.getValues();
      return (await Promise.all(
        l.map(async (te) => {
          try {
            const ie = await e.realms.getRealmLocalizationTexts({
              realm: n,
              selectedLocale: te
            }), ce = W.displayHeader?.substring(
              2,
              W.displayHeader.length - 1
            ), Z = W.displayDescription?.substring(
              2,
              W.displayDescription.length - 1
            );
            return {
              locale: te,
              headerTranslation: ie[ce] ?? "",
              descriptionTranslation: ie[Z] ?? ""
            };
          } catch (ie) {
            return console.error(
              `Error fetching translations for ${te}:`,
              ie
            ), null;
          }
        })
      )).forEach((te) => {
        if (te) {
          const { locale: ie, headerTranslation: ce, descriptionTranslation: Z } = te;
          B.push({
            key: W.displayHeader?.substring(
              2,
              W.displayHeader.length - 1
            ),
            translations: [
              {
                locale: ie,
                value: ce
              }
            ]
          }), j.push({
            key: W.displayDescription?.substring(
              2,
              W.displayDescription.length - 1
            ),
            translations: [
              {
                locale: ie,
                value: Z
              }
            ]
          });
        }
      }), {
        translationsToSaveDisplayHeader: B,
        translationsToSaveDisplayDescription: j
      };
    },
    (B) => {
      E({
        displayHeader: {
          key: B.translationsToSaveDisplayHeader[0].key,
          translations: B.translationsToSaveDisplayHeader.flatMap(
            (j) => j.translations
          )
        },
        displayDescription: {
          key: B.translationsToSaveDisplayDescription[0].key,
          translations: B.translationsToSaveDisplayDescription.flatMap(
            (j) => j.translations
          )
        }
      });
    },
    [l]
  );
  const I = async () => {
    const B = async (j, W, Q) => {
      try {
        await e.realms.addLocalization(
          {
            realm: n,
            selectedLocale: W,
            key: j
          },
          Q
        );
      } catch (te) {
        console.error(
          `Error saving translation for locale ${W}: ${te}`
        );
      }
    };
    try {
      if (O.displayHeader && O.displayHeader.translations.length > 0)
        for (const j of O.displayHeader.translations)
          await B(
            O.displayHeader.key,
            j.locale,
            j.value
          );
      if (O.displayDescription && O.displayDescription.translations.length > 0)
        for (const j of O.displayDescription.translations)
          await B(
            O.displayDescription.key,
            j.locale,
            j.value
          );
    } catch (j) {
      console.error(`Error while processing translations: ${j}`);
    }
  }, k = async (B) => {
    if (!i)
      return;
    const j = [...i.groups ?? []], W = T ? j.indexOf(T) : -1, Q = {
      ...B,
      annotations: RZ(B.annotations)
    };
    if (W === -1 ? j.push(Q) : j[W] = Q, r?.internationalizationEnabled) {
      const ie = O.displayHeader.translations.some(
        (Z) => Z.value.trim() !== ""
      ), ce = O.displayDescription.translations.some(
        (Z) => Z.value.trim() !== ""
      );
      if (!ie || !ce) {
        u("createAttributeError", t("translationError"));
        return;
      }
    }
    await s({ ...i, groups: j }) && (await I(), qr.reloadResources(), o(qo({ realm: n, tab: "attributes-group" })));
  }, P = nt({
    control: d.control,
    name: "displayHeader"
  }), D = nt({
    control: d.control,
    name: "displayDescription"
  }), F = (B, j) => {
    const W = j !== "" && r?.internationalizationEnabled ? `\${profile.attribute-group.${j}}` : "", Q = j !== "" && r?.internationalizationEnabled ? `\${profile.attribute-group-description.${j}}` : "";
    f(j), b(W), y(Q);
  }, A = R.test(
    P || D
  ), M = P?.substring(
    2,
    P.length - 1
  ), V = D?.substring(
    2,
    D.length - 1
  ), U = (B) => {
    E((j) => ({
      ...j,
      displayHeader: B
    }));
  }, G = (B) => {
    E((j) => ({
      ...j,
      displayDescription: B
    }));
  }, q = () => {
    w();
  }, L = S === "displayHeader" ? M : `profile.attribute-group.${m}`, K = S === "displayDescription" ? V : `profile.attribute-group-description.${m}`;
  return /* @__PURE__ */ C(ee, { children: [
    x && /* @__PURE__ */ a(
      dE,
      {
        translationKey: S === "displayHeader" ? L : K,
        type: S === "displayHeader" ? "displayHeader" : "displayDescription",
        translations: S === "displayHeader" ? O.displayHeader : O.displayDescription,
        onTranslationsAdded: S === "displayHeader" ? U : G,
        toggleDialog: q,
        onCancel: () => {
          w();
        }
      }
    ),
    /* @__PURE__ */ a(
      wt,
      {
        titleKey: T ? "editGroupText" : "createGroupText",
        divider: !0
      }
    ),
    /* @__PURE__ */ a(Te, { variant: "light", onSubmit: d.handleSubmit(k), children: /* @__PURE__ */ a(Fe, { isHorizontal: !0, role: "manage-realm", children: /* @__PURE__ */ C(Ve, { ...d, children: [
      /* @__PURE__ */ a(
        ve,
        {
          name: "name",
          label: t("nameField"),
          labelIcon: t("nameHintHelp"),
          isDisabled: !!T || p,
          rules: {
            required: {
              value: !0,
              message: t("required")
            },
            onChange: (B) => {
              F(B, B.target.value);
            }
          }
        }
      ),
      !!T && /* @__PURE__ */ a("input", { type: "hidden", ...d.register("name") }),
      /* @__PURE__ */ a(
        se,
        {
          label: t("displayHeaderField"),
          labelIcon: /* @__PURE__ */ a(
            le,
            {
              helpText: t("displayHeaderHintHelp"),
              fieldLabelId: "displayHeaderField"
            }
          ),
          fieldId: "kc-attributes-group-display-header",
          children: /* @__PURE__ */ C(Va, { hasGutter: !0, children: [
            /* @__PURE__ */ C(zt, { span: r?.internationalizationEnabled ? 11 : 12, children: [
              /* @__PURE__ */ a(
                mt,
                {
                  id: "kc-attributes-group-display-header",
                  "data-testid": "attributes-group-display-header",
                  isDisabled: r?.internationalizationEnabled && m !== "" || p && A,
                  value: p ? P : r?.internationalizationEnabled ? g : void 0,
                  ...d.register("displayHeader")
                }
              ),
              g && /* @__PURE__ */ a(
                _n,
                {
                  className: "pf-v5-u-mt-sm",
                  variant: "info",
                  isInline: !0,
                  isPlain: !0,
                  title: t("addAttributesGroupTranslationInfo")
                }
              )
            ] }),
            r?.internationalizationEnabled && /* @__PURE__ */ a(zt, { span: 1, children: /* @__PURE__ */ a(
              z,
              {
                variant: "link",
                className: "pf-m-plain",
                "data-testid": "addAttributeDisplayNameTranslationBtn",
                "aria-label": t("addAttributeDisplayNameTranslation"),
                isDisabled: !m && !p,
                onClick: () => {
                  _("displayHeader"), w();
                },
                icon: /* @__PURE__ */ a(Of, {})
              }
            ) })
          ] })
        }
      ),
      /* @__PURE__ */ a(
        se,
        {
          label: t("displayDescriptionField"),
          labelIcon: /* @__PURE__ */ a(
            le,
            {
              helpText: t("displayDescriptionHintHelp"),
              fieldLabelId: "displayDescriptionField"
            }
          ),
          fieldId: "kc-attributes-group-display-description",
          children: /* @__PURE__ */ C(Va, { hasGutter: !0, children: [
            /* @__PURE__ */ C(zt, { span: r?.internationalizationEnabled ? 11 : 12, children: [
              /* @__PURE__ */ a(
                mt,
                {
                  id: "kc-attributes-group-display-description",
                  "data-testid": "attributes-group-display-description",
                  isDisabled: r?.internationalizationEnabled && m !== "" || p && A,
                  value: p ? D : r?.internationalizationEnabled ? v : void 0,
                  ...d.register("displayDescription")
                }
              ),
              v && /* @__PURE__ */ a(
                _n,
                {
                  className: "pf-v5-u-mt-sm",
                  variant: "info",
                  isInline: !0,
                  isPlain: !0,
                  title: t("addAttributesGroupTranslationInfo")
                }
              )
            ] }),
            r?.internationalizationEnabled && /* @__PURE__ */ a(zt, { span: 1, children: /* @__PURE__ */ a(
              z,
              {
                variant: "link",
                className: "pf-m-plain",
                "data-testid": "addAttributeDisplayDescriptionTranslationBtn",
                "aria-label": t(
                  "addAttributeDisplayDescriptionTranslation"
                ),
                isDisabled: !m && !p,
                onClick: () => {
                  _("displayDescription"), w();
                },
                icon: /* @__PURE__ */ a(Of, {})
              }
            ) })
          ] })
        }
      ),
      /* @__PURE__ */ a(Pt, { children: /* @__PURE__ */ a(tt, { component: "h2", children: t("annotationsText") }) }),
      /* @__PURE__ */ a(se, { label: t("annotationsText"), fieldId: "kc-annotations", children: /* @__PURE__ */ a(ld, { label: t("annotationsText"), name: "annotations" }) }),
      /* @__PURE__ */ C(st, { children: [
        /* @__PURE__ */ a(
          z,
          {
            variant: "primary",
            type: "submit",
            "data-testid": "saveGroupBtn",
            children: t("save")
          }
        ),
        /* @__PURE__ */ a(
          z,
          {
            variant: "link",
            component: (B) => /* @__PURE__ */ a(
              Ae,
              {
                ...B,
                to: qo({
                  realm: n,
                  tab: "attributes-group"
                })
              }
            ),
            children: t("cancel")
          }
        )
      ] })
    ] }) }) })
  ] });
}
const yee = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: fE
}, Symbol.toStringTag, { value: "Module" })), AZ = () => /* @__PURE__ */ a(Np, { children: /* @__PURE__ */ a(fE, {}) }), hE = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: AZ
}, Symbol.toStringTag, { value: "Module" })), LZ = ({
  setTableData: e
}) => {
  const { adminClient: t } = pe(), { config: n, save: r } = Dp(), { t: i } = H(), s = yl(), o = Je(), { realm: l } = be(), [c, d] = N(0), [u, p] = N();
  He(() => d((v) => v + 1), [n]);
  async function m() {
    return n?.groups ?? [];
  }
  const [f, g] = ze({
    titleKey: "deleteDialogTitle",
    children: /* @__PURE__ */ C(ns, { i18nKey: "deleteDialogDescription", children: [
      " ",
      /* @__PURE__ */ a("strong", { children: { group: u?.name } }),
      "."
    ] }),
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      const v = (n?.groups ?? []).filter(
        (w) => w !== u
      ), y = u?.displayHeader?.substring(
        2,
        u?.displayHeader.length - 1
      ), x = u?.displayDescription?.substring(
        2,
        u?.displayDescription.length - 1
      );
      try {
        await Promise.all(
          s.map(async (w) => {
            try {
              if (await t.realms.getRealmLocalizationTexts({
                realm: l,
                selectedLocale: w
              })) {
                await t.realms.deleteRealmLocalizationTexts({
                  realm: l,
                  selectedLocale: w,
                  key: y
                }), await t.realms.deleteRealmLocalizationTexts({
                  realm: l,
                  selectedLocale: w,
                  key: x
                });
                const S = await t.realms.getRealmLocalizationTexts({
                  realm: l,
                  selectedLocale: w
                });
                e([S]);
              }
            } catch {
              console.error(`Error removing translations for ${w}`);
            }
          })
        ), r(
          { ...n, groups: v },
          {
            successMessageKey: "deleteSuccess",
            errorMessageKey: "deleteAttributeGroupError"
          }
        );
      } catch (w) {
        console.error(
          `Error removing translations or updating attributes group: ${w}`
        );
      }
    }
  });
  function b(v) {
    p(v), f();
  }
  return /* @__PURE__ */ C(Te, { variant: "light", className: "pf-v5-u-p-0", children: [
    /* @__PURE__ */ a(g, {}),
    /* @__PURE__ */ a(
      St,
      {
        loader: m,
        ariaLabelKey: "tableTitle",
        toolbarItem: /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(
          z,
          {
            component: (v) => /* @__PURE__ */ a(
              Ae,
              {
                "data-testid": "create-attributes-groups-action",
                ...v,
                to: x0({ realm: l })
              }
            ),
            children: i("createGroupText")
          }
        ) }),
        columns: [
          {
            name: "name",
            displayKey: "columnName",
            cellRenderer: (v) => /* @__PURE__ */ a(
              Ae,
              {
                to: nY({
                  realm: l,
                  name: v.name
                }),
                children: v.name
              }
            )
          },
          {
            name: "displayHeader",
            displayKey: "columnDisplayName"
          },
          {
            name: "displayDescription",
            displayKey: "columnDisplayDescription"
          }
        ],
        actions: [
          {
            title: i("delete"),
            onRowClick: b
          }
        ],
        emptyState: /* @__PURE__ */ a(
          ct,
          {
            message: i("emptyStateMessage"),
            instructions: i("emptyStateInstructions"),
            primaryActionText: i("createGroupText"),
            onPrimaryAction: () => o(x0({ realm: l }))
          }
        )
      },
      c
    )
  ] });
}, V0 = ["username", "email"], NZ = ({ setTableData: e }) => {
  const { adminClient: t } = pe(), { config: n, save: r } = Dp(), { realm: i } = be(), { t: s } = H(), o = yl(), l = Je(), [c, d] = N("allGroups"), [u, p] = ot(), [m, f] = N(n?.attributes), [g, b] = N(""), [v, y] = ze({
    titleKey: s("deleteAttributeConfirmTitle"),
    messageKey: s("deleteAttributeConfirm", {
      attributeName: g
    }),
    continueButtonLabel: s("delete"),
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      if (!n?.attributes) return;
      const _ = n.attributes.find(
        (E) => E.name === g
      )?.displayName, O = _?.substring(
        2,
        _.length - 1
      );
      try {
        await Promise.all(
          o.map(async (T) => {
            try {
              if (await t.realms.getRealmLocalizationTexts({
                realm: i,
                selectedLocale: T
              })) {
                await t.realms.deleteRealmLocalizationTexts({
                  realm: i,
                  selectedLocale: T,
                  key: O
                });
                const k = await t.realms.getRealmLocalizationTexts({
                  realm: i,
                  selectedLocale: T
                });
                e([k]);
              }
            } catch {
              console.error(`Error removing translations for ${T}`);
            }
          })
        );
        const E = n.attributes.filter(
          (T) => T.name !== g
        );
        r(
          { ...n, attributes: E, groups: n.groups },
          {
            successMessageKey: "deleteAttributeSuccess",
            errorMessageKey: "deleteAttributeError"
          }
        ), b("");
      } catch (E) {
        console.error(
          `Error removing translations or updating attributes: ${E}`
        );
      }
    }
  });
  if (!n)
    return /* @__PURE__ */ a(gt, {});
  const x = n.attributes ?? [], w = n.groups ?? [], R = async (_, O) => {
    const E = x.findIndex((I) => I.name === _.name);
    let T = {};
    T = x[E], x.splice(E, 1), x.splice(O, 0, T), r(
      { attributes: x, groups: w },
      {
        successMessageKey: "updatedUserProfileSuccess",
        errorMessageKey: "updatedUserProfileError"
      }
    );
  }, S = (_) => /* @__PURE__ */ a(
    Ae,
    {
      to: C0({
        realm: i,
        attributeName: _.name
      }),
      children: _.name
    },
    _.name
  );
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(Sa, { children: /* @__PURE__ */ C(rr, { children: [
      /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(
        ft,
        {
          toggleId: "kc-group-filter",
          width: 200,
          "data-testid": "filter-select",
          isOpen: u,
          variant: pt.single,
          onToggle: p,
          toggleIcon: /* @__PURE__ */ a(ss, {}),
          onSelect: (_) => {
            const O = _.toString();
            d(O), f(
              O === "allGroups" ? x : x.filter((E) => E.group === O)
            ), p();
          },
          selections: c === "allGroups" ? s(c) : c,
          children: [
            /* @__PURE__ */ a(
              _e,
              {
                "data-testid": "all-groups",
                value: "allGroups",
                children: s("allGroups")
              },
              "allGroups"
            ),
            ...pp(
              x.filter((_) => !!_.group),
              "group"
            ).map((_) => /* @__PURE__ */ a(_e, { value: _.group, children: _.group }, _.group))
          ]
        }
      ) }),
      /* @__PURE__ */ a(je, { className: "kc-toolbar-attributesTab", children: /* @__PURE__ */ a(
        z,
        {
          "data-testid": "createAttributeBtn",
          variant: "primary",
          component: (_) => /* @__PURE__ */ a(Ae, { ..._, to: JX({ realm: i }) }),
          children: s("createAttribute")
        }
      ) })
    ] }) }),
    /* @__PURE__ */ a(_t, {}),
    /* @__PURE__ */ a(y, {}),
    /* @__PURE__ */ a(
      jg,
      {
        keyField: "name",
        onDragFinish: async (_, O) => {
          const E = x.map((P) => P.name), T = O.indexOf(_), I = E.indexOf(_), k = x[I];
          k.name && R(k, T);
        },
        actions: [
          {
            title: s("edit"),
            onClick: (_, O, E) => {
              l(
                C0({
                  realm: i,
                  attributeName: E.name
                })
              );
            }
          },
          {
            title: s("delete"),
            isActionable: ({ name: _ }) => !V0.includes(_),
            isDisabled: V0.includes(name),
            onClick: (_, O, E) => {
              b(E.name), v();
            }
          }
        ],
        columns: [
          {
            name: "name",
            displayKey: s("attributeName"),
            cellRenderer: S
          },
          {
            name: "displayName",
            displayKey: s("attributeDisplayName")
          },
          {
            name: "group",
            displayKey: s("attributeGroup")
          }
        ],
        data: m ?? x
      }
    )
  ] });
}, DZ = () => {
  const { config: e, save: t, isSaving: n } = Dp(), { t: r } = H(), { addError: i } = Se(), [s, o] = N();
  He(() => l(), [e, s]);
  function l() {
    s?.setValue(e ? Fa(e) : "");
  }
  async function c() {
    const d = s?.getValue();
    if (d)
      try {
        await t(JSON.parse(d));
      } catch (u) {
        i("invalidJsonError", u);
        return;
      }
  }
  return /* @__PURE__ */ C(Te, { variant: "light", children: [
    /* @__PURE__ */ a(
      lr,
      {
        language: Ln.json,
        height: "30rem",
        onEditorDidMount: (d) => o(d),
        isLanguageLabelVisible: !0
      }
    ),
    /* @__PURE__ */ a(xt, { children: /* @__PURE__ */ C(st, { children: [
      /* @__PURE__ */ a(
        z,
        {
          "data-testid": "save",
          variant: "primary",
          onClick: c,
          isDisabled: n,
          children: r("save")
        }
      ),
      /* @__PURE__ */ a(z, { variant: "link", onClick: l, isDisabled: n, children: r("revert") })
    ] }) })
  ] });
}, MZ = ({ setTableData: e }) => {
  const { realm: t } = be(), { t: n } = H(), r = (l) => jn(qo({ realm: t, tab: l })), i = r("attributes"), s = r("attributes-group"), o = r("json-editor");
  return /* @__PURE__ */ a(Np, { children: /* @__PURE__ */ C(
    $n,
    {
      defaultLocation: qo({ realm: t, tab: "attributes" }),
      mountOnEnter: !0,
      children: [
        /* @__PURE__ */ a(
          Ee,
          {
            title: /* @__PURE__ */ a(Ie, { children: n("attributes") }),
            "data-testid": "attributesTab",
            ...i,
            children: /* @__PURE__ */ a(NZ, { setTableData: e })
          }
        ),
        /* @__PURE__ */ a(
          Ee,
          {
            title: /* @__PURE__ */ a(Ie, { children: n("attributesGroup") }),
            "data-testid": "attributesGroupTab",
            ...s,
            children: /* @__PURE__ */ a(LZ, { setTableData: e })
          }
        ),
        /* @__PURE__ */ a(
          Ee,
          {
            title: /* @__PURE__ */ a(Ie, { children: n("jsonEditor") }),
            "data-testid": "jsonEditorTab",
            ...o,
            children: /* @__PURE__ */ a(DZ, {})
          }
        )
      ]
    }
  ) });
}, FZ = ({ name: e, global: t }) => {
  const { t: n } = H();
  return /* @__PURE__ */ C(ee, { children: [
    e,
    " ",
    t && /* @__PURE__ */ a(pn, { color: "blue", children: n("global") })
  ] });
}, $Z = (e) => {
  const { adminClient: t } = pe(), { t: n } = H(), [r, i] = N([]), [s, o] = N();
  Re(
    () => t.clientPolicies.listProfiles({
      includeGlobalProfiles: !0
    }),
    (c) => {
      const d = c.globalProfiles?.map(
        (p) => ({
          ...p,
          global: !0
        })
      ), u = c.profiles?.map((p) => ({
        ...p,
        global: !1
      }));
      o([...d ?? [], ...u ?? []]);
    },
    []
  );
  const l = async () => s?.filter((c) => !e.allProfiles.includes(c.name)) ?? [];
  return s ? /* @__PURE__ */ a(
    ht,
    {
      "data-testid": "addClientProfile",
      title: n("addClientProfile"),
      isOpen: e.open,
      onClose: e.toggleDialog,
      variant: Rt.large,
      actions: [
        /* @__PURE__ */ a(
          z,
          {
            "data-testid": "add-client-profile-button",
            variant: "primary",
            isDisabled: !r.length,
            onClick: () => {
              e.toggleDialog(), e.onConfirm(r);
            },
            children: n("add")
          },
          "add"
        ),
        /* @__PURE__ */ a(
          z,
          {
            variant: "link",
            onClick: () => {
              e.toggleDialog();
            },
            children: n("cancel")
          },
          "cancel"
        )
      ],
      children: /* @__PURE__ */ a(
        St,
        {
          loader: l,
          ariaLabelKey: "profilesList",
          searchPlaceholderKey: "searchProfile",
          canSelectAll: !0,
          onSelect: (c) => {
            i([...c]);
          },
          columns: [
            {
              name: "name",
              displayKey: "clientProfileName",
              cellRenderer: FZ
            },
            {
              name: "description",
              cellFormatters: [ro(n)]
            }
          ],
          emptyState: /* @__PURE__ */ a(
            ct,
            {
              hasIcon: !0,
              message: n("noRoles"),
              instructions: n("noRolesInstructions"),
              primaryActionText: n("createRole")
            }
          )
        }
      )
    }
  ) : /* @__PURE__ */ a(gt, {});
}, jZ = {
  name: "",
  description: "",
  executors: []
};
function BZ() {
  const { adminClient: e } = pe(), { t } = H(), n = Je(), r = Ue({
    defaultValues: jZ,
    mode: "onChange"
  }), {
    handleSubmit: i,
    setValue: s,
    getValues: o,
    formState: { isDirty: l },
    control: c
  } = r, { fields: d, remove: u } = sg({
    name: "executors",
    control: c
  }), { addAlert: p, addError: m } = Se(), [f, g] = N(), [b, v] = N(!1), { realm: y, profileName: x } = Vt(), w = Tt(), R = et(
    () => w.componentTypes?.["org.keycloak.services.clientpolicy.executor.ClientPolicyExecutorProvider"],
    []
  ), [S, _] = N(), O = !!x, [E, T] = N(0), I = () => T(E + 1);
  Re(
    () => e.clientPolicies.listProfiles({ includeGlobalProfiles: !0 }),
    (F) => {
      g({
        globalProfiles: F.globalProfiles,
        profiles: F.profiles?.filter((V) => V.name !== x)
      });
      const A = F.globalProfiles?.find(
        (V) => V.name === x
      ), M = F.profiles?.find((V) => V.name === x);
      v(A !== void 0), s("name", A?.name ?? M?.name ?? ""), s(
        "description",
        A?.description ?? M?.description ?? ""
      ), s(
        "executors",
        A?.executors ?? M?.executors ?? []
      );
    },
    [E]
  );
  const k = async (F) => {
    const A = F;
    try {
      await e.clientPolicies.createProfiles({
        ...f,
        profiles: [...f?.profiles || [], A]
      }), p(
        t(O ? "updateClientProfileSuccess" : "createClientProfileSuccess"),
        ue.success
      ), n($u({ realm: y, profileName: F.name }));
    } catch (M) {
      m(
        O ? "updateClientProfileError" : "createClientProfileError",
        M
      );
    }
  }, [P, D] = ze({
    titleKey: S?.name ? t("deleteExecutorProfileConfirmTitle") : t("deleteClientProfileConfirmTitle"),
    messageKey: S?.name ? t("deleteExecutorProfileConfirm", {
      executorName: S.name
    }) : t("deleteClientProfileConfirm", {
      profileName: x
    }),
    continueButtonLabel: t("delete"),
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      if (S?.name) {
        u(S.idx);
        try {
          await e.clientPolicies.createProfiles({
            ...f,
            profiles: [...f.profiles || [], o()]
          }), p(t("deleteExecutorSuccess"), ue.success), n($u({ realm: y, profileName: x }));
        } catch (F) {
          m(t("deleteExecutorError"), F);
        }
      } else
        try {
          await e.clientPolicies.createProfiles(f), p(t("deleteClientSuccess"), ue.success), n(Vr({ realm: y, tab: "profiles" }));
        } catch (F) {
          m(t("deleteClientError"), F);
        }
    }
  });
  return f ? /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(D, {}),
    /* @__PURE__ */ a(
      wt,
      {
        titleKey: O ? x : t("newClientProfile"),
        badges: [
          {
            id: "global-client-profile-badge",
            text: b ? /* @__PURE__ */ a(pn, { color: "blue", children: t("global") }) : ""
          }
        ],
        divider: !0,
        dropdownItems: O && !b ? [
          /* @__PURE__ */ a(
            Ke,
            {
              value: "delete",
              onClick: P,
              "data-testid": "deleteClientProfileDropdown",
              children: t("deleteClientProfile")
            },
            "delete"
          )
        ] : void 0
      }
    ),
    /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ a(Ve, { ...r, children: /* @__PURE__ */ C(Fe, { isHorizontal: !0, role: "view-realm", className: "pf-v5-u-mt-lg", children: [
      /* @__PURE__ */ a(
        ve,
        {
          name: "name",
          label: t("newClientProfileName"),
          helperText: t("createClientProfileNameHelperText"),
          readOnly: b,
          rules: {
            required: t("required")
          }
        }
      ),
      /* @__PURE__ */ a(
        wr,
        {
          name: "description",
          label: t("description"),
          readOnly: b
        }
      ),
      /* @__PURE__ */ C(st, { children: [
        !b && /* @__PURE__ */ a(
          z,
          {
            variant: "primary",
            onClick: () => i(k)(),
            "data-testid": "saveCreateProfile",
            isDisabled: !l,
            children: t("save")
          }
        ),
        O && !b && /* @__PURE__ */ a(
          z,
          {
            id: "reloadProfile",
            variant: "link",
            "data-testid": "reloadProfile",
            isDisabled: !l,
            onClick: I,
            children: t("reload")
          }
        ),
        !O && !b && /* @__PURE__ */ a(
          z,
          {
            id: "cancelCreateProfile",
            variant: "link",
            component: (F) => /* @__PURE__ */ a(
              Ae,
              {
                ...F,
                to: Vr({ realm: y, tab: "profiles" })
              }
            ),
            "data-testid": "cancelCreateProfile",
            children: t("cancel")
          }
        )
      ] }),
      O && /* @__PURE__ */ C(ee, { children: [
        /* @__PURE__ */ C(ra, { children: [
          /* @__PURE__ */ a(Nt, { children: /* @__PURE__ */ C(tt, { className: "kc-executors", component: Wt.h1, children: [
            t("executors"),
            /* @__PURE__ */ a(
              le,
              {
                helpText: t("executorsHelpText"),
                fieldLabelId: "executors"
              }
            )
          ] }) }),
          !b && /* @__PURE__ */ a(Nt, { align: { default: "alignRight" }, children: /* @__PURE__ */ a(
            z,
            {
              id: "addExecutor",
              component: (F) => /* @__PURE__ */ a(
                Ae,
                {
                  ...F,
                  to: BX({
                    realm: y,
                    profileName: x
                  })
                }
              ),
              variant: "link",
              className: "kc-addExecutor",
              "data-testid": "addExecutor",
              icon: /* @__PURE__ */ a(Ea, {}),
              children: t("addExecutor")
            }
          ) })
        ] }),
        d.length > 0 && /* @__PURE__ */ C(ee, { children: [
          /* @__PURE__ */ a(ar, { "aria-label": t("executors"), isCompact: !0, children: d.map((F, A) => /* @__PURE__ */ a(
            Ta,
            {
              "aria-labelledby": "executors-list-item",
              id: F.executor,
              children: /* @__PURE__ */ a(Ba, { "data-testid": "executors-list-row", children: /* @__PURE__ */ a(
                ja,
                {
                  dataListCells: [
                    /* @__PURE__ */ C(
                      aa,
                      {
                        "data-testid": "executor-type",
                        children: [
                          F.configuration ? /* @__PURE__ */ a(
                            z,
                            {
                              component: (M) => /* @__PURE__ */ a(
                                Ae,
                                {
                                  ...M,
                                  to: VX({
                                    realm: y,
                                    profileName: x,
                                    executorName: F.executor
                                  })
                                }
                              ),
                              variant: "link",
                              "data-testid": "editExecutor",
                              children: F.executor
                            }
                          ) : /* @__PURE__ */ a("span", { className: "kc-unclickable-executor", children: F.executor }),
                          R?.filter(
                            (M) => M.id === F.executor
                          ).map((M) => /* @__PURE__ */ C(ka, { children: [
                            /* @__PURE__ */ a(
                              le,
                              {
                                helpText: M.helpText,
                                fieldLabelId: "executorTypeTextHelpText"
                              },
                              M.id
                            ),
                            !b && /* @__PURE__ */ a(
                              z,
                              {
                                variant: "link",
                                isInline: !0,
                                icon: /* @__PURE__ */ a(
                                  mu,
                                  {
                                    className: "kc-executor-trash-icon",
                                    "data-testid": "deleteExecutor"
                                  },
                                  `executorType-trash-icon-${M.id}`
                                ),
                                onClick: () => {
                                  P(), _({
                                    idx: A,
                                    name: M.id
                                  });
                                },
                                "aria-label": t("remove")
                              }
                            )
                          ] }, M.id))
                        ]
                      },
                      "executor"
                    )
                  ]
                }
              ) })
            },
            F.executor
          )) }),
          b && /* @__PURE__ */ a(
            z,
            {
              id: "backToClientPolicies",
              component: (F) => /* @__PURE__ */ a(
                Ae,
                {
                  ...F,
                  to: Vr({ realm: y, tab: "profiles" })
                }
              ),
              variant: "primary",
              className: "kc-backToPolicies",
              "data-testid": "backToClientPolicies",
              children: t("back")
            }
          )
        ] }),
        d.length === 0 && /* @__PURE__ */ C(ee, { children: [
          /* @__PURE__ */ a(_t, {}),
          /* @__PURE__ */ a(
            tt,
            {
              className: "kc-emptyExecutors",
              component: Wt.h2,
              children: t("emptyExecutors")
            }
          )
        ] })
      ] })
    ] }) }) })
  ] }) : /* @__PURE__ */ a(gt, {});
}
const gE = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: BZ
}, Symbol.toStringTag, { value: "Module" })), bE = () => {
  const { adminClient: e } = pe(), { t } = H(), [n, r] = ot(), [i, s] = ot(), [o, l] = N(), [c, d] = N([]), [u, p] = N(0), [m, f] = N(0), g = () => f(m + 1), { realm: b } = be(), { addAlert: v, addError: y } = Se(), { enabled: x } = Pr();
  Re(
    () => e.realms.getDefaultGroups({ realm: b }),
    (E) => {
      l(E), p(u + 1);
    },
    [m]
  );
  const w = () => Promise.resolve(o), R = async () => {
    try {
      await Promise.all(
        c.map(
          (E) => e.realms.removeDefaultGroup({
            realm: b,
            id: E.id
          })
        )
      ), v(
        t("groupRemove", { count: c.length }),
        ue.success
      ), d([]);
    } catch (E) {
      y("groupRemoveError", E);
    }
    g();
  }, S = async (E) => {
    try {
      await Promise.all(
        E.map(
          (T) => e.realms.addDefaultGroup({
            realm: b,
            id: T.id
          })
        )
      ), v(
        t("defaultGroupAdded", { count: E.length }),
        ue.success
      );
    } catch (T) {
      y("defaultGroupAddedError", T);
    }
    g();
  }, [_, O] = ze({
    titleKey: t("removeConfirmTitle", { count: c.length }),
    messageKey: t("removeConfirm", { count: c.length }),
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: R
  });
  return o ? /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(O, {}),
    i && /* @__PURE__ */ a(
      cl,
      {
        type: "selectMany",
        text: {
          title: "addDefaultGroups",
          ok: "add"
        },
        onConfirm: (E) => {
          S(E || []), s();
        },
        onClose: s
      }
    ),
    x && /* @__PURE__ */ a(
      Or,
      {
        bodyContent: /* @__PURE__ */ C(ns, { i18nKey: "defaultGroupsHelp", children: [
          " ",
          /* @__PURE__ */ a(Ae, { to: ls({ realm: b }) }),
          "."
        ] }),
        children: /* @__PURE__ */ a(
          Pt,
          {
            className: "keycloak__section_intro__help",
            style: {
              paddingLeft: "var(--pf-v5-c-page__main-section--PaddingLeft)"
            },
            children: /* @__PURE__ */ C(tt, { children: [
              /* @__PURE__ */ a(Yc, {}),
              " ",
              t("whatIsDefaultGroups")
            ] })
          }
        )
      }
    ),
    /* @__PURE__ */ a(
      St,
      {
        canSelectAll: !0,
        onSelect: (E) => d([...E]),
        loader: w,
        ariaLabelKey: "defaultGroups",
        searchPlaceholderKey: "searchForGroups",
        toolbarItem: /* @__PURE__ */ C(ee, { children: [
          /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(
            z,
            {
              "data-testid": "openCreateGroupModal",
              variant: "primary",
              onClick: s,
              children: t("addGroups")
            }
          ) }),
          /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(
            qt,
            {
              toggle: (E) => /* @__PURE__ */ a(
                yt,
                {
                  ref: E,
                  isExpanded: n,
                  variant: "plain",
                  onClick: r,
                  isDisabled: c.length === 0,
                  children: /* @__PURE__ */ a(dr, {})
                }
              ),
              isOpen: n,
              shouldFocusToggleOnSelect: !0,
              children: /* @__PURE__ */ a(Xt, { children: /* @__PURE__ */ a(
                Ke,
                {
                  component: "button",
                  onClick: () => {
                    _(), r();
                  },
                  children: t("remove")
                },
                "action"
              ) })
            }
          ) })
        ] }),
        actions: [
          {
            title: t("remove"),
            onRowClick: (E) => (d([E]), _(), Promise.resolve(!1))
          }
        ],
        columns: [
          {
            name: "name",
            displayKey: "groupName"
          },
          {
            name: "path",
            displayKey: "path"
          }
        ],
        emptyState: /* @__PURE__ */ a(
          ct,
          {
            hasIcon: !0,
            message: t("noDefaultGroups"),
            instructions: /* @__PURE__ */ C(ns, { i18nKey: "noDefaultGroupsInstructions", children: [
              " ",
              /* @__PURE__ */ a(
                Ae,
                {
                  className: "pf-v5-u-font-weight-light",
                  to: ls({ realm: b }),
                  role: "navigation",
                  "aria-label": t("identityBrokeringLink")
                }
              ),
              "Add groups..."
            ] }),
            primaryActionText: t("addGroups"),
            onPrimaryAction: s
          }
        )
      },
      u
    )
  ] }) : /* @__PURE__ */ a(gt, {});
}, Cee = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  DefaultsGroupsTab: bE
}, Symbol.toStringTag, { value: "Module" }));
function UZ() {
  const { adminClient: e } = pe(), { whoAmI: t } = _a(), [n, r] = N(), i = t.getUserId();
  return Re(() => e.users.findOne({ id: i }), r, [
    i
  ]), n;
}
const VZ = ({
  realm: e,
  save: t
}) => {
  const { adminClient: n } = pe(), { t: r } = H(), { realm: i } = be(), { addAlert: s, addError: o } = Se(), l = UZ(), c = Ue({ defaultValues: e }), { control: d, handleSubmit: u, watch: p, reset: m, getValues: f } = c, g = () => m(e), b = p("smtpServer.from", ""), v = p("smtpServer.host", ""), [y, x] = ot(), w = nt({
    control: d,
    name: "smtpServer.auth",
    defaultValue: ""
  }), R = async () => {
    const S = (T) => Number(T), _ = (T) => T === "true", O = /* @__PURE__ */ new Map([
      ["port", S],
      ["ssl", _],
      ["starttls", _],
      ["auth", _]
    ]), E = { ...f().smtpServer };
    for (const [T, I] of O.entries())
      E[T] = I(E[T]);
    E.port === 0 && (E.port = null);
    try {
      x(), await n.realms.testSMTPConnection(
        { realm: e.realm },
        E
      ), s(r("testConnectionSuccess"), ue.success);
    } catch (T) {
      o("testConnectionError", T);
    }
    x();
  };
  return /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ C(Ve, { ...c, children: [
    /* @__PURE__ */ a(Xn, { title: r("template"), className: "kc-email-template", children: /* @__PURE__ */ C(
      Fe,
      {
        isHorizontal: !0,
        role: "manage-realm",
        className: "pf-v5-u-mt-lg",
        onSubmit: u(t),
        children: [
          /* @__PURE__ */ a(
            ve,
            {
              name: "smtpServer.from",
              label: r("from"),
              type: "email",
              placeholder: r("smtpFromPlaceholder"),
              rules: {
                pattern: {
                  value: Kd,
                  message: r("emailInvalid")
                },
                required: r("required")
              }
            }
          ),
          /* @__PURE__ */ a(
            ve,
            {
              name: "smtpServer.fromDisplayName",
              label: r("fromDisplayName"),
              labelIcon: r("fromDisplayNameHelp"),
              placeholder: r("smtpFromDisplayPlaceholder")
            }
          ),
          /* @__PURE__ */ a(
            ve,
            {
              name: "smtpServer.replyTo",
              label: r("replyTo"),
              type: "email",
              placeholder: r("replyToEmailPlaceholder"),
              rules: {
                pattern: {
                  value: Kd,
                  message: r("emailInvalid")
                }
              }
            }
          ),
          /* @__PURE__ */ a(
            ve,
            {
              name: "smtpServer.replyToDisplayName",
              label: r("replyToDisplayName"),
              labelIcon: r("replyToDisplayNameHelp"),
              placeholder: r("replyToDisplayPlaceholder")
            }
          ),
          /* @__PURE__ */ a(
            ve,
            {
              name: "smtpServer.envelopeFrom",
              label: r("envelopeFrom"),
              labelIcon: r("envelopeFromHelp"),
              placeholder: r("senderEnvelopePlaceholder")
            }
          )
        ]
      }
    ) }),
    /* @__PURE__ */ a(
      Xn,
      {
        className: "kc-email-connection",
        title: r("connectionAndAuthentication"),
        children: /* @__PURE__ */ C(
          Fe,
          {
            isHorizontal: !0,
            role: "manage-realm",
            className: "pf-v5-u-mt-lg",
            onSubmit: u(t),
            children: [
              /* @__PURE__ */ a(
                ve,
                {
                  name: "smtpServer.host",
                  label: r("host"),
                  rules: {
                    required: r("required")
                  }
                }
              ),
              /* @__PURE__ */ a(
                ve,
                {
                  name: "smtpServer.port",
                  label: r("port"),
                  placeholder: r("smtpPortPlaceholder")
                }
              ),
              /* @__PURE__ */ C(se, { label: r("encryption"), fieldId: "kc-html-display-name", children: [
                /* @__PURE__ */ a(
                  ge,
                  {
                    name: "smtpServer.ssl",
                    control: d,
                    defaultValue: "false",
                    render: ({ field: S }) => /* @__PURE__ */ a(
                      rn,
                      {
                        id: "kc-enable-ssl",
                        "data-testid": "enable-ssl",
                        label: r("enableSSL"),
                        isChecked: S.value === "true",
                        onChange: (_, O) => S.onChange("" + O)
                      }
                    )
                  }
                ),
                /* @__PURE__ */ a(
                  ge,
                  {
                    name: "smtpServer.starttls",
                    control: d,
                    defaultValue: "false",
                    render: ({ field: S }) => /* @__PURE__ */ a(
                      rn,
                      {
                        id: "kc-enable-start-tls",
                        "data-testid": "enable-start-tls",
                        label: r("enableStartTLS"),
                        isChecked: S.value === "true",
                        onChange: (_, O) => S.onChange("" + O)
                      }
                    )
                  }
                )
              ] }),
              /* @__PURE__ */ a(
                Qs,
                {
                  name: "smtpServer.auth",
                  label: r("authentication"),
                  defaultValue: "",
                  labelOn: r("enabled"),
                  labelOff: r("disabled"),
                  stringify: !0
                }
              ),
              w === "true" && /* @__PURE__ */ C(ee, { children: [
                /* @__PURE__ */ a(
                  ve,
                  {
                    name: "smtpServer.user",
                    label: r("username"),
                    placeholder: r("loginUsernamePlaceholder"),
                    rules: {
                      required: r("required")
                    }
                  }
                ),
                /* @__PURE__ */ a(
                  jo,
                  {
                    name: "smtpServer.password",
                    label: r("password"),
                    labelIcon: r("passwordHelp"),
                    rules: {
                      required: r("required")
                    }
                  }
                )
              ] }),
              l && /* @__PURE__ */ a(se, { id: "descriptionTestConnection", children: l.email ? /* @__PURE__ */ a(
                _n,
                {
                  variant: "info",
                  component: "h2",
                  isInline: !0,
                  title: r("testConnectionHint.withEmail", {
                    email: l.email
                  })
                }
              ) : /* @__PURE__ */ a(
                _n,
                {
                  variant: "warning",
                  component: "h2",
                  isInline: !0,
                  title: r("testConnectionHint.withoutEmail", {
                    userName: l.username
                  }),
                  actionLinks: /* @__PURE__ */ a(
                    kh,
                    {
                      component: (S) => /* @__PURE__ */ a(
                        Ae,
                        {
                          ...S,
                          to: ai({
                            realm: i,
                            id: l.id,
                            tab: "settings"
                          })
                        }
                      ),
                      children: r("testConnectionHint.withoutEmailAction")
                    }
                  )
                }
              ) }),
              /* @__PURE__ */ C(st, { children: [
                /* @__PURE__ */ a(yi, { children: /* @__PURE__ */ a(
                  z,
                  {
                    variant: "primary",
                    type: "submit",
                    "data-testid": "email-tab-save",
                    children: r("save")
                  }
                ) }),
                /* @__PURE__ */ a(yi, { children: /* @__PURE__ */ a(
                  z,
                  {
                    variant: "secondary",
                    onClick: () => R(),
                    "data-testid": "test-connection-button",
                    isDisabled: !(Kd.test(b) && v) || !l?.email,
                    "aria-describedby": "descriptionTestConnection",
                    isLoading: y,
                    spinnerAriaValueText: r("testingConnection"),
                    children: r("testConnection")
                  }
                ) }),
                /* @__PURE__ */ a(yi, { children: /* @__PURE__ */ a(
                  z,
                  {
                    variant: "link",
                    onClick: g,
                    "data-testid": "email-tab-revert",
                    children: r("revert")
                  }
                ) })
              ] })
            ]
          }
        )
      }
    )
  ] }) });
};
var Yi;
(function(e) {
  e.Disabled = "DISABLED", e.Enabled = "ENABLED", e.AdminView = "ADMIN_VIEW", e.AdminEdit = "ADMIN_EDIT";
})(Yi || (Yi = {}));
const KZ = ({
  realm: e,
  save: t
}) => {
  const { adminClient: n } = pe(), { realm: r } = be(), [i, s] = N();
  return Re(
    () => n.users.getProfile({ realm: r }),
    (o) => s(o),
    []
  ), i ? /* @__PURE__ */ a(
    zZ,
    {
      realm: e,
      save: t,
      userProfileConfig: i
    }
  ) : /* @__PURE__ */ a(gt, {});
}, HZ = ["all", "external", "none"], Gm = [
  Yi.Disabled,
  Yi.Enabled,
  Yi.AdminView,
  Yi.AdminEdit
];
function zZ({
  realm: e,
  save: t,
  userProfileConfig: n
}) {
  const { adminClient: r } = pe(), { t: i } = H(), { realm: s } = be(), o = Ue(), {
    control: l,
    handleSubmit: c,
    setValue: d,
    formState: { errors: u }
  } = o, m = oa()(zn.Organizations), f = () => {
    if (In(e, d), d(
      "unmanagedAttributePolicy",
      n.unmanagedAttributePolicy || Gm[0]
    ), e.attributes?.["acr.loa.map"]) {
      const b = Object.entries(
        JSON.parse(e.attributes["acr.loa.map"])
      ).flatMap(([v, y]) => ({ key: v, value: y }));
      b.concat({ key: "", value: "" }), d(
        Ne("attributes.acr.loa.map"),
        b
      );
    }
  };
  He(f, []);
  const g = c(
    async ({ unmanagedAttributePolicy: b, ...v }) => {
      const y = { ...n };
      b === Yi.Disabled ? delete y.unmanagedAttributePolicy : y.unmanagedAttributePolicy = b, await t({ ...v, upConfig: y });
    }
  );
  return /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ a(Ve, { ...o, children: /* @__PURE__ */ C(
    Fe,
    {
      isHorizontal: !0,
      role: "manage-realm",
      className: "pf-u-mt-lg",
      onSubmit: g,
      children: [
        /* @__PURE__ */ C(se, { label: i("realmName"), fieldId: "kc-realm-id", isRequired: !0, children: [
          /* @__PURE__ */ a(
            ge,
            {
              name: "realm",
              control: l,
              rules: {
                required: { value: !0, message: i("required") }
              },
              defaultValue: "",
              render: ({ field: b }) => /* @__PURE__ */ a(
                ti,
                {
                  "data-testid": "realmName",
                  onChange: b.onChange,
                  children: b.value
                }
              )
            }
          ),
          u.realm && /* @__PURE__ */ a(
            En,
            {
              "data-testid": "realm-id-error",
              message: u.realm.message
            }
          )
        ] }),
        /* @__PURE__ */ a(ve, { name: "displayName", label: i("displayName") }),
        /* @__PURE__ */ a(ve, { name: "displayNameHtml", label: i("htmlDisplayName") }),
        /* @__PURE__ */ a(
          ve,
          {
            name: Ne("attributes.frontendUrl"),
            type: "url",
            label: i("frontendUrl"),
            labelIcon: i("frontendUrlHelp")
          }
        ),
        /* @__PURE__ */ a(
          at,
          {
            name: "sslRequired",
            label: i("requireSsl"),
            labelIcon: i("requireSslHelp"),
            controller: {
              defaultValue: "none"
            },
            options: HZ.map((b) => ({
              key: b,
              value: i(`sslType.${b}`)
            }))
          }
        ),
        /* @__PURE__ */ a(
          se,
          {
            label: i("acrToLoAMapping"),
            fieldId: "acrToLoAMapping",
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: i("acrToLoAMappingHelp"),
                fieldLabelId: "acrToLoAMapping"
              }
            ),
            children: /* @__PURE__ */ a(
              ld,
              {
                label: i("acrToLoAMapping"),
                name: Ne("attributes.acr.loa.map")
              }
            )
          }
        ),
        /* @__PURE__ */ a(
          bt,
          {
            name: "userManagedAccessAllowed",
            label: i("userManagedAccess"),
            labelIcon: i("userManagedAccessHelp")
          }
        ),
        m && /* @__PURE__ */ a(
          bt,
          {
            name: "organizationsEnabled",
            label: i("organizationsEnabled"),
            labelIcon: i("organizationsEnabledHelp")
          }
        ),
        /* @__PURE__ */ a(
          at,
          {
            name: "unmanagedAttributePolicy",
            label: i("unmanagedAttributes"),
            labelIcon: i("unmanagedAttributesHelpText"),
            controller: {
              defaultValue: Gm[0]
            },
            options: Gm.map((b) => ({
              key: b,
              value: i(`unmanagedAttributePolicy.${b}`)
            }))
          }
        ),
        /* @__PURE__ */ a(
          se,
          {
            label: i("endpoints"),
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: i("endpointsHelp"),
                fieldLabelId: "endpoints"
              }
            ),
            fieldId: "kc-endpoints",
            children: /* @__PURE__ */ C(rl, { children: [
              /* @__PURE__ */ a(va, { children: /* @__PURE__ */ a(
                js,
                {
                  href: `${os(
                    r.baseUrl
                  )}realms/${s}/.well-known/openid-configuration`,
                  title: i("openIDEndpointConfiguration")
                }
              ) }),
              /* @__PURE__ */ a(va, { children: /* @__PURE__ */ a(
                js,
                {
                  href: `${os(
                    r.baseUrl
                  )}realms/${s}/protocol/saml/descriptor`,
                  title: i("samlIdentityProviderMetadata")
                }
              ) })
            ] })
          }
        ),
        /* @__PURE__ */ a(
          _r,
          {
            name: "realmSettingsGeneralTab",
            reset: f,
            isActive: !0,
            isSubmit: !0
          }
        )
      ]
    }
  ) }) });
}
const qZ = ({
  realm: e,
  refresh: t
}) => {
  const { adminClient: n } = pe(), { t: r } = H(), { addAlert: i, addError: s } = Se(), { realm: o } = be(), l = async (c) => {
    const d = Array.isArray(c) ? Object.keys(c[0])[0] : Object.keys(c)[0];
    try {
      await n.realms.update(
        {
          realm: o
        },
        Array.isArray(c) ? c.reduce((u, p) => Object.assign(u, p), e) : Object.assign(e, c)
      ), i(r("enableSwitchSuccess", { switch: r(d) })), t();
    } catch (u) {
      s(r("enableSwitchError"), u);
    }
  };
  return /* @__PURE__ */ C(Te, { variant: "light", children: [
    /* @__PURE__ */ a(
      Xn,
      {
        className: "kc-login-screen",
        title: r("loginScreenCustomization"),
        children: /* @__PURE__ */ C(Fe, { isHorizontal: !0, role: "manage-realm", children: [
          /* @__PURE__ */ a(
            se,
            {
              label: r("registrationAllowed"),
              fieldId: "kc-user-reg",
              labelIcon: /* @__PURE__ */ a(
                le,
                {
                  helpText: r("userRegistrationHelpText"),
                  fieldLabelId: "registrationAllowed"
                }
              ),
              hasNoPaddingTop: !0,
              children: /* @__PURE__ */ a(
                Ye,
                {
                  id: "kc-user-reg-switch",
                  "data-testid": "user-reg-switch",
                  value: e.registrationAllowed ? "on" : "off",
                  label: r("on"),
                  labelOff: r("off"),
                  isChecked: e.registrationAllowed,
                  onChange: (c, d) => {
                    l({ registrationAllowed: d });
                  },
                  "aria-label": r("registrationAllowed")
                }
              )
            }
          ),
          /* @__PURE__ */ a(
            se,
            {
              label: r("resetPasswordAllowed"),
              fieldId: "kc-forgot-pw",
              labelIcon: /* @__PURE__ */ a(
                le,
                {
                  helpText: r("forgotPasswordHelpText"),
                  fieldLabelId: "resetPasswordAllowed"
                }
              ),
              hasNoPaddingTop: !0,
              children: /* @__PURE__ */ a(
                Ye,
                {
                  id: "kc-forgot-pw-switch",
                  "data-testid": "forgot-pw-switch",
                  name: "resetPasswordAllowed",
                  value: e.resetPasswordAllowed ? "on" : "off",
                  label: r("on"),
                  labelOff: r("off"),
                  isChecked: e.resetPasswordAllowed,
                  onChange: (c, d) => {
                    l({ resetPasswordAllowed: d });
                  },
                  "aria-label": r("resetPasswordAllowed")
                }
              )
            }
          ),
          /* @__PURE__ */ a(
            se,
            {
              label: r("rememberMe"),
              fieldId: "kc-remember-me",
              labelIcon: /* @__PURE__ */ a(
                le,
                {
                  helpText: r("rememberMeHelpText"),
                  fieldLabelId: "rememberMe"
                }
              ),
              hasNoPaddingTop: !0,
              children: /* @__PURE__ */ a(
                Ye,
                {
                  id: "kc-remember-me-switch",
                  "data-testid": "remember-me-switch",
                  value: e.rememberMe ? "on" : "off",
                  label: r("on"),
                  labelOff: r("off"),
                  isChecked: e.rememberMe,
                  onChange: (c, d) => {
                    l({ rememberMe: d });
                  },
                  "aria-label": r("rememberMe")
                }
              )
            }
          )
        ] })
      }
    ),
    /* @__PURE__ */ a(Xn, { className: "kc-email-settings", title: r("emailSettings"), children: /* @__PURE__ */ C(Fe, { isHorizontal: !0, role: "manage-realm", children: [
      /* @__PURE__ */ a(
        se,
        {
          label: r("registrationEmailAsUsername"),
          fieldId: "kc-email-as-username",
          labelIcon: /* @__PURE__ */ a(
            le,
            {
              helpText: r("emailAsUsernameHelpText"),
              fieldLabelId: "registrationEmailAsUsername"
            }
          ),
          hasNoPaddingTop: !0,
          children: /* @__PURE__ */ a(
            Ye,
            {
              id: "kc-email-as-username-switch",
              "data-testid": "email-as-username-switch",
              value: e.registrationEmailAsUsername ? "on" : "off",
              label: r("on"),
              labelOff: r("off"),
              isChecked: e.registrationEmailAsUsername,
              onChange: (c, d) => {
                l([
                  {
                    registrationEmailAsUsername: d
                  },
                  {
                    duplicateEmailsAllowed: !1
                  }
                ]);
              },
              "aria-label": r("registrationEmailAsUsername")
            }
          )
        }
      ),
      /* @__PURE__ */ a(
        se,
        {
          label: r("loginWithEmailAllowed"),
          fieldId: "kc-login-with-email",
          labelIcon: /* @__PURE__ */ a(
            le,
            {
              helpText: r("loginWithEmailHelpText"),
              fieldLabelId: "loginWithEmailAllowed"
            }
          ),
          hasNoPaddingTop: !0,
          children: /* @__PURE__ */ a(
            Ye,
            {
              id: "kc-login-with-email-switch",
              "data-testid": "login-with-email-switch",
              value: e.loginWithEmailAllowed ? "on" : "off",
              label: r("on"),
              labelOff: r("off"),
              isChecked: e.loginWithEmailAllowed,
              onChange: (c, d) => {
                l([
                  {
                    loginWithEmailAllowed: d
                  },
                  { duplicateEmailsAllowed: !1 }
                ]);
              },
              "aria-label": r("loginWithEmailAllowed")
            }
          )
        }
      ),
      /* @__PURE__ */ a(
        se,
        {
          label: r("duplicateEmailsAllowed"),
          fieldId: "kc-duplicate-emails",
          labelIcon: /* @__PURE__ */ a(
            le,
            {
              helpText: r("duplicateEmailsHelpText"),
              fieldLabelId: "duplicateEmailsAllowed"
            }
          ),
          hasNoPaddingTop: !0,
          children: /* @__PURE__ */ a(
            Ye,
            {
              id: "kc-duplicate-emails-switch",
              "data-testid": "duplicate-emails-switch",
              label: r("on"),
              labelOff: r("off"),
              isChecked: e.duplicateEmailsAllowed,
              onChange: (c, d) => {
                l({
                  duplicateEmailsAllowed: d
                });
              },
              isDisabled: e.loginWithEmailAllowed || e.registrationEmailAsUsername,
              "aria-label": r("duplicateEmailsAllowed")
            }
          )
        }
      ),
      /* @__PURE__ */ a(
        se,
        {
          label: r("verifyEmail"),
          fieldId: "kc-verify-email",
          labelIcon: /* @__PURE__ */ a(
            le,
            {
              helpText: r("verifyEmailHelpText"),
              fieldLabelId: "verifyEmail"
            }
          ),
          hasNoPaddingTop: !0,
          children: /* @__PURE__ */ a(
            Ye,
            {
              id: "kc-verify-email-switch",
              "data-testid": "verify-email-switch",
              name: "verifyEmail",
              value: e.verifyEmail ? "on" : "off",
              label: r("on"),
              labelOff: r("off"),
              isChecked: e.verifyEmail,
              onChange: (c, d) => {
                l({ verifyEmail: d });
              },
              "aria-label": r("verifyEmail")
            }
          )
        }
      )
    ] }) }),
    /* @__PURE__ */ a(
      Xn,
      {
        className: "kc-user-info-settings",
        title: r("userInfoSettings"),
        children: /* @__PURE__ */ a(Fe, { isHorizontal: !0, role: "manage-realm", children: /* @__PURE__ */ a(
          se,
          {
            label: r("editUsernameAllowed"),
            fieldId: "kc-edit-username",
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: r("editUsernameHelp"),
                fieldLabelId: "editUsernameAllowed"
              }
            ),
            hasNoPaddingTop: !0,
            children: /* @__PURE__ */ a(
              Ye,
              {
                id: "kc-edit-username-switch",
                "data-testid": "edit-username-switch",
                value: e.editUsernameAllowed ? "on" : "off",
                label: r("on"),
                labelOff: r("off"),
                isChecked: e.editUsernameAllowed,
                onChange: (c, d) => {
                  l({ editUsernameAllowed: d });
                },
                "aria-label": r("editUsernameAllowed")
              }
            )
          }
        ) })
      }
    )
  ] });
}, GZ = {
  name: "",
  description: "",
  conditions: [],
  enabled: !0,
  profiles: []
};
function WZ() {
  const { adminClient: e } = pe(), { t } = H(), { realm: n } = be(), { addAlert: r, addError: i } = Se(), [s, o] = N(!1), [l, c] = N(), [d, u] = N(), [p, m] = N(), [f, g] = N([]), [b, v] = N(), [
    y,
    x
  ] = N(!1), [w, R] = N(), [S, _] = N(!1), [O, E] = N(), { policyName: T } = Vt(), I = Je(), k = Ue({
    mode: "onChange",
    defaultValues: GZ
  }), { handleSubmit: P } = k, D = k.getValues();
  Re(
    async () => {
      const [ne, Oe] = await Promise.all([
        e.clientPolicies.listPolicies({
          includeGlobalPolicies: !0
        }),
        e.clientPolicies.listProfiles({
          includeGlobalProfiles: !0
        })
      ]);
      return { policies: ne, profiles: Oe };
    },
    ({ policies: ne, profiles: Oe }) => {
      let Pe = ne.policies?.find(
        (we) => we.name === T
      );
      Pe === void 0 && (Pe = ne.globalPolicies?.find(
        (we) => we.name === T
      ), o(Pe !== void 0));
      const $e = [
        ...Oe.globalProfiles ?? [],
        ...Oe.profiles ?? []
      ], fe = [
        ...ne.globalPolicies ?? [],
        ...ne.policies ?? []
      ];
      c(ne.policies ?? []), u(ne.globalPolicies ?? []), m(fe), Pe && (F(Pe), g($e), v(Pe), x(!0));
    },
    []
  );
  const F = (ne) => {
    k.reset(ne);
  }, A = (p || []).filter(
    (ne) => ne.name === T
  ), M = A[0]?.conditions || [], V = A[0]?.profiles || [], G = Tt().componentTypes?.["org.keycloak.services.clientpolicy.condition.ClientPolicyConditionProvider"], q = async () => {
    const ne = k.getValues(), Oe = {
      ...ne
    }, Pe = () => l?.some(
      (fe) => fe.name === Oe.name
    ) ? l?.map(
      (fe) => fe.name === Oe.name ? Oe : fe
    ) : ne.name !== T ? l?.filter((fe) => fe.name !== T).concat(ne) : l?.concat(ne);
    try {
      await e.clientPolicies.updatePolicy({
        policies: Pe()
      }), r(
        t(T ? "updateClientPolicySuccess" : "createClientPolicySuccess"),
        ue.success
      ), I(Xi({ realm: n, policyName: ne.name })), x(!0);
    } catch ($e) {
      i("createClientPolicyError", $e);
    }
  }, [L, K] = ze({
    titleKey: t("deleteClientPolicyConfirmTitle"),
    messageKey: t("deleteClientPolicyConfirm", {
      policyName: T
    }),
    continueButtonLabel: t("delete"),
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      const ne = l?.filter(
        (Oe) => Oe.name !== T
      );
      try {
        await e.clientPolicies.updatePolicy({
          policies: ne
        }), r(t("deleteClientPolicySuccess"), ue.success), I(
          Vr({
            realm: n,
            tab: "policies"
          })
        );
      } catch (Oe) {
        i(t("deleteClientPolicyError"), Oe);
      }
    }
  }), [B, j] = ze({
    titleKey: t("deleteClientPolicyConditionConfirmTitle"),
    messageKey: t("deleteClientPolicyConditionConfirm", {
      condition: w?.name
    }),
    continueButtonLabel: t("delete"),
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      if (w?.name) {
        b?.conditions?.splice(w.idx, 1);
        try {
          await e.clientPolicies.updatePolicy({
            policies: l
          }), r(t("deleteConditionSuccess"), ue.success), I(
            Xi({ realm: n, policyName: D.name })
          );
        } catch (ne) {
          i(t("deleteConditionError"), ne);
        }
      } else {
        const ne = l?.filter(
          (Oe) => Oe.name !== T
        );
        try {
          await e.clientPolicies.updatePolicy({
            policies: ne
          }), r(t("deleteClientSuccess"), ue.success), I(
            Vr({
              realm: n,
              tab: "policies"
            })
          );
        } catch (Oe) {
          i(t("deleteClientError"), Oe);
        }
      }
    }
  }), [W, Q] = ze({
    titleKey: t("deleteClientPolicyProfileConfirmTitle"),
    messageKey: t("deleteClientPolicyProfileConfirm", {
      profileName: O?.name,
      policyName: T
    }),
    continueButtonLabel: t("delete"),
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      if (O?.name) {
        b?.profiles?.splice(O.idx, 1);
        try {
          await e.clientPolicies.updatePolicy({
            policies: l
          }), r(t("deleteClientPolicyProfileSuccess"), ue.success), k.setValue("profiles", b?.profiles || []), I(Xi({ realm: n, policyName: D.name }));
        } catch (ne) {
          i(t("deleteClientPolicyProfileError"), ne);
        }
      } else {
        const ne = l?.filter(
          (Oe) => Oe.name !== T
        );
        try {
          await e.clientPolicies.updatePolicy({
            policies: ne
          }), r(t("deleteClientSuccess"), ue.success), I(
            Vr({
              realm: n,
              tab: "policies"
            })
          );
        } catch (Oe) {
          i(t("deleteClientError"), Oe);
        }
      }
    }
  }), te = () => {
    b?.name !== void 0 && k.setValue("name", b.name), b?.description !== void 0 && k.setValue("description", b.description);
  }, ie = () => {
    _(!S);
  }, ce = async (ne) => {
    const Oe = {
      ...b,
      profiles: V.concat(ne),
      conditions: b?.conditions
    }, Pe = l?.findIndex(
      (fe) => Oe.name === fe.name
    );
    if (Pe === void 0 || Pe === -1)
      return;
    const $e = [
      ...(l || []).slice(0, Pe),
      Oe,
      ...(l || []).slice(Pe + 1)
    ];
    try {
      await e.clientPolicies.updatePolicy({
        policies: $e
      }), c($e);
      const fe = [...d || [], ...$e];
      m(fe), v(Oe), k.setValue("profiles", Oe.profiles), I(Xi({ realm: n, policyName: D.name })), r(t("addClientProfileSuccess"), ue.success);
    } catch (fe) {
      i("addClientProfileError", fe);
    }
  }, [Z, me] = ze({
    titleKey: "disablePolicyConfirmTitle",
    messageKey: "disablePolicyConfirm",
    continueButtonLabel: "disable",
    onConfirm: () => {
      k.setValue("enabled", !k.getValues().enabled), q();
    }
  });
  return l ? /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(j, {}),
    /* @__PURE__ */ a(Q, {}),
    /* @__PURE__ */ a(
      $Z,
      {
        onConfirm: (ne) => {
          ce(ne.map((Oe) => Oe.name));
        },
        allProfiles: V,
        open: S,
        toggleDialog: ie
      }
    ),
    /* @__PURE__ */ a(
      ge,
      {
        name: "enabled",
        defaultValue: !0,
        control: k.control,
        render: ({ field: ne }) => /* @__PURE__ */ C(ee, { children: [
          /* @__PURE__ */ a(me, {}),
          /* @__PURE__ */ a(K, {}),
          /* @__PURE__ */ a(
            wt,
            {
              titleKey: y || T ? T : "createPolicy",
              badges: [
                {
                  id: "global-client-policy-badge",
                  text: s ? /* @__PURE__ */ a(pn, { color: "blue", children: t("global") }) : ""
                }
              ],
              divider: !0,
              dropdownItems: (y || T) && !s ? [
                /* @__PURE__ */ a(
                  Ke,
                  {
                    value: "delete",
                    onClick: () => {
                      L();
                    },
                    "data-testid": "deleteClientPolicyDropdown",
                    children: t("deleteClientPolicy")
                  },
                  "delete"
                )
              ] : void 0,
              isReadOnly: s,
              isEnabled: ne.value,
              onToggle: (Oe) => {
                Oe ? (ne.onChange(Oe), q()) : Z();
              }
            }
          )
        ] })
      }
    ),
    /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ a(
      Fe,
      {
        onSubmit: P(q),
        isHorizontal: !0,
        role: "view-realm",
        className: "pf-v5-u-mt-lg",
        children: /* @__PURE__ */ C(Ve, { ...k, children: [
          /* @__PURE__ */ a(
            ve,
            {
              name: "name",
              label: t("name"),
              rules: {
                required: { value: !0, message: t("required") },
                validate: (ne) => l.some((Oe) => Oe.name === ne) ? t("createClientProfileNameHelperText").toString() : !0
              }
            }
          ),
          /* @__PURE__ */ a(se, { label: t("description"), fieldId: "kc-description", children: /* @__PURE__ */ a(
            Tg,
            {
              "aria-label": t("description"),
              id: "kc-client-policy-description",
              "data-testid": "client-policy-description",
              ...k.register("description")
            }
          ) }),
          /* @__PURE__ */ C(st, { children: [
            /* @__PURE__ */ a(
              z,
              {
                variant: "primary",
                type: "submit",
                "data-testid": "saveCreatePolicy",
                isDisabled: !k.formState.isValid || s,
                children: t("save")
              }
            ),
            /* @__PURE__ */ a(
              z,
              {
                id: "cancelCreatePolicy",
                variant: "link",
                onClick: () => (y || T) && !s ? te() : I(
                  Vr({
                    realm: n,
                    tab: "policies"
                  })
                ),
                "data-testid": "cancelCreatePolicy",
                children: t(y && !s ? "reload" : "cancel")
              }
            )
          ] }),
          (y || k.formState.isSubmitted) && /* @__PURE__ */ C(ee, { children: [
            /* @__PURE__ */ C(ra, { children: [
              /* @__PURE__ */ a(Nt, { children: /* @__PURE__ */ C(tt, { className: "kc-conditions", component: Wt.h1, children: [
                t("conditions"),
                /* @__PURE__ */ a(
                  le,
                  {
                    helpText: t("conditionsHelp"),
                    fieldLabelId: "conditions"
                  }
                )
              ] }) }),
              !s && /* @__PURE__ */ a(Nt, { align: { default: "alignRight" }, children: /* @__PURE__ */ a(
                z,
                {
                  id: "addCondition",
                  component: (ne) => /* @__PURE__ */ a(
                    Ae,
                    {
                      ...ne,
                      to: qX({
                        realm: n,
                        policyName: T
                      })
                    }
                  ),
                  variant: "link",
                  className: "kc-addCondition",
                  "data-testid": "addCondition",
                  icon: /* @__PURE__ */ a(Ea, {}),
                  children: t("addCondition")
                }
              ) })
            ] }),
            M.length > 0 ? /* @__PURE__ */ a(ar, { "aria-label": t("conditions"), isCompact: !0, children: M.map((ne, Oe) => /* @__PURE__ */ a(
              Ta,
              {
                "aria-labelledby": "conditions-list-item",
                id: ne.condition,
                "data-testid": "conditions-list-item",
                children: /* @__PURE__ */ a(Ba, { "data-testid": "conditions-list-row", children: /* @__PURE__ */ a(
                  ja,
                  {
                    dataListCells: [
                      /* @__PURE__ */ C(
                        aa,
                        {
                          "data-testid": "condition-type",
                          children: [
                            Object.keys(ne.configuration).length !== 0 ? /* @__PURE__ */ a(
                              Ae,
                              {
                                "data-testid": `${ne.condition}-condition-link`,
                                to: WX({
                                  realm: n,
                                  conditionName: ne.condition,
                                  policyName: T
                                }),
                                className: "kc-condition-link",
                                children: ne.condition
                              },
                              ne.condition
                            ) : ne.condition,
                            G?.map(
                              (Pe) => Pe.id === ne.condition && /* @__PURE__ */ C(ee, { children: [
                                /* @__PURE__ */ a(
                                  le,
                                  {
                                    helpText: Pe.helpText,
                                    fieldLabelId: ne.condition
                                  }
                                ),
                                !s && /* @__PURE__ */ a(
                                  z,
                                  {
                                    variant: "link",
                                    "aria-label": "remove-condition",
                                    isInline: !0,
                                    icon: /* @__PURE__ */ a(
                                      mu,
                                      {
                                        className: "kc-conditionType-trash-icon",
                                        "data-testid": `delete-${ne.condition}-condition`,
                                        onClick: () => {
                                          B(), R({
                                            idx: Oe,
                                            name: Pe.id
                                          });
                                        }
                                      }
                                    )
                                  }
                                )
                              ] })
                            )
                          ]
                        },
                        `name-${Oe}`
                      )
                    ]
                  }
                ) })
              },
              `list-item-${Oe}`
            )) }) : /* @__PURE__ */ C(ee, { children: [
              /* @__PURE__ */ a(_t, {}),
              /* @__PURE__ */ a(
                tt,
                {
                  className: "kc-emptyConditions",
                  component: Wt.h2,
                  children: t("emptyConditions")
                }
              )
            ] })
          ] }),
          (y || k.formState.isSubmitted) && /* @__PURE__ */ C(ee, { children: [
            /* @__PURE__ */ C(ra, { children: [
              /* @__PURE__ */ a(Nt, { children: /* @__PURE__ */ C(
                tt,
                {
                  className: "kc-client-profiles",
                  component: Wt.h1,
                  children: [
                    t("clientProfiles"),
                    /* @__PURE__ */ a(
                      le,
                      {
                        helpText: t("clientProfilesHelp"),
                        fieldLabelId: "clientProfiles"
                      }
                    )
                  ]
                }
              ) }),
              !s && /* @__PURE__ */ a(Nt, { align: { default: "alignRight" }, children: /* @__PURE__ */ a(
                z,
                {
                  id: "addClientProfile",
                  variant: "link",
                  className: "kc-addClientProfile",
                  "data-testid": "addClientProfile",
                  icon: /* @__PURE__ */ a(Ea, {}),
                  onClick: ie,
                  children: t("addClientProfile")
                }
              ) })
            ] }),
            V.length > 0 ? /* @__PURE__ */ a(ar, { "aria-label": t("profiles"), isCompact: !0, children: V.map((ne, Oe) => /* @__PURE__ */ a(
              Ta,
              {
                "aria-labelledby": `${ne}-profile-list-item`,
                id: `${ne}-profile-list-item`,
                "data-testid": "profile-list-item",
                children: /* @__PURE__ */ a(Ba, { "data-testid": "profile-list-row", children: /* @__PURE__ */ a(
                  ja,
                  {
                    dataListCells: [
                      /* @__PURE__ */ C(
                        aa,
                        {
                          "data-testid": "profile-name",
                          children: [
                            ne && /* @__PURE__ */ a(
                              Ae,
                              {
                                "data-testid": "profile-name-link",
                                to: $u({
                                  realm: n,
                                  profileName: ne
                                }),
                                className: "kc-profile-link",
                                children: ne
                              },
                              ne
                            ),
                            V.filter((Pe) => Pe === ne).map((Pe) => /* @__PURE__ */ C(ee, { children: [
                              /* @__PURE__ */ a(
                                le,
                                {
                                  helpText: f.find(
                                    ($e) => Pe === $e.name
                                  )?.description,
                                  fieldLabelId: ne
                                }
                              ),
                              !s && /* @__PURE__ */ a(
                                z,
                                {
                                  variant: "link",
                                  "aria-label": "remove-client-profile",
                                  isInline: !0,
                                  icon: /* @__PURE__ */ a(
                                    mu,
                                    {
                                      className: "kc-conditionType-trash-icon",
                                      "data-testid": "deleteClientProfileDropdown",
                                      onClick: () => {
                                        W(), E({
                                          idx: Oe,
                                          name: Pe
                                        });
                                      }
                                    }
                                  )
                                }
                              )
                            ] }))
                          ]
                        },
                        "name"
                      )
                    ]
                  }
                ) })
              },
              ne
            )) }) : /* @__PURE__ */ C(ee, { children: [
              /* @__PURE__ */ a(_t, {}),
              /* @__PURE__ */ a(
                tt,
                {
                  className: "kc-emptyClientProfiles",
                  component: Wt.h2,
                  children: t("emptyProfiles")
                }
              )
            ] })
          ] })
        ] })
      }
    ) })
  ] }) : /* @__PURE__ */ a(gt, {});
}
const vE = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: WZ
}, Symbol.toStringTag, { value: "Module" }));
function XZ() {
  const { adminClient: e } = pe(), { t } = H(), { addAlert: n, addError: r } = Se(), i = Je(), { realm: s } = be(), [o, l] = N(!1), [c, d] = N(!1), [u, p] = N([]), [m, f] = N([]), [g, b] = N(), [v, y] = N(""), [x, w] = N([]), { policyName: R, conditionName: S } = Qn(), _ = Tt(), O = Ue(), E = _.componentTypes?.["org.keycloak.services.clientpolicy.condition.ClientPolicyConditionProvider"], T = (k) => {
    O.reset({ config: k.configuration || {} });
  };
  Re(
    () => e.clientPolicies.listPolicies({
      includeGlobalPolicies: !0
    }),
    (k) => {
      if (p(k.policies ?? []), S) {
        let P = k.policies?.find(
          (A) => A.name === R
        );
        P === void 0 && (P = k.globalPolicies?.find(
          (A) => A.name === R
        ), d(P !== void 0));
        const D = P?.conditions?.find(
          (A) => A.condition === S
        ), F = E?.find(
          (A) => A.id === S
        );
        b(D), w(F?.properties), T(D);
      }
    },
    []
  );
  const I = async (k) => {
    const P = k.config, D = () => x.reduce((A, M) => (A[M.name] = P[M.name], A), {}), F = u.map((A) => {
      if (A.name !== R)
        return A;
      let M = A.conditions ?? [];
      if (S) {
        const V = {
          condition: g?.condition,
          configuration: D()
        }, U = M.findIndex(
          (q) => S === q.condition
        );
        if (U === -1)
          return;
        const G = [
          ...M.slice(0, U),
          V,
          ...M.slice(U + 1)
        ];
        return {
          ...A,
          conditions: G
        };
      }
      return M = M.concat({
        condition: m[0].condition,
        configuration: D()
      }), {
        ...A,
        conditions: M
      };
    });
    try {
      await e.clientPolicies.updatePolicy({
        policies: F
      }), p(F), i(Xi({ realm: s, policyName: R })), n(
        t(S ? "updateClientConditionSuccess" : "createClientConditionSuccess"),
        ue.success
      );
    } catch (A) {
      r("createClientConditionError", A);
    }
  };
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(
      wt,
      {
        titleKey: t(S ? c ? "viewCondition" : "editCondition" : "addCondition"),
        divider: !0
      }
    ),
    /* @__PURE__ */ C(Te, { variant: "light", children: [
      /* @__PURE__ */ C(
        Fe,
        {
          isHorizontal: !0,
          role: "manage-realm",
          isReadOnly: c,
          className: "pf-v5-u-mt-lg",
          onSubmit: O.handleSubmit(I),
          children: [
            /* @__PURE__ */ a(
              se,
              {
                label: t("conditionType"),
                fieldId: "conditionType",
                labelIcon: /* @__PURE__ */ a(
                  le,
                  {
                    helpText: v ? `${Af(v.replace(/-/g, " "))}Help` : "conditionsHelp",
                    fieldLabelId: "conditionType"
                  }
                ),
                children: /* @__PURE__ */ a(
                  ge,
                  {
                    name: "conditions",
                    defaultValue: "any-client",
                    control: O.control,
                    render: ({ field: k }) => /* @__PURE__ */ a(
                      ft,
                      {
                        placeholderText: t("selectACondition"),
                        className: "kc-conditionType-select",
                        "data-testid": "conditionType-select",
                        toggleId: "provider",
                        isDisabled: !!S,
                        onToggle: (P) => l(P),
                        onSelect: (P) => {
                          k.onChange(P), w(
                            P.properties
                          ), y(P.id), f([
                            {
                              condition: P.id
                            }
                          ]), l(!1);
                        },
                        selections: S || v,
                        variant: pt.single,
                        "aria-label": t("conditionType"),
                        isOpen: o,
                        children: E?.map((P) => /* @__PURE__ */ a(
                          _e,
                          {
                            selected: P.id === k.value,
                            description: t(
                              Af(P.id.replace(/-/g, " "))
                            ),
                            value: P,
                            children: P.id
                          },
                          P.id
                        ))
                      }
                    )
                  }
                )
              }
            ),
            /* @__PURE__ */ a(Ve, { ...O, children: /* @__PURE__ */ a(ur, { properties: x }) }),
            !c && /* @__PURE__ */ C(st, { children: [
              /* @__PURE__ */ a(
                z,
                {
                  variant: "primary",
                  type: "submit",
                  "data-testid": "addCondition-saveBtn",
                  isDisabled: v === "" && !S && c,
                  children: t(S ? "save" : "add")
                }
              ),
              /* @__PURE__ */ a(
                z,
                {
                  variant: "link",
                  "data-testid": "addCondition-cancelBtn",
                  onClick: () => i(
                    Xi({ realm: s, policyName: R })
                  ),
                  children: t("cancel")
                }
              )
            ] })
          ]
        }
      ),
      c && /* @__PURE__ */ a("div", { className: "kc-backToProfile", children: /* @__PURE__ */ a(
        z,
        {
          component: (k) => /* @__PURE__ */ a(
            Ae,
            {
              ...k,
              to: Xi({ realm: s, policyName: R })
            }
          ),
          variant: "primary",
          children: t("back")
        }
      ) })
    ] })
  ] });
}
const yE = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: XZ
}, Symbol.toStringTag, { value: "Module" })), YZ = ({
  isOpen: e,
  onClose: t
}) => {
  const { adminClient: n } = pe(), { t: r } = H(), { realm: i } = be(), { addAlert: s, addError: o } = Se(), [l, c] = N(!1), [d, u] = N(!1), [p, m] = N(!1), f = l || d;
  async function g() {
    m(!0);
    try {
      const b = await n.realms.export({
        realm: i,
        exportClients: d,
        exportGroupsAndRoles: l
      });
      fs.saveAs(
        new Blob([Fa(b)], {
          type: "application/json"
        }),
        "realm-export.json"
      ), s(r("exportSuccess"), ue.success), t();
    } catch (b) {
      o("exportFail", b);
    }
    m(!1);
  }
  return /* @__PURE__ */ C(
    ht,
    {
      variant: Rt.small,
      title: r("partialExport"),
      isOpen: e,
      onClose: t,
      actions: [
        /* @__PURE__ */ a(
          z,
          {
            "data-testid": "export-button",
            isDisabled: p,
            onClick: g,
            children: r("export")
          },
          "export"
        ),
        /* @__PURE__ */ a(
          z,
          {
            "data-testid": "cancel-button",
            variant: xe.link,
            onClick: t,
            children: r("cancel")
          },
          "cancel"
        )
      ],
      children: [
        /* @__PURE__ */ a(Pt, { children: /* @__PURE__ */ a(tt, { children: r("partialExportHeaderText") }) }),
        /* @__PURE__ */ C(
          xt,
          {
            isHorizontal: !0,
            className: "keycloak__realm-settings__partial-import_form",
            children: [
              /* @__PURE__ */ a(
                se,
                {
                  label: r("includeGroupsAndRoles"),
                  fieldId: "include-groups-and-roles-check",
                  hasNoPaddingTop: !0,
                  children: /* @__PURE__ */ a(
                    Ye,
                    {
                      id: "include-groups-and-roles-check",
                      "data-testid": "include-groups-and-roles-check",
                      isChecked: l,
                      onChange: (b, v) => c(v),
                      label: r("on"),
                      labelOff: r("off"),
                      "aria-label": r("includeGroupsAndRoles")
                    }
                  )
                }
              ),
              /* @__PURE__ */ a(
                se,
                {
                  label: r("includeClients"),
                  fieldId: "include-clients-check",
                  hasNoPaddingTop: !0,
                  children: /* @__PURE__ */ a(
                    Ye,
                    {
                      id: "include-clients-check",
                      "data-testid": "include-clients-check",
                      onChange: (b, v) => u(v),
                      isChecked: d,
                      label: r("on"),
                      labelOff: r("off"),
                      "aria-label": r("includeClients")
                    }
                  )
                }
              )
            ]
          }
        ),
        f && /* @__PURE__ */ a(
          _n,
          {
            "data-testid": "warning-message",
            variant: "warning",
            component: "p",
            title: r("exportWarningTitle"),
            isInline: !0,
            children: r("exportWarningDescription")
          }
        )
      ]
    }
  );
}, K0 = {
  users: !1,
  clients: !1,
  groups: !1,
  identityProviders: !1,
  realmRoles: !1,
  clientRoles: !1
}, JZ = (e) => {
  const { adminClient: t } = pe(), { t: n } = H(), { realm: r } = be(), [i, s] = N(), o = !!i, [l, c] = N(!1), [d, u] = N(!1), [p, m] = N(!1), [f, g] = N("FAIL"), [b, v] = N({}), [y, x] = N(), { addError: w } = Se(), [R, S] = N(K0), _ = Object.values(R).some(
    (Z) => Z
  ), O = () => {
    S(K0);
  }, E = () => {
    s(void 0), v({}), g("FAIL"), O();
  };
  He(() => {
    m(!1), x(void 0), E();
  }, [e.open]);
  const T = (Z) => {
    E(), s(Z), Array.isArray(Z) ? Z.length > 0 && v(Z[0]) : v(Z);
  }, I = (Z) => {
    v(Z), c(!1), O();
  }, k = (Z, me) => {
    const ne = me.currentTarget.name;
    S({
      ...R,
      [ne]: Z
    });
  }, P = (Z) => Z.map((me) => /* @__PURE__ */ a(
    _e,
    {
      value: me,
      "data-testid": me.id + "-select-option",
      children: me.realm || me.id
    },
    me.id
  )), D = (Z) => {
    g(Z), u(!1);
  }, F = () => [
    /* @__PURE__ */ a(_e, { value: "FAIL", children: n("FAIL") }, "fail"),
    /* @__PURE__ */ a(_e, { value: "SKIP", children: n("SKIP") }, "skip"),
    /* @__PURE__ */ a(_e, { value: "OVERWRITE", children: n("OVERWRITE") }, "overwrite")
  ], A = () => M("users") || M("groups") || M("clients") || M("identityProviders") || V() || U(), M = (Z) => {
    const me = b[Z];
    return me !== void 0 && me.length > 0;
  }, V = () => {
    const Z = b.roles?.realm;
    return Z !== void 0 && Z.length > 0;
  }, U = () => {
    const Z = b.roles?.client;
    return Z !== void 0 && Object.keys(Z).length > 0;
  }, G = (Z) => o ? Z === "realmRoles" ? b.roles?.realm?.length ?? 0 : Z === "clientRoles" ? U() ? q(b.roles.client) : 0 : b[Z]?.length ?? 0 : 0, q = (Z) => Object.values(Z).reduce((me, ne) => me + ne.length, 0), L = (Z, me) => /* @__PURE__ */ a(Ta, { "aria-labelledby": `${Z}-list-item`, children: /* @__PURE__ */ a(Ba, { children: /* @__PURE__ */ a(
    ja,
    {
      dataListCells: [
        /* @__PURE__ */ a(aa, { children: /* @__PURE__ */ a(
          rn,
          {
            id: `${Z}-checkbox`,
            label: `${G(Z)} ${me}`,
            "aria-labelledby": `${Z}-checkbox`,
            name: Z,
            isChecked: R[Z],
            onChange: (ne, Oe) => k(Oe, ne),
            "data-testid": Z + "-checkbox"
          }
        ) }, Z)
      ]
    }
  ) }) }), K = () => {
    const Z = {
      ifResourceExists: f,
      id: b.id,
      realm: b.realm
    };
    return R.users && (Z.users = b.users), R.groups && (Z.groups = b.groups), R.identityProviders && (Z.identityProviders = b.identityProviders), R.clients && (Z.clients = b.clients), (R.realmRoles || R.clientRoles) && (Z.roles = b.roles, R.realmRoles || delete Z.roles?.realm, R.clientRoles || delete Z.roles?.client), Z;
  };
  async function B() {
    if (!p) {
      m(!0);
      try {
        const Z = await t.realms.partialImport({
          realm: r,
          rep: K()
        });
        x(Z);
      } catch (Z) {
        w("importFail", Z);
      }
      m(!1);
    }
  }
  const j = () => /* @__PURE__ */ a(
    ht,
    {
      variant: Rt.medium,
      title: n("partialImport"),
      isOpen: e.open,
      onClose: e.toggleDialog,
      actions: [
        /* @__PURE__ */ a(
          z,
          {
            id: "modal-import",
            "data-testid": "import-button",
            isDisabled: !_,
            onClick: () => {
              B();
            },
            children: n("import")
          },
          "import"
        ),
        /* @__PURE__ */ a(
          z,
          {
            id: "modal-cancel",
            "data-testid": "cancel-button",
            variant: xe.link,
            onClick: () => {
              e.toggleDialog();
            },
            children: n("cancel")
          },
          "cancel"
        )
      ],
      children: /* @__PURE__ */ C(rl, { hasGutter: !0, children: [
        /* @__PURE__ */ a(va, { children: /* @__PURE__ */ a(Pt, { children: /* @__PURE__ */ a(tt, { children: n("partialImportHeaderText") }) }) }),
        /* @__PURE__ */ a(va, { children: /* @__PURE__ */ a(
          Ip,
          {
            id: "partial-import-file",
            allowEditingUploadedText: !0,
            onChange: T
          }
        ) }),
        o && A() && /* @__PURE__ */ C(ee, { children: [
          /* @__PURE__ */ a(va, { children: /* @__PURE__ */ a(_t, {}) }),
          Array.isArray(i) && i.length > 1 && /* @__PURE__ */ C(va, { children: [
            /* @__PURE__ */ C(tt, { children: [
              n("selectRealm"),
              ":"
            ] }),
            /* @__PURE__ */ a(
              ft,
              {
                toggleId: "realm-selector",
                isOpen: l,
                typeAheadAriaLabel: n("realmSelector"),
                "aria-label": n("realmSelector"),
                onToggle: () => c(!l),
                selections: b.id,
                onSelect: (Z) => I(Z),
                placeholderText: b.realm || b.id,
                children: P(i)
              }
            )
          ] }),
          /* @__PURE__ */ C(va, { children: [
            /* @__PURE__ */ C(tt, { children: [
              n("chooseResources"),
              ":"
            ] }),
            /* @__PURE__ */ C(ar, { "aria-label": n("resourcesToImport"), isCompact: !0, children: [
              M("users") && L("users", n("users")),
              M("groups") && L("groups", n("groups")),
              M("clients") && L("clients", n("clients")),
              M("identityProviders") && L(
                "identityProviders",
                n("identityProviders")
              ),
              V() && L("realmRoles", n("realmRoles")),
              U() && L("clientRoles", n("clientRoles"))
            ] })
          ] }),
          /* @__PURE__ */ C(va, { children: [
            /* @__PURE__ */ C(tt, { children: [
              n("selectIfResourceExists"),
              ":"
            ] }),
            /* @__PURE__ */ a(
              ft,
              {
                isOpen: d,
                direction: "up",
                onToggle: () => {
                  u(!d);
                },
                selections: f,
                onSelect: D,
                placeholderText: n(f),
                children: F()
              }
            )
          ] })
        ] })
      ] })
    }
  ), W = () => `${n("importAdded", {
    count: y?.added
  })}  ${n("importSkipped", {
    count: y?.skipped
  })} ${n("importOverwritten", {
    count: y?.overwritten
  })}`, Q = async (Z = 0, me = 15) => {
    if (!y)
      return [];
    const ne = Math.min(Z + me, y.results.length);
    return y.results.slice(Z, ne);
  }, te = (Z) => {
    switch (Z.action) {
      case "ADDED":
        return /* @__PURE__ */ a(pn, { color: "green", children: n("added") }, Z.id);
      case "SKIPPED":
        return /* @__PURE__ */ a(pn, { color: "orange", children: n("skipped") }, Z.id);
      case "OVERWRITTEN":
        return /* @__PURE__ */ a(pn, { color: "purple", children: n("overwritten") }, Z.id);
      default:
        return "";
    }
  }, ie = (Z) => {
    const me = /* @__PURE__ */ new Map([
      ["CLIENT", n("clients")],
      ["REALM_ROLE", n("realmRoles")],
      ["USER", n("users")],
      ["CLIENT_ROLE", n("clientRoles")],
      ["IDP", n("identityProviders")],
      ["GROUP", n("groups")]
    ]);
    return /* @__PURE__ */ a("span", { children: me.get(Z.resourceType) });
  }, ce = () => /* @__PURE__ */ C(
    ht,
    {
      variant: Rt.medium,
      title: n("partialImport"),
      isOpen: e.open,
      onClose: e.toggleDialog,
      actions: [
        /* @__PURE__ */ a(
          z,
          {
            id: "modal-close",
            "data-testid": "close-button",
            variant: xe.primary,
            onClick: () => {
              e.toggleDialog();
            },
            children: n("close")
          },
          "close"
        )
      ],
      children: [
        /* @__PURE__ */ a(
          _n,
          {
            variant: "success",
            component: "p",
            isInline: !0,
            title: W()
          }
        ),
        /* @__PURE__ */ a(
          St,
          {
            loader: Q,
            isPaginated: !0,
            ariaLabelKey: "partialImport",
            columns: [
              {
                name: "action",
                displayKey: "action",
                cellRenderer: te
              },
              {
                name: "resourceType",
                displayKey: "type",
                cellRenderer: ie
              },
              {
                name: "resourceName",
                displayKey: "name"
              },
              {
                name: "id",
                displayKey: "id"
              }
            ]
          }
        )
      ]
    }
  );
  return y ? ce() : j();
}, ZZ = () => {
  const { adminClient: e } = pe(), { t } = H(), { addAlert: n, addError: r } = Se(), { realm: i } = be(), s = Je(), [o, l] = N(!1), [c, d] = N(), [u, p] = N(), [m, f] = N(0), [g, b] = N(), [v, y] = N(), x = () => f(m + 1), w = Ue({ mode: "onChange" });
  Re(
    () => e.clientPolicies.listPolicies({
      includeGlobalPolicies: !0
    }),
    (I) => {
      const k = I.globalPolicies?.map(
        (F) => ({
          ...F,
          global: !0
        })
      ), P = I.policies?.map((F) => ({
        ...F,
        global: !1
      })), D = k?.concat(P ?? []);
      d(D), y(D || []), b(Fa(D));
    },
    [m]
  );
  const R = async () => c ?? [], S = async () => {
    const I = w.getValues(), k = c?.filter((P) => !P.global).map((P) => {
      const D = I[P.name], F = {
        ...P,
        enabled: D
      };
      return delete F.global, F;
    });
    try {
      await e.clientPolicies.updatePolicy({
        policies: k
      }), s(Vr({ realm: i, tab: "policies" })), n(t("updateClientPolicySuccess"), ue.success);
    } catch (P) {
      r("updateClientPolicyError", P);
    }
  }, _ = (I) => xw(I, "global"), O = async () => {
    if (g)
      try {
        const I = JSON.parse(g), k = I.filter((D) => !D.global).map((D) => _(D)), P = I.filter((D) => D.global).map((D) => _(D));
        try {
          await e.clientPolicies.updatePolicy({
            policies: k,
            globalPolicies: P
          }), n(t("updateClientPoliciesSuccess"), ue.success), x();
        } catch (D) {
          r("updateClientPoliciesError", D);
        }
      } catch (I) {
        console.warn("Invalid json, ignoring value using {}"), r("invalidJsonClientPoliciesError", I);
      }
  }, [E, T] = ze({
    titleKey: t("deleteClientPolicyConfirmTitle"),
    messageKey: t("deleteClientPolicyConfirm", {
      policyName: u?.name
    }),
    continueButtonLabel: t("delete"),
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      const I = c?.filter((k) => !k.global && k.name !== u?.name).map((k) => {
        const P = { ...k };
        return delete P.global, P;
      });
      try {
        await e.clientPolicies.updatePolicy({
          policies: I
        }), n(t("deleteClientPolicySuccess"), ue.success), x();
      } catch (k) {
        r(t("deleteClientPolicyError"), k);
      }
    }
  });
  return c ? /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(T, {}),
    /* @__PURE__ */ a(Te, { children: /* @__PURE__ */ C(ra, { className: "kc-policies-config-section", children: [
      /* @__PURE__ */ a(Nt, { children: /* @__PURE__ */ a(nr, { headingLevel: "h1", size: "md", children: t("policiesConfigType") }) }),
      /* @__PURE__ */ a(Nt, { children: /* @__PURE__ */ a(
        sn,
        {
          isChecked: !o,
          name: "policiesView",
          onChange: () => l(!1),
          label: t("policiesConfigTypes.formView"),
          id: "formView-policiesView",
          "data-testid": "formView-policiesView",
          className: "kc-form-radio-btn pf-v5-u-mr-sm pf-v5-u-ml-sm"
        }
      ) }),
      /* @__PURE__ */ a(Nt, { children: /* @__PURE__ */ a(
        sn,
        {
          isChecked: o,
          name: "policiesView",
          onChange: () => l(!0),
          label: t("policiesConfigTypes.jsonEditor"),
          id: "jsonEditor-policiesView",
          "data-testid": "jsonEditor-policiesView",
          className: "kc-editor-radio-btn"
        }
      ) })
    ] }) }),
    /* @__PURE__ */ a(_t, {}),
    o ? /* @__PURE__ */ C(ee, { children: [
      /* @__PURE__ */ a("div", { className: "pf-v5-u-mt-md pf-v5-u-ml-lg", children: /* @__PURE__ */ a(
        lr,
        {
          isLineNumbersVisible: !0,
          isLanguageLabelVisible: !0,
          isReadOnly: !1,
          code: g,
          language: Ln.json,
          height: "30rem",
          onChange: b
        }
      ) }),
      /* @__PURE__ */ C("div", { className: "pf-v5-u-mt-md", children: [
        /* @__PURE__ */ a(
          z,
          {
            variant: xe.primary,
            className: "pf-v5-u-mr-md pf-v5-u-ml-lg",
            "data-testid": "jsonEditor-policies-saveBtn",
            onClick: O,
            children: t("save")
          }
        ),
        /* @__PURE__ */ a(
          z,
          {
            variant: xe.link,
            "data-testid": "jsonEditor-reloadBtn",
            onClick: () => {
              b(Fa(v));
            },
            children: t("reload")
          }
        )
      ] })
    ] }) : /* @__PURE__ */ a(
      St,
      {
        emptyState: /* @__PURE__ */ a(
          ct,
          {
            message: t("noClientPolicies"),
            instructions: t("noClientPoliciesInstructions"),
            primaryActionText: t("createClientPolicy"),
            onPrimaryAction: () => s(y0({ realm: i }))
          }
        ),
        ariaLabelKey: "clientPolicies",
        searchPlaceholderKey: "clientPolicySearch",
        loader: R,
        toolbarItem: /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(
          z,
          {
            id: "createPolicy",
            component: (I) => /* @__PURE__ */ a(Ae, { ...I, to: y0({ realm: i }) }),
            "data-testid": "createPolicy",
            children: t("createClientPolicy")
          }
        ) }),
        isRowDisabled: (I) => !!I.global,
        actions: [
          {
            title: t("delete"),
            onRowClick: (I) => {
              E(), p(I);
            }
          }
        ],
        columns: [
          {
            name: "name",
            cellRenderer: ({ name: I }) => /* @__PURE__ */ a(Ae, { to: Xi({ realm: i, policyName: I }), children: I })
          },
          {
            name: "enabled",
            displayKey: "status",
            cellRenderer: (I) => /* @__PURE__ */ a(
              QZ,
              {
                clientPolicy: I,
                form: w,
                saveStatus: S,
                onConfirm: () => {
                  w.setValue(I.name, !1), S();
                }
              }
            )
          },
          {
            name: "description",
            cellFormatters: [ro(t)]
          }
        ]
      },
      c.length
    )
  ] }) : /* @__PURE__ */ a(gt, {});
}, QZ = ({
  clientPolicy: e,
  form: t,
  saveStatus: n,
  onConfirm: r
}) => {
  const { t: i } = H(), [s, o] = ze({
    titleKey: "disablePolicyConfirmTitle",
    messageKey: "disablePolicyConfirm",
    continueButtonLabel: "disable",
    onConfirm: r
  });
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(o, {}),
    /* @__PURE__ */ a(
      ge,
      {
        name: e.name,
        "data-testid": `${e.name}-switch`,
        defaultValue: e.enabled,
        control: t.control,
        render: ({ field: l }) => /* @__PURE__ */ a(
          Ye,
          {
            label: i("enabled"),
            labelOff: i("disabled"),
            isChecked: l.value,
            isDisabled: e.global,
            onChange: (c, d) => {
              d ? (l.onChange(d), n()) : s();
            },
            "aria-label": e.name
          }
        )
      }
    )
  ] });
};
function eQ() {
  const { adminClient: e } = pe(), { t } = H(), { realm: n } = be(), { addAlert: r, addError: i } = Se(), [s, o] = N(), [l, c] = N(), [d, u] = N(), [p, m] = N(!1), [f, g] = N(), [b, v] = N(0);
  Re(
    () => e.clientPolicies.listProfiles({
      includeGlobalProfiles: !0
    }),
    (O) => {
      c(O.globalProfiles);
      const E = O.globalProfiles?.map(
        (k) => ({
          ...k,
          global: !0
        })
      ), T = O.profiles?.map((k) => ({
        ...k,
        global: !1
      })), I = E?.concat(T ?? []);
      o(I || []), g(JSON.stringify(I, null, 2));
    },
    [b]
  );
  const y = async () => s ?? [], x = (O) => xw(O, "global"), [w, R] = ze({
    titleKey: t("deleteClientProfileConfirmTitle"),
    messageKey: t("deleteClientProfileConfirm", {
      profileName: d?.name
    }),
    continueButtonLabel: t("delete"),
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      const O = s?.filter(
        (E) => E.name !== d?.name && !E.global
      ).map(
        (E) => x(E)
      );
      try {
        await e.clientPolicies.createProfiles({
          profiles: O,
          globalProfiles: l
        }), r(t("deleteClientSuccess"), ue.success), v(b + 1);
      } catch (E) {
        i(t("deleteClientError"), E);
      }
    }
  }), S = (O) => /* @__PURE__ */ C(
    Ae,
    {
      to: $u({
        realm: n,
        profileName: O.name
      }),
      children: [
        O.name,
        " ",
        O.global && /* @__PURE__ */ a(pn, { color: "blue", children: t("global") })
      ]
    },
    O.name
  );
  if (!s)
    return /* @__PURE__ */ a(gt, {});
  const _ = async () => {
    if (f)
      try {
        const O = JSON.parse(f), E = O.filter((I) => !I.global).map((I) => x(I)), T = O.filter((I) => I.global).map((I) => x(I));
        try {
          await e.clientPolicies.createProfiles({
            profiles: E,
            globalProfiles: T
          }), r(t("updateClientProfilesSuccess"), ue.success), v(b + 1);
        } catch (I) {
          i("updateClientProfilesError", I);
        }
      } catch (O) {
        i("invalidJsonClientProfilesError", O);
      }
  };
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(R, {}),
    /* @__PURE__ */ a(Te, { children: /* @__PURE__ */ C(ra, { className: "kc-profiles-config-section", children: [
      /* @__PURE__ */ a(Nt, { children: /* @__PURE__ */ a(nr, { headingLevel: "h1", size: "md", children: t("profilesConfigType") }) }),
      /* @__PURE__ */ a(Nt, { children: /* @__PURE__ */ a(
        sn,
        {
          isChecked: !p,
          name: "profilesView",
          onChange: () => m(!1),
          label: t("profilesConfigTypes.formView"),
          id: "formView-profilesView",
          className: "kc-form-radio-btn pf-v5-u-mr-sm pf-v5-u-ml-sm",
          "data-testid": "formView-profilesView"
        }
      ) }),
      /* @__PURE__ */ a(Nt, { children: /* @__PURE__ */ a(
        sn,
        {
          isChecked: p,
          name: "profilesView",
          onChange: () => m(!0),
          label: t("profilesConfigTypes.jsonEditor"),
          id: "jsonEditor-profilesView",
          className: "kc-editor-radio-btn",
          "data-testid": "jsonEditor-profilesView"
        }
      ) })
    ] }) }),
    /* @__PURE__ */ a(_t, {}),
    p ? /* @__PURE__ */ C(se, { fieldId: "jsonEditor", children: [
      /* @__PURE__ */ a("div", { className: "pf-v5-u-mt-md pf-v5-u-ml-lg", children: /* @__PURE__ */ a(
        lr,
        {
          isLineNumbersVisible: !0,
          isLanguageLabelVisible: !0,
          isReadOnly: !1,
          code: f,
          language: Ln.json,
          height: "30rem",
          onChange: (O) => {
            g(O ?? "");
          }
        }
      ) }),
      /* @__PURE__ */ a(st, { children: /* @__PURE__ */ C("div", { className: "pf-v5-u-mt-md", children: [
        /* @__PURE__ */ a(
          z,
          {
            variant: xe.primary,
            className: "pf-v5-u-mr-md pf-v5-u-ml-lg",
            onClick: _,
            "data-testid": "jsonEditor-saveBtn",
            children: t("save")
          }
        ),
        /* @__PURE__ */ a(
          z,
          {
            variant: xe.link,
            onClick: () => {
              g(Fa(s));
            },
            "data-testid": "jsonEditor-reloadBtn",
            children: t("reload")
          }
        )
      ] }) })
    ] }) : /* @__PURE__ */ a(
      St,
      {
        ariaLabelKey: "profiles",
        searchPlaceholderKey: "clientProfileSearch",
        loader: y,
        toolbarItem: /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(
          z,
          {
            id: "createProfile",
            component: (O) => /* @__PURE__ */ a(
              Ae,
              {
                ...O,
                to: FX({ realm: n, tab: "profiles" })
              }
            ),
            "data-testid": "createProfile",
            children: t("createClientProfile")
          }
        ) }),
        isRowDisabled: (O) => O.global,
        actions: [
          {
            title: t("delete"),
            onRowClick: (O) => {
              u(O), w();
            }
          }
        ],
        columns: [
          {
            name: "name",
            displayKey: t("name"),
            cellRenderer: S
          },
          {
            name: "description",
            displayKey: t("clientProfileDescription")
          }
        ],
        emptyState: /* @__PURE__ */ a(
          ct,
          {
            message: t("emptyClientProfiles"),
            instructions: t("emptyClientProfilesInstructions")
          }
        )
      },
      s.length
    )
  ] });
}
const tQ = ({
  realm: e,
  save: t
}) => {
  const { t: n } = H(), { setValue: r, control: i, handleSubmit: s, formState: o } = Ue(), l = nt({
    control: i,
    name: "offlineSessionMaxLifespanEnabled"
  }), c = () => {
    In(e, r);
  };
  return He(c, []), /* @__PURE__ */ C(Te, { variant: "light", children: [
    /* @__PURE__ */ a(
      Xn,
      {
        title: n("SSOSessionSettings"),
        className: "kc-sso-session-template",
        children: /* @__PURE__ */ C(
          Fe,
          {
            isHorizontal: !0,
            role: "manage-realm",
            onSubmit: s(t),
            children: [
              /* @__PURE__ */ a(
                se,
                {
                  label: n("SSOSessionIdle"),
                  fieldId: "SSOSessionIdle",
                  labelIcon: /* @__PURE__ */ a(
                    le,
                    {
                      helpText: n("ssoSessionIdle"),
                      fieldLabelId: "SSOSessionIdle"
                    }
                  ),
                  children: /* @__PURE__ */ a(
                    ge,
                    {
                      name: "ssoSessionIdleTimeout",
                      defaultValue: e.ssoSessionIdleTimeout,
                      control: i,
                      render: ({ field: d }) => /* @__PURE__ */ a(
                        cn,
                        {
                          className: "kc-sso-session-idle",
                          "data-testid": "sso-session-idle-input",
                          value: d.value,
                          onChange: d.onChange,
                          units: ["minute", "hour", "day"]
                        }
                      )
                    }
                  )
                }
              ),
              /* @__PURE__ */ a(
                se,
                {
                  label: n("SSOSessionMax"),
                  fieldId: "SSOSessionMax",
                  labelIcon: /* @__PURE__ */ a(
                    le,
                    {
                      helpText: n("ssoSessionMax"),
                      fieldLabelId: "SSOSessionMax"
                    }
                  ),
                  children: /* @__PURE__ */ a(
                    ge,
                    {
                      name: "ssoSessionMaxLifespan",
                      control: i,
                      render: ({ field: d }) => /* @__PURE__ */ a(
                        cn,
                        {
                          className: "kc-sso-session-max",
                          "data-testid": "sso-session-max-input",
                          value: d.value,
                          onChange: d.onChange,
                          units: ["minute", "hour", "day"]
                        }
                      )
                    }
                  )
                }
              ),
              /* @__PURE__ */ a(
                se,
                {
                  label: n("SSOSessionIdleRememberMe"),
                  fieldId: "SSOSessionIdleRememberMe",
                  labelIcon: /* @__PURE__ */ a(
                    le,
                    {
                      helpText: n("ssoSessionIdleRememberMe"),
                      fieldLabelId: "SSOSessionIdleRememberMe"
                    }
                  ),
                  children: /* @__PURE__ */ a(
                    ge,
                    {
                      name: "ssoSessionIdleTimeoutRememberMe",
                      control: i,
                      render: ({ field: d }) => /* @__PURE__ */ a(
                        cn,
                        {
                          className: "kc-sso-session-idle-remember-me",
                          "data-testid": "sso-session-idle-remember-me-input",
                          value: d.value,
                          onChange: d.onChange,
                          units: ["minute", "hour", "day"]
                        }
                      )
                    }
                  )
                }
              ),
              /* @__PURE__ */ a(
                se,
                {
                  label: n("SSOSessionMaxRememberMe"),
                  fieldId: "SSOSessionMaxRememberMe",
                  labelIcon: /* @__PURE__ */ a(
                    le,
                    {
                      helpText: n("ssoSessionMaxRememberMe"),
                      fieldLabelId: "SSOSessionMaxRememberMe"
                    }
                  ),
                  children: /* @__PURE__ */ a(
                    ge,
                    {
                      name: "ssoSessionMaxLifespanRememberMe",
                      control: i,
                      render: ({ field: d }) => /* @__PURE__ */ a(
                        cn,
                        {
                          className: "kc-sso-session-max-remember-me",
                          "data-testid": "sso-session-max-remember-me-input",
                          value: d.value,
                          onChange: d.onChange,
                          units: ["minute", "hour", "day"]
                        }
                      )
                    }
                  )
                }
              )
            ]
          }
        )
      }
    ),
    /* @__PURE__ */ a(
      Xn,
      {
        title: n("clientSessionSettings"),
        className: "kc-client-session-template",
        children: /* @__PURE__ */ C(
          Fe,
          {
            isHorizontal: !0,
            role: "manage-realm",
            className: "pf-v5-u-mt-lg",
            onSubmit: s(t),
            children: [
              /* @__PURE__ */ a(
                se,
                {
                  label: n("clientSessionIdle"),
                  fieldId: "clientSessionIdle",
                  labelIcon: /* @__PURE__ */ a(
                    le,
                    {
                      helpText: n("clientSessionIdleHelp"),
                      fieldLabelId: "clientSessionIdle"
                    }
                  ),
                  children: /* @__PURE__ */ a(
                    ge,
                    {
                      name: "clientSessionIdleTimeout",
                      control: i,
                      render: ({ field: d }) => /* @__PURE__ */ a(
                        cn,
                        {
                          className: "kc-client-session-idle",
                          "data-testid": "client-session-idle-input",
                          value: d.value,
                          onChange: d.onChange,
                          units: ["minute", "hour", "day"]
                        }
                      )
                    }
                  )
                }
              ),
              /* @__PURE__ */ a(
                se,
                {
                  label: n("clientSessionMax"),
                  fieldId: "clientSessionMax",
                  labelIcon: /* @__PURE__ */ a(
                    le,
                    {
                      helpText: n("clientSessionMaxHelp"),
                      fieldLabelId: "clientSessionMax"
                    }
                  ),
                  children: /* @__PURE__ */ a(
                    ge,
                    {
                      name: "clientSessionMaxLifespan",
                      control: i,
                      render: ({ field: d }) => /* @__PURE__ */ a(
                        cn,
                        {
                          className: "kc-client-session-max",
                          "data-testid": "client-session-max-input",
                          value: d.value,
                          onChange: d.onChange,
                          units: ["minute", "hour", "day"]
                        }
                      )
                    }
                  )
                }
              )
            ]
          }
        )
      }
    ),
    /* @__PURE__ */ a(
      Xn,
      {
        title: n("offlineSessionSettings"),
        className: "kc-offline-session-template",
        children: /* @__PURE__ */ C(
          Fe,
          {
            isHorizontal: !0,
            role: "manage-realm",
            className: "pf-v5-u-mt-lg",
            onSubmit: s(t),
            children: [
              /* @__PURE__ */ a(
                se,
                {
                  label: n("offlineSessionIdle"),
                  fieldId: "offlineSessionIdle",
                  labelIcon: /* @__PURE__ */ a(
                    le,
                    {
                      helpText: n("offlineSessionIdleHelp"),
                      fieldLabelId: "offlineSessionIdle"
                    }
                  ),
                  children: /* @__PURE__ */ a(
                    ge,
                    {
                      name: "offlineSessionIdleTimeout",
                      control: i,
                      render: ({ field: d }) => /* @__PURE__ */ a(
                        cn,
                        {
                          className: "kc-offline-session-idle",
                          "data-testid": "offline-session-idle-input",
                          "aria-label": "offline-session-idle-input",
                          value: d.value,
                          onChange: d.onChange,
                          units: ["minute", "hour", "day"]
                        }
                      )
                    }
                  )
                }
              ),
              /* @__PURE__ */ a(
                se,
                {
                  hasNoPaddingTop: !0,
                  label: n("offlineSessionMaxLimited"),
                  fieldId: "kc-offlineSessionMaxLimited",
                  labelIcon: /* @__PURE__ */ a(
                    le,
                    {
                      helpText: n("offlineSessionMaxLimitedHelp"),
                      fieldLabelId: "offlineSessionMaxLimited"
                    }
                  ),
                  children: /* @__PURE__ */ a(
                    ge,
                    {
                      name: "offlineSessionMaxLifespanEnabled",
                      control: i,
                      defaultValue: !1,
                      render: ({ field: d }) => /* @__PURE__ */ a(
                        Ye,
                        {
                          id: "kc-offline-session-max",
                          "data-testid": "offline-session-max-switch",
                          "aria-label": n("offlineSessionMaxLimited"),
                          label: n("enabled"),
                          labelOff: n("disabled"),
                          isChecked: d.value,
                          onChange: d.onChange
                        }
                      )
                    }
                  )
                }
              ),
              l && /* @__PURE__ */ a(
                se,
                {
                  label: n("offlineSessionMax"),
                  fieldId: "offlineSessionMax",
                  id: "offline-session-max-label",
                  labelIcon: /* @__PURE__ */ a(
                    le,
                    {
                      helpText: n("offlineSessionMaxHelp"),
                      fieldLabelId: "offlineSessionMax"
                    }
                  ),
                  children: /* @__PURE__ */ a(
                    ge,
                    {
                      name: "offlineSessionMaxLifespan",
                      control: i,
                      render: ({ field: d }) => /* @__PURE__ */ a(
                        cn,
                        {
                          className: "kc-offline-session-max",
                          "data-testid": "offline-session-max-input",
                          value: d.value,
                          onChange: d.onChange,
                          units: ["minute", "hour", "day"]
                        }
                      )
                    }
                  )
                }
              )
            ]
          }
        )
      }
    ),
    /* @__PURE__ */ a(
      Xn,
      {
        className: "kc-login-settings-template",
        title: n("loginSettings"),
        children: /* @__PURE__ */ C(
          Fe,
          {
            isHorizontal: !0,
            role: "manage-realm",
            className: "pf-v5-u-mt-lg",
            onSubmit: s(t),
            children: [
              /* @__PURE__ */ a(
                se,
                {
                  label: n("loginTimeout"),
                  id: "kc-login-timeout-label",
                  fieldId: "offlineSessionIdle",
                  labelIcon: /* @__PURE__ */ a(
                    le,
                    {
                      helpText: n("loginTimeoutHelp"),
                      fieldLabelId: "loginTimeout"
                    }
                  ),
                  children: /* @__PURE__ */ a(
                    ge,
                    {
                      name: "accessCodeLifespanLogin",
                      control: i,
                      render: ({ field: d }) => /* @__PURE__ */ a(
                        cn,
                        {
                          className: "kc-login-timeout",
                          "data-testid": "login-timeout-input",
                          "aria-label": "login-timeout-input",
                          value: d.value,
                          onChange: d.onChange,
                          units: ["minute", "hour", "day"]
                        }
                      )
                    }
                  )
                }
              ),
              /* @__PURE__ */ a(
                se,
                {
                  label: n("loginActionTimeout"),
                  fieldId: "loginActionTimeout",
                  id: "login-action-timeout-label",
                  labelIcon: /* @__PURE__ */ a(
                    le,
                    {
                      helpText: n("loginActionTimeoutHelp"),
                      fieldLabelId: "loginActionTimeout"
                    }
                  ),
                  children: /* @__PURE__ */ a(
                    ge,
                    {
                      name: "accessCodeLifespanUserAction",
                      control: i,
                      render: ({ field: d }) => /* @__PURE__ */ a(
                        cn,
                        {
                          className: "kc-login-action-timeout",
                          "data-testid": "login-action-timeout-input",
                          value: d.value,
                          onChange: d.onChange,
                          units: ["minute", "hour", "day"]
                        }
                      )
                    }
                  )
                }
              ),
              /* @__PURE__ */ C(st, { children: [
                /* @__PURE__ */ a(
                  z,
                  {
                    variant: "primary",
                    type: "submit",
                    "data-testid": "sessions-tab-save",
                    isDisabled: !o.isDirty,
                    children: n("save")
                  }
                ),
                /* @__PURE__ */ a(z, { variant: "link", onClick: c, children: n("revert") })
              ] })
            ]
          }
        )
      }
    )
  ] });
}, nQ = ({
  realm: e,
  save: t
}) => {
  const { t: n } = H(), [r, i] = N(!1), [s, o] = N(!1), [l, c] = N(!1), [d, u] = N(!1), { control: p, handleSubmit: m, setValue: f } = Ue(), g = Tt().themes, b = () => {
    In(e, f);
  };
  return He(b, []), /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ C(
    Fe,
    {
      isHorizontal: !0,
      role: "manage-realm",
      className: "pf-v5-u-mt-lg",
      onSubmit: m(t),
      children: [
        /* @__PURE__ */ a(
          se,
          {
            label: n("loginTheme"),
            fieldId: "kc-login-theme",
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: n("loginThemeHelp"),
                fieldLabelId: "loginTheme"
              }
            ),
            children: /* @__PURE__ */ a(
              ge,
              {
                name: "loginTheme",
                control: p,
                defaultValue: "",
                render: ({ field: v }) => /* @__PURE__ */ a(
                  ft,
                  {
                    toggleId: "kc-login-theme",
                    onToggle: () => i(!r),
                    onSelect: (y) => {
                      v.onChange(y), i(!1);
                    },
                    selections: v.value,
                    variant: pt.single,
                    isOpen: r,
                    placeholderText: n("selectATheme"),
                    "data-testid": "select-login-theme",
                    "aria-label": n("selectLoginTheme"),
                    children: g.login.map((y, x) => /* @__PURE__ */ a(
                      _e,
                      {
                        selected: y.name === v.value,
                        value: y.name,
                        children: y.name
                      },
                      `login-theme-${x}`
                    ))
                  }
                )
              }
            )
          }
        ),
        /* @__PURE__ */ a(
          se,
          {
            label: n("accountTheme"),
            fieldId: "kc-account-theme",
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: n("accountThemeHelp"),
                fieldLabelId: "accountTheme"
              }
            ),
            children: /* @__PURE__ */ a(
              ge,
              {
                name: "accountTheme",
                control: p,
                defaultValue: "",
                render: ({ field: v }) => /* @__PURE__ */ a(
                  ft,
                  {
                    toggleId: "kc-account-theme",
                    onToggle: () => o(!s),
                    onSelect: (y) => {
                      v.onChange(y), o(!1);
                    },
                    selections: v.value,
                    variant: pt.single,
                    "aria-label": n("selectAccountTheme"),
                    isOpen: s,
                    placeholderText: n("selectATheme"),
                    "data-testid": "select-account-theme",
                    children: g.account.filter((y) => y.name !== "base").map((y, x) => /* @__PURE__ */ a(
                      _e,
                      {
                        selected: y.name === v.value,
                        value: y.name,
                        children: n(y.name)
                      },
                      `account-theme-${x}`
                    ))
                  }
                )
              }
            )
          }
        ),
        /* @__PURE__ */ a(
          se,
          {
            label: n("adminTheme"),
            fieldId: "kc-admin-ui-theme",
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: n("adminThemeHelp"),
                fieldLabelId: "adminTheme"
              }
            ),
            children: /* @__PURE__ */ a(
              ge,
              {
                name: "adminTheme",
                control: p,
                defaultValue: "",
                render: ({ field: v }) => /* @__PURE__ */ a(
                  ft,
                  {
                    toggleId: "kc-admin-ui-theme",
                    onToggle: () => c(!l),
                    onSelect: (y) => {
                      v.onChange(y), c(!1);
                    },
                    selections: v.value,
                    variant: pt.single,
                    isOpen: l,
                    placeholderText: n("selectATheme"),
                    "data-testid": "select-admin-theme",
                    "aria-label": n("selectAdminTheme"),
                    children: g.admin.filter((y) => y.name !== "base").map((y, x) => /* @__PURE__ */ a(
                      _e,
                      {
                        selected: y.name === v.value,
                        value: y.name,
                        children: n(y.name)
                      },
                      `admin-theme-${x}`
                    ))
                  }
                )
              }
            )
          }
        ),
        /* @__PURE__ */ a(
          se,
          {
            label: n("emailTheme"),
            fieldId: "kc-email-theme",
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: n("emailThemeHelp"),
                fieldLabelId: "emailTheme"
              }
            ),
            children: /* @__PURE__ */ a(
              ge,
              {
                name: "emailTheme",
                control: p,
                defaultValue: "",
                render: ({ field: v }) => /* @__PURE__ */ a(
                  ft,
                  {
                    toggleId: "kc-email-theme",
                    onToggle: () => u(!d),
                    onSelect: (y) => {
                      v.onChange(y), u(!1);
                    },
                    selections: v.value,
                    variant: pt.single,
                    isOpen: d,
                    placeholderText: n("selectATheme"),
                    "data-testid": "select-email-theme",
                    "aria-label": n("selectEmailTheme"),
                    children: g.email.map((y, x) => /* @__PURE__ */ a(
                      _e,
                      {
                        selected: y.name === v.value,
                        value: y.name,
                        children: n(y.name)
                      },
                      `email-theme-${x}`
                    ))
                  }
                )
              }
            )
          }
        ),
        /* @__PURE__ */ C(st, { children: [
          /* @__PURE__ */ a(z, { variant: "primary", type: "submit", "data-testid": "themes-tab-save", children: n("save") }),
          /* @__PURE__ */ a(z, { variant: "link", onClick: b, children: n("revert") })
        ] })
      ]
    }
  ) });
}, aQ = ({
  realm: e,
  reset: t,
  save: n
}) => {
  const { t: r } = H(), i = Tt(), s = oa(), { whoAmI: o } = _a(), [l, c] = N(!1), d = fp(
    i.providers.signature.providers
  ), u = Ue(), { setValue: p, control: m } = u, f = nt({
    control: m,
    name: "offlineSessionMaxLifespanEnabled",
    defaultValue: e.offlineSessionMaxLifespanEnabled
  }), g = nt({
    control: m,
    name: "ssoSessionIdleTimeout",
    defaultValue: 36e3
  }), b = nt({
    control: m,
    name: "revokeRefreshToken",
    defaultValue: !1
  });
  return He(() => {
    In(e, p);
  }, []), /* @__PURE__ */ C(Te, { variant: "light", children: [
    /* @__PURE__ */ a(Xn, { title: r("general"), className: "kc-sso-session-template", children: /* @__PURE__ */ C(
      Fe,
      {
        isHorizontal: !0,
        role: "manage-realm",
        onSubmit: u.handleSubmit(n),
        children: [
          /* @__PURE__ */ a(
            se,
            {
              label: r("defaultSigAlg"),
              fieldId: "kc-default-signature-algorithm",
              labelIcon: /* @__PURE__ */ a(
                le,
                {
                  helpText: r("defaultSigAlgHelp"),
                  fieldLabelId: "algorithm"
                }
              ),
              children: /* @__PURE__ */ a(
                ge,
                {
                  name: "defaultSignatureAlgorithm",
                  defaultValue: "RS256",
                  control: u.control,
                  render: ({ field: v }) => /* @__PURE__ */ a(
                    ft,
                    {
                      toggleId: "kc-default-sig-alg",
                      onToggle: () => c(!l),
                      onSelect: (y) => {
                        v.onChange(y.toString()), c(!1);
                      },
                      selections: v.value?.toString(),
                      variant: pt.single,
                      "aria-label": r("defaultSigAlg"),
                      isOpen: l,
                      "data-testid": "select-default-sig-alg",
                      children: d.map((y, x) => /* @__PURE__ */ a(
                        _e,
                        {
                          selected: y === v.value,
                          value: y,
                          children: y
                        },
                        `default-sig-alg-${x}`
                      ))
                    }
                  )
                }
              )
            }
          ),
          s(zn.DeviceFlow) && /* @__PURE__ */ C(ee, { children: [
            /* @__PURE__ */ a(
              se,
              {
                label: r("oAuthDeviceCodeLifespan"),
                fieldId: "oAuthDeviceCodeLifespan",
                labelIcon: /* @__PURE__ */ a(
                  le,
                  {
                    helpText: r("oAuthDeviceCodeLifespanHelp"),
                    fieldLabelId: "oAuthDeviceCodeLifespan"
                  }
                ),
                children: /* @__PURE__ */ a(
                  ge,
                  {
                    name: "oauth2DeviceCodeLifespan",
                    defaultValue: 0,
                    control: u.control,
                    render: ({ field: v }) => /* @__PURE__ */ a(
                      cn,
                      {
                        id: "oAuthDeviceCodeLifespan",
                        "data-testid": "oAuthDeviceCodeLifespan",
                        value: v.value || 0,
                        onChange: v.onChange,
                        units: ["minute", "hour", "day"]
                      }
                    )
                  }
                )
              }
            ),
            /* @__PURE__ */ a(
              se,
              {
                label: r("oAuthDevicePollingInterval"),
                fieldId: "oAuthDevicePollingInterval",
                labelIcon: /* @__PURE__ */ a(
                  le,
                  {
                    helpText: r("oAuthDevicePollingIntervalHelp"),
                    fieldLabelId: "oAuthDevicePollingInterval"
                  }
                ),
                children: /* @__PURE__ */ a(
                  ge,
                  {
                    name: "oauth2DevicePollingInterval",
                    defaultValue: 0,
                    control: u.control,
                    render: ({ field: v }) => /* @__PURE__ */ a(
                      is,
                      {
                        id: "oAuthDevicePollingInterval",
                        value: v.value,
                        min: 0,
                        onPlus: () => v.onChange(Number(v?.value) + 1),
                        onMinus: () => v.onChange(
                          Number(v?.value) > 0 ? Number(v?.value) - 1 : 0
                        ),
                        onChange: (y) => {
                          const x = Number(y.currentTarget.value);
                          v.onChange(isNaN(x) ? 0 : x);
                        },
                        placeholder: r("oAuthDevicePollingInterval")
                      }
                    )
                  }
                )
              }
            ),
            /* @__PURE__ */ a(
              se,
              {
                label: r("shortVerificationUri"),
                fieldId: "shortVerificationUri",
                labelIcon: /* @__PURE__ */ a(
                  le,
                  {
                    helpText: r("shortVerificationUriTooltipHelp"),
                    fieldLabelId: "shortVerificationUri"
                  }
                ),
                children: /* @__PURE__ */ a(
                  mt,
                  {
                    id: "shortVerificationUri",
                    placeholder: r("shortVerificationUri"),
                    ...u.register("attributes.shortVerificationUri")
                  }
                )
              }
            ),
            /* @__PURE__ */ a(
              se,
              {
                label: r("parRequestUriLifespan"),
                fieldId: "parRequestUriLifespan",
                labelIcon: /* @__PURE__ */ a(
                  le,
                  {
                    helpText: r("parRequestUriLifespanHelp"),
                    fieldLabelId: "parRequestUriLifespan"
                  }
                ),
                children: /* @__PURE__ */ a(
                  ge,
                  {
                    name: "attributes.parRequestUriLifespan",
                    control: u.control,
                    render: ({ field: v }) => /* @__PURE__ */ a(
                      cn,
                      {
                        id: "parRequestUriLifespan",
                        className: "par-request-uri-lifespan",
                        "data-testid": "par-request-uri-lifespan-input",
                        "aria-label": "par-request-uri-lifespan",
                        value: v.value,
                        onChange: v.onChange
                      }
                    )
                  }
                )
              }
            )
          ] })
        ]
      }
    ) }),
    /* @__PURE__ */ a(
      Xn,
      {
        title: r("refreshTokens"),
        className: "kc-client-session-template",
        children: /* @__PURE__ */ C(
          Fe,
          {
            isHorizontal: !0,
            role: "manage-realm",
            className: "pf-v5-u-mt-lg",
            onSubmit: u.handleSubmit(n),
            children: [
              /* @__PURE__ */ a(
                se,
                {
                  hasNoPaddingTop: !0,
                  label: r("revokeRefreshToken"),
                  fieldId: "kc-revoke-refresh-token",
                  labelIcon: /* @__PURE__ */ a(
                    le,
                    {
                      helpText: r("revokeRefreshTokenHelp"),
                      fieldLabelId: "revokeRefreshToken"
                    }
                  ),
                  children: /* @__PURE__ */ a(
                    ge,
                    {
                      name: "revokeRefreshToken",
                      control: u.control,
                      defaultValue: !1,
                      render: ({ field: v }) => /* @__PURE__ */ a(
                        Ye,
                        {
                          id: "kc-revoke-refresh-token",
                          "data-testid": "revoke-refresh-token-switch",
                          "aria-label": r("revokeRefreshToken"),
                          label: r("enabled"),
                          labelOff: r("disabled"),
                          isChecked: v.value,
                          onChange: v.onChange
                        }
                      )
                    }
                  )
                }
              ),
              b && /* @__PURE__ */ a(
                se,
                {
                  label: r("refreshTokenMaxReuse"),
                  labelIcon: /* @__PURE__ */ a(
                    le,
                    {
                      helpText: r("refreshTokenMaxReuseHelp"),
                      fieldLabelId: "refreshTokenMaxReuse"
                    }
                  ),
                  fieldId: "refreshTokenMaxReuse",
                  children: /* @__PURE__ */ a(
                    ge,
                    {
                      name: "refreshTokenMaxReuse",
                      defaultValue: 0,
                      control: u.control,
                      render: ({ field: v }) => /* @__PURE__ */ a(
                        is,
                        {
                          type: "text",
                          id: "refreshTokenMaxReuseMs",
                          value: v.value,
                          onPlus: () => v.onChange(v.value + 1),
                          onMinus: () => v.onChange(v.value - 1),
                          onChange: (y) => v.onChange(
                            Number(y.target.value)
                          )
                        }
                      )
                    }
                  )
                }
              )
            ]
          }
        )
      }
    ),
    /* @__PURE__ */ a(
      Xn,
      {
        title: r("accessTokens"),
        className: "kc-offline-session-template",
        children: /* @__PURE__ */ C(
          Fe,
          {
            isHorizontal: !0,
            role: "manage-realm",
            className: "pf-v5-u-mt-lg",
            onSubmit: u.handleSubmit(n),
            children: [
              /* @__PURE__ */ C(
                se,
                {
                  label: r("accessTokenLifespan"),
                  fieldId: "accessTokenLifespan",
                  labelIcon: /* @__PURE__ */ a(
                    le,
                    {
                      helpText: r("accessTokenLifespanHelp"),
                      fieldLabelId: "accessTokenLifespan"
                    }
                  ),
                  children: [
                    /* @__PURE__ */ a(
                      ge,
                      {
                        name: "accessTokenLifespan",
                        control: u.control,
                        render: ({ field: v }) => /* @__PURE__ */ a(
                          cn,
                          {
                            validated: v.value > g ? "warning" : "default",
                            className: "kc-access-token-lifespan",
                            "data-testid": "access-token-lifespan-input",
                            "aria-label": "access-token-lifespan",
                            value: v.value,
                            onChange: v.onChange,
                            units: ["minute", "hour", "day"]
                          }
                        )
                      }
                    ),
                    /* @__PURE__ */ a(Zo, { children: /* @__PURE__ */ a(Xr, { children: /* @__PURE__ */ a(Yr, { children: r("recommendedSsoTimeout", {
                      time: cz(
                        g,
                        o.getLocale()
                      )
                    }) }) }) })
                  ]
                }
              ),
              /* @__PURE__ */ a(
                se,
                {
                  label: r("accessTokenLifespanImplicitFlow"),
                  fieldId: "accessTokenLifespanImplicitFlow",
                  labelIcon: /* @__PURE__ */ a(
                    le,
                    {
                      helpText: r("accessTokenLifespanImplicitFlow"),
                      fieldLabelId: "accessTokenLifespanImplicitFlow"
                    }
                  ),
                  children: /* @__PURE__ */ a(
                    ge,
                    {
                      name: "accessTokenLifespanForImplicitFlow",
                      control: u.control,
                      render: ({ field: v }) => /* @__PURE__ */ a(
                        cn,
                        {
                          className: "kc-access-token-lifespan-implicit",
                          "data-testid": "access-token-lifespan-implicit-input",
                          value: v.value,
                          onChange: v.onChange,
                          units: ["minute", "hour", "day"]
                        }
                      )
                    }
                  )
                }
              ),
              /* @__PURE__ */ a(
                se,
                {
                  label: r("clientLoginTimeout"),
                  fieldId: "clientLoginTimeout",
                  labelIcon: /* @__PURE__ */ a(
                    le,
                    {
                      helpText: r("clientLoginTimeoutHelp"),
                      fieldLabelId: "clientLoginTimeout"
                    }
                  ),
                  children: /* @__PURE__ */ a(
                    ge,
                    {
                      name: "accessCodeLifespan",
                      control: u.control,
                      render: ({ field: v }) => /* @__PURE__ */ a(
                        cn,
                        {
                          className: "kc-client-login-timeout",
                          "data-testid": "client-login-timeout-input",
                          "aria-label": "client-login-timeout",
                          value: v.value,
                          onChange: v.onChange,
                          units: ["minute", "hour", "day"]
                        }
                      )
                    }
                  )
                }
              ),
              f && /* @__PURE__ */ a(
                se,
                {
                  label: r("offlineSessionMax"),
                  fieldId: "offlineSessionMax",
                  id: "offline-session-max-label",
                  labelIcon: /* @__PURE__ */ a(
                    le,
                    {
                      helpText: r("offlineSessionMaxHelp"),
                      fieldLabelId: "offlineSessionMax"
                    }
                  ),
                  children: /* @__PURE__ */ a(
                    ge,
                    {
                      name: "offlineSessionMaxLifespan",
                      control: u.control,
                      render: ({ field: v }) => /* @__PURE__ */ a(
                        cn,
                        {
                          className: "kc-offline-session-max",
                          "data-testid": "offline-session-max-input",
                          value: v.value,
                          onChange: v.onChange,
                          units: ["minute", "hour", "day"]
                        }
                      )
                    }
                  )
                }
              )
            ]
          }
        )
      }
    ),
    /* @__PURE__ */ a(
      Xn,
      {
        className: "kc-login-settings-template",
        title: r("actionTokens"),
        children: /* @__PURE__ */ C(
          Fe,
          {
            isHorizontal: !0,
            role: "manage-realm",
            className: "pf-v5-u-mt-lg",
            onSubmit: u.handleSubmit(n),
            children: [
              /* @__PURE__ */ a(
                se,
                {
                  label: r("userInitiatedActionLifespan"),
                  id: "kc-user-initiated-action-lifespan",
                  fieldId: "userInitiatedActionLifespan",
                  labelIcon: /* @__PURE__ */ a(
                    le,
                    {
                      helpText: r("userInitiatedActionLifespanHelp"),
                      fieldLabelId: "userInitiatedActionLifespan"
                    }
                  ),
                  children: /* @__PURE__ */ a(
                    ge,
                    {
                      name: "actionTokenGeneratedByUserLifespan",
                      control: u.control,
                      render: ({ field: v }) => /* @__PURE__ */ a(
                        cn,
                        {
                          className: "kc-user-initiated-action-lifespan",
                          "data-testid": "user-initiated-action-lifespan",
                          "aria-label": "user-initiated-action-lifespan",
                          value: v.value,
                          onChange: v.onChange,
                          units: ["minute", "hour", "day"]
                        }
                      )
                    }
                  )
                }
              ),
              /* @__PURE__ */ a(
                se,
                {
                  label: r("defaultAdminInitiated"),
                  fieldId: "defaultAdminInitiated",
                  id: "default-admin-initiated-label",
                  labelIcon: /* @__PURE__ */ a(
                    le,
                    {
                      helpText: r("defaultAdminInitiatedActionLifespanHelp"),
                      fieldLabelId: "defaultAdminInitiated"
                    }
                  ),
                  children: /* @__PURE__ */ a(
                    ge,
                    {
                      name: "actionTokenGeneratedByAdminLifespan",
                      control: u.control,
                      render: ({ field: v }) => /* @__PURE__ */ a(
                        cn,
                        {
                          className: "kc-default-admin-initiated",
                          "data-testid": "default-admin-initated-input",
                          "aria-label": "default-admin-initated-input",
                          value: v.value,
                          onChange: v.onChange,
                          units: ["minute", "hour", "day"]
                        }
                      )
                    }
                  )
                }
              ),
              /* @__PURE__ */ a(
                tt,
                {
                  className: "kc-override-action-tokens-subtitle",
                  component: Wt.h1,
                  children: r("overrideActionTokens")
                }
              ),
              /* @__PURE__ */ a(
                se,
                {
                  label: r("emailVerification"),
                  fieldId: "emailVerification",
                  id: "email-verification",
                  labelIcon: /* @__PURE__ */ a(
                    le,
                    {
                      helpText: r("emailVerificationHelp"),
                      fieldLabelId: "emailVerification"
                    }
                  ),
                  children: /* @__PURE__ */ a(
                    ge,
                    {
                      name: `attributes.${Es(
                        "actionTokenGeneratedByUserLifespan.verify-email"
                      )}`,
                      defaultValue: "",
                      control: u.control,
                      render: ({ field: v }) => /* @__PURE__ */ a(
                        cn,
                        {
                          className: "kc-email-verification",
                          "data-testid": "email-verification-input",
                          value: v.value,
                          onChange: (y) => v.onChange(y.toString()),
                          units: ["minute", "hour", "day"]
                        }
                      )
                    }
                  )
                }
              ),
              /* @__PURE__ */ a(
                se,
                {
                  label: r("idpAccountEmailVerification"),
                  fieldId: "idpAccountEmailVerification",
                  id: "idp-acct-label",
                  labelIcon: /* @__PURE__ */ a(
                    le,
                    {
                      helpText: r("idpAccountEmailVerificationHelp"),
                      fieldLabelId: "idpAccountEmailVerification"
                    }
                  ),
                  children: /* @__PURE__ */ a(
                    ge,
                    {
                      name: `attributes.${Es(
                        "actionTokenGeneratedByUserLifespan.idp-verify-account-via-email"
                      )}`,
                      defaultValue: "",
                      control: u.control,
                      render: ({ field: v }) => /* @__PURE__ */ a(
                        cn,
                        {
                          className: "kc-idp-email-verification",
                          "data-testid": "idp-email-verification-input",
                          value: v.value,
                          onChange: v.onChange,
                          units: ["minute", "hour", "day"]
                        }
                      )
                    }
                  )
                }
              ),
              /* @__PURE__ */ a(
                se,
                {
                  label: r("forgotPassword"),
                  fieldId: "forgotPassword",
                  id: "forgot-password-label",
                  labelIcon: /* @__PURE__ */ a(
                    le,
                    {
                      helpText: r("forgotPasswordHelp"),
                      fieldLabelId: "forgotPassword"
                    }
                  ),
                  children: /* @__PURE__ */ a(
                    ge,
                    {
                      name: `attributes.${Es(
                        "actionTokenGeneratedByUserLifespan.reset-credentials"
                      )}`,
                      defaultValue: "",
                      control: u.control,
                      render: ({ field: v }) => /* @__PURE__ */ a(
                        cn,
                        {
                          className: "kc-forgot-pw",
                          "data-testid": "forgot-pw-input",
                          value: v.value,
                          onChange: v.onChange,
                          units: ["minute", "hour", "day"]
                        }
                      )
                    }
                  )
                }
              ),
              /* @__PURE__ */ a(
                se,
                {
                  label: r("executeActions"),
                  fieldId: "executeActions",
                  id: "execute-actions",
                  labelIcon: /* @__PURE__ */ a(
                    le,
                    {
                      helpText: r("executeActionsHelp"),
                      fieldLabelId: "executeActions"
                    }
                  ),
                  children: /* @__PURE__ */ a(
                    ge,
                    {
                      name: `attributes.${Es(
                        "actionTokenGeneratedByUserLifespan.execute-actions"
                      )}`,
                      defaultValue: "",
                      control: u.control,
                      render: ({ field: v }) => /* @__PURE__ */ a(
                        cn,
                        {
                          className: "kc-execute-actions",
                          "data-testid": "execute-actions-input",
                          value: v.value,
                          onChange: v.onChange,
                          units: ["minute", "hour", "day"]
                        }
                      )
                    }
                  )
                }
              ),
              /* @__PURE__ */ C(st, { children: [
                /* @__PURE__ */ a(
                  z,
                  {
                    variant: "primary",
                    type: "submit",
                    "data-testid": "tokens-tab-save",
                    isDisabled: !u.formState.isDirty,
                    children: r("save")
                  }
                ),
                /* @__PURE__ */ a(z, { variant: "link", onClick: t, children: r("revert") })
              ] })
            ]
          }
        )
      }
    )
  ] });
}, rQ = () => {
  const { adminClient: e } = pe(), { t } = H(), [n, r] = N(10), { realmRepresentation: i } = be(), [s, o] = N(0), { addAlert: l, addError: c } = Se(), { realm: d } = be(), u = async (p) => {
    const m = p;
    try {
      await e.roles.createComposite(
        { roleId: i?.defaultRole.id, realm: d },
        m
      ), o(s + 1), l(t("addAssociatedRolesSuccess"), ue.success);
    } catch (f) {
      c("addAssociatedRolesError", f);
    }
  };
  return /* @__PURE__ */ C(
    Ua,
    {
      activeKey: n,
      onSelect: (p, m) => r(m),
      children: [
        /* @__PURE__ */ a(
          Ee,
          {
            id: "roles",
            eventKey: 10,
            title: /* @__PURE__ */ a(Ie, { children: t("defaultRoles") }),
            "data-testid": "default-roles-tab",
            children: /* @__PURE__ */ a(
              ao,
              {
                name: i?.defaultRole.name,
                id: i?.defaultRole.id,
                type: "roles",
                isManager: !0,
                save: (p) => u(p.map((m) => m.role))
              }
            )
          },
          s
        ),
        /* @__PURE__ */ a(
          Ee,
          {
            id: "groups",
            eventKey: 20,
            title: /* @__PURE__ */ a(Ie, { children: t("defaultGroups") }),
            "data-testid": "default-groups-tab",
            children: /* @__PURE__ */ a(bE, {})
          }
        )
      ]
    }
  );
}, iQ = ({
  save: e,
  onChange: t,
  value: n,
  realmName: r,
  refresh: i
}) => {
  const { adminClient: s } = pe(), { environment: o } = Ha(), { t: l } = H(), { addAlert: c, addError: d } = Se(), u = Je(), [p, m] = N(!1), [f, g] = N(!1), { hasAccess: b } = Mt(), v = b("manage-realm"), [y, x] = ze({
    titleKey: "disableConfirmTitle",
    messageKey: "disableConfirmRealm",
    continueButtonLabel: "disable",
    onConfirm: () => {
      t(!n), e();
    }
  }), [w, R] = ze({
    titleKey: "deleteConfirmTitle",
    messageKey: "deleteConfirmRealmSetting",
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        await s.realms.del({ realm: r }), c(l("deletedSuccessRealmSetting"), ue.success), u(Fs({ realm: o.masterRealm })), i();
      } catch (S) {
        d("deleteErrorRealmSetting", S);
      }
    }
  });
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(x, {}),
    /* @__PURE__ */ a(R, {}),
    /* @__PURE__ */ a(
      JZ,
      {
        open: p,
        toggleDialog: () => m(!p)
      }
    ),
    /* @__PURE__ */ a(
      YZ,
      {
        isOpen: f,
        onClose: () => g(!1)
      }
    ),
    /* @__PURE__ */ a(
      wt,
      {
        titleKey: r,
        subKey: "realmSettingsExplain",
        helpUrl: na.realmSettingsUrl,
        divider: !1,
        dropdownItems: [
          /* @__PURE__ */ a(
            Ke,
            {
              "data-testid": "openPartialImportModal",
              isDisabled: !v,
              onClick: () => {
                m(!0);
              },
              children: l("partialImport")
            },
            "import"
          ),
          /* @__PURE__ */ a(
            Ke,
            {
              "data-testid": "openPartialExportModal",
              isDisabled: !v,
              onClick: () => g(!0),
              children: l("partialExport")
            },
            "export"
          ),
          /* @__PURE__ */ a(_t, {}, "separator"),
          /* @__PURE__ */ a(
            Ke,
            {
              isDisabled: !v,
              onClick: w,
              children: l("delete")
            },
            "delete"
          )
        ],
        isEnabled: n,
        isReadOnly: !v,
        onToggle: (S) => {
          S ? (t(S), e()) : y();
        }
      }
    )
  ] });
}, sQ = () => {
  const { adminClient: e } = pe(), { t } = H(), { addAlert: n, addError: r } = Se(), { realm: i, realmRepresentation: s, refresh: o } = be(), l = yl(), c = Je(), d = oa(), [u, p] = N(void 0), { control: m, setValue: f, getValues: g } = Ue({
    mode: "onChange"
  }), [b, v] = N(0), y = () => {
    v(b + 1);
  }, x = (L = s) => {
    In(L, f);
  };
  He(() => {
    x(), (async () => {
      try {
        await Promise.all(
          l.map(async (K) => {
            try {
              const B = await e.realms.getRealmLocalizationTexts({
                realm: i,
                selectedLocale: K
              });
              B && p([B]);
            } catch {
              return [];
            }
          })
        );
      } catch {
        return [];
      }
    })();
  }, [f, s]);
  const w = async (L) => {
    L = Zn(L), L.attributes?.["acr.loa.map"] && typeof L.attributes["acr.loa.map"] != "string" && (L.attributes["acr.loa.map"] = JSON.stringify(
      Object.fromEntries(
        L.attributes["acr.loa.map"].filter(({ key: B }) => B !== "").map(({ key: B, value: j }) => [B, j])
      )
    ));
    try {
      const B = {
        ...s,
        ...L,
        id: L.realm
      };
      B.smtpServer?.port === "" && (B.smtpServer = { ...B.smtpServer, port: null });
      const j = await Ii(
        _c(e.baseUrl, `admin/realms/${i}/ui-ext`),
        {
          method: "PUT",
          body: JSON.stringify(B),
          headers: {
            "Content-Type": "application/json",
            ...no(await e.getAccessToken())
          }
        }
      );
      if (!j.ok) throw new Error(j.statusText);
      n(t("realmSaveSuccess"), ue.success);
    } catch (B) {
      r("realmSaveError", B);
    }
    i !== (L.realm || s?.realm) && c(ac({ realm: L.realm, tab: "general" })), o();
  }, R = (L) => jn(ac({ realm: i, tab: L })), S = R("general"), _ = R("login"), O = R("email"), E = R("themes"), T = R("keys"), I = R("events"), k = R("localization"), P = R("security-defenses"), D = R("sessions"), F = R("tokens"), A = R("client-policies"), M = R("user-profile"), V = R("user-registration"), U = (L) => jn(
    Vr({
      realm: i,
      tab: L
    })
  ), G = U("profiles"), q = U("policies");
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(
      ge,
      {
        name: "enabled",
        defaultValue: !0,
        control: m,
        render: ({ field: L }) => /* @__PURE__ */ a(
          iQ,
          {
            value: L.value,
            onChange: L.onChange,
            realmName: i,
            refresh: y,
            save: () => w(g())
          }
        )
      }
    ),
    /* @__PURE__ */ a(Te, { variant: "light", className: "pf-v5-u-p-0", children: /* @__PURE__ */ C(
      $n,
      {
        isBox: !0,
        mountOnEnter: !0,
        "aria-label": "realm-settings-tabs",
        defaultLocation: ac({
          realm: i,
          tab: "general"
        }),
        children: [
          /* @__PURE__ */ a(
            Ee,
            {
              title: /* @__PURE__ */ a(Ie, { children: t("general") }),
              "data-testid": "rs-general-tab",
              ...S,
              children: /* @__PURE__ */ a(KZ, { realm: s, save: w })
            }
          ),
          /* @__PURE__ */ a(
            Ee,
            {
              title: /* @__PURE__ */ a(Ie, { children: t("login") }),
              "data-testid": "rs-login-tab",
              ..._,
              children: /* @__PURE__ */ a(qZ, { refresh: o, realm: s })
            }
          ),
          /* @__PURE__ */ a(
            Ee,
            {
              title: /* @__PURE__ */ a(Ie, { children: t("email") }),
              "data-testid": "rs-email-tab",
              ...O,
              children: /* @__PURE__ */ a(VZ, { realm: s, save: w })
            }
          ),
          /* @__PURE__ */ a(
            Ee,
            {
              title: /* @__PURE__ */ a(Ie, { children: t("themes") }),
              "data-testid": "rs-themes-tab",
              ...E,
              children: /* @__PURE__ */ a(nQ, { realm: s, save: w })
            }
          ),
          /* @__PURE__ */ a(
            Ee,
            {
              title: /* @__PURE__ */ a(Ie, { children: t("keys") }),
              "data-testid": "rs-keys-tab",
              ...T,
              children: /* @__PURE__ */ a(fZ, {})
            }
          ),
          /* @__PURE__ */ a(
            Ee,
            {
              title: /* @__PURE__ */ a(Ie, { children: t("events") }),
              "data-testid": "rs-realm-events-tab",
              ...I,
              children: /* @__PURE__ */ a(aZ, { realm: s })
            }
          ),
          /* @__PURE__ */ a(
            Ee,
            {
              title: /* @__PURE__ */ a(Ie, { children: t("localization") }),
              "data-testid": "rs-localization-tab",
              ...k,
              children: /* @__PURE__ */ a(
                vZ,
                {
                  save: w,
                  realm: s,
                  tableData: u
                },
                b
              )
            }
          ),
          /* @__PURE__ */ a(
            Ee,
            {
              title: /* @__PURE__ */ a(Ie, { children: t("securityDefences") }),
              "data-testid": "rs-security-defenses-tab",
              ...P,
              children: /* @__PURE__ */ a(xZ, { realm: s, save: w })
            }
          ),
          /* @__PURE__ */ a(
            Ee,
            {
              title: /* @__PURE__ */ a(Ie, { children: t("sessions") }),
              "data-testid": "rs-sessions-tab",
              ...D,
              children: /* @__PURE__ */ a(tQ, { realm: s, save: w }, b)
            }
          ),
          /* @__PURE__ */ a(
            Ee,
            {
              title: /* @__PURE__ */ a(Ie, { children: t("tokens") }),
              "data-testid": "rs-tokens-tab",
              ...F,
              children: /* @__PURE__ */ a(aQ, { save: w, realm: s })
            }
          ),
          d(zn.ClientPolicies) && /* @__PURE__ */ a(
            Ee,
            {
              title: /* @__PURE__ */ a(Ie, { children: t("clientPolicies") }),
              "data-testid": "rs-clientPolicies-tab",
              ...A,
              children: /* @__PURE__ */ C(
                $n,
                {
                  mountOnEnter: !0,
                  defaultLocation: Vr({
                    realm: i,
                    tab: "profiles"
                  }),
                  children: [
                    /* @__PURE__ */ a(
                      Ee,
                      {
                        id: "profiles",
                        "data-testid": "rs-policies-clientProfiles-tab",
                        "aria-label": t("clientProfilesSubTab"),
                        title: /* @__PURE__ */ a(Ie, { children: t("profiles") }),
                        tooltip: /* @__PURE__ */ a(Yt, { content: t("clientPoliciesProfilesHelpText") }),
                        ...G,
                        children: /* @__PURE__ */ a(eQ, {})
                      }
                    ),
                    /* @__PURE__ */ a(
                      Ee,
                      {
                        id: "policies",
                        "data-testid": "rs-policies-clientPolicies-tab",
                        "aria-label": t("clientPoliciesSubTab"),
                        ...q,
                        title: /* @__PURE__ */ a(Ie, { children: t("policies") }),
                        tooltip: /* @__PURE__ */ a(Yt, { content: t("clientPoliciesPoliciesHelpText") }),
                        children: /* @__PURE__ */ a(ZZ, {})
                      }
                    )
                  ]
                }
              )
            }
          ),
          /* @__PURE__ */ a(
            Ee,
            {
              title: /* @__PURE__ */ a(Ie, { children: t("userProfile") }),
              "data-testid": "rs-user-profile-tab",
              ...M,
              children: /* @__PURE__ */ a(MZ, { setTableData: p })
            }
          ),
          /* @__PURE__ */ a(
            Ee,
            {
              title: /* @__PURE__ */ a(Ie, { children: t("userRegistration") }),
              "data-testid": "rs-userRegistration-tab",
              ...V,
              children: /* @__PURE__ */ a(rQ, {})
            }
          )
        ]
      }
    ) })
  ] });
};
function oQ() {
  return /* @__PURE__ */ a(sQ, {});
}
const Mp = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: oQ
}, Symbol.toStringTag, { value: "Module" })), lQ = ({
  handleModalToggle: e,
  save: t
}) => {
  const { adminClient: n } = pe(), { t: r } = H(), { addAlert: i } = Se(), { realm: s, realmRepresentation: o, refresh: l } = be(), { register: c, handleSubmit: d } = Ue(), u = (g, b) => {
    const v = g.successRequests?.length || 0, y = g.failedRequests?.length || 0;
    v === 0 && y === 0 ? i(r("noAdminUrlSet"), ue.warning) : y > 0 ? (i(
      r("" + b + "Success", {
        successNodes: g.successRequests
      }),
      ue.success
    ), i(
      r("" + b + "Fail", {
        failedNodes: g.failedRequests
      }),
      ue.danger
    )) : i(
      r("" + b + "Success", {
        successNodes: g.successRequests
      }),
      ue.success
    );
  }, p = async () => {
    try {
      await n.realms.update(
        { realm: s },
        {
          realm: s,
          notBefore: Date.now() / 1e3
        }
      ), i(r("notBeforeSuccess"), ue.success);
    } catch (g) {
      i(r("setToNowError", { error: g }), ue.danger);
    }
  }, m = async () => {
    try {
      await n.realms.update(
        { realm: s },
        {
          realm: s,
          notBefore: 0
        }
      ), i(r("notBeforeClearedSuccess"), ue.success), l();
    } catch (g) {
      i(r("notBeforeError", { error: g }), ue.danger);
    }
  }, f = async () => {
    const g = await n.realms.pushRevocation({
      realm: s
    });
    u(g, "notBeforePush"), l();
  };
  return /* @__PURE__ */ C(
    ht,
    {
      variant: Rt.small,
      title: r("revocation"),
      isOpen: !0,
      onClose: e,
      actions: [
        /* @__PURE__ */ a(
          z,
          {
            "data-testid": "set-to-now-button",
            variant: "tertiary",
            onClick: () => {
              p(), e();
            },
            form: "revocation-modal-form",
            children: r("setToNow")
          },
          "set-to-now"
        ),
        /* @__PURE__ */ a(
          z,
          {
            "data-testid": "clear-not-before-button",
            variant: "tertiary",
            onClick: () => {
              m(), e();
            },
            form: "revocation-modal-form",
            children: r("clear")
          },
          "clear"
        ),
        /* @__PURE__ */ a(
          z,
          {
            "data-testid": "modal-test-connection-button",
            variant: "secondary",
            onClick: () => {
              f(), e();
            },
            form: "revocation-modal-form",
            children: r("push")
          },
          "push"
        ),
        /* @__PURE__ */ a(
          z,
          {
            id: "modal-cancel",
            "data-testid": "cancel",
            variant: xe.link,
            onClick: () => {
              e();
            },
            children: r("cancel")
          },
          "cancel"
        )
      ],
      children: [
        /* @__PURE__ */ a(Pt, { className: "kc-revocation-description-text", children: r("revocationDescription") }),
        /* @__PURE__ */ a(
          xt,
          {
            id: "revocation-modal-form",
            isHorizontal: !0,
            onSubmit: d(t),
            children: /* @__PURE__ */ a(
              se,
              {
                className: "kc-revocation-modal-form-group",
                label: r("notBefore"),
                name: "notBefore",
                fieldId: "not-before",
                children: /* @__PURE__ */ a(
                  mt,
                  {
                    "data-testid": "not-before-input",
                    autoFocus: !0,
                    readOnly: !0,
                    value: o?.notBefore === 0 ? r("none") : new Date(o?.notBefore * 1e3).toString(),
                    type: "text",
                    id: "not-before",
                    ...c("notBefore")
                  }
                )
              }
            )
          }
        )
      ]
    }
  );
}, cQ = ({ filterType: e, onChange: t }) => {
  const { t: n } = H(), [r, i] = ot();
  return /* @__PURE__ */ C(
    ft,
    {
      "data-testid": "filter-session-type-select",
      isOpen: r,
      onToggle: i,
      toggleIcon: /* @__PURE__ */ a(ss, {}),
      onSelect: (s) => {
        t(s), i();
      },
      selections: e,
      children: [
        /* @__PURE__ */ a(_e, { "data-testid": "all-sessions-option", value: "ALL", children: n("sessionsType.allSessions") }),
        /* @__PURE__ */ a(_e, { "data-testid": "regular-sso-option", value: "REGULAR", children: n("sessionsType.regularSSO") }),
        /* @__PURE__ */ a(_e, { "data-testid": "offline-option", value: "OFFLINE", children: n("sessionsType.offline") })
      ]
    }
  );
};
function dQ() {
  const { adminClient: e } = pe(), { t } = H(), [n, r] = N(0), i = () => r(n + 1), { addError: s } = Se(), { realm: o } = be(), [l, c] = N(!1), [d, u] = N("ALL"), [p, m] = N(!1), f = () => {
    c(!l);
  }, g = async (y, x, w) => {
    const R = await Ko(
      e,
      "ui-ext/sessions",
      {
        first: `${y}`,
        max: `${x}`,
        type: d,
        search: w || ""
      }
    );
    return m(R.length === 0), R;
  }, [b, v] = ze({
    titleKey: "logoutAllSessions",
    messageKey: "logoutAllDescription",
    continueButtonLabel: "confirm",
    onConfirm: async () => {
      try {
        await e.realms.logoutAll({ realm: o }), i();
      } catch (y) {
        s("logoutAllSessionsError", y);
      }
    }
  });
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(v, {}),
    /* @__PURE__ */ a(
      wt,
      {
        dropdownItems: [
          /* @__PURE__ */ a(
            Ke,
            {
              "data-testid": "revocation",
              component: "button",
              onClick: () => f(),
              children: t("revocation")
            },
            "toggle-modal"
          ),
          /* @__PURE__ */ a(
            Ke,
            {
              "data-testid": "logout-all",
              component: "button",
              isDisabled: p,
              onClick: b,
              children: t("signOutAllActiveSessions")
            },
            "delete-role"
          )
        ],
        titleKey: "titleSessions",
        subKey: "sessionExplain",
        helpUrl: na.sessionsUrl
      }
    ),
    /* @__PURE__ */ C(Te, { variant: "light", className: "pf-v5-u-p-0", children: [
      l && /* @__PURE__ */ a(
        lQ,
        {
          handleModalToggle: f,
          save: () => {
            f();
          }
        }
      ),
      /* @__PURE__ */ a(
        _p,
        {
          loader: g,
          isSearching: d !== "ALL",
          isPaginated: !0,
          filter: /* @__PURE__ */ a(
            cQ,
            {
              filterType: d,
              onChange: (y) => {
                u(y), i();
              }
            }
          )
        },
        n
      )
    ] })
  ] });
}
const uQ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: dQ
}, Symbol.toStringTag, { value: "Module" })), pQ = ({
  credentialData: e,
  onClose: t
}) => {
  const { t: n } = H();
  return /* @__PURE__ */ a(
    ht,
    {
      variant: Rt.medium,
      title: n("passwordDataTitle"),
      "data-testid": "passwordDataDialog",
      isOpen: !0,
      onClose: t,
      children: /* @__PURE__ */ C(
        Cn,
        {
          "aria-label": n("passwordDataTitle"),
          "data-testid": "password-data-dialog",
          variant: Rc.compact,
          children: [
            /* @__PURE__ */ a(wn, { children: /* @__PURE__ */ C(rt, { children: [
              /* @__PURE__ */ a(De, { children: n("showPasswordDataName") }),
              /* @__PURE__ */ a(De, { children: n("showPasswordDataValue") })
            ] }) }),
            /* @__PURE__ */ a(yn, { children: e.map((r, i) => /* @__PURE__ */ C(rt, { children: [
              /* @__PURE__ */ a(ke, { children: r[0] }),
              /* @__PURE__ */ a(ke, { children: r[1] })
            ] }, i)) })
          ]
        }
      )
    }
  );
}, mQ = ({
  credential: e,
  resetPassword: t,
  toggleDelete: n,
  children: r
}) => {
  const i = ni(), { t: s } = H(), [o, l] = ot(), [c, d] = ot(), u = pa(), p = et(() => {
    if (!e.credentialData)
      return [];
    const m = JSON.parse(
      e.credentialData
    );
    return u(Object.entries(m), ([f]) => f).map(([f, g]) => typeof g == "string" ? [f, g] : [f, JSON.stringify(g)]);
  }, [e.credentialData]);
  return /* @__PURE__ */ C(ee, { children: [
    o && Object.keys(e).length !== 0 && /* @__PURE__ */ a(
      pQ,
      {
        credentialData: p,
        onClose: () => {
          l();
        }
      }
    ),
    /* @__PURE__ */ a(ke, { children: r }),
    /* @__PURE__ */ a(ke, { children: i(new Date(e.createdDate)) }),
    /* @__PURE__ */ a(ke, { children: /* @__PURE__ */ a(
      z,
      {
        className: "kc-showData-btn",
        variant: "link",
        "data-testid": "showDataBtn",
        onClick: l,
        children: s("showDataBtn")
      }
    ) }),
    e.type === "password" ? /* @__PURE__ */ a(ke, { isActionCell: !0, children: /* @__PURE__ */ a(
      z,
      {
        variant: "secondary",
        "data-testid": "resetPasswordBtn",
        onClick: t,
        children: s("resetPasswordBtn")
      }
    ) }) : /* @__PURE__ */ a(ke, {}),
    /* @__PURE__ */ a(ke, { isActionCell: !0, children: /* @__PURE__ */ a(
      qt,
      {
        popperProps: {
          position: "right"
        },
        toggle: (m) => /* @__PURE__ */ a(
          yt,
          {
            ref: m,
            isExpanded: c,
            onClick: d,
            variant: "plain",
            "aria-label": "Kebab toggle",
            children: /* @__PURE__ */ a(dr, {})
          }
        ),
        isOpen: c,
        children: /* @__PURE__ */ a(Xt, { children: /* @__PURE__ */ a(
          Ke,
          {
            "data-testid": "deleteDropdownItem",
            component: "button",
            onClick: () => {
              n(), d();
            },
            children: s("deleteBtn")
          },
          e.id
        ) })
      }
    ) })
  ] });
}, fQ = ({
  userId: e,
  credential: t,
  isEditable: n,
  toggle: r
}) => {
  const { adminClient: i } = pe(), { t: s } = H(), { register: o, handleSubmit: l } = Ue(), { addAlert: c, addError: d } = Se();
  return /* @__PURE__ */ a(
    xt,
    {
      isHorizontal: !0,
      className: "kc-form-userLabel",
      onSubmit: l(async (p) => {
        try {
          await i.users.updateCredentialLabel(
            {
              id: e,
              credentialId: t.id
            },
            p.userLabel || ""
          ), c(s("updateCredentialUserLabelSuccess"), ue.success), r();
        } catch (m) {
          d("updateCredentialUserLabelError", m);
        }
      }),
      children: /* @__PURE__ */ a(se, { fieldId: "kc-userLabel", className: "kc-userLabel-row", children: /* @__PURE__ */ a("div", { className: "kc-form-group-userLabel", children: n ? /* @__PURE__ */ C(ee, { children: [
        /* @__PURE__ */ a(
          mt,
          {
            "data-testid": "userLabelFld",
            defaultValue: t.userLabel,
            className: "kc-userLabel",
            "aria-label": s("userLabel"),
            ...o("userLabel")
          }
        ),
        /* @__PURE__ */ C("div", { className: "kc-userLabel-actionBtns", children: [
          /* @__PURE__ */ a(
            z,
            {
              "data-testid": "editUserLabelAcceptBtn",
              variant: "link",
              className: "kc-editUserLabelAcceptBtn",
              "aria-label": s("acceptBtn"),
              type: "submit",
              icon: /* @__PURE__ */ a(As, {})
            }
          ),
          /* @__PURE__ */ a(
            z,
            {
              "data-testid": "editUserLabelCancelBtn",
              variant: "link",
              className: "kc-editUserLabel-cancelBtn",
              "aria-label": s("cancelBtn"),
              onClick: r,
              icon: /* @__PURE__ */ a(Oa, {})
            }
          )
        ] })
      ] }) : /* @__PURE__ */ C(ee, { children: [
        t.userLabel,
        /* @__PURE__ */ a(
          z,
          {
            "aria-label": s("editUserLabel"),
            variant: "link",
            className: "kc-editUserLabel-btn",
            onClick: r,
            "data-testid": "editUserLabelBtn",
            icon: /* @__PURE__ */ a(uS, {})
          }
        )
      ] }) }) })
    }
  );
}, CE = ({
  name: e,
  label: t,
  help: n
}) => {
  const { adminClient: r } = pe(), { t: i } = H(), [s, o] = N([]);
  return Re(
    () => r.authenticationManagement.getRequiredActions(),
    (l) => {
      const c = l.filter((d) => d.enabled);
      o(c);
    },
    []
  ), /* @__PURE__ */ a(
    at,
    {
      name: e,
      label: i(t),
      labelIcon: i(n),
      controller: { defaultValue: [] },
      isScrollable: !0,
      maxMenuHeight: "375px",
      variant: pt.typeaheadMulti,
      chipGroupProps: {
        numChips: 3
      },
      placeholderText: i("requiredActionPlaceholder"),
      menuAppendTo: "parent",
      options: s.map(({ alias: l, name: c }) => ({
        key: l,
        value: c || l
      }))
    }
  );
}, xE = {
  actions: [],
  lifespan: 43200
  // 12 hours
}, hQ = ({
  userId: e,
  onClose: t
}) => {
  const { adminClient: n } = pe(), { t: r } = H(), i = Ue({
    defaultValues: xE
  }), { handleSubmit: s, control: o } = i, l = nt({
    control: o,
    name: "actions"
  }), c = !Ey(l), { addAlert: d, addError: u } = Se(), p = async ({
    actions: m,
    lifespan: f
  }) => {
    if (!Ey(m))
      try {
        await n.users.executeActionsEmail({
          id: e,
          actions: m,
          lifespan: f
        }), d(r("credentialResetEmailSuccess"), ue.success), t();
      } catch (g) {
        u("credentialResetEmailError", g);
      }
  };
  return /* @__PURE__ */ a(
    ms,
    {
      variant: Rt.medium,
      titleKey: "credentialReset",
      open: !0,
      onCancel: t,
      toggleDialog: t,
      continueButtonLabel: "credentialResetConfirm",
      onConfirm: () => {
        s(p)();
      },
      confirmButtonDisabled: !c,
      children: /* @__PURE__ */ a(
        xt,
        {
          id: "userCredentialsReset-form",
          isHorizontal: !0,
          "data-testid": "credential-reset-modal",
          children: /* @__PURE__ */ C(Ve, { ...i, children: [
            /* @__PURE__ */ a(
              CE,
              {
                name: "actions",
                label: "resetAction",
                help: "resetActions"
              }
            ),
            /* @__PURE__ */ a(gQ, {})
          ] })
        }
      )
    }
  );
}, gQ = () => {
  const { t: e } = H();
  return /* @__PURE__ */ a(
    gl,
    {
      name: "lifespan",
      label: e("lifespan"),
      labelIcon: e("lifespanHelp"),
      units: ["minute", "hour", "day"],
      menuAppendTo: "parent",
      controller: {
        defaultValue: xE.lifespan
      }
    }
  );
}, bQ = {
  password: "",
  passwordConfirmation: "",
  temporaryPassword: !0
}, vQ = ({
  user: e,
  isResetPassword: t,
  onAddRequiredActions: n,
  refresh: r,
  onClose: i
}) => {
  const { adminClient: s } = pe(), { t: o } = H(), l = Ue({
    defaultValues: bQ,
    mode: "onChange"
  }), {
    register: c,
    formState: { isValid: d, errors: u },
    watch: p,
    handleSubmit: m,
    clearErrors: f,
    setError: g
  } = l, [b, v] = ot(!0), y = p("password", ""), x = p("passwordConfirmation", ""), { addAlert: w, addError: R } = Se(), [S, _] = ze({
    titleKey: t ? "resetPasswordConfirm" : "setPasswordConfirm",
    messageKey: t ? o("resetPasswordConfirmText", { username: e.username }) : o("setPasswordConfirmText", { username: e.username }),
    continueButtonLabel: t ? "resetPassword" : "savePassword",
    continueButtonVariant: xe.danger,
    onConfirm: () => m(O)()
  }), O = async ({
    password: I,
    temporaryPassword: k
  }) => {
    try {
      await s.users.resetPassword({
        id: e.id,
        credential: {
          temporary: k,
          type: "password",
          value: I
        }
      }), k && n?.([Xm.UPDATE_PASSWORD]);
      const D = (await s.users.getCredentials({
        id: e.id
      })).find((F) => F.type === "password");
      D && await s.users.updateCredentialLabel(
        {
          id: e.id,
          credentialId: D.id
        },
        o("defaultPasswordLabel")
      ), w(
        o(t ? "resetCredentialsSuccess" : "savePasswordSuccess"),
        ue.success
      ), r();
    } catch (P) {
      R(
        t ? "resetPasswordError" : "savePasswordError",
        P
      );
    }
    i();
  }, { onChange: E, ...T } = c("password", { required: !0 });
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(_, {}),
    /* @__PURE__ */ a(
      ms,
      {
        titleKey: t ? o("resetPasswordFor", { username: e.username }) : o("setPasswordFor", { username: e.username }),
        open: b,
        onCancel: i,
        toggleDialog: v,
        onConfirm: S,
        confirmButtonDisabled: !d,
        continueButtonLabel: "save",
        children: /* @__PURE__ */ C(
          xt,
          {
            id: "userCredentials-form",
            isHorizontal: !0,
            className: "keycloak__user-credentials__reset-form",
            children: [
              /* @__PURE__ */ C(
                se,
                {
                  name: "password",
                  label: o("password"),
                  fieldId: "password",
                  isRequired: !0,
                  children: [
                    /* @__PURE__ */ a(
                      Tc,
                      {
                        "data-testid": "passwordField",
                        id: "password",
                        onChange: (I) => {
                          E(I), x !== I.currentTarget.value ? g("passwordConfirmation", {
                            message: o("confirmPasswordDoesNotMatch").toString()
                          }) : f("passwordConfirmation");
                        },
                        ...T
                      }
                    ),
                    u.password && /* @__PURE__ */ a(En, { message: o("required") })
                  ]
                }
              ),
              /* @__PURE__ */ C(
                se,
                {
                  name: "passwordConfirmation",
                  label: o(t ? "resetPasswordConfirmation" : "passwordConfirmation"),
                  fieldId: "passwordConfirmation",
                  isRequired: !0,
                  children: [
                    /* @__PURE__ */ a(
                      Tc,
                      {
                        "data-testid": "passwordConfirmationField",
                        id: "passwordConfirmation",
                        ...c("passwordConfirmation", {
                          required: !0,
                          validate: (I) => I === y || o("confirmPasswordDoesNotMatch").toString()
                        })
                      }
                    ),
                    u.passwordConfirmation && /* @__PURE__ */ a(
                      En,
                      {
                        message: u.passwordConfirmation.message
                      }
                    )
                  ]
                }
              ),
              /* @__PURE__ */ a(Ve, { ...l, children: /* @__PURE__ */ a(
                bt,
                {
                  name: "temporaryPassword",
                  label: o("temporaryPassword"),
                  labelIcon: o("temporaryPasswordHelpText"),
                  defaultValue: "true"
                }
              ) })
            ]
          }
        )
      }
    )
  ] });
}, SE = ({ user: e }) => {
  const { adminClient: t } = pe(), n = Mt(), { realm: r } = be(), [i, s] = N();
  return Re(
    () => n.hasAccess("view-realm") ? t.components.findOne({
      id: e.federationLink || e.origin
    }) : t.userStorageProvider.name({
      id: e.federationLink || e.origin
    }),
    s,
    []
  ), i ? n.hasAccess("view-realm") ? /* @__PURE__ */ a(
    z,
    {
      variant: "link",
      component: (o) => /* @__PURE__ */ a(
        Ae,
        {
          ...o,
          to: FT({
            id: i.id,
            providerId: i.providerId,
            realm: r
          })
        }
      ),
      children: i.name
    }
  ) : /* @__PURE__ */ a("span", { children: i.name }) : null;
};
function Uu(e) {
  const t = {};
  Object.entries(e.attributes || {}).forEach(
    ([r, i]) => t[Es(r)] = i
  );
  const n = Ec(e.unmanagedAttributes);
  return { ...e, attributes: t, unmanagedAttributes: n };
}
function wE(e) {
  const t = e.username?.trim(), n = Array.isArray(e.attributes) ? Bo(e.attributes) : Object.fromEntries(
    Object.entries(e.attributes || {}).map(([i, s]) => [
      Lw(i),
      s
    ])
  ), r = Array.isArray(e.unmanagedAttributes) ? Bo(e.unmanagedAttributes) : e.unmanagedAttributes;
  for (const i in r)
    if (n && Object.hasOwn(n, i))
      throw Error(
        `Attribute ${i} is a managed attribute and is already available from the user details.`
      );
  return {
    ...e,
    username: t,
    attributes: { ...r, ...n },
    unmanagedAttributes: void 0
  };
}
function yQ(e = {}, t = {}) {
  return Object.fromEntries(
    Object.entries(e).filter(
      ([n]) => !Object.hasOwn(t, n)
    )
  );
}
const kE = ({
  form: e,
  realm: t,
  user: n,
  bruteForce: { isBruteForceProtected: r, isLocked: i } = {
    isBruteForceProtected: !1,
    isLocked: !1
  },
  userProfileMetadata: s,
  save: o,
  refresh: l,
  onGroupsUpdate: c
}) => {
  const { adminClient: d } = pe(), { t: u } = H(), p = ni(), { addAlert: m, addError: f } = Se(), { hasAccess: g } = Mt(), b = g("manage-users"), v = g("view-realm"), { whoAmI: y } = _a(), x = y.getLocale(), { handleSubmit: w, setValue: R, control: S, reset: _, formState: O } = e, { errors: E } = O, [T, I] = N(
    []
  ), [k, P] = N(!1), [D, F] = N(i), A = Je();
  He(() => {
    R("requiredActions", n?.requiredActions || []);
  }, [n, R]);
  const M = async () => {
    try {
      await d.users.update({ id: n.id }, { enabled: !0 }), m(u("unlockSuccess"), ue.success), l && l();
    } catch (K) {
      f("unlockError", K);
    }
  }, V = (K) => {
    I(T.filter((B) => B.name !== K)), c?.(T);
  }, U = async (K) => {
    I([...T, ...K]), c?.([...T, ...K]);
  }, G = async (K) => {
    K.forEach(async (j) => {
      try {
        await d.users.addToGroup({
          id: n.id,
          groupId: j.id
        }), m(u("addedGroupMembership"), ue.success);
      } catch (W) {
        f("addedGroupMembershipError", W);
      }
    });
  }, q = () => {
    P(!k);
  }, L = () => {
    n?.id ? _(Uu(n)) : A(Ho({ realm: t.realm }));
  };
  return /* @__PURE__ */ C(
    Fe,
    {
      isHorizontal: !0,
      onSubmit: w(o),
      role: "query-users",
      fineGrainedAccess: n?.access?.manage,
      className: "pf-v5-u-mt-lg",
      children: [
        /* @__PURE__ */ C(Ve, { ...e, children: [
          k && /* @__PURE__ */ a(
            cl,
            {
              type: "selectMany",
              text: {
                title: "selectGroups",
                ok: "join"
              },
              canBrowse: b,
              onConfirm: (K) => {
                n?.id ? G(K || []) : U(K || []), P(!1);
              },
              onClose: () => P(!1),
              filterGroups: T
            }
          ),
          n?.id && /* @__PURE__ */ C(ee, { children: [
            /* @__PURE__ */ a(se, { label: u("id"), fieldId: "kc-id", isRequired: !0, children: /* @__PURE__ */ a(
              mt,
              {
                id: n.id,
                "aria-label": u("userID"),
                value: n.id,
                readOnly: !0
              }
            ) }),
            /* @__PURE__ */ a(
              se,
              {
                label: u("createdAt"),
                fieldId: "kc-created-at",
                isRequired: !0,
                children: /* @__PURE__ */ a(
                  mt,
                  {
                    value: p(new Date(n.createdTimestamp)),
                    id: "kc-created-at",
                    readOnly: !0
                  }
                )
              }
            )
          ] }),
          /* @__PURE__ */ a(
            CE,
            {
              name: "requiredActions",
              label: "requiredUserActions",
              help: "requiredUserActionsHelp"
            }
          ),
          (n?.federationLink || n?.origin) && v && /* @__PURE__ */ a(
            se,
            {
              label: u("federationLink"),
              labelIcon: /* @__PURE__ */ a(
                le,
                {
                  helpText: u("federationLinkHelp"),
                  fieldLabelId: "federationLink"
                }
              ),
              children: /* @__PURE__ */ a(SE, { user: n })
            }
          ),
          s ? /* @__PURE__ */ C(ee, { children: [
            /* @__PURE__ */ a(
              bt,
              {
                name: "emailVerified",
                label: u("emailVerified"),
                labelIcon: u("emailVerifiedHelp")
              }
            ),
            /* @__PURE__ */ a(
              a8,
              {
                form: e,
                userProfileMetadata: s,
                hideReadOnly: !n,
                supportedLocales: t.supportedLocales || [],
                currentLocale: x,
                t: (K, B) => u(K, B)
              }
            )
          ] }) : /* @__PURE__ */ C(ee, { children: [
            !t.registrationEmailAsUsername && /* @__PURE__ */ a(
              ve,
              {
                name: "username",
                label: u("username"),
                readOnly: !!n?.id && !t.editUsernameAllowed && t.editUsernameAllowed !== void 0,
                rules: {
                  required: u("required")
                }
              }
            ),
            /* @__PURE__ */ a(
              ve,
              {
                name: "email",
                label: u("email"),
                type: "email",
                rules: {
                  pattern: {
                    value: Kd,
                    message: u("emailInvalid")
                  }
                }
              }
            ),
            /* @__PURE__ */ a(
              Qs,
              {
                name: "emailVerified",
                label: u("emailVerified"),
                labelIcon: u("emailVerifiedHelp"),
                labelOn: u("yes"),
                labelOff: u("no")
              }
            ),
            /* @__PURE__ */ a(ve, { name: "firstName", label: u("firstName") }),
            /* @__PURE__ */ a(ve, { name: "lastName", label: u("lastName") })
          ] }),
          r && /* @__PURE__ */ a(
            se,
            {
              label: u("temporaryLocked"),
              fieldId: "temporaryLocked",
              labelIcon: /* @__PURE__ */ a(
                le,
                {
                  helpText: u("temporaryLockedHelp"),
                  fieldLabelId: "temporaryLocked"
                }
              ),
              children: /* @__PURE__ */ a(
                Ye,
                {
                  "data-testid": "user-locked-switch",
                  id: "temporaryLocked",
                  onChange: (K, B) => {
                    M(), F(B);
                  },
                  isChecked: D,
                  isDisabled: !D,
                  label: u("on"),
                  labelOff: u("off")
                }
              )
            }
          ),
          !n?.id && /* @__PURE__ */ C(
            se,
            {
              label: u("groups"),
              fieldId: "kc-groups",
              labelIcon: /* @__PURE__ */ a(le, { helpText: u("groupsHelp"), fieldLabelId: "groups" }),
              children: [
                /* @__PURE__ */ a(
                  ge,
                  {
                    name: "groups",
                    defaultValue: [],
                    control: S,
                    render: () => /* @__PURE__ */ C(Qt, { children: [
                      /* @__PURE__ */ a(dt, { children: /* @__PURE__ */ a(vn, { categoryName: " ", children: T.map((K) => /* @__PURE__ */ a(
                        Ut,
                        {
                          onClick: () => V(K.name),
                          children: K.path
                        },
                        K.id
                      )) }) }),
                      /* @__PURE__ */ a(dt, { children: /* @__PURE__ */ a(
                        z,
                        {
                          id: "kc-join-groups-button",
                          onClick: q,
                          variant: "secondary",
                          "data-testid": "join-groups-button",
                          children: u("joinGroups")
                        }
                      ) })
                    ] })
                  }
                ),
                E.requiredActions && /* @__PURE__ */ a(En, { message: u("required") })
              ]
            }
          )
        ] }),
        /* @__PURE__ */ a(
          _r,
          {
            name: "user-creation",
            saveText: n?.id ? u("save") : u("create"),
            reset: L,
            resetText: n?.id ? u("revert") : u("cancel"),
            isActive: !0,
            isSubmit: !0
          }
        )
      ]
    }
  );
};
function CQ() {
  const { adminClient: e } = pe(), { t } = H(), { addAlert: n, addError: r } = Se(), i = Je(), { realm: s, realmRepresentation: o } = be(), l = Ue({ mode: "onChange" }), [c, d] = N([]), [u, p] = N();
  Re(
    () => e.users.getProfileMetadata({ realm: s }),
    (f) => {
      if (!f)
        throw new Error(t("notFound"));
      l.setValue("attributes.locale", o?.defaultLocale || ""), p(f);
    },
    []
  );
  const m = async (f) => {
    try {
      const g = await e.users.create({
        ...wE(f),
        groups: c.map((b) => b.path),
        enabled: !0
      });
      n(t("userCreated"), ue.success), i(
        ai({ id: g.id, realm: s, tab: "settings" })
      );
    } catch (g) {
      Iw(g) ? Uf(g, l.setError, (b, v) => t(b, v)) : r("userCreateError", g);
    }
  };
  return !o || !u ? /* @__PURE__ */ a(gt, {}) : /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(
      wt,
      {
        titleKey: t("createUser"),
        className: "kc-username-view-header"
      }
    ),
    /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ a(
      kE,
      {
        form: l,
        realm: o,
        userProfileMetadata: u,
        onGroupsUpdate: d,
        save: m
      }
    ) })
  ] });
}
const xQ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: CQ
}, Symbol.toStringTag, { value: "Module" })), SQ = ({
  user: e,
  save: t,
  upConfig: n
}) => {
  const r = Le();
  return /* @__PURE__ */ a(Te, { variant: hr.light, children: /* @__PURE__ */ a(
    vb,
    {
      form: r,
      save: t,
      fineGrainedAccess: e.access?.manage,
      reset: () => r.reset({
        ...r.getValues(),
        attributes: Uu(e).attributes
      }),
      name: "unmanagedAttributes",
      isDisabled: Yi.AdminView == n?.unmanagedAttributePolicy
    }
  ) });
}, wQ = () => {
  const { adminClient: e } = pe(), [t, n] = N(), { t: r } = H(), { addAlert: i, addError: s } = Se(), o = ni(), [l, c] = N(0), { id: d } = Vt(), u = (v) => zr(v, (y) => y.clientId?.toUpperCase()), p = () => c((/* @__PURE__ */ new Date()).getTime()), m = async () => {
    const v = await e.users.listConsents({ id: d });
    return u(v);
  }, f = ({
    grantedClientScopes: v
  }) => /* @__PURE__ */ a(vn, { className: "kc-consents-chip-group", children: v.map((y) => /* @__PURE__ */ a(Ut, { isReadOnly: !0, className: "kc-consents-chip", children: y }, y)) }), [g, b] = ze({
    titleKey: "revokeClientScopesTitle",
    messageKey: r("revokeClientScopes", {
      clientId: t?.clientId
    }),
    continueButtonLabel: "revoke",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        await e.users.revokeConsent({
          id: d,
          clientId: t.clientId
        }), p(), i(r("deleteGrantsSuccess"), ue.success);
      } catch (v) {
        s("deleteGrantsError", v);
      }
    }
  });
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(b, {}),
    /* @__PURE__ */ a(
      St,
      {
        loader: m,
        ariaLabelKey: "roleList",
        searchPlaceholderKey: " ",
        columns: [
          {
            name: "clientId",
            displayKey: "Client",
            cellFormatters: [on()],
            transforms: [Ft(20)]
          },
          {
            name: "grantedClientScopes",
            displayKey: "grantedClientScopes",
            cellRenderer: f,
            transforms: [Ft(30)]
          },
          {
            name: "createdDate",
            displayKey: "created",
            transforms: [Ft(20)],
            cellRenderer: ({ createdDate: v }) => v ? o(new Date(v)) : "—"
          },
          {
            name: "lastUpdatedDate",
            displayKey: "lastUpdated",
            transforms: [Ft(10)],
            cellRenderer: ({ lastUpdatedDate: v }) => v ? o(new Date(v)) : "—"
          }
        ],
        actions: [
          {
            title: r("revoke"),
            onRowClick: (v) => {
              n(v), g();
            }
          }
        ],
        emptyState: /* @__PURE__ */ a(
          ct,
          {
            hasIcon: !0,
            icon: dS,
            message: r("noConsents"),
            instructions: r("noConsentsText")
          }
        )
      },
      l
    )
  ] });
}, H0 = ({
  credential: e,
  userId: t,
  toggleDelete: n,
  resetPassword: r,
  isUserLabelEdit: i,
  setIsUserLabelEdit: s,
  refresh: o
}) => /* @__PURE__ */ a(
  mQ,
  {
    credential: e,
    toggleDelete: () => n(e),
    resetPassword: r,
    children: /* @__PURE__ */ a(
      fQ,
      {
        credential: e,
        userId: t,
        isEditable: i?.status && i.rowKey === e.id || !1,
        toggle: () => {
          s({
            status: !i?.status,
            rowKey: e.id
          }), i?.status && o();
        }
      }
    )
  },
  e.id
), kQ = ({ user: e, setUser: t }) => {
  const { adminClient: n } = pe(), { t: r } = H(), { addAlert: i, addError: s } = Se(), [o, l] = N(0), c = () => l(o + 1), [d, u] = N(!1), [p, m] = N(!1), [f, g] = N([]), [b, v] = N([]), [y, x] = N({}), [w, R] = N(!1), [S, _] = N(), O = Ct(null), [E, T] = N({
    draggedItemId: "",
    draggingToItemIndex: -1,
    dragging: !1,
    tempItemOrder: [""]
  });
  Re(
    () => n.users.getCredentials({ id: e.id }),
    (fe) => {
      g(fe);
      const we = fe.reduce((X, Y) => (X[Y.type] = X[Y.type] || [], X[Y.type].push(Y), X), /* @__PURE__ */ Object.create(null)), J = Object.keys(we).map(
        (X) => ({ key: X, value: we[X] })
      );
      v(
        J.map((X) => ({
          ...X,
          isExpanded: !1
        }))
      );
    },
    [o]
  );
  const I = f.find(
    (fe) => fe.type === "password"
  ), k = () => u(!d), P = () => {
    m(!p);
  }, D = () => {
    R(!0), k();
  }, [F, A] = ze({
    titleKey: r("deleteCredentialsConfirmTitle"),
    messageKey: r("deleteCredentialsConfirm"),
    continueButtonLabel: r("delete"),
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        await n.users.deleteCredential({
          id: e.id,
          credentialId: y.id
        }), i(r("deleteCredentialsSuccess"), ue.success), l((fe) => fe + 1);
      } catch (fe) {
        s("deleteCredentialsError", fe);
      }
    }
  }), M = et(
    () => b.flatMap((fe) => [
      fe.value.map(({ id: we }) => we).toString(),
      ...fe.isExpanded ? fe.value.map((we) => we.id) : []
    ]),
    [b]
  ), V = (fe) => {
    fe.dataTransfer.effectAllowed = "move", fe.dataTransfer.setData("text/plain", fe.currentTarget.id);
    const we = fe.currentTarget.id;
    fe.currentTarget.classList.add(Ze.modifiers.ghostRow), fe.currentTarget.setAttribute("aria-pressed", "true"), T({ ...E, draggedItemId: we, dragging: !0 });
  }, U = (fe, we, J) => {
    const X = fe.indexOf(we);
    if (X === J)
      return fe;
    const Y = [...fe];
    return Y.splice(J, 0, Y.splice(X, 1)[0]), Y;
  }, G = (fe) => {
    if (!O.current) return;
    const we = O.current, J = Array.from(we.children);
    J.every(({ id: X }, Y) => X === fe[Y]) || (we.replaceChildren(), fe.forEach((X) => {
      we.appendChild(J.find(({ id: Y }) => Y === X));
    }));
  }, q = () => {
    O.current && (Array.from(O.current.children).forEach((fe) => {
      fe.classList.remove(Ze.modifiers.ghostRow), fe.setAttribute("aria-pressed", "false");
    }), T({
      ...E,
      draggedItemId: "",
      draggingToItemIndex: -1,
      dragging: !1
    }));
  }, L = (fe) => {
    K(fe) || (G(M), T({ ...E, draggingToItemIndex: -1 }));
  }, K = (fe) => {
    if (!O.current) return !1;
    const we = O.current.getBoundingClientRect();
    return fe.clientX > we.x && fe.clientX < we.x + we.width && fe.clientY > we.y && fe.clientY < we.y + we.height;
  }, B = (fe) => {
    K(fe) ? te(E.draggedItemId, E.tempItemOrder) : q();
  }, j = (fe) => {
    fe.preventDefault();
    const J = fe.target.closest("tr");
    if (!(!J || O.current && !O.current.contains(J) || J.id === E.draggedItemId)) {
      const X = J.id, Y = Array.from(
        O.current?.children || []
      ).findIndex((de) => de.id === X);
      if (Y === E.draggingToItemIndex)
        return;
      const ae = U(
        M,
        E.draggedItemId,
        Y
      );
      G(ae), T({
        ...E,
        draggingToItemIndex: Y,
        tempItemOrder: ae
      });
    }
  }, W = (fe) => {
    t({
      ...e,
      requiredActions: [...e.requiredActions ?? [], ...fe]
    });
  }, Q = ({ target: fe }) => {
    fe instanceof HTMLTableRowElement && (fe.classList.remove(Ze.modifiers.ghostRow), fe.setAttribute("aria-pressed", "false"), T({
      ...E,
      draggedItemId: "",
      draggingToItemIndex: -1,
      dragging: !1
    }));
  }, te = async (fe, we) => {
    const J = M.findIndex((de) => de === fe), X = we.findIndex((de) => de === fe), Y = X - J, ae = fe.split(",");
    try {
      for (const de of ae)
        for (let ye = 0; ye < Math.abs(Y); ye++)
          Y > 0 ? await n.users.moveCredentialPositionDown({
            id: e.id,
            credentialId: de,
            newPreviousCredentialId: M[X]
          }) : await n.users.moveCredentialPositionUp({
            id: e.id,
            credentialId: de
          });
      c(), i(r("updatedCredentialMoveSuccess"), ue.success);
    } catch (de) {
      s("updatedCredentialMoveError", de);
    }
  }, ie = (fe) => {
    x(fe), F();
  }, ce = e.federationLink || e.origin, [Z, me] = N([]);
  if (Re(
    () => n.users.getUserStorageCredentialTypes({ id: e.id }),
    me,
    []
  ), !Z)
    return /* @__PURE__ */ a(gt, {});
  const ne = Z.length > 0, Oe = b.length === 0, Pe = !e.credentials || e.credentials.length === 0, $e = Oe && Pe && !ne;
  return /* @__PURE__ */ C(ee, { children: [
    d && /* @__PURE__ */ a(
      vQ,
      {
        user: e,
        isResetPassword: w,
        onAddRequiredActions: W,
        refresh: c,
        onClose: () => u(!1)
      }
    ),
    p && /* @__PURE__ */ a(
      hQ,
      {
        userId: e.id,
        onClose: () => m(!1)
      }
    ),
    /* @__PURE__ */ a(A, {}),
    e.email && !$e && /* @__PURE__ */ a(
      z,
      {
        className: "kc-resetCredentialBtn-header",
        variant: "primary",
        "data-testid": "credentialResetBtn",
        onClick: () => m(!0),
        children: r("credentialResetBtn")
      }
    ),
    f.length !== 0 && I === void 0 && /* @__PURE__ */ C(ee, { children: [
      /* @__PURE__ */ a(
        z,
        {
          className: "kc-setPasswordBtn-tbl",
          "data-testid": "setPasswordBtn-table",
          variant: "primary",
          form: "userCredentials-form",
          onClick: () => {
            u(!0);
          },
          children: r("setPassword")
        }
      ),
      /* @__PURE__ */ a(_t, {})
    ] }),
    b.length !== 0 && /* @__PURE__ */ a(Te, { variant: hr.light, children: /* @__PURE__ */ C(Cn, { variant: "compact", children: [
      /* @__PURE__ */ a(wn, { children: /* @__PURE__ */ C(rt, { className: "kc-table-header", children: [
        /* @__PURE__ */ a(De, { children: /* @__PURE__ */ a(
          le,
          {
            helpText: r("userCredentialsHelpText"),
            fieldLabelId: "userCredentialsHelpTextLabel"
          }
        ) }),
        /* @__PURE__ */ a(De, { "aria-hidden": "true" }),
        /* @__PURE__ */ a(De, { children: r("type") }),
        /* @__PURE__ */ a(De, { children: r("userLabel") }),
        /* @__PURE__ */ a(De, { children: r("createdAt") }),
        /* @__PURE__ */ a(De, { children: r("data") }),
        /* @__PURE__ */ a(De, { "aria-hidden": "true" }),
        /* @__PURE__ */ a(De, { "aria-hidden": "true" })
      ] }) }),
      /* @__PURE__ */ a(
        yn,
        {
          ref: O,
          onDragOver: j,
          onDrop: j,
          onDragLeave: L,
          children: b.map((fe, we) => /* @__PURE__ */ C(ka, { children: [
            /* @__PURE__ */ C(
              rt,
              {
                id: fe.value.map(({ id: J }) => J).toString(),
                draggable: b.length > 1,
                onDrop: B,
                onDragEnd: Q,
                onDragStart: V,
                children: [
                  /* @__PURE__ */ a(
                    ke,
                    {
                      className: b.length === 1 ? "one-row" : "",
                      draggableRow: {
                        id: `draggable-row-${fe.value.map(
                          ({ id: J }) => J
                        )}`
                      }
                    }
                  ),
                  fe.value.length > 1 ? /* @__PURE__ */ a(
                    ke,
                    {
                      className: "kc-expandRow-btn",
                      expand: {
                        rowIndex: we,
                        isExpanded: fe.isExpanded,
                        onToggle: (J, X) => {
                          const Y = b.map(
                            (ae, de) => de === X ? {
                              ...ae,
                              isExpanded: !ae.isExpanded
                            } : ae
                          );
                          v(Y);
                        }
                      }
                    }
                  ) : /* @__PURE__ */ a(ke, {}),
                  /* @__PURE__ */ a(
                    ke,
                    {
                      dataLabel: `columns-${fe.key}`,
                      className: "kc-notExpandableRow-credentialType",
                      "data-testid": "credentialType",
                      children: wa(fe.key)
                    }
                  ),
                  fe.value.length <= 1 && fe.value.map((J) => /* @__PURE__ */ a(
                    H0,
                    {
                      credential: J,
                      userId: e.id,
                      toggleDelete: ie,
                      resetPassword: D,
                      isUserLabelEdit: S,
                      setIsUserLabelEdit: _,
                      refresh: c
                    },
                    J.id
                  ))
                ]
              }
            ),
            fe.isExpanded && fe.value.map((J) => /* @__PURE__ */ C(
              rt,
              {
                id: J.id,
                draggable: !0,
                onDrop: B,
                onDragEnd: Q,
                onDragStart: V,
                children: [
                  /* @__PURE__ */ a(ke, {}),
                  /* @__PURE__ */ a(
                    ke,
                    {
                      className: "kc-draggable-dropdown-type-icon",
                      draggableRow: {
                        id: `draggable-row-${fe.value.map(
                          ({ id: X }) => X
                        )}`
                      }
                    }
                  ),
                  /* @__PURE__ */ a(
                    ke,
                    {
                      dataLabel: `child-columns-${J.id}`,
                      className: "kc-expandableRow-credentialType",
                      children: wa(J.type)
                    }
                  ),
                  /* @__PURE__ */ a(
                    H0,
                    {
                      credential: J,
                      userId: e.id,
                      toggleDelete: ie,
                      resetPassword: D,
                      isUserLabelEdit: S,
                      setIsUserLabelEdit: _,
                      refresh: c
                    }
                  )
                ]
              },
              J.id
            ))
          ] }, fe.key))
        }
      )
    ] }) }),
    ce && ne && /* @__PURE__ */ a(Te, { variant: hr.light, children: /* @__PURE__ */ C(Cn, { variant: "compact", children: [
      /* @__PURE__ */ a(wn, { children: /* @__PURE__ */ C(rt, { children: [
        /* @__PURE__ */ a(De, { children: r("type") }),
        /* @__PURE__ */ a(De, { children: r("providedBy") }),
        /* @__PURE__ */ a(De, { "aria-hidden": "true" })
      ] }) }),
      /* @__PURE__ */ a(yn, { children: Z.map((fe) => /* @__PURE__ */ C(rt, { children: [
        /* @__PURE__ */ a(ke, { children: /* @__PURE__ */ a("b", { children: fe }) }),
        /* @__PURE__ */ a(ke, { children: /* @__PURE__ */ a(SE, { user: e }) }),
        fe === "password" && /* @__PURE__ */ a(ke, { modifier: "fitContent", children: /* @__PURE__ */ a(z, { variant: "secondary", onClick: k, children: r("setPassword") }) })
      ] }, fe)) })
    ] }) }),
    $e && /* @__PURE__ */ a(
      ct,
      {
        hasIcon: !0,
        message: r("noCredentials"),
        instructions: r("noCredentialsText"),
        primaryActionText: r("setPassword"),
        onPrimaryAction: k,
        secondaryActions: e.email ? [
          {
            text: r("credentialResetBtn"),
            onClick: P,
            type: xe.link
          }
        ] : void 0
      }
    )
  ] });
}, OQ = ({ user: e }) => {
  const { adminClient: t } = pe(), { t: n } = H(), { addAlert: r, addError: i } = Se(), [s, o] = N(0), l = () => o(s + 1), [c, d] = N(
    []
  ), [u, p] = N(!0), [m, f] = N([]), [g, b] = N(!1), { enabled: v } = Pr(), { hasAccess: y } = Mt(), x = y("manage-users"), w = (I) => zr(I, (k) => k.path?.toUpperCase()), R = async (I, k, P) => {
    const D = {
      first: I,
      max: k
    }, F = P || "";
    F && (D.search = F);
    const A = await t.users.listGroups({
      ...D,
      id: e.id
    });
    f([...A]);
    const M = [];
    return u || A.forEach((V) => {
      const U = (V.path?.substring(1).match(/((~\/)|[^/])+/g) || []).slice(0, -1);
      M.push(
        ...U.map((G) => ({
          name: G,
          path: V.path?.substring(0, V.path.indexOf(G) + G.length)
        }))
      );
    }), w(pp([...A, ...M], "path"));
  }, S = () => {
    b(!g);
  }, [_, O] = ze({
    titleKey: n("leaveGroup", {
      count: c.length,
      name: c[0]?.name
    }),
    messageKey: n("leaveGroupConfirmDialog", {
      count: c.length,
      groupname: c[0]?.name,
      username: e.username
    }),
    continueButtonLabel: "leave",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        await Promise.all(
          c.map(
            (I) => t.users.delFromGroup({
              id: e.id,
              groupId: I.id
            })
          )
        ), d([]), r(n("removedGroupMembership"), ue.success);
      } catch (I) {
        i("removedGroupMembershipError", I);
      }
      l();
    }
  }), E = (I) => {
    d(I), _();
  }, T = async (I) => {
    try {
      await Promise.all(
        I.map(
          (k) => t.users.addToGroup({
            id: e.id,
            groupId: k.id
          })
        )
      ), r(n("addedGroupMembership"), ue.success);
    } catch (k) {
      i("addedGroupMembershipError", k);
    }
    l();
  };
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(O, {}),
    g && /* @__PURE__ */ a(
      cl,
      {
        id: e.id,
        type: "selectMany",
        text: {
          title: n("joinGroupsFor", { username: e.username }),
          ok: "join"
        },
        canBrowse: x,
        onClose: () => b(!1),
        onConfirm: async (I = []) => {
          await T(I), b(!1);
        }
      }
    ),
    /* @__PURE__ */ a(
      St,
      {
        loader: R,
        className: "keycloak_user-section_groups-table",
        isPaginated: !0,
        ariaLabelKey: "roleList",
        searchPlaceholderKey: "searchGroup",
        canSelectAll: !0,
        onSelect: (I) => d(u ? I : tF(I, m, "id")),
        isRowDisabled: (I) => !u && m.every((k) => k.id !== I.id),
        toolbarItem: /* @__PURE__ */ C(ee, { children: [
          /* @__PURE__ */ a(
            z,
            {
              className: "kc-join-group-button",
              onClick: S,
              "data-testid": "add-group-button",
              isDisabled: !e.access?.manageGroupMembership,
              children: n("joinGroup")
            }
          ),
          /* @__PURE__ */ a(
            rn,
            {
              label: n("directMembership"),
              id: "kc-direct-membership-checkbox",
              onChange: () => {
                p(!u), l();
              },
              isChecked: u,
              className: "direct-membership-check"
            },
            "direct-membership-check"
          ),
          /* @__PURE__ */ a(
            z,
            {
              onClick: () => E(c),
              "data-testid": "leave-group-button",
              variant: "link",
              isDisabled: c.length === 0,
              children: n("leave")
            }
          ),
          v && /* @__PURE__ */ a(
            Or,
            {
              "aria-label": "Basic popover",
              position: "bottom",
              bodyContent: /* @__PURE__ */ a("div", { children: n("whoWillAppearPopoverTextUsers") }),
              children: /* @__PURE__ */ a(
                z,
                {
                  variant: "link",
                  className: "kc-who-will-appear-button",
                  icon: /* @__PURE__ */ a(Yc, {}),
                  children: n("whoWillAppearLinkTextUsers")
                },
                "who-will-appear-button"
              )
            }
          )
        ] }),
        columns: [
          {
            name: "groupMembership",
            displayKey: "groupMembership",
            cellRenderer: (I) => I.name || "-",
            transforms: [Ft(40)]
          },
          {
            name: "path",
            displayKey: "path",
            cellRenderer: (I) => /* @__PURE__ */ a(Pg, { group: I }),
            transforms: [Ft(45)]
          },
          {
            name: "",
            cellRenderer: (I) => m.some((P) => P.id === I.id) || m.length === 0 || u ? /* @__PURE__ */ a(
              z,
              {
                "data-testid": `leave-${I.name}`,
                onClick: () => E([I]),
                variant: "link",
                isDisabled: !e.access?.manageGroupMembership,
                children: n("leave")
              }
            ) : "-",
            transforms: [Ft(20)]
          }
        ],
        emptyState: /* @__PURE__ */ a(
          ct,
          {
            hasIcon: !0,
            message: n("noGroups"),
            instructions: n("noGroupsText"),
            primaryActionText: n("joinGroup"),
            onPrimaryAction: S
          }
        )
      },
      s
    )
  ] });
}, TQ = ({
  userId: e,
  federatedId: t,
  onClose: n,
  onRefresh: r
}) => {
  const { adminClient: i } = pe(), { t: s } = H(), { addAlert: o, addError: l } = Se(), c = Ue({
    mode: "onChange"
  }), {
    handleSubmit: d,
    formState: { isValid: u }
  } = c, p = async (m) => {
    try {
      await i.users.addToFederatedIdentity({
        id: e,
        federatedIdentityId: t,
        federatedIdentity: m
      }), o(s("idpLinkSuccess"), ue.success), n(), r();
    } catch (f) {
      l("couldNotLinkIdP", f);
    }
  };
  return /* @__PURE__ */ a(
    ht,
    {
      variant: Rt.small,
      title: s("linkAccountTitle", {
        provider: Ts(t)
      }),
      onClose: n,
      actions: [
        /* @__PURE__ */ a(
          z,
          {
            "data-testid": "confirm",
            variant: "primary",
            type: "submit",
            form: "group-form",
            isDisabled: !u,
            children: s("link")
          },
          "confirm"
        ),
        /* @__PURE__ */ a(
          z,
          {
            "data-testid": "cancel",
            variant: xe.link,
            onClick: n,
            children: s("cancel")
          },
          "cancel"
        )
      ],
      isOpen: !0,
      children: /* @__PURE__ */ a(xt, { id: "group-form", onSubmit: d(p), children: /* @__PURE__ */ C(Ve, { ...c, children: [
        /* @__PURE__ */ a(se, { label: s("identityProvider"), fieldId: "identityProvider", children: /* @__PURE__ */ a(
          mt,
          {
            id: "identityProvider",
            "data-testid": "idpNameInput",
            value: Ts(t),
            readOnly: !0
          }
        ) }),
        /* @__PURE__ */ a(
          ve,
          {
            name: "userId",
            label: s("userID"),
            helperText: s("userIdHelperText"),
            autoFocus: !0,
            rules: {
              required: s("required")
            }
          }
        ),
        /* @__PURE__ */ a(
          ve,
          {
            name: "userName",
            label: s("username"),
            helperText: s("usernameHelperText"),
            rules: {
              required: s("required")
            }
          }
        )
      ] }) })
    }
  );
}, EQ = ({
  userId: e
}) => {
  const { adminClient: t } = pe(), [n, r] = N(0), [i, s] = N(""), [o, l] = N(!1), { realm: c, realmRepresentation: d } = be(), { addAlert: u, addError: p } = Se(), { t: m } = H(), { hasAccess: f, hasSomeAccess: g } = Mt(), b = g(
    "manage-identity-providers",
    "view-identity-providers"
  ), v = () => r((/* @__PURE__ */ new Date()).getTime()), y = Tt().identityProviders, x = async () => {
    const F = await t.users.listFederatedIdentities({
      id: e
    });
    if (b) {
      const A = await t.identityProviders.find();
      for (const M of F)
        M.providerId = A.find(
          (V) => V.alias === M.identityProvider
        )?.providerId;
    }
    return F;
  }, w = () => d?.identityProviders, R = async () => x(), S = async () => {
    const F = (await x()).map(
      (A) => A.identityProvider
    );
    return w()?.filter(
      (A) => !F.includes(A.alias)
    );
  }, [_, O] = ze({
    titleKey: m("unlinkAccountTitle", {
      provider: Ts(i)
    }),
    messageKey: m("unlinkAccountConfirm", {
      provider: Ts(i)
    }),
    continueButtonLabel: "unlink",
    continueButtonVariant: xe.primary,
    onConfirm: async () => {
      try {
        await t.users.delFromFederatedIdentity({
          id: e,
          federatedIdentityId: i
        }), u(m("idpUnlinkSuccess"), ue.success), v();
      } catch (F) {
        p("mappingDeletedError", F);
      }
    }
  }), E = (F) => b ? /* @__PURE__ */ a(
    Ae,
    {
      to: Ei({
        realm: c,
        providerId: F.providerId,
        alias: F.identityProvider,
        tab: "settings"
      }),
      children: Ts(F.identityProvider)
    }
  ) : /* @__PURE__ */ a("span", { children: Ts(F.identityProvider) }), T = (F) => {
    const A = y?.find(
      (M) => M.id === F.identityProvider
    )?.groupName;
    return /* @__PURE__ */ a(pn, { color: A === "Social" ? "blue" : "orange", children: m(A === "Social" ? "idpType.social" : "idpType.custom") });
  }, I = (F) => {
    const A = y?.find(
      (M) => M.id === F.providerId
    )?.groupName;
    return /* @__PURE__ */ a(pn, { color: A === "User-defined" ? "orange" : "blue", children: A === "User-defined" ? "Custom" : A === "Social" ? m("idpType.social") : A });
  }, k = (F) => f("manage-users") ? /* @__PURE__ */ a(
    z,
    {
      variant: "link",
      onClick: () => {
        s(F.identityProvider), _();
      },
      children: m("unlinkAccount")
    }
  ) : /* @__PURE__ */ a("span", {}), P = (F) => /* @__PURE__ */ a(
    z,
    {
      variant: "link",
      onClick: () => {
        s(F.alias), l(!0);
      },
      children: m("linkAccount")
    }
  ), D = () => {
    const F = [
      {
        name: "identityProvider",
        displayKey: "name",
        cellRenderer: E,
        transforms: [Ft(20)]
      },
      {
        name: "userId",
        displayKey: "userID",
        cellFormatters: [on()],
        transforms: [Ft(30)]
      },
      {
        name: "userName",
        displayKey: "username",
        cellFormatters: [on()],
        transforms: [Ft(20)]
      },
      {
        name: "",
        cellRenderer: k,
        transforms: [Ft(20)]
      }
    ];
    return b && F.splice(1, 0, {
      name: "type",
      displayKey: "type",
      cellRenderer: T,
      transforms: [Ft(10)]
    }), F;
  };
  return /* @__PURE__ */ C(ee, { children: [
    o && /* @__PURE__ */ a(
      TQ,
      {
        userId: e,
        federatedId: i,
        onClose: () => l(!1),
        onRefresh: v
      }
    ),
    /* @__PURE__ */ a(O, {}),
    /* @__PURE__ */ C(Te, { variant: "light", className: "pf-v5-u-p-0", children: [
      /* @__PURE__ */ C(Xn, { title: m("linkedIdPs"), className: "kc-linked-idps", children: [
        /* @__PURE__ */ a(Pt, { children: /* @__PURE__ */ a(tt, { className: "kc-available-idps-text", children: m("linkedIdPsText") }) }),
        /* @__PURE__ */ a(
          St,
          {
            loader: R,
            isPaginated: !1,
            ariaLabelKey: "LinkedIdPs",
            className: "kc-linked-IdPs-table",
            columns: D(),
            emptyState: /* @__PURE__ */ a(Pt, { className: "kc-no-providers-text", children: /* @__PURE__ */ a(tt, { children: m("noProvidersLinked") }) })
          },
          n
        )
      ] }),
      f("manage-users") && b && /* @__PURE__ */ C(Xn, { className: "kc-available-idps", title: m("availableIdPs"), children: [
        /* @__PURE__ */ a(Pt, { children: /* @__PURE__ */ a(tt, { className: "kc-available-idps-text", children: m("availableIdPsText") }) }),
        /* @__PURE__ */ a(
          St,
          {
            loader: S,
            isPaginated: !1,
            ariaLabelKey: "LinkedIdPs",
            className: "kc-linked-IdPs-table",
            columns: [
              {
                name: "alias",
                displayKey: "name",
                cellFormatters: [on(), rd()],
                transforms: [Ft(20)]
              },
              {
                name: "type",
                displayKey: "type",
                cellRenderer: I,
                transforms: [Ft(60)]
              },
              {
                name: "",
                cellRenderer: P
              }
            ],
            emptyState: /* @__PURE__ */ a(Pt, { className: "kc-no-providers-text", children: /* @__PURE__ */ a(tt, { children: m("noAvailableIdentityProviders") }) })
          },
          n
        )
      ] })
    ] })
  ] });
}, IQ = ({ id: e, name: t }) => {
  const { adminClient: n } = pe(), { t: r } = H(), { addAlert: i, addError: s } = Se();
  return /* @__PURE__ */ a(ao, { name: t, id: e, type: "users", save: async (l) => {
    try {
      const c = l.filter((d) => d.client === void 0).map((d) => d.role).flat();
      await n.users.addRealmRoleMappings({
        id: e,
        roles: c
      }), await Promise.all(
        l.filter((d) => d.client !== void 0).map(
          (d) => n.users.addClientRoleMappings({
            id: e,
            clientUniqueId: d.client.id,
            roles: [d.role]
          })
        )
      ), i(r("userRoleMappingUpdatedSuccess"), ue.success);
    } catch (c) {
      s("roleMappingUpdatedError", c);
    }
  } });
}, PQ = () => {
  const { adminClient: e } = pe(), { id: t } = Vt(), { realm: n } = be(), { t: r } = H();
  return /* @__PURE__ */ a(Te, { variant: "light", className: "pf-v5-u-p-0", children: /* @__PURE__ */ a(
    _p,
    {
      loader: () => e.users.listSessions({ id: t, realm: n }),
      hiddenColumns: ["username", "type"],
      emptyInstructions: r("noSessionsForUser"),
      logoutUser: t
    }
  ) });
};
function _Q() {
  const { adminClient: e } = pe(), { t } = H(), { addAlert: n, addError: r } = Se(), i = Je(), { hasAccess: s } = Mt(), { id: o } = Vt(), { realm: l, realmRepresentation: c } = be(), u = Ue({
    mode: "onChange",
    resolver: async (j) => ({
      values: j,
      errors: {}
    })
  }), [p, m] = N(), [f, g] = N(), [b, v] = N(), [y, x] = N(), [w, R] = N(0), S = () => R((j) => j + 1), _ = nh(p?.id), [O, E] = N(), T = (j) => ai({
    realm: l,
    id: p?.id || "",
    tab: j
  }), I = (j) => jn(T(j)), k = I("settings"), P = I("attributes"), D = I("credentials"), F = I("role-mapping"), A = I("groups"), M = I("consents"), V = I("identity-provider-links"), U = I("sessions");
  Re(
    async () => Promise.all([
      e.users.findOne({
        id: o,
        userProfileMetadata: !0
      }),
      e.attackDetection.findOne({ id: o }),
      e.users.getUnmanagedAttributes({ id: o }),
      e.users.getProfile({ realm: l })
    ]),
    ([j, W, Q, te]) => {
      if (!j || !c || !W)
        throw new Error(t("notFound"));
      const { userProfileMetadata: ie, ...ce } = j;
      x(ie), ce.unmanagedAttributes = Q, ce.attributes = yQ(
        ce.attributes,
        Q
      ), te.unmanagedAttributePolicy !== void 0 && v(!0), m(ce), E(te);
      const Z = c.bruteForceProtected, me = Z && W.disabled;
      g({ isBruteForceProtected: Z, isLocked: me }), u.reset(Uu(ce));
    },
    [w]
  );
  const G = async (j) => {
    try {
      await e.users.update(
        { id: p.id },
        wE(j)
      ), n(t("userSaved"), ue.success), S();
    } catch (W) {
      if (Iw(W)) {
        if (b && Array.isArray(j.unmanagedAttributes)) {
          const Q = new Array(
            j.unmanagedAttributes.length
          );
          let te = !1;
          Uf(
            W,
            (ie, ce) => {
              if (ie.startsWith("attributes.")) {
                const Z = ie.substring(11);
                j.unmanagedAttributes.forEach(
                  (me, ne) => {
                    me.key === Z && (Q[ne] = ce, te = !0);
                  }
                );
              } else
                u.setError(ie, ce);
            },
            (ie, ce) => t(ie, ce)
          ), te && u.setError(
            "unmanagedAttributes",
            Q
          );
        } else
          Uf(W, u.setError, (Q, te) => t(Q, te));
        r("userNotSaved", "");
      } else
        r("userCreateError", W);
    }
  }, [q, L] = ze({
    titleKey: "deleteConfirm",
    messageKey: "deleteConfirmCurrentUser",
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        _ ? await e.users.logout({ id: p.id }) : await e.users.del({ id: p.id }), n(t("userDeletedSuccess"), ue.success), i(Ho({ realm: l }));
      } catch (j) {
        r("userDeletedError", j);
      }
    }
  }), [K, B] = ze({
    titleKey: "impersonateConfirm",
    messageKey: "impersonateConfirmDialog",
    continueButtonLabel: "impersonate",
    onConfirm: async () => {
      try {
        const j = await e.users.impersonation(
          { id: p.id },
          { user: p.id, realm: l }
        );
        j.sameRealm ? window.location = j.redirect : window.open(j.redirect, "_blank");
      } catch (j) {
        r("impersonateError", j);
      }
    }
  });
  return !p || !f ? /* @__PURE__ */ a(gt, {}) : /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(B, {}),
    /* @__PURE__ */ a(L, {}),
    /* @__PURE__ */ a(
      wt,
      {
        titleKey: p.username,
        className: "kc-username-view-header",
        divider: !1,
        badges: _ ? [
          {
            text: /* @__PURE__ */ a(Yt, { content: t("transientUserTooltip"), children: /* @__PURE__ */ a(
              pn,
              {
                "data-testid": "user-details-label-transient-user",
                icon: /* @__PURE__ */ a(_i, {}),
                children: t("transientUser")
              }
            ) })
          }
        ] : [],
        dropdownItems: [
          /* @__PURE__ */ a(
            Ke,
            {
              isDisabled: !p.access?.impersonate,
              onClick: () => K(),
              children: t("impersonate")
            },
            "impersonate"
          ),
          /* @__PURE__ */ a(
            Ke,
            {
              isDisabled: !p.access?.manage,
              onClick: () => q(),
              children: t("delete")
            },
            "delete"
          )
        ],
        onToggle: (j) => G({
          ...Uu(p),
          enabled: j
        }),
        isEnabled: p.enabled
      }
    ),
    /* @__PURE__ */ a(Te, { variant: "light", className: "pf-v5-u-p-0", children: /* @__PURE__ */ a(Np, { children: /* @__PURE__ */ a(Ve, { ...u, children: /* @__PURE__ */ C(
      $n,
      {
        isBox: !0,
        mountOnEnter: !0,
        defaultLocation: T("settings"),
        children: [
          /* @__PURE__ */ a(
            Ee,
            {
              "data-testid": "user-details-tab",
              title: /* @__PURE__ */ a(Ie, { children: t("details") }),
              ...k,
              children: /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ a(
                kE,
                {
                  form: u,
                  realm: c,
                  user: p,
                  bruteForce: f,
                  userProfileMetadata: y,
                  refresh: S,
                  save: G
                }
              ) })
            }
          ),
          b && /* @__PURE__ */ a(
            Ee,
            {
              "data-testid": "attributes",
              title: /* @__PURE__ */ a(Ie, { children: t("attributes") }),
              ...P,
              children: /* @__PURE__ */ a(SQ, { user: p, save: G, upConfig: O })
            }
          ),
          /* @__PURE__ */ a(
            Ee,
            {
              "data-testid": "credentials",
              isHidden: !p.access?.view,
              title: /* @__PURE__ */ a(Ie, { children: t("credentials") }),
              ...D,
              children: /* @__PURE__ */ a(kQ, { user: p, setUser: m })
            }
          ),
          /* @__PURE__ */ a(
            Ee,
            {
              "data-testid": "role-mapping-tab",
              isHidden: !p.access?.view,
              title: /* @__PURE__ */ a(Ie, { children: t("roleMapping") }),
              ...F,
              children: /* @__PURE__ */ a(IQ, { id: p.id, name: p.username })
            }
          ),
          s("query-groups") && /* @__PURE__ */ a(
            Ee,
            {
              "data-testid": "user-groups-tab",
              title: /* @__PURE__ */ a(Ie, { children: t("groups") }),
              ...A,
              children: /* @__PURE__ */ a(OQ, { user: p })
            }
          ),
          /* @__PURE__ */ a(
            Ee,
            {
              "data-testid": "user-consents-tab",
              title: /* @__PURE__ */ a(Ie, { children: t("consents") }),
              ...M,
              children: /* @__PURE__ */ a(wQ, {})
            }
          ),
          /* @__PURE__ */ a(
            Ee,
            {
              "data-testid": "identity-provider-links-tab",
              title: /* @__PURE__ */ a(Ie, { children: t("identityProviderLinks") }),
              ...V,
              children: /* @__PURE__ */ a(EQ, { userId: p.id })
            }
          ),
          /* @__PURE__ */ a(
            Ee,
            {
              "data-testid": "user-sessions-tab",
              title: /* @__PURE__ */ a(Ie, { children: t("sessions") }),
              ...U,
              children: /* @__PURE__ */ a(PQ, {})
            }
          )
        ]
      }
    ) }) }) })
  ] });
}
const RQ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: _Q
}, Symbol.toStringTag, { value: "Module" }));
function AQ() {
  const { t: e } = H(), { realm: t } = be(), { hasAccess: n } = Mt(), i = oa()(zn.AdminFineGrainedAuthz) && n("manage-authorization", "manage-users", "manage-clients"), s = (c) => jn(
    Ho({
      realm: t,
      tab: c
    })
  ), o = s("list"), l = s("permissions");
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(
      wt,
      {
        titleKey: "titleUsers",
        subKey: "usersExplain",
        helpUrl: na.usersUrl,
        divider: !1
      }
    ),
    /* @__PURE__ */ a(
      Te,
      {
        "data-testid": "users-page",
        variant: "light",
        className: "pf-v5-u-p-0",
        children: /* @__PURE__ */ C(
          $n,
          {
            "data-testid": "user-tabs",
            defaultLocation: Ho({
              realm: t,
              tab: "list"
            }),
            isBox: !0,
            mountOnEnter: !0,
            children: [
              /* @__PURE__ */ a(
                Ee,
                {
                  id: "list",
                  "data-testid": "listTab",
                  title: /* @__PURE__ */ a(Ie, { children: e("userList") }),
                  ...o,
                  children: /* @__PURE__ */ a(DY, {})
                }
              ),
              i && /* @__PURE__ */ a(
                Ee,
                {
                  id: "permissions",
                  "data-testid": "permissionsTab",
                  title: /* @__PURE__ */ a(Ie, { children: e("permissions") }),
                  ...l,
                  children: /* @__PURE__ */ a(dd, { type: "users" })
                }
              )
            ]
          }
        )
      }
    )
  ] });
}
const LQ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: AQ
}, Symbol.toStringTag, { value: "Module" })), OE = ({
  provider: e,
  save: t,
  noDivider: n = !1,
  dropdownItems: r = []
}) => {
  const { adminClient: i } = pe(), { t: s } = H(), { id: o } = Qn(), l = Je(), { addAlert: c, addError: d } = Se(), { realm: u } = be(), { control: p, setValue: m } = Le(), [f, g] = ze({
    titleKey: "userFedDisableConfirmTitle",
    messageKey: "userFedDisableConfirm",
    continueButtonLabel: "disable",
    onConfirm: () => {
      m("config.enabled[0]", "false"), t();
    }
  }), [b, v] = ze({
    titleKey: "userFedDeleteConfirmTitle",
    messageKey: "userFedDeleteConfirm",
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        await i.components.del({ id: o }), c(s("userFedDeletedSuccess"), ue.success), l(ls({ realm: u }), { replace: !0 });
      } catch (y) {
        d("userFedDeleteError", y);
      }
    }
  });
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(g, {}),
    /* @__PURE__ */ a(v, {}),
    /* @__PURE__ */ a(
      ge,
      {
        name: "config.enabled",
        defaultValue: ["true"],
        control: p,
        render: ({ field: y }) => o ? /* @__PURE__ */ a(
          wt,
          {
            divider: !n,
            titleKey: e,
            dropdownItems: [
              ...r,
              /* @__PURE__ */ a(
                Ke,
                {
                  onClick: () => b(),
                  "data-testid": "delete-cmd",
                  children: s("deleteProvider")
                },
                "delete"
              )
            ],
            isEnabled: y.value?.[0] === "true" || y.value === "true",
            onToggle: (x) => {
              x ? (y.onChange([x.toString()]), t()) : f();
            }
          }
        ) : /* @__PURE__ */ a(
          wt,
          {
            titleKey: s("addProvider", {
              provider: e,
              count: 1
            })
          }
        )
      }
    )
  ] });
}, wb = ({
  provider: e,
  editMode: t,
  save: n,
  noDivider: r = !1
}) => {
  const { adminClient: i } = pe(), { t: s } = H(), { id: o } = Qn(), { addAlert: l, addError: c } = Se(), { control: d } = Le(), u = nt({
    name: "config.importEnabled",
    control: d,
    defaultValue: ["true"]
  })[0], [p, m] = ze({
    titleKey: "userFedUnlinkUsersConfirmTitle",
    messageKey: "userFedUnlinkUsersConfirm",
    continueButtonLabel: "unlinkUsers",
    onConfirm: () => x()
  }), [f, g] = ze({
    titleKey: s("removeImportedUsers"),
    messageKey: s("removeImportedUsersMessage"),
    continueButtonLabel: "remove",
    onConfirm: async () => {
      try {
        b(), l(s("removeImportedUsersSuccess"), ue.success);
      } catch (w) {
        c("removeImportedUsersError", w);
      }
    }
  }), b = async () => {
    try {
      o && await i.userStorageProvider.removeImportedUsers({ id: o }), l(s("removeImportedUsersSuccess"), ue.success);
    } catch (w) {
      c("removeImportedUsersError", w);
    }
  }, v = async () => {
    try {
      if (o) {
        const w = await i.userStorageProvider.sync({
          id: o,
          action: "triggerChangedUsersSync"
        });
        w.ignored ? l(`${w.status}.`, ue.warning) : l(
          s("syncUsersSuccess") + `${w.added} users added, ${w.updated} users updated, ${w.removed} users removed, ${w.failed} users failed.`,
          ue.success
        );
      }
    } catch (w) {
      c("syncUsersError", w);
    }
  }, y = async () => {
    try {
      if (o) {
        const w = await i.userStorageProvider.sync({
          id: o,
          action: "triggerFullSync"
        });
        w.ignored ? l(`${w.status}.`, ue.warning) : l(
          s("syncUsersSuccess") + `${w.added} users added, ${w.updated} users updated, ${w.removed} users removed, ${w.failed} users failed.`,
          ue.success
        );
      }
    } catch (w) {
      c("syncUsersError", w);
    }
  }, x = async () => {
    try {
      o && await i.userStorageProvider.unlinkUsers({ id: o }), l(s("unlinkUsersSuccess"), ue.success);
    } catch (w) {
      c("unlinkUsersError", w);
    }
  };
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(m, {}),
    /* @__PURE__ */ a(g, {}),
    /* @__PURE__ */ a(
      OE,
      {
        provider: e,
        noDivider: r,
        save: n,
        dropdownItems: [
          /* @__PURE__ */ a(
            Ke,
            {
              onClick: v,
              isDisabled: u === "false",
              children: s("syncChangedUsers")
            },
            "sync"
          ),
          /* @__PURE__ */ a(
            Ke,
            {
              onClick: y,
              isDisabled: u === "false",
              children: s("syncAllUsers")
            },
            "syncall"
          ),
          /* @__PURE__ */ a(
            Ke,
            {
              isDisabled: t ? t.includes("UNSYNCED") : !1,
              onClick: p,
              children: s("unlinkUsers")
            },
            "unlink"
          ),
          /* @__PURE__ */ a(Ke, { onClick: f, children: s("removeImported") }, "remove"),
          /* @__PURE__ */ a(_t, {}, "separator")
        ]
      }
    )
  ] });
}, z0 = ({ form: e }) => {
  const { t } = H(), [n, r] = ot(), [i, s] = ot(), [o, l] = ot(), c = nt({
    control: e.control,
    name: "config.cachePolicy"
  }), d = [
    /* @__PURE__ */ a(_e, { value: ["0"], children: ["00"] }, 0)
  ];
  let u = "";
  for (let f = 1; f < 24; f++)
    f < 10 ? u = `0${f}` : u = `${f}`, d.push(
      /* @__PURE__ */ a(_e, { value: [`${f}`], children: u }, f)
    );
  const p = [
    /* @__PURE__ */ a(_e, { value: ["0"], children: ["00"] }, 0)
  ];
  let m = "";
  for (let f = 1; f < 60; f++)
    f < 10 ? m = `0${f}` : m = `${f}`, p.push(
      /* @__PURE__ */ a(_e, { value: [`${f}`], children: m }, f)
    );
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(
      se,
      {
        label: t("cachePolicy"),
        labelIcon: /* @__PURE__ */ a(
          le,
          {
            helpText: t("cachePolicyHelp"),
            fieldLabelId: "cachePolicy"
          }
        ),
        fieldId: "kc-cache-policy",
        children: /* @__PURE__ */ a(
          ge,
          {
            name: "config.cachePolicy",
            defaultValue: ["DEFAULT"],
            control: e.control,
            render: ({ field: f }) => /* @__PURE__ */ C(
              ft,
              {
                toggleId: "kc-cache-policy",
                onToggle: r,
                isOpen: n,
                onSelect: (g) => {
                  f.onChange(g), r();
                },
                selections: f.value,
                variant: pt.single,
                "data-testid": "kerberos-cache-policy",
                "aria-label": t("selectCachePolicy"),
                children: [
                  /* @__PURE__ */ a(_e, { value: ["DEFAULT"], children: "DEFAULT" }, 0),
                  /* @__PURE__ */ a(_e, { value: ["EVICT_DAILY"], children: "EVICT_DAILY" }, 1),
                  /* @__PURE__ */ a(_e, { value: ["EVICT_WEEKLY"], children: "EVICT_WEEKLY" }, 2),
                  /* @__PURE__ */ a(_e, { value: ["MAX_LIFESPAN"], children: "MAX_LIFESPAN" }, 3),
                  /* @__PURE__ */ a(_e, { value: ["NO_CACHE"], children: "NO_CACHE" }, 4)
                ]
              }
            )
          }
        )
      }
    ),
    bi(c, ["EVICT_WEEKLY"]) ? /* @__PURE__ */ a(
      at,
      {
        id: "kc-eviction-day",
        name: "config.evictionDay[0]",
        label: t("evictionDay"),
        labelIcon: t("evictionDayHelp"),
        controller: {
          defaultValue: "1"
        },
        "aria-label": t("selectEvictionDay"),
        options: [
          { key: "1", value: t("Sunday") },
          { key: "2", value: t("Monday") },
          { key: "3", value: t("Tuesday") },
          { key: "4", value: t("Wednesday") },
          { key: "5", value: t("Thursday") },
          { key: "6", value: t("Friday") },
          { key: "7", value: t("Saturday") }
        ]
      }
    ) : null,
    bi(c, ["EVICT_DAILY"]) || bi(c, ["EVICT_WEEKLY"]) ? /* @__PURE__ */ C(ee, { children: [
      /* @__PURE__ */ a(
        se,
        {
          label: t("evictionHour"),
          labelIcon: /* @__PURE__ */ a(
            le,
            {
              helpText: t("evictionHourHelp"),
              fieldLabelId: "evictionHour"
            }
          ),
          isRequired: !0,
          fieldId: "kc-eviction-hour",
          children: /* @__PURE__ */ a(
            ge,
            {
              name: "config.evictionHour",
              defaultValue: ["0"],
              control: e.control,
              render: ({ field: f }) => /* @__PURE__ */ a(
                ft,
                {
                  toggleId: "kc-eviction-hour",
                  onToggle: s,
                  isOpen: i,
                  onSelect: (g) => {
                    f.onChange(g), s();
                  },
                  selections: f.value,
                  variant: pt.single,
                  "aria-label": t("selectEvictionHour"),
                  children: d
                }
              )
            }
          )
        }
      ),
      /* @__PURE__ */ a(
        se,
        {
          label: t("evictionMinute"),
          labelIcon: /* @__PURE__ */ a(
            le,
            {
              helpText: t("evictionMinuteHelp"),
              fieldLabelId: "evictionMinute"
            }
          ),
          isRequired: !0,
          fieldId: "kc-eviction-minute",
          children: /* @__PURE__ */ a(
            ge,
            {
              name: "config.evictionMinute",
              defaultValue: ["0"],
              control: e.control,
              render: ({ field: f }) => /* @__PURE__ */ a(
                ft,
                {
                  toggleId: "kc-eviction-minute",
                  onToggle: l,
                  isOpen: o,
                  onSelect: (g) => {
                    f.onChange(g), l();
                  },
                  selections: f.value,
                  variant: pt.single,
                  "aria-label": t("selectEvictionMinute"),
                  children: p
                }
              )
            }
          )
        }
      )
    ] }) : null,
    bi(c, ["MAX_LIFESPAN"]) ? /* @__PURE__ */ a(
      se,
      {
        label: t("maxLifespan"),
        labelIcon: /* @__PURE__ */ a(
          le,
          {
            helpText: t("maxLifespanHelp"),
            fieldLabelId: "maxLifespan"
          }
        ),
        fieldId: "kc-max-lifespan",
        children: /* @__PURE__ */ a(
          ge,
          {
            name: "config.maxLifespan[0]",
            defaultValue: 0,
            control: e.control,
            render: ({ field: f }) => {
              const b = (v) => f.onChange(Math.max(v, 0));
              return /* @__PURE__ */ a(
                is,
                {
                  id: "kc-max-lifespan",
                  "data-testid": "kerberos-cache-lifespan",
                  value: f.value,
                  min: 0,
                  unit: t("ms"),
                  type: "text",
                  onPlus: () => f.onChange(Number(f.value) + 1),
                  onMinus: () => f.onChange(Number(f.value) - 1),
                  onChange: (v) => {
                    const y = Number(v.currentTarget.value);
                    b(isNaN(y) ? 0 : y);
                  }
                }
              );
            }
          }
        )
      }
    ) : null
  ] });
}, pd = ({
  form: e,
  showSectionHeading: t = !1,
  showSectionDescription: n = !1,
  unWrap: r = !1
}) => {
  const { t: i } = H();
  return /* @__PURE__ */ C(ee, { children: [
    t && /* @__PURE__ */ a(
      bs,
      {
        title: i("cacheSettings"),
        description: i("cacheSettingsDescription"),
        showDescription: n
      }
    ),
    r ? /* @__PURE__ */ a(z0, { form: e }) : /* @__PURE__ */ a(Fe, { role: "manage-realm", isHorizontal: !0, children: /* @__PURE__ */ a(z0, { form: e }) })
  ] });
}, NQ = () => {
  const { t: e } = H(), t = Le(), { control: n, watch: r } = t, i = r("config.fullSyncPeriod", "-1"), s = r("config.changedSyncPeriod", "-1");
  return /* @__PURE__ */ C(Ve, { ...t, children: [
    /* @__PURE__ */ a(
      se,
      {
        label: e("periodicFullSync"),
        labelIcon: /* @__PURE__ */ a(
          le,
          {
            helpText: e("periodicFullSyncHelp"),
            fieldLabelId: "periodicFullSync"
          }
        ),
        fieldId: "kc-periodic-full-sync",
        hasNoPaddingTop: !0,
        children: /* @__PURE__ */ a(
          ge,
          {
            name: "config.fullSyncPeriod",
            defaultValue: "-1",
            control: n,
            render: ({ field: o }) => /* @__PURE__ */ a(
              Ye,
              {
                id: "kc-periodic-full-sync",
                "data-testid": "periodic-full-sync",
                onChange: (l, c) => {
                  o.onChange(c ? "604800" : "-1");
                },
                isChecked: o.value !== "-1",
                label: e("on"),
                labelOff: e("off"),
                "aria-label": e("periodicFullSync")
              }
            )
          }
        )
      }
    ),
    i !== "-1" && /* @__PURE__ */ a(
      ve,
      {
        name: "config.fullSyncPeriod",
        label: e("fullSyncPeriod"),
        labelIcon: e("fullSyncPeriodHelp"),
        type: "number",
        min: -1,
        defaultValue: "604800"
      }
    ),
    /* @__PURE__ */ a(
      se,
      {
        label: e("periodicChangedUsersSync"),
        labelIcon: /* @__PURE__ */ a(
          le,
          {
            helpText: e("periodicChangedUsersSyncHelp"),
            fieldLabelId: "periodicChangedUsersSync"
          }
        ),
        fieldId: "kc-periodic-changed-users-sync",
        hasNoPaddingTop: !0,
        children: /* @__PURE__ */ a(
          ge,
          {
            name: "config.changedSyncPeriod",
            defaultValue: "-1",
            control: n,
            render: ({ field: o }) => /* @__PURE__ */ a(
              Ye,
              {
                id: "kc-periodic-changed-users-sync",
                "data-testid": "periodic-changed-users-sync",
                onChange: (l, c) => {
                  o.onChange(c ? "86400" : "-1");
                },
                isChecked: o.value !== "-1",
                label: e("on"),
                labelOff: e("off"),
                "aria-label": e("periodicChangedUsersSync")
              }
            )
          }
        )
      }
    ),
    s !== "-1" && /* @__PURE__ */ a(
      ve,
      {
        name: "config.changedSyncPeriod",
        label: e("changedUsersSyncPeriod"),
        labelIcon: e("changedUsersSyncHelp"),
        type: "number",
        min: -1,
        defaultValue: "86400"
      }
    )
  ] });
};
function DQ() {
  const { adminClient: e } = pe(), { t } = H(), { id: n, providerId: r } = Vt(), i = Je(), s = Ue({
    mode: "onChange"
  }), {
    reset: o,
    setValue: l,
    handleSubmit: c,
    formState: { isDirty: d }
  } = s, { addAlert: u, addError: p } = Se(), { realm: m, realmRepresentation: f } = be(), g = (Tt().componentTypes?.["org.keycloak.storage.UserStorageProvider"] || []).find((v) => v.id === r);
  Re(
    async () => {
      if (n)
        return await e.components.findOne({ id: n });
    },
    (v) => {
      if (v)
        In(v, l);
      else if (n)
        throw new Error(t("notFound"));
    },
    []
  );
  const b = async (v) => {
    const y = Zn({
      ...v,
      config: Object.fromEntries(
        Object.entries(v.config || {}).map(([x, w]) => [
          x,
          Array.isArray(w) ? w : [w]
        ])
      ),
      providerId: r,
      providerType: "org.keycloak.storage.UserStorageProvider",
      parentId: f?.id
    });
    try {
      n ? await e.components.update({ id: n }, y) : (await e.components.create(y), i(ls({ realm: m }))), o({ ...v }), u(
        t(n ? "userProviderSaveSuccess" : "createUserProviderSuccess"),
        ue.success
      );
    } catch (x) {
      p(
        n ? "userProviderSaveError" : "createUserProviderError",
        x
      );
    }
  };
  return /* @__PURE__ */ C(Ve, { ...s, children: [
    /* @__PURE__ */ a(wb, { provider: r, save: () => c(b)() }),
    /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ C(
      Fe,
      {
        role: "manage-realm",
        isHorizontal: !0,
        className: "keycloak__user-federation__custom-form",
        onSubmit: c(b),
        children: [
          /* @__PURE__ */ a(
            ve,
            {
              name: "name",
              label: t("uiDisplayName"),
              labelIcon: t("uiDisplayNameHelp"),
              rules: {
                required: t("validateName")
              }
            }
          ),
          /* @__PURE__ */ a(ur, { properties: g?.properties || [] }),
          g?.metadata.synchronizable && /* @__PURE__ */ a(NQ, {}),
          /* @__PURE__ */ a(pd, { form: s, unWrap: !0 }),
          /* @__PURE__ */ C(st, { children: [
            /* @__PURE__ */ a(
              z,
              {
                isDisabled: !d,
                variant: "primary",
                type: "submit",
                "data-testid": "custom-save",
                children: t("save")
              }
            ),
            /* @__PURE__ */ a(
              z,
              {
                variant: "link",
                component: (v) => /* @__PURE__ */ a(Ae, { ...v, to: ls({ realm: m }) }),
                "data-testid": "custom-cancel",
                children: t("cancel")
              }
            )
          ] })
        ]
      }
    ) })
  ] });
}
const TE = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: DQ
}, Symbol.toStringTag, { value: "Module" })), EE = ({
  form: e,
  showSectionHeading: t = !1,
  showSectionDescription: n = !1
}) => {
  const { t: r } = H(), { realm: i, realmRepresentation: s } = be(), o = nt({
    control: e.control,
    name: "config.allowPasswordAuthentication"
  });
  return He(() => e.setValue("parentId", s?.id), []), /* @__PURE__ */ C(Ve, { ...e, children: [
    t && /* @__PURE__ */ a(
      bs,
      {
        title: r("requiredSettings"),
        description: r("kerberosRequiredSettingsDescription"),
        showDescription: n
      }
    ),
    /* @__PURE__ */ C(Fe, { role: "manage-realm", isHorizontal: !0, children: [
      /* @__PURE__ */ a(
        "input",
        {
          type: "hidden",
          defaultValue: "kerberos",
          ...e.register("providerId")
        }
      ),
      /* @__PURE__ */ a(
        "input",
        {
          type: "hidden",
          defaultValue: "org.keycloak.storage.UserStorageProvider",
          ...e.register("providerType")
        }
      ),
      /* @__PURE__ */ a(
        "input",
        {
          type: "hidden",
          defaultValue: i,
          ...e.register("parentId")
        }
      ),
      /* @__PURE__ */ a(
        ve,
        {
          name: "name",
          label: r("uiDisplayName"),
          labelIcon: r("uiDisplayNameHelp"),
          rules: {
            required: r("validateName")
          }
        }
      ),
      /* @__PURE__ */ a(
        ve,
        {
          name: "config.kerberosRealm.0",
          label: r("kerberosRealm"),
          labelIcon: r("kerberosRealmHelp"),
          rules: {
            required: r("validateRealm")
          }
        }
      ),
      /* @__PURE__ */ a(
        ve,
        {
          name: "config.serverPrincipal.0",
          label: r("serverPrincipal"),
          labelIcon: r("serverPrincipalHelp"),
          rules: {
            required: r("validateServerPrincipal")
          }
        }
      ),
      /* @__PURE__ */ a(
        ve,
        {
          name: "config.keyTab.0",
          label: r("keyTab"),
          labelIcon: r("keyTabHelp"),
          rules: {
            required: r("validateKeyTab")
          }
        }
      ),
      /* @__PURE__ */ a(
        se,
        {
          label: r("debug"),
          labelIcon: /* @__PURE__ */ a(le, { helpText: r("debugHelp"), fieldLabelId: "debug" }),
          fieldId: "kc-debug",
          hasNoPaddingTop: !0,
          children: /* @__PURE__ */ a(
            ge,
            {
              name: "config.debug",
              defaultValue: ["false"],
              control: e.control,
              render: ({ field: l }) => /* @__PURE__ */ a(
                Ye,
                {
                  id: "kc-debug",
                  "data-testid": "debug",
                  onChange: (c, d) => l.onChange([`${d}`]),
                  isChecked: l.value?.[0] === "true",
                  label: r("on"),
                  labelOff: r("off"),
                  "aria-label": r("debug")
                }
              )
            }
          )
        }
      ),
      /* @__PURE__ */ a(
        se,
        {
          label: r("allowPasswordAuthentication"),
          labelIcon: /* @__PURE__ */ a(
            le,
            {
              helpText: r("allowPasswordAuthenticationHelp"),
              fieldLabelId: "allowPasswordAuthentication"
            }
          ),
          fieldId: "kc-allow-password-authentication",
          hasNoPaddingTop: !0,
          children: /* @__PURE__ */ a(
            ge,
            {
              name: "config.allowPasswordAuthentication",
              defaultValue: ["false"],
              control: e.control,
              render: ({ field: l }) => /* @__PURE__ */ a(
                Ye,
                {
                  id: "kc-allow-password-authentication",
                  "data-testid": "allow-password-authentication",
                  onChange: (c, d) => l.onChange([`${d}`]),
                  isChecked: l.value?.[0] === "true",
                  label: r("on"),
                  labelOff: r("off"),
                  "aria-label": r("allowPasswordAuthentication")
                }
              )
            }
          )
        }
      ),
      bi(o, ["true"]) ? /* @__PURE__ */ a(
        at,
        {
          name: "config.editMode[0]",
          label: r("editMode"),
          labelIcon: r("editModeKerberosHelp"),
          controller: {
            rules: { required: r("required") },
            defaultValue: "READ_ONLY"
          },
          options: ["READ_ONLY", "UNSYNCED"]
        }
      ) : null,
      /* @__PURE__ */ a(
        se,
        {
          label: r("updateFirstLogin"),
          labelIcon: /* @__PURE__ */ a(
            le,
            {
              helpText: r("updateFirstLoginHelp"),
              fieldLabelId: "updateFirstLogin"
            }
          ),
          fieldId: "kc-update-first-login",
          hasNoPaddingTop: !0,
          children: /* @__PURE__ */ a(
            ge,
            {
              name: "config.updateProfileFirstLogin",
              defaultValue: ["false"],
              control: e.control,
              render: ({ field: l }) => /* @__PURE__ */ a(
                Ye,
                {
                  id: "kc-update-first-login",
                  "data-testid": "update-first-login",
                  onChange: (c, d) => l.onChange([`${d}`]),
                  isChecked: l.value?.[0] === "true",
                  label: r("on"),
                  labelOff: r("off"),
                  "aria-label": r("updateFirstLogin")
                }
              )
            }
          )
        }
      )
    ] })
  ] });
};
function MQ() {
  const { adminClient: e } = pe(), t = Ue(), [n, r] = N(), [i, s] = N(), { id: o, mapperId: l } = Vt(), c = Je(), { realm: d } = be(), { t: u } = H(), { addAlert: p, addError: m } = Se(), [f, g] = N(!1), [b, v] = N(0), y = () => v(b + 1);
  Re(
    async () => {
      const I = await e.components.listSubComponents({
        id: o,
        type: "org.keycloak.storage.ldap.mappers.LDAPStorageMapper"
      });
      if (l && l !== "new") {
        const k = await e.components.findOne({
          id: l
        });
        return { components: I, fetchedMapper: k };
      }
      return { components: I };
    },
    ({ components: I, fetchedMapper: k }) => {
      if (r(k), s(I), l !== "new" && !k) throw new Error(u("notFound"));
      k && x(k);
    },
    []
  );
  const x = (I) => {
    In(I, t.setValue);
  }, w = async (I) => {
    const k = Zn(I), P = {
      ...k,
      config: Object.entries(k.config || {}).reduce(
        (D, [F, A]) => (D[F] = Array.isArray(A) ? A : [A], D),
        {}
      )
    };
    try {
      l === "new" ? (await e.components.create(P), c(
        Fc({ realm: d, id: I.parentId, tab: "mappers" })
      )) : await e.components.update({ id: l }, P), x(P), p(
        u(
          l === "new" ? "mappingCreatedSuccess" : "mappingUpdatedSuccess"
        ),
        ue.success
      );
    } catch (D) {
      m(
        l === "new" ? "mappingCreatedError" : "mappingUpdatedError",
        D
      );
    }
  }, R = async (I) => {
    try {
      const k = await e.userStorageProvider.mappersSync({
        parentId: n?.parentId || "",
        id: l,
        direction: I
      });
      p(
        u("syncLDAPGroupsSuccessful", {
          result: k.status
        })
      );
    } catch (k) {
      m("syncLDAPGroupsError", k);
    }
    y();
  }, [S, _] = ze({
    titleKey: "deleteMappingTitle",
    messageKey: "deleteMappingConfirm",
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        await e.components.del({
          id: n.id
        }), p(u("mappingDeletedSuccess"), ue.success), c(Fc({ id: o, realm: d, tab: "mappers" }));
      } catch (I) {
        m("mappingDeletedError", I);
      }
    }
  }), O = nt({
    control: t.control,
    name: "providerId"
  });
  if (!i)
    return /* @__PURE__ */ a(gt, {});
  const E = l === "new", T = i.find((I) => I.id === O);
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(_, {}),
    /* @__PURE__ */ a(
      wt,
      {
        titleKey: n ? n.name : u("createNewMapper"),
        dropdownItems: E ? void 0 : [
          /* @__PURE__ */ a(Ke, { onClick: S, children: u("delete") }, "delete"),
          ...T?.metadata.fedToKeycloakSyncSupported ? [
            /* @__PURE__ */ a(
              Ke,
              {
                onClick: () => R("fedToKeycloak"),
                children: u(T.metadata.fedToKeycloakSyncMessage)
              },
              "fedSync"
            )
          ] : [],
          ...T?.metadata.keycloakToFedSyncSupported ? [
            /* @__PURE__ */ a(
              Ke,
              {
                onClick: () => {
                  R("keycloakToFed");
                },
                children: u(T.metadata.keycloakToFedSyncMessage)
              },
              "ldapSync"
            )
          ] : []
        ]
      },
      b
    ),
    /* @__PURE__ */ a(Te, { variant: "light", isFilled: !0, children: /* @__PURE__ */ a(Ve, { ...t, children: /* @__PURE__ */ C(
      Fe,
      {
        role: "manage-realm",
        isHorizontal: !0,
        onSubmit: t.handleSubmit(() => w(t.getValues())),
        children: [
          !E && /* @__PURE__ */ a(ve, { name: "id", label: u("id"), isDisabled: !0 }),
          /* @__PURE__ */ a(
            ve,
            {
              name: "name",
              label: u("name"),
              labelIcon: u("mapperNameHelp"),
              isDisabled: !E,
              rules: { required: u("required") }
            }
          ),
          /* @__PURE__ */ a(
            "input",
            {
              type: "hidden",
              defaultValue: E ? o : n ? n.parentId : "",
              "data-testid": "ldap-mapper-parentId",
              ...t.register("parentId")
            }
          ),
          /* @__PURE__ */ a(
            "input",
            {
              type: "hidden",
              defaultValue: "org.keycloak.storage.ldap.mappers.LDAPStorageMapper",
              "data-testid": "ldap-mapper-provider-type",
              ...t.register("providerType")
            }
          ),
          E ? /* @__PURE__ */ a(
            se,
            {
              label: u("mapperType"),
              labelIcon: /* @__PURE__ */ a(
                le,
                {
                  helpText: T?.helpText ? T.helpText : u("mapperTypeHelp"),
                  fieldLabelId: "mapperType"
                }
              ),
              fieldId: "kc-providerId",
              isRequired: !0,
              children: /* @__PURE__ */ a(
                ge,
                {
                  name: "providerId",
                  defaultValue: "",
                  control: t.control,
                  "data-testid": "ldap-mapper-type-select",
                  render: ({ field: I }) => /* @__PURE__ */ a(
                    ft,
                    {
                      toggleId: "kc-providerId",
                      typeAheadAriaLabel: u("mapperType"),
                      onToggle: () => g(!f),
                      isOpen: f,
                      onSelect: (k) => {
                        x({
                          providerId: k,
                          ...Object.fromEntries(
                            i.find((P) => P.id === k)?.properties.filter((P) => P.type === "List").map((P) => [
                              ma(P.name),
                              P.options?.[0]
                            ]) || []
                          )
                        }), g(!1);
                      },
                      selections: I.value,
                      variant: pt.typeahead,
                      "aria-label": u("selectMapperType"),
                      children: i.map((k) => /* @__PURE__ */ a(_e, { value: k.id, children: k.id }, k.id))
                    }
                  )
                }
              )
            }
          ) : /* @__PURE__ */ a(
            ve,
            {
              name: "providerId",
              label: u("mapperType"),
              labelIcon: T?.helpText ? T.helpText : u("mapperTypeHelp"),
              rules: { required: u("required") },
              isDisabled: !E
            }
          ),
          !!O && /* @__PURE__ */ a(ur, { properties: T?.properties }),
          /* @__PURE__ */ C(st, { children: [
            /* @__PURE__ */ a(
              z,
              {
                isDisabled: !t.formState.isDirty,
                variant: "primary",
                type: "submit",
                "data-testid": "ldap-mapper-save",
                children: u("save")
              }
            ),
            /* @__PURE__ */ a(
              z,
              {
                variant: "link",
                onClick: () => c(E ? -1 : `/${d}/user-federation/ldap/${n.parentId}/mappers`),
                "data-testid": "ldap-mapper-cancel",
                children: u("cancel")
              }
            )
          ] })
        ]
      }
    ) }) })
  ] });
}
const FQ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: MQ
}, Symbol.toStringTag, { value: "Module" })), $Q = ({ toDetail: e, ...t }) => /* @__PURE__ */ a(Ae, { to: e(t.id), children: t.name }), jQ = ({ toCreate: e, toDetail: t }) => {
  const { adminClient: n } = pe(), r = Je(), { t: i } = H(), { addAlert: s, addError: o } = Se(), [l, c] = N(0), d = () => c(l + 1), [u, p] = N([]), m = pa(), { id: f } = Qn(), [g, b] = N();
  Re(
    () => n.components.find({
      parent: f,
      type: "org.keycloak.storage.ldap.mappers.LDAPStorageMapper"
    }),
    (x) => {
      p(
        m(
          x.map((w) => ({
            ...w,
            name: w.name,
            type: w.providerId
          })),
          or("name")
        )
      );
    },
    [l]
  );
  const [v, y] = ze({
    titleKey: i("deleteMappingTitle", { mapperId: g?.id }),
    messageKey: "deleteMappingConfirm",
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        await n.components.del({
          id: g.id
        }), d(), s(i("mappingDeletedSuccess"), ue.success), b(void 0);
      } catch (x) {
        o("mappingDeletedError", x);
      }
    }
  });
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(y, {}),
    /* @__PURE__ */ a(
      St,
      {
        loader: u,
        ariaLabelKey: "ldapMappersList",
        searchPlaceholderKey: "searchForMapper",
        toolbarItem: /* @__PURE__ */ a(je, { children: /* @__PURE__ */ a(
          z,
          {
            "data-testid": "add-mapper-btn",
            variant: "primary",
            component: (x) => /* @__PURE__ */ a(Ae, { ...x, to: e }),
            children: i("addMapper")
          }
        ) }),
        actions: [
          {
            title: i("delete"),
            onRowClick: (x) => {
              b(x), v();
            }
          }
        ],
        columns: [
          {
            name: "name",
            cellRenderer: (x) => /* @__PURE__ */ a($Q, { ...x, toDetail: t })
          },
          {
            name: "type"
          }
        ],
        emptyState: /* @__PURE__ */ a(
          ct,
          {
            message: i("emptyMappers"),
            instructions: i("emptyMappersInstructions"),
            primaryActionText: i("emptyPrimaryAction"),
            onPrimaryAction: () => r(e)
          }
        )
      },
      l
    )
  ] });
}, BQ = [
  "connectionUrl",
  "bindDn",
  "bindCredential",
  "useTruststoreSpi",
  "connectionTimeout",
  "startTls",
  "authType"
], IE = (e) => {
  const t = {};
  return BQ.forEach((n) => {
    const r = Wn(e.getValues(), `config.${n}`);
    t[n] = Array.isArray(r) ? r[0] : "";
  }), t;
}, PE = ({
  form: e,
  id: t,
  showSectionHeading: n = !1,
  showSectionDescription: r = !1
}) => {
  const { adminClient: i } = pe(), { t: s } = H(), { realm: o } = be(), { addAlert: l, addError: c } = Se(), d = !!t, u = async (g) => {
    try {
      const b = IE(e);
      await i.realms.testLDAPConnection(
        { realm: o },
        { ...b, action: g, componentId: t }
      ), l(s("testSuccess"), ue.success);
    } catch (b) {
      c("testError", b);
    }
  }, [p, m] = N(!1), f = nt({
    control: e.control,
    name: "config.authType",
    defaultValue: ["simple"]
  });
  return /* @__PURE__ */ C(Ve, { ...e, children: [
    n && /* @__PURE__ */ a(
      bs,
      {
        title: s("connectionAndAuthenticationSettings"),
        description: s("ldapConnectionAndAuthorizationSettingsDescription"),
        showDescription: r
      }
    ),
    /* @__PURE__ */ C(Fe, { role: "manage-realm", isHorizontal: !0, children: [
      /* @__PURE__ */ a(
        ve,
        {
          name: "config.connectionUrl.0",
          label: s("connectionURL"),
          labelIcon: s("consoleDisplayConnectionUrlHelp"),
          type: "url",
          rules: {
            required: s("validateConnectionUrl")
          }
        }
      ),
      /* @__PURE__ */ a(
        se,
        {
          label: s("enableStartTls"),
          labelIcon: /* @__PURE__ */ a(
            le,
            {
              helpText: s("enableStartTlsHelp"),
              fieldLabelId: "enableStartTls"
            }
          ),
          fieldId: "kc-enable-start-tls",
          hasNoPaddingTop: !0,
          children: /* @__PURE__ */ a(
            ge,
            {
              name: "config.startTls",
              defaultValue: ["false"],
              control: e.control,
              render: ({ field: g }) => /* @__PURE__ */ a(
                Ye,
                {
                  id: "kc-enable-start-tls",
                  "data-testid": "enable-start-tls",
                  isDisabled: !1,
                  onChange: (b, v) => g.onChange([`${v}`]),
                  isChecked: g.value[0] === "true",
                  label: s("on"),
                  labelOff: s("off"),
                  "aria-label": s("enableStartTls")
                }
              )
            }
          )
        }
      ),
      /* @__PURE__ */ a(
        at,
        {
          id: "useTruststoreSpi",
          name: "config.useTruststoreSpi[0]",
          label: s("useTruststoreSpi"),
          labelIcon: s("useTruststoreSpiHelp"),
          controller: {
            defaultValue: "always"
          },
          options: [
            { key: "always", value: s("always") },
            { key: "never", value: s("never") }
          ]
        }
      ),
      /* @__PURE__ */ a(
        se,
        {
          label: s("connectionPooling"),
          labelIcon: /* @__PURE__ */ a(
            le,
            {
              helpText: s("connectionPoolingHelp"),
              fieldLabelId: "connectionPooling"
            }
          ),
          fieldId: "kc-connection-pooling",
          hasNoPaddingTop: !0,
          children: /* @__PURE__ */ a(
            ge,
            {
              name: "config.connectionPooling",
              defaultValue: ["false"],
              control: e.control,
              render: ({ field: g }) => /* @__PURE__ */ a(
                Ye,
                {
                  id: "kc-connection-pooling",
                  "data-testid": "connection-pooling",
                  isDisabled: !1,
                  onChange: (b, v) => g.onChange([`${v}`]),
                  isChecked: g.value[0] === "true",
                  label: s("on"),
                  labelOff: s("off"),
                  "aria-label": s("connectionPooling")
                }
              )
            }
          )
        }
      ),
      /* @__PURE__ */ a(
        ve,
        {
          name: "config.connectionTimeout.0",
          label: s("connectionTimeout"),
          labelIcon: s("connectionTimeoutHelp"),
          type: "number",
          min: 0
        }
      ),
      /* @__PURE__ */ a(se, { fieldId: "kc-test-connection-button", children: /* @__PURE__ */ a(
        z,
        {
          variant: "secondary",
          id: "kc-test-connection-button",
          "data-testid": "test-connection-button",
          onClick: () => u("testConnection"),
          children: s("testConnection")
        }
      ) }),
      /* @__PURE__ */ a(
        se,
        {
          label: s("bindType"),
          labelIcon: /* @__PURE__ */ a(le, { helpText: s("bindTypeHelp"), fieldLabelId: "bindType" }),
          fieldId: "kc-bind-type",
          isRequired: !0,
          children: /* @__PURE__ */ a(
            ge,
            {
              name: "config.authType[0]",
              defaultValue: "simple",
              control: e.control,
              render: ({ field: g }) => /* @__PURE__ */ C(
                ft,
                {
                  toggleId: "kc-bind-type",
                  onToggle: () => m(!p),
                  isOpen: p,
                  onSelect: (b) => {
                    g.onChange(b), m(!1);
                  },
                  selections: g.value,
                  variant: pt.single,
                  "data-testid": "ldap-bind-type",
                  "aria-label": s("selectBindType"),
                  children: [
                    /* @__PURE__ */ a(_e, { value: "simple", children: "simple" }),
                    /* @__PURE__ */ a(_e, { value: "none", children: "none" })
                  ]
                }
              )
            }
          )
        }
      ),
      bi(f, ["simple"]) && /* @__PURE__ */ C(ee, { children: [
        /* @__PURE__ */ a(
          ve,
          {
            name: "config.bindDn.0",
            label: s("bindDn"),
            labelIcon: s("bindDnHelp"),
            rules: {
              required: s("validateBindDn")
            }
          }
        ),
        /* @__PURE__ */ a(
          jo,
          {
            name: "config.bindCredential.0",
            label: s("bindCredentials"),
            labelIcon: s("bindCredentialsHelp"),
            hasReveal: !d,
            rules: {
              required: s("validateBindCredentials")
            }
          }
        )
      ] }),
      /* @__PURE__ */ a(se, { fieldId: "kc-test-auth-button", children: /* @__PURE__ */ a(
        z,
        {
          variant: "secondary",
          id: "kc-test-auth-button",
          "data-testid": "test-auth-button",
          onClick: () => u("testAuthentication"),
          children: s("testAuthentication")
        }
      ) })
    ] })
  ] });
}, UQ = "1.3.6.1.4.1.4203.1.11.1", _E = ({
  id: e,
  form: t,
  showSectionHeading: n = !1,
  showSectionDescription: r = !1
}) => {
  const { adminClient: i } = pe(), { t: s } = H(), { realm: o } = be(), { addAlert: l, addError: c } = Se(), d = async () => {
    if (await t.trigger())
      try {
        const u = IE(t), p = await i.realms.ldapServerCapabilities(
          { realm: o },
          { ...u, componentId: e }
        );
        l(s("testSuccess"));
        const m = p.filter(
          (f) => f.oid === UQ
        );
        t.setValue("config.usePasswordModifyExtendedOp", [
          (m.length > 0).toString()
        ]);
      } catch (u) {
        c("testError", u);
      }
  };
  return /* @__PURE__ */ C(ee, { children: [
    n && /* @__PURE__ */ a(
      bs,
      {
        title: s("advancedSettings"),
        description: s("ldapAdvancedSettingsDescription"),
        showDescription: r
      }
    ),
    /* @__PURE__ */ C(Fe, { role: "manage-realm", isHorizontal: !0, children: [
      /* @__PURE__ */ a(
        se,
        {
          label: s("enableLdapv3Password"),
          labelIcon: /* @__PURE__ */ a(
            le,
            {
              helpText: s("enableLdapv3PasswordHelp"),
              fieldLabelId: "enableLdapv3Password"
            }
          ),
          fieldId: "kc-enable-ldapv3-password",
          hasNoPaddingTop: !0,
          children: /* @__PURE__ */ a(
            ge,
            {
              name: "config.usePasswordModifyExtendedOp",
              defaultValue: ["false"],
              control: t.control,
              render: ({ field: u }) => /* @__PURE__ */ a(
                Ye,
                {
                  id: "kc-enable-ldapv3-password",
                  "data-testid": "ldapv3-password",
                  isDisabled: !1,
                  onChange: (p, m) => u.onChange([`${m}`]),
                  isChecked: u.value[0] === "true",
                  label: s("on"),
                  labelOff: s("off"),
                  "aria-label": s("enableLdapv3Password")
                }
              )
            }
          )
        }
      ),
      /* @__PURE__ */ a(
        se,
        {
          label: s("validatePasswordPolicy"),
          labelIcon: /* @__PURE__ */ a(
            le,
            {
              helpText: s("validatePasswordPolicyHelp"),
              fieldLabelId: "validatePasswordPolicy"
            }
          ),
          fieldId: "kc-validate-password-policy",
          hasNoPaddingTop: !0,
          children: /* @__PURE__ */ a(
            ge,
            {
              name: "config.validatePasswordPolicy",
              defaultValue: ["false"],
              control: t.control,
              render: ({ field: u }) => /* @__PURE__ */ a(
                Ye,
                {
                  id: "kc-validate-password-policy",
                  "data-testid": "password-policy",
                  isDisabled: !1,
                  onChange: (p, m) => u.onChange([`${m}`]),
                  isChecked: u.value[0] === "true",
                  label: s("on"),
                  labelOff: s("off"),
                  "aria-label": s("validatePasswordPolicy")
                }
              )
            }
          )
        }
      ),
      /* @__PURE__ */ a(
        se,
        {
          label: s("trustEmail"),
          labelIcon: /* @__PURE__ */ a(
            le,
            {
              helpText: s("trustEmailHelp"),
              fieldLabelId: "trustEmail"
            }
          ),
          fieldId: "kc-trust-email",
          hasNoPaddingTop: !0,
          children: /* @__PURE__ */ a(
            ge,
            {
              name: "config.trustEmail",
              defaultValue: ["false"],
              control: t.control,
              render: ({ field: u }) => /* @__PURE__ */ a(
                Ye,
                {
                  id: "kc-trust-email",
                  "data-testid": "trust-email",
                  isDisabled: !1,
                  onChange: (p, m) => u.onChange([`${m}`]),
                  isChecked: u.value[0] === "true",
                  label: s("on"),
                  labelOff: s("off"),
                  "aria-label": s("trustEmail")
                }
              )
            }
          )
        }
      ),
      /* @__PURE__ */ a(se, { fieldId: "query-extensions", children: /* @__PURE__ */ a(
        z,
        {
          variant: "secondary",
          id: "query-extensions",
          "data-testid": "query-extensions",
          onClick: d,
          children: s("queryExtensions")
        }
      ) })
    ] })
  ] });
}, RE = ({
  form: e,
  showSectionHeading: t = !1,
  showSectionDescription: n = !1,
  vendorEdit: r = !1
}) => {
  const { t: i } = H(), { realm: s, realmRepresentation: o } = be();
  He(() => e.setValue("parentId", o?.id), []);
  const [l, c] = N(!1), d = () => {
    switch (e.getValues("config.vendor[0]")) {
      case "ad":
        e.setValue("config.usernameLDAPAttribute[0]", "cn"), e.setValue("config.rdnLDAPAttribute[0]", "cn"), e.setValue("config.uuidLDAPAttribute[0]", "objectGUID"), e.setValue("config.krbPrincipalAttribute[0]", "userPrincipalName"), e.setValue(
          "config.userObjectClasses[0]",
          "person, organizationalPerson, user"
        );
        break;
      case "rhds":
        e.setValue("config.usernameLDAPAttribute[0]", "uid"), e.setValue("config.rdnLDAPAttribute[0]", "uid"), e.setValue("config.uuidLDAPAttribute[0]", "nsuniqueid"), e.setValue("config.krbPrincipalAttribute[0]", "krbPrincipalName"), e.setValue(
          "config.userObjectClasses[0]",
          "inetOrgPerson, organizationalPerson"
        );
        break;
      case "tivoli":
        e.setValue("config.usernameLDAPAttribute[0]", "uid"), e.setValue("config.rdnLDAPAttribute[0]", "uid"), e.setValue("config.uuidLDAPAttribute[0]", "uniqueidentifier"), e.setValue("config.krbPrincipalAttribute[0]", "krb5PrincipalName"), e.setValue(
          "config.userObjectClasses[0]",
          "inetOrgPerson, organizationalPerson"
        );
        break;
      case "edirectory":
        e.setValue("config.usernameLDAPAttribute[0]", "uid"), e.setValue("config.rdnLDAPAttribute[0]", "uid"), e.setValue("config.uuidLDAPAttribute[0]", "guid"), e.setValue("config.krbPrincipalAttribute[0]", "krb5PrincipalName"), e.setValue(
          "config.userObjectClasses[0]",
          "inetOrgPerson, organizationalPerson"
        );
        break;
      case "other":
        e.setValue("config.usernameLDAPAttribute[0]", "uid"), e.setValue("config.rdnLDAPAttribute[0]", "uid"), e.setValue("config.uuidLDAPAttribute[0]", "entryUUID"), e.setValue("config.krbPrincipalAttribute[0]", "krb5PrincipalName"), e.setValue(
          "config.userObjectClasses[0]",
          "inetOrgPerson, organizationalPerson"
        );
        break;
      default:
        return "";
    }
  };
  return /* @__PURE__ */ C(Ve, { ...e, children: [
    t && /* @__PURE__ */ a(
      bs,
      {
        title: i("generalOptions"),
        description: i("ldapGeneralOptionsSettingsDescription"),
        showDescription: n
      }
    ),
    /* @__PURE__ */ C(Fe, { role: "manage-realm", isHorizontal: !0, children: [
      /* @__PURE__ */ a(
        "input",
        {
          type: "hidden",
          defaultValue: "ldap",
          ...e.register("providerId")
        }
      ),
      /* @__PURE__ */ a(
        "input",
        {
          type: "hidden",
          defaultValue: "org.keycloak.storage.UserStorageProvider",
          ...e.register("providerType")
        }
      ),
      /* @__PURE__ */ a(
        "input",
        {
          type: "hidden",
          defaultValue: s,
          ...e.register("parentId")
        }
      ),
      /* @__PURE__ */ a(
        ve,
        {
          name: "name",
          label: i("uiDisplayName"),
          labelIcon: i("uiDisplayNameHelp"),
          defaultValue: "ldap",
          rules: {
            required: i("validateName")
          }
        }
      ),
      /* @__PURE__ */ a(
        se,
        {
          label: i("vendor"),
          labelIcon: /* @__PURE__ */ a(le, { helpText: i("vendorHelp"), fieldLabelId: "vendor" }),
          fieldId: "kc-vendor",
          isRequired: !0,
          children: /* @__PURE__ */ a(
            ge,
            {
              name: "config.vendor[0]",
              defaultValue: "ad",
              control: e.control,
              render: ({ field: u }) => /* @__PURE__ */ C(
                ft,
                {
                  isDisabled: !!r,
                  toggleId: "kc-vendor",
                  onToggle: () => c(!l),
                  isOpen: l,
                  onSelect: (p) => {
                    u.onChange(p), c(!1), d();
                  },
                  selections: u.value,
                  variant: pt.single,
                  "aria-label": i("selectVendor"),
                  children: [
                    /* @__PURE__ */ a(_e, { value: "ad", children: "Active Directory" }, 0),
                    /* @__PURE__ */ a(_e, { value: "rhds", children: "Red Hat Directory Server" }, 1),
                    /* @__PURE__ */ a(_e, { value: "tivoli", children: "Tivoli" }, 2),
                    /* @__PURE__ */ a(_e, { value: "edirectory", children: "Novell eDirectory" }, 3),
                    /* @__PURE__ */ a(_e, { value: "other", children: "Other" }, 4)
                  ]
                }
              )
            }
          )
        }
      )
    ] })
  ] });
}, AE = ({
  form: e,
  showSectionHeading: t = !1,
  showSectionDescription: n = !1
}) => {
  const { t: r } = H(), i = nt({
    control: e.control,
    name: "config.allowKerberosAuthentication",
    defaultValue: ["false"]
  });
  return /* @__PURE__ */ C(Ve, { ...e, children: [
    t && /* @__PURE__ */ a(
      bs,
      {
        title: r("kerberosIntegration"),
        description: r("ldapKerberosSettingsDescription"),
        showDescription: n
      }
    ),
    /* @__PURE__ */ C(Fe, { role: "manage-realm", isHorizontal: !0, children: [
      /* @__PURE__ */ a(
        se,
        {
          label: r("allowKerberosAuthentication"),
          labelIcon: /* @__PURE__ */ a(
            le,
            {
              helpText: r("allowKerberosAuthenticationHelp"),
              fieldLabelId: "allowKerberosAuthentication"
            }
          ),
          fieldId: "kc-allow-kerberos-authentication",
          hasNoPaddingTop: !0,
          children: /* @__PURE__ */ a(
            ge,
            {
              name: "config.allowKerberosAuthentication",
              defaultValue: ["false"],
              control: e.control,
              render: ({ field: s }) => /* @__PURE__ */ a(
                Ye,
                {
                  id: "kc-allow-kerberos-authentication",
                  "data-testid": "allow-kerberos-auth",
                  isDisabled: !1,
                  onChange: (o, l) => s.onChange([`${l}`]),
                  isChecked: s.value[0] === "true",
                  label: r("on"),
                  labelOff: r("off"),
                  "aria-label": r("allowKerberosAuthentication")
                }
              )
            }
          )
        }
      ),
      i[0] === "true" && /* @__PURE__ */ C(ee, { children: [
        /* @__PURE__ */ a(
          ve,
          {
            name: "config.kerberosRealm.0",
            label: r("kerberosRealm"),
            labelIcon: r("kerberosRealmHelp"),
            rules: {
              required: r("validateRealm")
            }
          }
        ),
        /* @__PURE__ */ a(
          ve,
          {
            name: "config.serverPrincipal.0",
            label: r("serverPrincipal"),
            labelIcon: r("serverPrincipalHelp"),
            rules: {
              required: r("validateServerPrincipal")
            }
          }
        ),
        /* @__PURE__ */ a(
          ve,
          {
            name: "config.keyTab.0",
            label: r("keyTab"),
            labelIcon: r("keyTabHelp"),
            rules: {
              required: r("validateKeyTab")
            }
          }
        ),
        /* @__PURE__ */ a(
          ve,
          {
            name: "config.krbPrincipalAttribute.0",
            label: r("krbPrincipalAttribute"),
            labelIcon: r("krbPrincipalAttributeHelp")
          }
        ),
        /* @__PURE__ */ a(
          se,
          {
            label: r("debug"),
            labelIcon: /* @__PURE__ */ a(le, { helpText: r("debugHelp"), fieldLabelId: "debug" }),
            fieldId: "kc-debug",
            hasNoPaddingTop: !0,
            children: /* @__PURE__ */ a(
              ge,
              {
                name: "config.debug",
                defaultValue: ["false"],
                control: e.control,
                render: ({ field: s }) => /* @__PURE__ */ a(
                  Ye,
                  {
                    id: "kc-debug",
                    "data-testid": "debug",
                    isDisabled: !1,
                    onChange: (o, l) => s.onChange([`${l}`]),
                    isChecked: s.value[0] === "true",
                    label: r("on"),
                    labelOff: r("off"),
                    "aria-label": r("debug")
                  }
                )
              }
            )
          }
        )
      ] }),
      /* @__PURE__ */ a(
        se,
        {
          label: r("useKerberosForPasswordAuthentication"),
          labelIcon: /* @__PURE__ */ a(
            le,
            {
              helpText: r("useKerberosForPasswordAuthenticationHelp"),
              fieldLabelId: "useKerberosForPasswordAuthentication"
            }
          ),
          fieldId: "kc-use-kerberos-password-authentication",
          hasNoPaddingTop: !0,
          children: /* @__PURE__ */ a(
            ge,
            {
              name: "config.useKerberosForPasswordAuthentication",
              defaultValue: ["false"],
              control: e.control,
              render: ({ field: s }) => /* @__PURE__ */ a(
                Ye,
                {
                  id: "kc-use-kerberos-password-authentication",
                  "data-testid": "use-kerberos-pw-auth",
                  isDisabled: !1,
                  onChange: (o, l) => s.onChange([`${l}`]),
                  isChecked: s.value[0] === "true",
                  label: r("on"),
                  labelOff: r("off"),
                  "aria-label": r("useKerberosForPasswordAuthentication")
                }
              )
            }
          )
        }
      )
    ] })
  ] });
}, LE = ({
  form: e,
  showSectionHeading: t = !1,
  showSectionDescription: n = !1
}) => {
  const { t: r } = H();
  return /* @__PURE__ */ C(Ve, { ...e, children: [
    t && /* @__PURE__ */ a(
      bs,
      {
        title: r("ldapSearchingAndUpdatingSettings"),
        description: r("ldapSearchingAndUpdatingSettingsDescription"),
        showDescription: n
      }
    ),
    /* @__PURE__ */ C(Fe, { role: "manage-realm", isHorizontal: !0, children: [
      /* @__PURE__ */ a(
        at,
        {
          id: "editMode",
          name: "config.editMode[0]",
          label: r("editMode"),
          labelIcon: r("editModeLdapHelp"),
          controller: {
            defaultValue: "",
            rules: {
              required: { value: !0, message: r("validateEditMode") }
            }
          },
          options: ["", "READ_ONLY", "WRITABLE", "UNSYNCED"]
        }
      ),
      /* @__PURE__ */ a(
        ve,
        {
          name: "config.usersDn.0",
          label: r("usersDN"),
          labelIcon: r("usersDNHelp"),
          rules: {
            required: r("validateUsersDn")
          }
        }
      ),
      /* @__PURE__ */ a(
        ve,
        {
          name: "config.usernameLDAPAttribute.0",
          label: r("usernameLdapAttribute"),
          labelIcon: r("usernameLdapAttributeHelp"),
          defaultValue: "cn",
          rules: {
            required: r("validateUsernameLDAPAttribute")
          }
        }
      ),
      /* @__PURE__ */ a(
        ve,
        {
          name: "config.rdnLDAPAttribute.0",
          label: r("rdnLdapAttribute"),
          labelIcon: r("rdnLdapAttributeHelp"),
          defaultValue: "cn",
          rules: {
            required: r("validateRdnLdapAttribute")
          }
        }
      ),
      /* @__PURE__ */ a(
        ve,
        {
          name: "config.uuidLDAPAttribute.0",
          label: r("uuidLdapAttribute"),
          labelIcon: r("uuidLdapAttributeHelp"),
          defaultValue: "objectGUID",
          rules: {
            required: r("validateUuidLDAPAttribute")
          }
        }
      ),
      /* @__PURE__ */ a(
        ve,
        {
          name: "config.userObjectClasses.0",
          label: r("userObjectClasses"),
          labelIcon: r("userObjectClassesHelp"),
          defaultValue: "person, organizationalPerson, user",
          rules: {
            required: r("validateUserObjectClasses")
          }
        }
      ),
      /* @__PURE__ */ a(
        ve,
        {
          name: "config.customUserSearchFilter.0",
          label: r("userLdapFilter"),
          labelIcon: r("userLdapFilterHelp"),
          rules: {
            pattern: {
              value: /(\(.*\))$/,
              message: r("validateCustomUserSearchFilter")
            }
          }
        }
      ),
      /* @__PURE__ */ a(
        at,
        {
          id: "kc-search-scope",
          name: "config.searchScope[0]",
          label: r("searchScope"),
          labelIcon: r("searchScopeHelp"),
          controller: {
            defaultValue: "1"
          },
          options: [
            { key: "1", value: r("oneLevel") },
            { key: "2", value: r("subtree") }
          ]
        }
      ),
      /* @__PURE__ */ a(
        ve,
        {
          name: "config.readTimeout.0",
          label: r("readTimeout"),
          labelIcon: r("readTimeoutHelp"),
          type: "number",
          min: 0
        }
      ),
      /* @__PURE__ */ a(
        se,
        {
          label: r("pagination"),
          labelIcon: /* @__PURE__ */ a(
            le,
            {
              helpText: r("paginationHelp"),
              fieldLabelId: "pagination"
            }
          ),
          fieldId: "kc-ui-pagination",
          hasNoPaddingTop: !0,
          children: /* @__PURE__ */ a(
            ge,
            {
              name: "config.pagination",
              defaultValue: ["false"],
              control: e.control,
              render: ({ field: i }) => /* @__PURE__ */ a(
                Ye,
                {
                  id: "kc-ui-pagination",
                  "data-testid": "ui-pagination",
                  isDisabled: !1,
                  onChange: (s, o) => i.onChange([`${o}`]),
                  isChecked: i.value[0] === "true",
                  label: r("on"),
                  labelOff: r("off"),
                  "aria-label": r("pagination")
                }
              )
            }
          )
        }
      ),
      /* @__PURE__ */ a(
        at,
        {
          name: "config.referral.0",
          label: r("referral"),
          labelIcon: r("referralHelp"),
          controller: {
            defaultValue: ""
          },
          options: ["ignore", "follow"]
        }
      )
    ] })
  ] });
}, NE = ({
  form: e,
  showSectionHeading: t = !1,
  showSectionDescription: n = !1
}) => {
  const { t: r } = H(), i = e.watch("config.periodicFullSync", !1), s = e.watch("config.periodicChangedUsersSync", !1);
  return /* @__PURE__ */ C(Ve, { ...e, children: [
    t && /* @__PURE__ */ a(
      bs,
      {
        title: r("synchronizationSettings"),
        description: r("ldapSynchronizationSettingsDescription"),
        showDescription: n
      }
    ),
    /* @__PURE__ */ C(Fe, { role: "manage-realm", isHorizontal: !0, children: [
      /* @__PURE__ */ a(
        se,
        {
          hasNoPaddingTop: !0,
          label: r("importUsers"),
          labelIcon: /* @__PURE__ */ a(
            le,
            {
              helpText: r("importUsersHelp"),
              fieldLabelId: "importUsers"
            }
          ),
          fieldId: "kc-import-users",
          children: /* @__PURE__ */ a(
            ge,
            {
              name: "config.importEnabled",
              defaultValue: ["true"],
              control: e.control,
              render: ({ field: o }) => /* @__PURE__ */ a(
                Ye,
                {
                  id: "kc-import-users",
                  "data-testid": "import-users",
                  name: "importEnabled",
                  label: r("on"),
                  labelOff: r("off"),
                  onChange: (l, c) => o.onChange([`${c}`]),
                  isChecked: o.value[0] === "true",
                  isDisabled: !1,
                  "aria-label": r("importUsers")
                }
              )
            }
          )
        }
      ),
      /* @__PURE__ */ a(
        se,
        {
          hasNoPaddingTop: !0,
          label: r("syncRegistrations"),
          labelIcon: /* @__PURE__ */ a(
            le,
            {
              helpText: r("syncRegistrations"),
              fieldLabelId: "syncRegistrations"
            }
          ),
          fieldId: "syncRegistrations",
          children: /* @__PURE__ */ a(
            ge,
            {
              name: "config.syncRegistrations",
              defaultValue: ["true"],
              control: e.control,
              render: ({ field: o }) => /* @__PURE__ */ a(
                Ye,
                {
                  id: "syncRegistrations",
                  "data-testid": "syncRegistrations",
                  label: r("on"),
                  labelOff: r("off"),
                  onChange: (l, c) => o.onChange([`${c}`]),
                  isChecked: o.value[0] === "true",
                  "aria-label": r("syncRegistrations")
                }
              )
            }
          )
        }
      ),
      /* @__PURE__ */ a(
        ve,
        {
          name: "config.batchSizeForSync.0",
          type: "number",
          min: 0,
          label: r("batchSize"),
          labelIcon: r("batchSizeHelp")
        }
      ),
      /* @__PURE__ */ a(
        se,
        {
          label: r("periodicFullSync"),
          labelIcon: /* @__PURE__ */ a(
            le,
            {
              helpText: r("periodicFullSyncHelp"),
              fieldLabelId: "periodicFullSync"
            }
          ),
          fieldId: "kc-periodic-full-sync",
          hasNoPaddingTop: !0,
          children: /* @__PURE__ */ a(
            ge,
            {
              name: "config.periodicFullSync",
              defaultValue: !1,
              control: e.control,
              render: ({ field: o }) => /* @__PURE__ */ a(
                Ye,
                {
                  id: "kc-periodic-full-sync",
                  "data-testid": "periodic-full-sync",
                  isDisabled: !1,
                  onChange: (l, c) => o.onChange(c),
                  isChecked: o.value === !0,
                  label: r("on"),
                  labelOff: r("off"),
                  "aria-label": r("periodicFullSync")
                }
              )
            }
          )
        }
      ),
      i && /* @__PURE__ */ a(
        ve,
        {
          name: "config.fullSyncPeriod.0",
          label: r("fullSyncPeriod"),
          labelIcon: r("fullSyncPeriodHelp"),
          type: "number",
          min: -1,
          defaultValue: 604800
        }
      ),
      /* @__PURE__ */ a(
        se,
        {
          label: r("periodicChangedUsersSync"),
          labelIcon: /* @__PURE__ */ a(
            le,
            {
              helpText: r("periodicChangedUsersSyncHelp"),
              fieldLabelId: "periodicChangedUsersSync"
            }
          ),
          fieldId: "kc-periodic-changed-users-sync",
          hasNoPaddingTop: !0,
          children: /* @__PURE__ */ a(
            ge,
            {
              name: "config.periodicChangedUsersSync",
              defaultValue: !1,
              control: e.control,
              render: ({ field: o }) => /* @__PURE__ */ a(
                Ye,
                {
                  id: "kc-periodic-changed-users-sync",
                  "data-testid": "periodic-changed-users-sync",
                  isDisabled: !1,
                  onChange: (l, c) => o.onChange(c),
                  isChecked: o.value === !0,
                  label: r("on"),
                  labelOff: r("off"),
                  "aria-label": r("periodicChangedUsersSync")
                }
              )
            }
          )
        }
      ),
      s && /* @__PURE__ */ a(
        ve,
        {
          name: "config.changedSyncPeriod.0",
          label: r("changedUsersSyncPeriod"),
          labelIcon: r("changedUsersSyncHelp"),
          type: "number",
          min: -1,
          defaultValue: 86400
        }
      )
    ] })
  ] });
}, DE = ({
  id: e,
  onSubmit: t
}) => {
  const { t: n } = H(), r = Le(), i = Je(), { realm: s } = be(), o = oa();
  return /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(
      ll,
      {
        label: n("jumpToSection"),
        sections: [
          {
            title: n("generalOptions"),
            panel: /* @__PURE__ */ a(RE, { form: r, vendorEdit: !!e })
          },
          {
            title: n("connectionAndAuthenticationSettings"),
            panel: /* @__PURE__ */ a(PE, { form: r, id: e })
          },
          {
            title: n("ldapSearchingAndUpdatingSettings"),
            panel: /* @__PURE__ */ a(LE, { form: r })
          },
          {
            title: n("synchronizationSettings"),
            panel: /* @__PURE__ */ a(NE, { form: r })
          },
          {
            title: n("kerberosIntegration"),
            panel: /* @__PURE__ */ a(AE, { form: r }),
            isHidden: !o(zn.Kerberos)
          },
          { title: n("cacheSettings"), panel: /* @__PURE__ */ a(pd, { form: r }) },
          {
            title: n("advancedSettings"),
            panel: /* @__PURE__ */ a(_E, { form: r, id: e })
          }
        ]
      }
    ),
    /* @__PURE__ */ a(xt, { onSubmit: r.handleSubmit(t), children: /* @__PURE__ */ a(
      _r,
      {
        name: "ldap",
        isActive: r.formState.isDirty,
        isSubmit: !0,
        children: /* @__PURE__ */ a(
          z,
          {
            variant: "link",
            onClick: () => i(ls({ realm: s })),
            "data-testid": "ldap-cancel",
            children: n("cancel")
          }
        )
      }
    ) })
  ] });
};
function ME(e) {
  const { config: t } = e;
  return t?.periodicChangedUsersSync !== void 0 && (t.periodicChangedUsersSync === !1 && (t.changedSyncPeriod = ["-1"]), delete t.periodicChangedUsersSync), t?.periodicFullSync !== void 0 && (t.periodicFullSync === !1 && (t.fullSyncPeriod = ["-1"]), delete t.periodicFullSync), e;
}
function VQ() {
  const { adminClient: e } = pe(), { t } = H(), n = Ue({ mode: "onChange" }), r = Je(), { realm: i } = be(), { addAlert: s, addError: o } = Se(), l = async (c) => {
    try {
      await e.components.create(ME(c)), s(t("createUserProviderSuccess"), ue.success), r(ls({ realm: i }));
    } catch (d) {
      o("createUserProviderError", d);
    }
  };
  return /* @__PURE__ */ C(Ve, { ...n, children: [
    /* @__PURE__ */ a(
      wb,
      {
        provider: "LDAP",
        noDivider: !0,
        save: () => n.handleSubmit(l)()
      }
    ),
    /* @__PURE__ */ a(Te, { variant: "light", className: "pf-v5-u-p-0", children: /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ a(DE, { onSubmit: l }) }) })
  ] });
}
const KQ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: VQ
}, Symbol.toStringTag, { value: "Module" })), HQ = ({
  components: e,
  onClose: t
}) => {
  const { adminClient: n } = pe(), { t: r } = H(), { addAlert: i, addError: s } = Se(), [o, l] = N(""), [c, d] = N(
    zr(e, "config.priority", "name").map(
      (f) => f.name
    )
  ), u = ({ index: f }) => (l(r("onDragStart", { item: c[f] })), !0), p = ({ index: f }) => {
    l(r("onDragMove", { item: c[f] }));
  }, m = (f, g) => {
    if (g) {
      const b = [...c], [v] = b.splice(f.index, 1);
      return b.splice(g.index, 0, v), l(r("onDragFinish", { list: b })), d(b), !0;
    } else
      return l(r("onDragCancel")), !1;
  };
  return /* @__PURE__ */ C(
    ht,
    {
      variant: Rt.small,
      title: r("managePriorityOrder"),
      isOpen: !0,
      onClose: t,
      actions: [
        /* @__PURE__ */ a(
          z,
          {
            id: "modal-confirm",
            onClick: async () => {
              const f = c.map((g, b) => {
                const v = e.find((y) => y.name === g);
                return v.config.priority = [b.toString()], n.components.update(
                  { id: v.id },
                  v
                );
              });
              try {
                await Promise.all(f), i(r("orderChangeSuccessUserFed"));
              } catch (g) {
                s("orderChangeErrorUserFed", g);
              }
              t();
            },
            children: r("save")
          },
          "confirm"
        ),
        /* @__PURE__ */ a(
          z,
          {
            id: "modal-cancel",
            variant: xe.link,
            onClick: t,
            children: r("cancel")
          },
          "cancel"
        )
      ],
      children: [
        /* @__PURE__ */ a(Pt, { className: "pf-v5-u-pb-lg", children: /* @__PURE__ */ a(tt, { children: r("managePriorityInfo") }) }),
        /* @__PURE__ */ a(
          Ah,
          {
            onDrag: u,
            onDragMove: p,
            onDrop: m,
            children: /* @__PURE__ */ a(Nh, { hasNoWrapper: !0, children: /* @__PURE__ */ a(
              ar,
              {
                "aria-label": r("manageOrderTableAria"),
                "data-testid": "manageOrderDataList",
                isCompact: !0,
                children: c.map((f) => /* @__PURE__ */ a(Lh, { hasNoWrapper: !0, children: /* @__PURE__ */ a(Ta, { "aria-label": f, id: f, children: /* @__PURE__ */ C(Ba, { children: [
                  /* @__PURE__ */ a(_h, { children: /* @__PURE__ */ a(Rh, { "aria-label": r("dragHelp") }) }),
                  /* @__PURE__ */ a(
                    ja,
                    {
                      dataListCells: [
                        /* @__PURE__ */ a(aa, { "data-testid": f, children: f }, f)
                      ]
                    }
                  )
                ] }) }) }, f))
              }
            ) })
          }
        ),
        /* @__PURE__ */ a("div", { className: "pf-v5-screen-reader", "aria-live": "assertive", children: o })
      ]
    }
  );
};
function zQ() {
  const { adminClient: e } = pe(), { t } = H(), n = Ue({ mode: "onChange" }), r = Je(), { realm: i } = be(), { id: s } = Vt(), { addAlert: o, addError: l } = Se();
  Re(
    async () => {
      if (s)
        return e.components.findOne({ id: s });
    },
    (u) => {
      if (u)
        c(u);
      else if (s)
        throw new Error(t("notFound"));
    },
    []
  );
  const c = (u) => {
    n.reset({ ...u });
  }, d = async (u) => {
    try {
      s ? await e.components.update({ id: s }, u) : (await e.components.create(u), r(`/${i}/user-federation`)), c(u), o(
        t(s ? "userProviderSaveSuccess" : "createUserProviderSuccess"),
        ue.success
      );
    } catch (p) {
      l(
        s ? "userProviderSaveError" : "createUserProviderError",
        p
      );
    }
  };
  return /* @__PURE__ */ C(Ve, { ...n, children: [
    /* @__PURE__ */ a(OE, { provider: "Kerberos", save: () => n.handleSubmit(d)() }),
    /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ a(EE, { form: n, showSectionHeading: !0 }) }),
    /* @__PURE__ */ C(Te, { variant: "light", isFilled: !0, children: [
      /* @__PURE__ */ a(pd, { form: n, showSectionHeading: !0 }),
      /* @__PURE__ */ a(xt, { onSubmit: n.handleSubmit(d), children: /* @__PURE__ */ C(st, { children: [
        /* @__PURE__ */ a(
          z,
          {
            isDisabled: !n.formState.isDirty,
            variant: "primary",
            type: "submit",
            "data-testid": "kerberos-save",
            children: t("save")
          }
        ),
        /* @__PURE__ */ a(
          z,
          {
            variant: "link",
            onClick: () => r(ls({ realm: i })),
            "data-testid": "kerberos-cancel",
            children: t("cancel")
          }
        )
      ] }) })
    ] })
  ] });
}
const FE = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: zQ
}, Symbol.toStringTag, { value: "Module" })), qQ = () => {
  const { t: e } = H(), { activeStep: t, goToNextStep: n, goToPrevStep: r, close: i } = zs();
  return /* @__PURE__ */ a(
    Xc,
    {
      activeStep: t,
      onNext: n,
      onBack: r,
      onClose: i,
      isBackDisabled: t.index === 1,
      backButtonText: e("back"),
      nextButtonText: e("next"),
      cancelButtonText: e("cancel")
    }
  );
}, xee = () => {
  const { t: e } = H(), t = Ue({ mode: "onChange" });
  return /* @__PURE__ */ C(ep, { height: "100%", footer: /* @__PURE__ */ a(qQ, {}), children: [
    /* @__PURE__ */ a(
      ca,
      {
        name: e("requiredSettings"),
        id: "kerberosRequiredSettingsStep",
        children: /* @__PURE__ */ a(
          EE,
          {
            form: t,
            showSectionHeading: !0,
            showSectionDescription: !0
          }
        )
      }
    ),
    /* @__PURE__ */ a(
      ca,
      {
        name: e("cacheSettings"),
        id: "cacheSettingsStep",
        footer: {
          backButtonText: e("back"),
          nextButtonText: e("finish"),
          cancelButtonText: e("cancel")
        },
        children: /* @__PURE__ */ a(pd, { form: t, showSectionHeading: !0, showSectionDescription: !0 })
      }
    )
  ] });
};
function GQ() {
  const { adminClient: e } = pe(), { t } = H(), n = Ue({ mode: "onChange" }), { realm: r } = be(), { id: i } = Qn(), { addAlert: s, addError: o } = Se(), [l, c] = N(), [d, u] = N(0), p = () => u((y) => y + 1);
  Re(
    () => e.components.findOne({ id: i }),
    (y) => {
      if (!y)
        throw new Error(t("notFound"));
      c(y), b(y);
    },
    [i, d]
  );
  const m = (y) => jn(Fc({ realm: r, id: i, tab: y })), f = m("settings"), g = m("mappers"), b = (y) => {
    n.reset(y), n.setValue(
      "config.periodicChangedUsersSync",
      y.config?.changedSyncPeriod?.[0] !== "-1"
    ), n.setValue(
      "config.periodicFullSync",
      y.config?.fullSyncPeriod?.[0] !== "-1"
    );
  }, v = async (y) => {
    try {
      await e.components.update(
        { id: i },
        ME(y)
      ), s(t("userProviderSaveSuccess"), ue.success), p();
    } catch (x) {
      o("userProviderSaveError", x);
    }
  };
  return l ? /* @__PURE__ */ C(Ve, { ...n, children: [
    /* @__PURE__ */ a(
      wb,
      {
        provider: "LDAP",
        noDivider: !0,
        editMode: l.config?.editMode,
        save: () => n.handleSubmit(v)()
      }
    ),
    /* @__PURE__ */ a(Te, { variant: "light", className: "pf-v5-u-p-0", children: /* @__PURE__ */ C(
      $n,
      {
        defaultLocation: Fc({
          realm: r,
          id: i,
          tab: "settings"
        }),
        isBox: !0,
        children: [
          /* @__PURE__ */ a(
            Ee,
            {
              id: "settings",
              title: /* @__PURE__ */ a(Ie, { children: t("settings") }),
              ...f,
              children: /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ a(DE, { id: i, onSubmit: v }) })
            }
          ),
          /* @__PURE__ */ a(
            Ee,
            {
              id: "mappers",
              title: /* @__PURE__ */ a(Ie, { children: t("mappers") }),
              "data-testid": "ldap-mappers-tab",
              ...g,
              children: /* @__PURE__ */ a(
                jQ,
                {
                  toCreate: w0({
                    realm: r,
                    id: i,
                    mapperId: "new"
                  }),
                  toDetail: (y) => w0({
                    realm: r,
                    id: i,
                    mapperId: y
                  })
                }
              )
            }
          )
        ]
      }
    ) })
  ] }) : /* @__PURE__ */ a(gt, {});
}
const WQ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: GQ
}, Symbol.toStringTag, { value: "Module" })), XQ = () => {
  const { t: e } = H(), { activeStep: t, goToNextStep: n, goToPrevStep: r, close: i } = zs();
  return /* @__PURE__ */ a(
    Xc,
    {
      activeStep: t,
      onNext: n,
      onBack: r,
      onClose: i,
      isBackDisabled: t.index === 1,
      backButtonText: e("back"),
      nextButtonText: e("next"),
      cancelButtonText: e("cancel")
    }
  );
}, Wm = () => {
  const { goToNextStep: e, goToPrevStep: t, close: n } = zs(), { t: r } = H();
  return /* @__PURE__ */ C(eg, { children: [
    /* @__PURE__ */ a(z, { variant: "secondary", onClick: t, children: r("back") }),
    /* @__PURE__ */ a(z, { variant: "primary", type: "submit", onClick: e, children: r("next") }),
    /* @__PURE__ */ a(z, { variant: "link", children: r("skipCustomizationAndFinish") }),
    /* @__PURE__ */ a(z, { variant: "link", onClick: n, children: r("cancel") })
  ] });
}, See = () => {
  const e = Ue(), { t } = H(), n = oa();
  return /* @__PURE__ */ C(ep, { height: "100%", footer: /* @__PURE__ */ a(XQ, {}), children: [
    /* @__PURE__ */ a(ca, { name: t("requiredSettings"), id: "ldapRequiredSettingsStep", children: /* @__PURE__ */ a(
      RE,
      {
        form: e,
        showSectionHeading: !0,
        showSectionDescription: !0
      }
    ) }),
    /* @__PURE__ */ a(
      ca,
      {
        name: t("connectionAndAuthenticationSettings"),
        id: "ldapConnectionSettingsStep",
        children: /* @__PURE__ */ a(
          PE,
          {
            form: e,
            showSectionHeading: !0,
            showSectionDescription: !0
          }
        )
      }
    ),
    /* @__PURE__ */ a(
      ca,
      {
        name: t("ldapSearchingAndUpdatingSettings"),
        id: "ldapSearchingSettingsStep",
        children: /* @__PURE__ */ a(
          LE,
          {
            form: e,
            showSectionHeading: !0,
            showSectionDescription: !0
          }
        )
      }
    ),
    /* @__PURE__ */ a(
      ca,
      {
        name: t("synchronizationSettings"),
        id: "ldapSynchronizationSettingsStep",
        footer: /* @__PURE__ */ a(Wm, {}),
        children: /* @__PURE__ */ a(
          NE,
          {
            form: e,
            showSectionHeading: !0,
            showSectionDescription: !0
          }
        )
      }
    ),
    /* @__PURE__ */ a(
      ca,
      {
        name: t("kerberosIntegration"),
        id: "ldapKerberosIntegrationSettingsStep",
        isDisabled: !n(zn.Kerberos),
        footer: /* @__PURE__ */ a(Wm, {}),
        children: /* @__PURE__ */ a(
          AE,
          {
            form: e,
            showSectionHeading: !0,
            showSectionDescription: !0
          }
        )
      }
    ),
    /* @__PURE__ */ a(
      ca,
      {
        name: t("cacheSettings"),
        id: "ldapCacheSettingsStep",
        footer: /* @__PURE__ */ a(Wm, {}),
        children: /* @__PURE__ */ a(pd, { form: e, showSectionHeading: !0, showSectionDescription: !0 })
      }
    ),
    /* @__PURE__ */ a(
      ca,
      {
        name: t("advancedSettings"),
        id: "ldapAdvancedSettingsStep",
        footer: {
          backButtonText: t("back"),
          nextButtonText: t("finish"),
          cancelButtonText: t("cancel")
        },
        children: /* @__PURE__ */ a(
          _E,
          {
            form: e,
            showSectionHeading: !0,
            showSectionDescription: !0
          }
        )
      }
    )
  ] });
};
function YQ() {
  const { adminClient: e } = pe(), [t, n] = N(), { addAlert: r, addError: i } = Se(), { t: s } = H(), { realm: o, realmRepresentation: l } = be(), [c, d] = N(0), u = () => d((/* @__PURE__ */ new Date()).getTime()), p = Je(), [m, f] = N(!1), g = Tt().componentTypes?.["org.keycloak.storage.UserStorageProvider"] || [];
  Re(
    async () => {
      const T = {
        parentId: l.id,
        type: "org.keycloak.storage.UserStorageProvider"
      };
      return e.components.find(T);
    },
    (T) => {
      n(T);
    },
    [c]
  );
  const b = et(
    () => g.map((T) => /* @__PURE__ */ a(
      Ke,
      {
        onClick: () => p(S0({ realm: o, providerId: T.id })),
        children: T.id.toUpperCase() == "LDAP" ? T.id.toUpperCase() : wa(T.id)
      },
      T.id
    )),
    []
  ), v = {
    variant: "link",
    onClick: () => f(!0),
    lowerButtonTitle: s("managePriorities")
  };
  let y;
  const [x, w] = N(""), [R, S] = ze({
    titleKey: s("userFedDeleteConfirmTitle"),
    messageKey: s("userFedDeleteConfirm"),
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        await e.components.del({ id: x }), u(), r(s("userFedDeletedSuccess"), ue.success);
      } catch (T) {
        i("userFedDeleteError", T);
      }
    }
  }), _ = (T) => {
    w(T), R();
  }, O = (T, I) => {
    const k = `${T.name}`, P = `${I.name}`;
    return k < P ? -1 : 1;
  }, E = (T, I) => {
    switch (T) {
      case "ldap":
        return Fc({ realm: o, id: I });
      case "kerberos":
        return gY({ realm: o, id: I });
      default:
        return FT({ realm: o, providerId: T, id: I });
    }
  };
  return t && (y = t.sort(O).map((T, I) => /* @__PURE__ */ a(
    iS,
    {
      className: "keycloak-admin--user-federation__gallery-item",
      children: /* @__PURE__ */ a(
        PY,
        {
          to: E(T.providerId, T.id),
          dropdownItems: [
            /* @__PURE__ */ a(
              Ke,
              {
                onClick: () => {
                  _(T.id);
                },
                "data-testid": "card-delete",
                children: s("delete")
              },
              `${I}-cardDelete`
            )
          ],
          title: T.name,
          footerText: wa(T.providerId),
          labelText: T.config?.enabled?.[0] !== "false" ? s("enabled") : s("disabled"),
          labelColor: T.config?.enabled?.[0] !== "false" ? "blue" : "gray"
        }
      )
    },
    I
  ))), /* @__PURE__ */ C(ee, { children: [
    /* @__PURE__ */ a(S, {}),
    m && t && /* @__PURE__ */ a(
      HQ,
      {
        onClose: () => f(!1),
        components: t.filter((T) => T.config?.enabled)
      }
    ),
    /* @__PURE__ */ a(
      wt,
      {
        titleKey: "userFederation",
        subKey: "userFederationExplain",
        helpUrl: na.userFederationUrl,
        ...t && t.length > 0 ? {
          lowerDropdownItems: b,
          lowerDropdownMenuTitle: "addNewProvider",
          lowerButton: v
        } : {}
      }
    ),
    /* @__PURE__ */ a(Te, { children: t && t.length > 0 ? /* @__PURE__ */ a(du, { hasGutter: !0, children: y }) : /* @__PURE__ */ C(ee, { children: [
      /* @__PURE__ */ a(Pt, { children: /* @__PURE__ */ a(tt, { component: Wt.p, children: s("getStarted") }) }),
      /* @__PURE__ */ a(Pt, { children: /* @__PURE__ */ a(tt, { className: "pf-v5-u-mt-lg", component: Wt.h2, children: s("providers") }) }),
      /* @__PURE__ */ a("hr", { className: "pf-v5-u-mb-lg" }),
      /* @__PURE__ */ a(du, { hasGutter: !0, children: g.map((T) => /* @__PURE__ */ a(
        zT,
        {
          onClick: () => p(
            S0({ realm: o, providerId: T.id })
          ),
          "data-testid": `${T.id}-card`,
          children: /* @__PURE__ */ a(br, { children: /* @__PURE__ */ C(Jn, { hasGutter: !0, children: [
            /* @__PURE__ */ a(Dt, { children: /* @__PURE__ */ a(wi, { size: "lg", children: /* @__PURE__ */ a(gL, {}) }) }),
            /* @__PURE__ */ a(Dt, { isFilled: !0, children: s("addProvider", {
              provider: wa(T.id),
              count: 4
            }) })
          ] }) })
        },
        T.id
      )) })
    ] }) })
  ] });
}
const kb = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: YQ
}, Symbol.toStringTag, { value: "Module" }));
export {
  uk as $,
  st as A,
  z as B,
  Ks as C,
  nB as D,
  at as E,
  Ve as F,
  bk as G,
  zU as H,
  Ng as I,
  _U as J,
  Ek as K,
  pn as L,
  ht as M,
  JH as N,
  gk as O,
  Te as P,
  Ck as Q,
  sn as R,
  Ag as S,
  eo as T,
  pl as U,
  wt as V,
  mk as W,
  Cp as X,
  Y7 as Y,
  qj as Z,
  oe as _,
  be as a,
  Sa as a$,
  Xj as a0,
  id as a1,
  xU as a2,
  CU as a3,
  Pj as a4,
  TU as a5,
  Uj as a6,
  Jj as a7,
  uB as a8,
  Sk as a9,
  ja as aA,
  aa as aB,
  Yt as aC,
  qt as aD,
  yt as aE,
  Xt as aF,
  Ke as aG,
  ot as aH,
  uS as aI,
  wr as aJ,
  uL as aK,
  ur as aL,
  mu as aM,
  In as aN,
  Zn as aO,
  _e as aP,
  Bn as aQ,
  ia as aR,
  xa as aS,
  da as aT,
  tt as aU,
  Wt as aV,
  Lh as aW,
  _h as aX,
  ze as aY,
  YH as aZ,
  QH as a_,
  to as aa,
  Bj as ab,
  Pk as ac,
  gj as ad,
  Hj as ae,
  bp as af,
  kk as ag,
  yk as ah,
  Tk as ai,
  xk as aj,
  eB as ak,
  Rg as al,
  eK as am,
  RB as an,
  i$ as ao,
  MV as ap,
  sK as aq,
  Lg as ar,
  dK as as,
  PV as at,
  DV as au,
  XV as av,
  qx as aw,
  Ta as ax,
  Ba as ay,
  Rh as az,
  Ue as b,
  lq as b$,
  rr as b0,
  je as b1,
  Ah as b2,
  Nh as b3,
  ar as b4,
  Le as b5,
  ge as b6,
  ft as b7,
  pt as b8,
  Vt as b9,
  bee as bA,
  jn as bB,
  gT as bC,
  Ec as bD,
  TX as bE,
  Tt as bF,
  $u as bG,
  Ez as bH,
  Iz as bI,
  Qk as bJ,
  nO as bK,
  uO as bL,
  Nu as bM,
  hO as bN,
  Hz as bO,
  qz as bP,
  Wz as bQ,
  Yz as bR,
  Jz as bS,
  qg as bT,
  Zz as bU,
  vO as bV,
  Qz as bW,
  eq as bX,
  iq as bY,
  sq as bZ,
  oq as b_,
  Mt as ba,
  Du as bb,
  nt as bc,
  gt as bd,
  wa as be,
  se as bf,
  le as bg,
  Ye as bh,
  Dq as bi,
  En as bj,
  r0 as bk,
  Us as bl,
  _n as bm,
  yr as bn,
  bt as bo,
  ld as bp,
  Jg as bq,
  Pq as br,
  fee as bs,
  $n as bt,
  Ee as bu,
  Ie as bv,
  vee as bw,
  vb as bx,
  gee as by,
  hee as bz,
  Fe as c,
  _8 as c$,
  dq as c0,
  xO as c1,
  uq as c2,
  vq as c3,
  mq as c4,
  hq as c5,
  Ll as c6,
  Eq as c7,
  _q as c8,
  Xq as c9,
  JG as cA,
  DO as cB,
  ZG as cC,
  tW as cD,
  rW as cE,
  qm as cF,
  sW as cG,
  bq as cH,
  Gg as cI,
  pb as cJ,
  mW as cK,
  fW as cL,
  zO as cM,
  xW as cN,
  IY as cO,
  Ig as cP,
  rO as cQ,
  ms as cR,
  oW as cS,
  uee as cT,
  y8 as cU,
  C8 as cV,
  S8 as cW,
  w8 as cX,
  k8 as cY,
  O8 as cZ,
  E8 as c_,
  Zq as ca,
  iG as cb,
  oG as cc,
  cG as cd,
  pG as ce,
  dG as cf,
  uG as cg,
  hG as ch,
  gG as ci,
  vG as cj,
  lee as ck,
  ab as cl,
  SG as cm,
  xG as cn,
  wG as co,
  kG as cp,
  TG as cq,
  IG as cr,
  OG as cs,
  $O as ct,
  PG as cu,
  LG as cv,
  u0 as cw,
  DG as cx,
  $G as cy,
  AO as cz,
  ue as d,
  CW as d$,
  R8 as d0,
  _K as d1,
  FH as d2,
  $H as d3,
  jH as d4,
  BH as d5,
  UH as d6,
  QW as d7,
  js as d8,
  _r as d9,
  Ko as dA,
  y$ as dB,
  v8 as dC,
  _a as dD,
  C$ as dE,
  Mw as dF,
  g8 as dG,
  qW as dH,
  zW as dI,
  BY as dJ,
  MY as dK,
  GY as dL,
  ZY as dM,
  zY as dN,
  mee as dO,
  yb as dP,
  QY as dQ,
  iJ as dR,
  GT as dS,
  sJ as dT,
  oJ as dU,
  $c as dV,
  mJ as dW,
  P0 as dX,
  uJ as dY,
  YT as dZ,
  vl as d_,
  Pg as da,
  cl as db,
  FW as dc,
  zg as dd,
  Ip as de,
  Kk as df,
  cq as dg,
  zT as dh,
  PY as di,
  dd as dj,
  JW as dk,
  sb as dl,
  Op as dm,
  ao as dn,
  WO as dp,
  St as dq,
  Bw as dr,
  cn as ds,
  gl as dt,
  pq as du,
  DY as dv,
  _Y as dw,
  RY as dx,
  bs as dy,
  Zw as dz,
  $g as e,
  hE as e$,
  hJ as e0,
  QT as e1,
  gJ as e2,
  iE as e3,
  SJ as e4,
  wJ as e5,
  sE as e6,
  _J as e7,
  rE as e8,
  OJ as e9,
  QJ as eA,
  tZ as eB,
  F0 as eC,
  nZ as eD,
  aZ as eE,
  cE as eF,
  Sb as eG,
  lZ as eH,
  cZ as eI,
  uZ as eJ,
  pZ as eK,
  fZ as eL,
  hZ as eM,
  vZ as eN,
  bZ as eO,
  yZ as eP,
  CZ as eQ,
  Hi as eR,
  xZ as eS,
  Md as eT,
  dE as eU,
  wZ as eV,
  kZ as eW,
  PZ as eX,
  OZ as eY,
  TZ as eZ,
  SZ as e_,
  ZT as ea,
  eE as eb,
  tE as ec,
  vJ as ed,
  TJ as ee,
  CJ as ef,
  oE as eg,
  JT as eh,
  aE as ei,
  Cb as ej,
  jc as ek,
  xb as el,
  Fn as em,
  Bu as en,
  DJ as eo,
  RJ as ep,
  jJ as eq,
  FJ as er,
  HJ as es,
  qJ as et,
  Gk as eu,
  WH as ev,
  WJ as ew,
  YJ as ex,
  ZJ as ey,
  lE as ez,
  $ as f,
  pd as f$,
  yee as f0,
  LZ as f1,
  NZ as f2,
  DZ as f3,
  uE as f4,
  Dp as f5,
  MZ as f6,
  $Z as f7,
  gZ as f8,
  gE as f9,
  hQ as fA,
  vQ as fB,
  xQ as fC,
  RQ as fD,
  SE as fE,
  SQ as fF,
  wQ as fG,
  kQ as fH,
  kE as fI,
  OQ as fJ,
  EQ as fK,
  TQ as fL,
  IQ as fM,
  PQ as fN,
  LQ as fO,
  TE as fP,
  EE as fQ,
  FQ as fR,
  jQ as fS,
  _E as fT,
  PE as fU,
  RE as fV,
  AE as fW,
  LE as fX,
  NE as fY,
  wb as fZ,
  OE as f_,
  Cee as fa,
  VZ as fb,
  KZ as fc,
  qZ as fd,
  mE as fe,
  vE as ff,
  yE as fg,
  YZ as fh,
  JZ as fi,
  ZZ as fj,
  Mp as fk,
  sQ as fl,
  tQ as fm,
  nQ as fn,
  aQ as fo,
  rQ as fp,
  lQ as fq,
  uQ as fr,
  cee as fs,
  qT as ft,
  pee as fu,
  pQ as fv,
  mQ as fw,
  fQ as fx,
  gQ as fy,
  CE as fz,
  xe as g,
  KQ as g0,
  HQ as g1,
  FE as g2,
  xee as g3,
  DE as g4,
  WQ as g5,
  See as g6,
  kb as g7,
  NO as g8,
  KW as g9,
  ZW as ga,
  MW as gb,
  dee as gc,
  oee as gd,
  Ha as ge,
  Nn as h,
  Qe as i,
  Rt as j,
  xt as k,
  pa as l,
  Re as m,
  or as n,
  Fi as o,
  Se as p,
  ct as q,
  ra as r,
  Lt as s,
  VC as t,
  pe as u,
  Nt as v,
  nr as w,
  ve as x,
  qb as y,
  Kh as z
};
//# sourceMappingURL=index-9Q0kv6Xn.js.map
