{"version":3,"file":"ResourceDetails-B8B5Eh9o.js","sources":["../src/clients/authorization/ScopePicker.tsx","../src/clients/authorization/ResourceDetails.tsx"],"sourcesContent":["import type ScopeRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/scopeRepresentation\";\nimport {\n  HelpItem,\n  KeycloakSelect,\n  SelectVariant,\n} from \"@keycloak/keycloak-ui-shared\";\nimport { FormGroup, SelectOption } from \"@patternfly/react-core\";\nimport { useState } from \"react\";\nimport { Controller, useFormContext } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { useAdminClient } from \"../../admin-client\";\nimport { KeycloakSpinner } from \"../../components/keycloak-spinner/KeycloakSpinner\";\nimport { useFetch } from \"../../utils/useFetch\";\n\ntype Scope = {\n  id: string;\n  name: string;\n};\n\nexport const ScopePicker = ({ clientId }: { clientId: string }) => {\n  const { adminClient } = useAdminClient();\n\n  const { t } = useTranslation();\n  const { control } = useFormContext();\n\n  const [open, setOpen] = useState(false);\n  const [scopes, setScopes] = useState<ScopeRepresentation[]>();\n  const [search, setSearch] = useState(\"\");\n\n  useFetch(\n    () => {\n      const params = {\n        id: clientId,\n        first: 0,\n        max: 20,\n        deep: false,\n        name: search,\n      };\n      return adminClient.clients.listAllScopes(params);\n    },\n    setScopes,\n    [search],\n  );\n\n  const renderScopes = (scopes: ScopeRepresentation[]) =>\n    scopes.map((option) => (\n      <SelectOption key={option.id} value={option}>\n        {option.name}\n      </SelectOption>\n    ));\n\n  if (!scopes) return <KeycloakSpinner />;\n  return (\n    <FormGroup\n      label={t(\"authorizationScopes\")}\n      labelIcon={\n        <HelpItem helpText={t(\"clientScopesHelp\")} fieldLabelId=\"scopes\" />\n      }\n      fieldId=\"scopes\"\n    >\n      <Controller\n        name=\"scopes\"\n        defaultValue={[]}\n        control={control}\n        render={({ field }) => (\n          <KeycloakSelect\n            toggleId=\"scopes\"\n            variant={SelectVariant.typeaheadMulti}\n            chipGroupProps={{\n              numChips: 3,\n              expandedText: t(\"hide\"),\n              collapsedText: t(\"showRemaining\"),\n            }}\n            onToggle={(val) => setOpen(val)}\n            isOpen={open}\n            selections={field.value.map((o: Scope) => o.name)}\n            onFilter={(value) => {\n              setSearch(value);\n              return renderScopes(scopes);\n            }}\n            onSelect={(selectedValue) => {\n              const option =\n                typeof selectedValue === \"string\"\n                  ? selectedValue\n                  : (selectedValue as Scope).name;\n              const changedValue = field.value.find(\n                (o: Scope) => o.name === option,\n              )\n                ? field.value.filter((item: Scope) => item.name !== option)\n                : [...field.value, selectedValue];\n              field.onChange(changedValue);\n            }}\n            onClear={() => {\n              setSearch(\"\");\n              field.onChange([]);\n            }}\n            typeAheadAriaLabel={t(\"authorizationScopes\")}\n          >\n            {renderScopes(scopes)}\n          </KeycloakSelect>\n        )}\n      />\n    </FormGroup>\n  );\n};\n","import type ClientRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/clientRepresentation\";\nimport type ResourceRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/resourceRepresentation\";\nimport type ResourceServerRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/resourceServerRepresentation\";\nimport {\n  ActionGroup,\n  Alert,\n  AlertVariant,\n  Button,\n  ButtonVariant,\n  DropdownItem,\n  FormGroup,\n  PageSection,\n} from \"@patternfly/react-core\";\nimport { useState } from \"react\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { HelpItem, TextControl } from \"@keycloak/keycloak-ui-shared\";\nimport { useAdminClient } from \"../../admin-client\";\nimport { DefaultSwitchControl } from \"../../components/SwitchControl\";\nimport { useAlerts } from \"@keycloak/keycloak-ui-shared\";\nimport { useConfirmDialog } from \"../../components/confirm-dialog/ConfirmDialog\";\nimport { FormAccess } from \"../../components/form/FormAccess\";\nimport { KeyValueInput } from \"../../components/key-value-form/KeyValueInput\";\nimport type { KeyValueType } from \"../../components/key-value-form/key-value-convert\";\nimport { KeycloakSpinner } from \"../../components/keycloak-spinner/KeycloakSpinner\";\nimport { MultiLineInput } from \"../../components/multi-line-input/MultiLineInput\";\nimport { ViewHeader } from \"../../components/view-header/ViewHeader\";\nimport { useAccess } from \"../../context/access/Access\";\nimport { convertFormValuesToObject, convertToFormValues } from \"../../util\";\nimport { useFetch } from \"../../utils/useFetch\";\nimport { useParams } from \"../../utils/useParams\";\nimport { toAuthorizationTab } from \"../routes/AuthenticationTab\";\nimport { ResourceDetailsParams, toResourceDetails } from \"../routes/Resource\";\nimport { ScopePicker } from \"./ScopePicker\";\nimport \"./resource-details.css\";\n\ntype SubmittedResource = Omit<\n  ResourceRepresentation,\n  \"attributes\" | \"scopes\"\n> & {\n  attributes: KeyValueType[];\n};\n\nexport default function ResourceDetails() {\n  const { adminClient } = useAdminClient();\n\n  const { t } = useTranslation();\n  const [client, setClient] = useState<ClientRepresentation>();\n  const [resource, setResource] = useState<ResourceRepresentation>();\n\n  const [permissions, setPermission] =\n    useState<ResourceServerRepresentation[]>();\n\n  const { addAlert, addError } = useAlerts();\n  const form = useForm<SubmittedResource>({\n    mode: \"onChange\",\n  });\n  const { setValue, handleSubmit } = form;\n\n  const { id, resourceId, realm } = useParams<ResourceDetailsParams>();\n  const navigate = useNavigate();\n\n  const setupForm = (resource: ResourceRepresentation = {}) => {\n    convertToFormValues(resource, setValue);\n  };\n\n  const { hasAccess } = useAccess();\n\n  const isDisabled = !hasAccess(\"manage-authorization\");\n\n  useFetch(\n    () =>\n      Promise.all([\n        adminClient.clients.findOne({ id }),\n        resourceId\n          ? adminClient.clients.getResource({ id, resourceId })\n          : Promise.resolve(undefined),\n        resourceId\n          ? adminClient.clients.listPermissionsByResource({ id, resourceId })\n          : Promise.resolve(undefined),\n      ]),\n    ([client, resource, permissions]) => {\n      if (!client) {\n        throw new Error(t(\"notFound\"));\n      }\n      setClient(client);\n      setPermission(permissions);\n      setResource(resource);\n      setupForm(resource);\n    },\n    [],\n  );\n\n  const submit = async (submitted: SubmittedResource) => {\n    const resource = convertFormValuesToObject<\n      SubmittedResource,\n      ResourceRepresentation\n    >(submitted);\n\n    try {\n      if (resourceId) {\n        await adminClient.clients.updateResource({ id, resourceId }, resource);\n      } else {\n        const result = await adminClient.clients.createResource(\n          { id },\n          resource,\n        );\n        setResource(resource);\n        navigate(toResourceDetails({ realm, id, resourceId: result._id! }));\n      }\n      addAlert(\n        t((resourceId ? \"update\" : \"create\") + \"ResourceSuccess\"),\n        AlertVariant.success,\n      );\n    } catch (error) {\n      addError(\"resourceSaveError\", error);\n    }\n  };\n\n  const [toggleDeleteDialog, DeleteConfirm] = useConfirmDialog({\n    titleKey: \"deleteResource\",\n    children: (\n      <>\n        {t(\"deleteResourceConfirm\")}\n        {permissions?.length !== 0 && (\n          <Alert\n            variant=\"warning\"\n            isInline\n            isPlain\n            title={t(\"deleteResourceWarning\")}\n            className=\"pf-v5-u-pt-lg\"\n          >\n            <p className=\"pf-v5-u-pt-xs\">\n              {permissions?.map((permission) => (\n                <strong key={permission.id} className=\"pf-v5-u-pr-md\">\n                  {permission.name}\n                </strong>\n              ))}\n            </p>\n          </Alert>\n        )}\n      </>\n    ),\n    continueButtonLabel: \"confirm\",\n    onConfirm: async () => {\n      try {\n        await adminClient.clients.delResource({\n          id,\n          resourceId: resourceId!,\n        });\n        addAlert(t(\"resourceDeletedSuccess\"), AlertVariant.success);\n        navigate(toAuthorizationTab({ realm, clientId: id, tab: \"resources\" }));\n      } catch (error) {\n        addError(\"resourceDeletedError\", error);\n      }\n    },\n  });\n\n  if (!client) {\n    return <KeycloakSpinner />;\n  }\n\n  return (\n    <>\n      <DeleteConfirm />\n      <ViewHeader\n        titleKey={resourceId ? resource?.name! : \"createResource\"}\n        dropdownItems={\n          resourceId\n            ? [\n                <DropdownItem\n                  key=\"delete\"\n                  data-testid=\"delete-resource\"\n                  isDisabled={isDisabled}\n                  onClick={() => toggleDeleteDialog()}\n                >\n                  {t(\"delete\")}\n                </DropdownItem>,\n              ]\n            : undefined\n        }\n      />\n      <PageSection variant=\"light\">\n        <FormProvider {...form}>\n          <FormAccess\n            isHorizontal\n            role=\"manage-authorization\"\n            className=\"keycloak__resource-details__form\"\n            onSubmit={handleSubmit(submit)}\n          >\n            <TextControl\n              name={resourceId ? \"owner.name\" : \"\"}\n              label={t(\"owner\")}\n              labelIcon={t(\"ownerHelp\")}\n              defaultValue={client.clientId}\n              readOnly\n            />\n            <TextControl\n              name={\"name\"}\n              label={t(\"name\")}\n              labelIcon={t(\"resourceNameHelp\")}\n              rules={{ required: t(\"required\") }}\n            />\n            <TextControl\n              name=\"displayName\"\n              label={t(\"displayName\")}\n              labelIcon={t(\"displayNameHelp\")}\n              rules={{ required: t(\"required\") }}\n            />\n            <TextControl\n              name=\"type\"\n              label={t(\"type\")}\n              labelIcon={t(\"resourceDetailsTypeHelp\")}\n            />\n            <FormGroup\n              label={t(\"uris\")}\n              fieldId=\"uris\"\n              labelIcon={\n                <HelpItem helpText={t(\"urisHelp\")} fieldLabelId=\"uris\" />\n              }\n            >\n              <MultiLineInput\n                name=\"uris\"\n                type=\"url\"\n                aria-label={t(\"uris\")}\n                addButtonLabel=\"addUri\"\n              />\n            </FormGroup>\n            <ScopePicker clientId={id} />\n            <TextControl\n              name=\"icon_uri\"\n              label={t(\"iconUri\")}\n              labelIcon={t(\"iconUriHelp\")}\n              type=\"url\"\n            />\n            <DefaultSwitchControl\n              name=\"ownerManagedAccess\"\n              label={t(\"ownerManagedAccess\")}\n              labelIcon={t(\"ownerManagedAccessHelp\")}\n            />\n            <FormGroup\n              hasNoPaddingTop\n              label={t(\"resourceAttribute\")}\n              labelIcon={\n                <HelpItem\n                  helpText={t(\"resourceAttributeHelp\")}\n                  fieldLabelId=\"resourceAttribute\"\n                />\n              }\n              fieldId=\"resourceAttribute\"\n            >\n              <KeyValueInput name=\"attributes\" isDisabled={isDisabled} />\n            </FormGroup>\n            <ActionGroup>\n              <div className=\"pf-v5-u-mt-md\">\n                <Button\n                  variant={ButtonVariant.primary}\n                  type=\"submit\"\n                  data-testid=\"save\"\n                >\n                  {t(\"save\")}\n                </Button>\n\n                <Button\n                  variant=\"link\"\n                  data-testid=\"cancel\"\n                  component={(props) => (\n                    <Link\n                      {...props}\n                      to={toAuthorizationTab({\n                        realm,\n                        clientId: id,\n                        tab: \"resources\",\n                      })}\n                    ></Link>\n                  )}\n                >\n                  {t(\"cancel\")}\n                </Button>\n              </div>\n            </ActionGroup>\n          </FormAccess>\n        </FormProvider>\n      </PageSection>\n    </>\n  );\n}\n"],"names":["ScopePicker","clientId","adminClient","useAdminClient","t","useTranslation","control","useFormContext","open","setOpen","useState","scopes","setScopes","search","setSearch","useFetch","params","renderScopes","option","jsx","SelectOption","FormGroup","HelpItem","Controller","field","KeycloakSelect","SelectVariant","val","o","value","selectedValue","changedValue","item","KeycloakSpinner","ResourceDetails","client","setClient","resource","setResource","permissions","setPermission","addAlert","addError","useAlerts","form","useForm","setValue","handleSubmit","id","resourceId","realm","useParams","navigate","useNavigate","setupForm","convertToFormValues","hasAccess","useAccess","isDisabled","submit","submitted","convertFormValuesToObject","result","toResourceDetails","AlertVariant","error","toggleDeleteDialog","DeleteConfirm","useConfirmDialog","jsxs","Fragment","Alert","permission","toAuthorizationTab","ViewHeader","DropdownItem","PageSection","FormProvider","FormAccess","TextControl","MultiLineInput","DefaultSwitchControl","KeyValueInput","ActionGroup","Button","ButtonVariant","props","Link"],"mappings":";;;;;AAmBO,MAAMA,KAAc,CAAC,EAAE,UAAAC,QAAqC;AAC3D,QAAA,EAAE,aAAAC,MAAgBC,KAElB,EAAE,GAAAC,MAAMC,KACR,EAAE,SAAAC,MAAYC,KAEd,CAACC,GAAMC,CAAO,IAAIC,EAAS,EAAK,GAChC,CAACC,GAAQC,CAAS,IAAIF,EAAgC,GACtD,CAACG,GAAQC,CAAS,IAAIJ,EAAS,EAAE;AAEvC,EAAAK;AAAA,IACE,MAAM;AACJ,YAAMC,IAAS;AAAA,QACb,IAAIf;AAAA,QACJ,OAAO;AAAA,QACP,KAAK;AAAA,QACL,MAAM;AAAA,QACN,MAAMY;AAAA,MAAA;AAED,aAAAX,EAAY,QAAQ,cAAcc,CAAM;AAAA,IACjD;AAAA,IACAJ;AAAA,IACA,CAACC,CAAM;AAAA,EAAA;AAGT,QAAMI,IAAe,CAACN,MACpBA,EAAO,IAAI,CAACO,MACT,gBAAAC,EAAAC,GAAA,EAA6B,OAAOF,GAClC,UAAAA,EAAO,KADS,GAAAA,EAAO,EAE1B,CACD;AAEH,SAAKP,IAEH,gBAAAQ;AAAA,IAACE;AAAA,IAAA;AAAA,MACC,OAAOjB,EAAE,qBAAqB;AAAA,MAC9B,6BACGkB,GAAS,EAAA,UAAUlB,EAAE,kBAAkB,GAAG,cAAa,UAAS;AAAA,MAEnE,SAAQ;AAAA,MAER,UAAA,gBAAAe;AAAA,QAACI;AAAA,QAAA;AAAA,UACC,MAAK;AAAA,UACL,cAAc,CAAC;AAAA,UACf,SAAAjB;AAAA,UACA,QAAQ,CAAC,EAAE,OAAAkB,EAAA,MACT,gBAAAL;AAAA,YAACM;AAAAA,YAAA;AAAA,cACC,UAAS;AAAA,cACT,SAASC,EAAc;AAAA,cACvB,gBAAgB;AAAA,gBACd,UAAU;AAAA,gBACV,cAActB,EAAE,MAAM;AAAA,gBACtB,eAAeA,EAAE,eAAe;AAAA,cAClC;AAAA,cACA,UAAU,CAACuB,MAAQlB,EAAQkB,CAAG;AAAA,cAC9B,QAAQnB;AAAA,cACR,YAAYgB,EAAM,MAAM,IAAI,CAACI,MAAaA,EAAE,IAAI;AAAA,cAChD,UAAU,CAACC,OACTf,EAAUe,CAAK,GACRZ,EAAaN,CAAM;AAAA,cAE5B,UAAU,CAACmB,MAAkB;AAC3B,sBAAMZ,IACJ,OAAOY,KAAkB,WACrBA,IACCA,EAAwB,MACzBC,IAAeP,EAAM,MAAM;AAAA,kBAC/B,CAACI,MAAaA,EAAE,SAASV;AAAA,gBAEvB,IAAAM,EAAM,MAAM,OAAO,CAACQ,MAAgBA,EAAK,SAASd,CAAM,IACxD,CAAC,GAAGM,EAAM,OAAOM,CAAa;AAClC,gBAAAN,EAAM,SAASO,CAAY;AAAA,cAC7B;AAAA,cACA,SAAS,MAAM;AACb,gBAAAjB,EAAU,EAAE,GACNU,EAAA,SAAS,CAAA,CAAE;AAAA,cACnB;AAAA,cACA,oBAAoBpB,EAAE,qBAAqB;AAAA,cAE1C,YAAaO,CAAM;AAAA,YAAA;AAAA,UACtB;AAAA,QAAA;AAAA,MAEJ;AAAA,IAAA;AAAA,EAAA,IAlDgB,gBAAAQ,EAACc,GAAgB,CAAA,CAAA;AAqDvC;AC5DA,SAAwBC,KAAkB;AAClC,QAAA,EAAE,aAAAhC,MAAgBC,KAElB,EAAE,GAAAC,MAAMC,KACR,CAAC8B,GAAQC,CAAS,IAAI1B,EAA+B,GACrD,CAAC2B,GAAUC,CAAW,IAAI5B,EAAiC,GAE3D,CAAC6B,GAAaC,CAAa,IAC/B9B,EAAyC,GAErC,EAAE,UAAA+B,GAAU,UAAAC,EAAS,IAAIC,EAAU,GACnCC,IAAOC,EAA2B;AAAA,IACtC,MAAM;AAAA,EAAA,CACP,GACK,EAAE,UAAAC,GAAU,cAAAC,EAAiB,IAAAH,GAE7B,EAAE,IAAAI,GAAI,YAAAC,GAAY,OAAAC,MAAUC,EAAiC,GAC7DC,IAAWC,MAEXC,IAAY,CAACjB,IAAmC,OAAO;AAC3D,IAAAkB,GAAoBlB,GAAUS,CAAQ;AAAA,EAAA,GAGlC,EAAE,WAAAU,MAAcC,KAEhBC,IAAa,CAACF,EAAU,sBAAsB;AAEpD,EAAAzC;AAAA,IACE,MACE,QAAQ,IAAI;AAAA,MACVb,EAAY,QAAQ,QAAQ,EAAE,IAAA8C,GAAI;AAAA,MAClCC,IACI/C,EAAY,QAAQ,YAAY,EAAE,IAAA8C,GAAI,YAAAC,EAAA,CAAY,IAClD,QAAQ,QAAQ,MAAS;AAAA,MAC7BA,IACI/C,EAAY,QAAQ,0BAA0B,EAAE,IAAA8C,GAAI,YAAAC,EAAA,CAAY,IAChE,QAAQ,QAAQ,MAAS;AAAA,IAAA,CAC9B;AAAA,IACH,CAAC,CAACd,GAAQE,GAAUE,CAAW,MAAM;AACnC,UAAI,CAACJ;AACH,cAAM,IAAI,MAAM/B,EAAE,UAAU,CAAC;AAE/B,MAAAgC,EAAUD,CAAM,GAChBK,EAAcD,CAAW,GACzBD,EAAYD,CAAQ,GACpBiB,EAAUjB,CAAQ;AAAA,IACpB;AAAA,IACA,CAAC;AAAA,EAAA;AAGG,QAAAsB,IAAS,OAAOC,MAAiC;AAC/CvB,UAAAA,IAAWwB,GAGfD,CAAS;AAEP,QAAA;AACF,UAAIX;AACF,cAAM/C,EAAY,QAAQ,eAAe,EAAE,IAAA8C,GAAI,YAAAC,EAAA,GAAcZ,CAAQ;AAAA,WAChE;AACC,cAAAyB,IAAS,MAAM5D,EAAY,QAAQ;AAAA,UACvC,EAAE,IAAA8C,EAAG;AAAA,UACLX;AAAAA,QAAA;AAEF,QAAAC,EAAYD,CAAQ,GACXe,EAAAW,GAAkB,EAAE,OAAAb,GAAO,IAAAF,GAAI,YAAYc,EAAO,IAAM,CAAA,CAAC;AAAA,MACpE;AACA,MAAArB;AAAA,QACErC,GAAG6C,IAAa,WAAW,YAAY,iBAAiB;AAAA,QACxDe,EAAa;AAAA,MAAA;AAAA,aAERC,GAAO;AACd,MAAAvB,EAAS,qBAAqBuB,CAAK;AAAA,IACrC;AAAA,EAAA,GAGI,CAACC,GAAoBC,CAAa,IAAIC,EAAiB;AAAA,IAC3D,UAAU;AAAA,IACV,UAEK,gBAAAC,EAAAC,GAAA,EAAA,UAAA;AAAA,MAAAlE,EAAE,uBAAuB;AAAA,MACzBmC,GAAa,WAAW,KACvB,gBAAApB;AAAA,QAACoD;AAAA,QAAA;AAAA,UACC,SAAQ;AAAA,UACR,UAAQ;AAAA,UACR,SAAO;AAAA,UACP,OAAOnE,EAAE,uBAAuB;AAAA,UAChC,WAAU;AAAA,UAEV,4BAAC,KAAE,EAAA,WAAU,iBACV,UAAAmC,GAAa,IAAI,CAACiC,MAChB,gBAAArD,EAAA,UAAA,EAA2B,WAAU,iBACnC,UAAAqD,EAAW,QADDA,EAAW,EAExB,CACD,GACH;AAAA,QAAA;AAAA,MACF;AAAA,IAAA,GAEJ;AAAA,IAEF,qBAAqB;AAAA,IACrB,WAAW,YAAY;AACjB,UAAA;AACI,cAAAtE,EAAY,QAAQ,YAAY;AAAA,UACpC,IAAA8C;AAAA,UACA,YAAAC;AAAA,QAAA,CACD,GACDR,EAASrC,EAAE,wBAAwB,GAAG4D,EAAa,OAAO,GACjDZ,EAAAqB,EAAmB,EAAE,OAAAvB,GAAO,UAAUF,GAAI,KAAK,YAAa,CAAA,CAAC;AAAA,eAC/DiB,GAAO;AACd,QAAAvB,EAAS,wBAAwBuB,CAAK;AAAA,MACxC;AAAA,IACF;AAAA,EAAA,CACD;AAED,SAAK9B,IAMD,gBAAAkC,EAAAC,GAAA,EAAA,UAAA;AAAA,IAAA,gBAAAnD,EAACgD,GAAc,EAAA;AAAA,IACf,gBAAAhD;AAAA,MAACuD;AAAA,MAAA;AAAA,QACC,UAAUzB,IAAaZ,GAAU,OAAQ;AAAA,QACzC,eACEY,IACI;AAAA,UACE,gBAAA9B;AAAA,YAACwD;AAAA,YAAA;AAAA,cAEC,eAAY;AAAA,cACZ,YAAAjB;AAAA,cACA,SAAS,MAAMQ,EAAmB;AAAA,cAEjC,YAAE,QAAQ;AAAA,YAAA;AAAA,YALP;AAAA,UAMN;AAAA,QAEF,IAAA;AAAA,MAAA;AAAA,IAER;AAAA,sBACCU,GAAY,EAAA,SAAQ,SACnB,UAAC,gBAAAzD,EAAA0D,IAAA,EAAc,GAAGjC,GAChB,UAAA,gBAAAyB;AAAA,MAACS;AAAA,MAAA;AAAA,QACC,cAAY;AAAA,QACZ,MAAK;AAAA,QACL,WAAU;AAAA,QACV,UAAU/B,EAAaY,CAAM;AAAA,QAE7B,UAAA;AAAA,UAAA,gBAAAxC;AAAA,YAAC4D;AAAAA,YAAA;AAAA,cACC,MAAM9B,IAAa,eAAe;AAAA,cAClC,OAAO7C,EAAE,OAAO;AAAA,cAChB,WAAWA,EAAE,WAAW;AAAA,cACxB,cAAc+B,EAAO;AAAA,cACrB,UAAQ;AAAA,YAAA;AAAA,UACV;AAAA,UACA,gBAAAhB;AAAA,YAAC4D;AAAAA,YAAA;AAAA,cACC,MAAM;AAAA,cACN,OAAO3E,EAAE,MAAM;AAAA,cACf,WAAWA,EAAE,kBAAkB;AAAA,cAC/B,OAAO,EAAE,UAAUA,EAAE,UAAU,EAAE;AAAA,YAAA;AAAA,UACnC;AAAA,UACA,gBAAAe;AAAA,YAAC4D;AAAAA,YAAA;AAAA,cACC,MAAK;AAAA,cACL,OAAO3E,EAAE,aAAa;AAAA,cACtB,WAAWA,EAAE,iBAAiB;AAAA,cAC9B,OAAO,EAAE,UAAUA,EAAE,UAAU,EAAE;AAAA,YAAA;AAAA,UACnC;AAAA,UACA,gBAAAe;AAAA,YAAC4D;AAAAA,YAAA;AAAA,cACC,MAAK;AAAA,cACL,OAAO3E,EAAE,MAAM;AAAA,cACf,WAAWA,EAAE,yBAAyB;AAAA,YAAA;AAAA,UACxC;AAAA,UACA,gBAAAe;AAAA,YAACE;AAAA,YAAA;AAAA,cACC,OAAOjB,EAAE,MAAM;AAAA,cACf,SAAQ;AAAA,cACR,6BACGkB,GAAS,EAAA,UAAUlB,EAAE,UAAU,GAAG,cAAa,QAAO;AAAA,cAGzD,UAAA,gBAAAe;AAAA,gBAAC6D;AAAA,gBAAA;AAAA,kBACC,MAAK;AAAA,kBACL,MAAK;AAAA,kBACL,cAAY5E,EAAE,MAAM;AAAA,kBACpB,gBAAe;AAAA,gBAAA;AAAA,cACjB;AAAA,YAAA;AAAA,UACF;AAAA,UACA,gBAAAe,EAACnB,IAAY,EAAA,UAAUgD,EAAI,CAAA;AAAA,UAC3B,gBAAA7B;AAAA,YAAC4D;AAAAA,YAAA;AAAA,cACC,MAAK;AAAA,cACL,OAAO3E,EAAE,SAAS;AAAA,cAClB,WAAWA,EAAE,aAAa;AAAA,cAC1B,MAAK;AAAA,YAAA;AAAA,UACP;AAAA,UACA,gBAAAe;AAAA,YAAC8D;AAAA,YAAA;AAAA,cACC,MAAK;AAAA,cACL,OAAO7E,EAAE,oBAAoB;AAAA,cAC7B,WAAWA,EAAE,wBAAwB;AAAA,YAAA;AAAA,UACvC;AAAA,UACA,gBAAAe;AAAA,YAACE;AAAA,YAAA;AAAA,cACC,iBAAe;AAAA,cACf,OAAOjB,EAAE,mBAAmB;AAAA,cAC5B,WACE,gBAAAe;AAAA,gBAACG;AAAAA,gBAAA;AAAA,kBACC,UAAUlB,EAAE,uBAAuB;AAAA,kBACnC,cAAa;AAAA,gBAAA;AAAA,cACf;AAAA,cAEF,SAAQ;AAAA,cAER,UAAC,gBAAAe,EAAA+D,IAAA,EAAc,MAAK,cAAa,YAAAxB,GAAwB;AAAA,YAAA;AAAA,UAC3D;AAAA,UACC,gBAAAvC,EAAAgE,IAAA,EACC,UAAC,gBAAAd,EAAA,OAAA,EAAI,WAAU,iBACb,UAAA;AAAA,YAAA,gBAAAlD;AAAA,cAACiE;AAAA,cAAA;AAAA,gBACC,SAASC,GAAc;AAAA,gBACvB,MAAK;AAAA,gBACL,eAAY;AAAA,gBAEX,YAAE,MAAM;AAAA,cAAA;AAAA,YACX;AAAA,YAEA,gBAAAlE;AAAA,cAACiE;AAAA,cAAA;AAAA,gBACC,SAAQ;AAAA,gBACR,eAAY;AAAA,gBACZ,WAAW,CAACE,MACV,gBAAAnE;AAAA,kBAACoE;AAAA,kBAAA;AAAA,oBACE,GAAGD;AAAA,oBACJ,IAAIb,EAAmB;AAAA,sBACrB,OAAAvB;AAAA,sBACA,UAAUF;AAAA,sBACV,KAAK;AAAA,oBAAA,CACN;AAAA,kBAAA;AAAA,gBACF;AAAA,gBAGF,YAAE,QAAQ;AAAA,cAAA;AAAA,YACb;AAAA,UAAA,EAAA,CACF,EACF,CAAA;AAAA,QAAA;AAAA,MAAA;AAAA,OAEJ,EACF,CAAA;AAAA,EACF,EAAA,CAAA,sBA7HQf,GAAgB,CAAA,CAAA;AA+H5B;"}